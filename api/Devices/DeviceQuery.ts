/// Auto-generated by Deno Win32: Windows.Win32.Devices.DeviceQuery.Apis

import * as util from "../../util.ts";

// Enums
export type DEVPROP_OPERATOR = number;
export type DEVPROPSTORE = number;
export type DEV_OBJECT_TYPE = number;
export type DEV_QUERY_FLAGS = number;
export type DEV_QUERY_STATE = number;
export type DEV_QUERY_RESULT_ACTION = number;

// Constants
export const DEVPROP_OPERATOR_MODIFIER_NOT = 65536;
export const DEVPROP_OPERATOR_MODIFIER_IGNORE_CASE = 131072;
export const DEVPROP_OPERATOR_NONE = 0;
export const DEVPROP_OPERATOR_EXISTS = 1;
export const DEVPROP_OPERATOR_NOT_EXISTS = 65537;
export const DEVPROP_OPERATOR_EQUALS = 2;
export const DEVPROP_OPERATOR_NOT_EQUALS = 65538;
export const DEVPROP_OPERATOR_GREATER_THAN = 3;
export const DEVPROP_OPERATOR_LESS_THAN = 4;
export const DEVPROP_OPERATOR_GREATER_THAN_EQUALS = 5;
export const DEVPROP_OPERATOR_LESS_THAN_EQUALS = 6;
export const DEVPROP_OPERATOR_EQUALS_IGNORE_CASE = 131074;
export const DEVPROP_OPERATOR_NOT_EQUALS_IGNORE_CASE = 196610;
export const DEVPROP_OPERATOR_BITWISE_AND = 7;
export const DEVPROP_OPERATOR_BITWISE_OR = 8;
export const DEVPROP_OPERATOR_BEGINS_WITH = 9;
export const DEVPROP_OPERATOR_ENDS_WITH = 10;
export const DEVPROP_OPERATOR_CONTAINS = 11;
export const DEVPROP_OPERATOR_BEGINS_WITH_IGNORE_CASE = 131081;
export const DEVPROP_OPERATOR_ENDS_WITH_IGNORE_CASE = 131082;
export const DEVPROP_OPERATOR_CONTAINS_IGNORE_CASE = 131083;
export const DEVPROP_OPERATOR_LIST_CONTAINS = 4096;
export const DEVPROP_OPERATOR_LIST_ELEMENT_BEGINS_WITH = 8192;
export const DEVPROP_OPERATOR_LIST_ELEMENT_ENDS_WITH = 12288;
export const DEVPROP_OPERATOR_LIST_ELEMENT_CONTAINS = 16384;
export const DEVPROP_OPERATOR_LIST_CONTAINS_IGNORE_CASE = 135168;
export const DEVPROP_OPERATOR_LIST_ELEMENT_BEGINS_WITH_IGNORE_CASE = 139264;
export const DEVPROP_OPERATOR_LIST_ELEMENT_ENDS_WITH_IGNORE_CASE = 143360;
export const DEVPROP_OPERATOR_LIST_ELEMENT_CONTAINS_IGNORE_CASE = 147456;
export const DEVPROP_OPERATOR_AND_OPEN = 1048576;
export const DEVPROP_OPERATOR_AND_CLOSE = 2097152;
export const DEVPROP_OPERATOR_OR_OPEN = 3145728;
export const DEVPROP_OPERATOR_OR_CLOSE = 4194304;
export const DEVPROP_OPERATOR_NOT_OPEN = 5242880;
export const DEVPROP_OPERATOR_NOT_CLOSE = 6291456;
export const DEVPROP_OPERATOR_ARRAY_CONTAINS = 268435456;
export const DEVPROP_OPERATOR_MASK_EVAL = 4095;
export const DEVPROP_OPERATOR_MASK_LIST = 61440;
export const DEVPROP_OPERATOR_MASK_MODIFIER = 983040;
export const DEVPROP_OPERATOR_MASK_NOT_LOGICAL = 4027580415;
export const DEVPROP_OPERATOR_MASK_LOGICAL = 267386880;
export const DEVPROP_OPERATOR_MASK_ARRAY = 4026531840;
export const DEVPROP_STORE_SYSTEM = 0;
export const DEVPROP_STORE_USER = 1;
export const DevObjectTypeUnknown = 0;
export const DevObjectTypeDeviceInterface = 1;
export const DevObjectTypeDeviceContainer = 2;
export const DevObjectTypeDevice = 3;
export const DevObjectTypeDeviceInterfaceClass = 4;
export const DevObjectTypeAEP = 5;
export const DevObjectTypeAEPContainer = 6;
export const DevObjectTypeDeviceInstallerClass = 7;
export const DevObjectTypeDeviceInterfaceDisplay = 8;
export const DevObjectTypeDeviceContainerDisplay = 9;
export const DevObjectTypeAEPService = 10;
export const DevObjectTypeDevicePanel = 11;
export const DevQueryFlagNone = 0;
export const DevQueryFlagUpdateResults = 1;
export const DevQueryFlagAllProperties = 2;
export const DevQueryFlagLocalize = 4;
export const DevQueryFlagAsyncClose = 8;
export const DevQueryStateInitialized = 0;
export const DevQueryStateEnumCompleted = 1;
export const DevQueryStateAborted = 2;
export const DevQueryStateClosed = 3;
export const DevQueryResultStateChange = 0;
export const DevQueryResultAdd = 1;
export const DevQueryResultUpdate = 2;
export const DevQueryResultRemove = 3;

// Structs

/**
 * Windows.Win32.Devices.Properties.DEVPROPKEY (size: 16)
 */
export interface DEVPROPKEY {
  /** System.Guid */
  fmtid: Uint8Array | Deno.PointerValue | null;
  /** u32 */
  pid: number;
}

export const sizeofDEVPROPKEY = 16;

export function allocDEVPROPKEY(data?: Partial<DEVPROPKEY>): Uint8Array {
  const buf = new Uint8Array(sizeofDEVPROPKEY);
  const view = new DataView(buf.buffer);
  // 0x00: pointer
  if (data?.fmtid !== undefined) view.setBigUint64(0, data.fmtid === null ? 0n : BigInt(util.toPointer(data.fmtid)), true);
  // 0x08: u32
  if (data?.pid !== undefined) view.setUint32(8, Number(data.pid), true);
  // 0x0c: pad4
  return buf;
}

export type PWSTR = Deno.PointerValue | Uint8Array | null;

/**
 * Windows.Win32.Devices.Properties.DEVPROPCOMPKEY (size: 24)
 */
export interface DEVPROPCOMPKEY {
  /** Windows.Win32.Devices.Properties.DEVPROPKEY */
  Key: Uint8Array | Deno.PointerValue | null;
  /** Windows.Win32.Devices.Properties.DEVPROPSTORE */
  Store: DEVPROPSTORE;
  /** Windows.Win32.Foundation.PWSTR */
  LocaleName: string | null | Uint8Array | Uint16Array;
}

export const sizeofDEVPROPCOMPKEY = 24;

export function allocDEVPROPCOMPKEY(data?: Partial<DEVPROPCOMPKEY>): Uint8Array {
  const buf = new Uint8Array(sizeofDEVPROPCOMPKEY);
  const view = new DataView(buf.buffer);
  // 0x00: pointer
  if (data?.Key !== undefined) view.setBigUint64(0, data.Key === null ? 0n : BigInt(util.toPointer(data.Key)), true);
  // 0x08: i32
  if (data?.Store !== undefined) view.setInt32(8, Number(data.Store), true);
  // 0x0c: pad4
  // 0x10: buffer
  if (data?.LocaleName !== undefined) {
    (buf as any)._f16 = util.pwstrToFfi(data.LocaleName);
    view.setBigUint64(16, (buf as any)._f16 === null ? 0n : BigInt(Deno.UnsafePointer.of((buf as any)._f16)), true);
  }
  return buf;
}

/**
 * Windows.Win32.Devices.Properties.DEVPROPERTY (size: 24)
 */
export interface DEVPROPERTY {
  /** Windows.Win32.Devices.Properties.DEVPROPCOMPKEY */
  CompKey: Uint8Array | Deno.PointerValue | null;
  /** u32 */
  Type: number;
  /** u32 */
  BufferSize: number;
  /** ptr */
  Buffer: Deno.PointerValue | Uint8Array | null;
}

export const sizeofDEVPROPERTY = 24;

export function allocDEVPROPERTY(data?: Partial<DEVPROPERTY>): Uint8Array {
  const buf = new Uint8Array(sizeofDEVPROPERTY);
  const view = new DataView(buf.buffer);
  // 0x00: pointer
  if (data?.CompKey !== undefined) view.setBigUint64(0, data.CompKey === null ? 0n : BigInt(util.toPointer(data.CompKey)), true);
  // 0x08: u32
  if (data?.Type !== undefined) view.setUint32(8, Number(data.Type), true);
  // 0x0c: u32
  if (data?.BufferSize !== undefined) view.setUint32(12, Number(data.BufferSize), true);
  // 0x10: pointer
  if (data?.Buffer !== undefined) view.setBigUint64(16, data.Buffer === null ? 0n : BigInt(util.toPointer(data.Buffer)), true);
  return buf;
}

/**
 * Windows.Win32.Devices.DeviceQuery.DEVPROP_FILTER_EXPRESSION (size: 16)
 */
export interface DEVPROP_FILTER_EXPRESSION {
  /** Windows.Win32.Devices.DeviceQuery.DEVPROP_OPERATOR */
  Operator: DEVPROP_OPERATOR;
  /** Windows.Win32.Devices.Properties.DEVPROPERTY */
  Property: Uint8Array | Deno.PointerValue | null;
}

export const sizeofDEVPROP_FILTER_EXPRESSION = 16;

export function allocDEVPROP_FILTER_EXPRESSION(data?: Partial<DEVPROP_FILTER_EXPRESSION>): Uint8Array {
  const buf = new Uint8Array(sizeofDEVPROP_FILTER_EXPRESSION);
  const view = new DataView(buf.buffer);
  // 0x00: u32
  if (data?.Operator !== undefined) view.setUint32(0, Number(data.Operator), true);
  // 0x04: pad4
  // 0x08: pointer
  if (data?.Property !== undefined) view.setBigUint64(8, data.Property === null ? 0n : BigInt(util.toPointer(data.Property)), true);
  return buf;
}

/**
 * Windows.Win32.Devices.DeviceQuery.DEV_OBJECT (size: 32)
 */
export interface DEV_OBJECT {
  /** Windows.Win32.Devices.DeviceQuery.DEV_OBJECT_TYPE */
  ObjectType: DEV_OBJECT_TYPE;
  /** Windows.Win32.Foundation.PWSTR */
  pszObjectId: string | null | Uint8Array | Uint16Array;
  /** u32 */
  cPropertyCount: number;
  /** ptr */
  pProperties: Deno.PointerValue | Uint8Array | null;
}

export const sizeofDEV_OBJECT = 32;

export function allocDEV_OBJECT(data?: Partial<DEV_OBJECT>): Uint8Array {
  const buf = new Uint8Array(sizeofDEV_OBJECT);
  const view = new DataView(buf.buffer);
  // 0x00: i32
  if (data?.ObjectType !== undefined) view.setInt32(0, Number(data.ObjectType), true);
  // 0x04: pad4
  // 0x08: buffer
  if (data?.pszObjectId !== undefined) {
    (buf as any)._f8 = util.pwstrToFfi(data.pszObjectId);
    view.setBigUint64(8, (buf as any)._f8 === null ? 0n : BigInt(Deno.UnsafePointer.of((buf as any)._f8)), true);
  }
  // 0x10: u32
  if (data?.cPropertyCount !== undefined) view.setUint32(16, Number(data.cPropertyCount), true);
  // 0x14: pad4
  // 0x18: pointer
  if (data?.pProperties !== undefined) view.setBigUint64(24, data.pProperties === null ? 0n : BigInt(util.toPointer(data.pProperties)), true);
  return buf;
}

/**
 * _DEV_QUERY_RESULT_UPDATE_PAYLOAD (size: 16)
 */
export interface _DEV_QUERY_RESULT_UPDATE_PAYLOAD {
  /** Windows.Win32.Devices.DeviceQuery.DEV_QUERY_STATE */
  State: DEV_QUERY_STATE;
  /** Windows.Win32.Devices.DeviceQuery.DEV_OBJECT */
  DeviceObject: Uint8Array | Deno.PointerValue | null;
}

export const sizeof_DEV_QUERY_RESULT_UPDATE_PAYLOAD = 16;

export function alloc_DEV_QUERY_RESULT_UPDATE_PAYLOAD(data?: Partial<_DEV_QUERY_RESULT_UPDATE_PAYLOAD>): Uint8Array {
  const buf = new Uint8Array(sizeof_DEV_QUERY_RESULT_UPDATE_PAYLOAD);
  const view = new DataView(buf.buffer);
  // 0x00: i32
  if (data?.State !== undefined) view.setInt32(0, Number(data.State), true);
  // 0x04: pad4
  // 0x08: pointer
  if (data?.DeviceObject !== undefined) view.setBigUint64(8, data.DeviceObject === null ? 0n : BigInt(util.toPointer(data.DeviceObject)), true);
  return buf;
}

/**
 * Windows.Win32.Devices.DeviceQuery.DEV_QUERY_RESULT_ACTION_DATA (size: 16)
 */
export interface DEV_QUERY_RESULT_ACTION_DATA {
  /** Windows.Win32.Devices.DeviceQuery.DEV_QUERY_RESULT_ACTION */
  Action: DEV_QUERY_RESULT_ACTION;
  /** _DEV_QUERY_RESULT_UPDATE_PAYLOAD */
  Data: Uint8Array | Deno.PointerValue | null;
}

export const sizeofDEV_QUERY_RESULT_ACTION_DATA = 16;

export function allocDEV_QUERY_RESULT_ACTION_DATA(data?: Partial<DEV_QUERY_RESULT_ACTION_DATA>): Uint8Array {
  const buf = new Uint8Array(sizeofDEV_QUERY_RESULT_ACTION_DATA);
  const view = new DataView(buf.buffer);
  // 0x00: i32
  if (data?.Action !== undefined) view.setInt32(0, Number(data.Action), true);
  // 0x04: pad4
  // 0x08: pointer
  if (data?.Data !== undefined) view.setBigUint64(8, data.Data === null ? 0n : BigInt(util.toPointer(data.Data)), true);
  return buf;
}

/**
 * Windows.Win32.Devices.DeviceQuery.DEV_QUERY_PARAMETER (size: 24)
 */
export interface DEV_QUERY_PARAMETER {
  /** Windows.Win32.Devices.Properties.DEVPROPKEY */
  Key: Uint8Array | Deno.PointerValue | null;
  /** u32 */
  Type: number;
  /** u32 */
  BufferSize: number;
  /** ptr */
  Buffer: Deno.PointerValue | Uint8Array | null;
}

export const sizeofDEV_QUERY_PARAMETER = 24;

export function allocDEV_QUERY_PARAMETER(data?: Partial<DEV_QUERY_PARAMETER>): Uint8Array {
  const buf = new Uint8Array(sizeofDEV_QUERY_PARAMETER);
  const view = new DataView(buf.buffer);
  // 0x00: pointer
  if (data?.Key !== undefined) view.setBigUint64(0, data.Key === null ? 0n : BigInt(util.toPointer(data.Key)), true);
  // 0x08: u32
  if (data?.Type !== undefined) view.setUint32(8, Number(data.Type), true);
  // 0x0c: u32
  if (data?.BufferSize !== undefined) view.setUint32(12, Number(data.BufferSize), true);
  // 0x10: pointer
  if (data?.Buffer !== undefined) view.setBigUint64(16, data.Buffer === null ? 0n : BigInt(util.toPointer(data.Buffer)), true);
  return buf;
}

/**
 * Windows.Win32.Devices.DeviceQuery.HDEVQUERY__ (size: 8)
 */
export interface HDEVQUERY__ {
  /** i32 */
  unused: number;
}

export const sizeofHDEVQUERY__ = 8;

export function allocHDEVQUERY__(data?: Partial<HDEVQUERY__>): Uint8Array {
  const buf = new Uint8Array(sizeofHDEVQUERY__);
  const view = new DataView(buf.buffer);
  // 0x00: i32
  if (data?.unused !== undefined) view.setInt32(0, Number(data.unused), true);
  // 0x04: pad4
  return buf;
}

export type HRESULT = number;

// Native Libraries

try {
  var libapi_ms_win_devices_query_l1_1_0_dll = Deno.dlopen("api-ms-win-devices-query-l1-1-0.dll", {
    DevCreateObjectQuery: {
      parameters: ["i32", "u32", "u32", "pointer", "u32", "pointer", "pointer", "pointer", "pointer"],
      result: "pointer",
    },
    DevCreateObjectQueryFromId: {
      parameters: ["i32", "buffer", "u32", "u32", "pointer", "u32", "pointer", "pointer", "pointer", "pointer"],
      result: "pointer",
    },
    DevCreateObjectQueryFromIds: {
      parameters: ["i32", "buffer", "u32", "u32", "pointer", "u32", "pointer", "pointer", "pointer", "pointer"],
      result: "pointer",
    },
    DevCloseObjectQuery: {
      parameters: ["pointer"],
      result: "void",
    },
    DevGetObjects: {
      parameters: ["i32", "u32", "u32", "pointer", "u32", "pointer", "pointer", "pointer"],
      result: "pointer",
    },
    DevFreeObjects: {
      parameters: ["u32", "pointer"],
      result: "void",
    },
    DevGetObjectProperties: {
      parameters: ["i32", "buffer", "u32", "u32", "pointer", "pointer", "pointer"],
      result: "pointer",
    },
    DevFreeObjectProperties: {
      parameters: ["u32", "pointer"],
      result: "void",
    },
    DevFindProperty: {
      parameters: ["pointer", "i32", "buffer", "u32", "pointer"],
      result: "pointer",
    },
  }).symbols;
} catch(e) { /* ignore */ }

try {
  var libapi_ms_win_devices_query_l1_1_1_dll = Deno.dlopen("api-ms-win-devices-query-l1-1-1.dll", {
    DevCreateObjectQueryEx: {
      parameters: ["i32", "u32", "u32", "pointer", "u32", "pointer", "u32", "pointer", "pointer", "pointer", "pointer"],
      result: "pointer",
    },
    DevCreateObjectQueryFromIdEx: {
      parameters: ["i32", "buffer", "u32", "u32", "pointer", "u32", "pointer", "u32", "pointer", "pointer", "pointer", "pointer"],
      result: "pointer",
    },
    DevCreateObjectQueryFromIdsEx: {
      parameters: ["i32", "buffer", "u32", "u32", "pointer", "u32", "pointer", "u32", "pointer", "pointer", "pointer", "pointer"],
      result: "pointer",
    },
    DevGetObjectsEx: {
      parameters: ["i32", "u32", "u32", "pointer", "u32", "pointer", "u32", "pointer", "pointer", "pointer"],
      result: "pointer",
    },
    DevGetObjectPropertiesEx: {
      parameters: ["i32", "buffer", "u32", "u32", "pointer", "u32", "pointer", "pointer", "pointer"],
      result: "pointer",
    },
  }).symbols;
} catch(e) { /* ignore */ }

// Symbols

export function DevCreateObjectQuery(
  ObjectType: DEV_OBJECT_TYPE /* Windows.Win32.Devices.DeviceQuery.DEV_OBJECT_TYPE */,
  QueryFlags: number /* u32 */,
  cRequestedProperties: number /* u32 */,
  pRequestedProperties: Deno.PointerValue | Uint8Array | null /* ptr */,
  cFilterExpressionCount: number /* u32 */,
  pFilter: Deno.PointerValue | Uint8Array | null /* ptr */,
  pCallback: Uint8Array | Deno.PointerValue | null /* Windows.Win32.Devices.DeviceQuery.PDEV_QUERY_RESULT_CALLBACK */,
  pContext: Deno.PointerValue | Uint8Array | null /* ptr */,
  phDevQuery: Deno.PointerValue | Uint8Array | null /* ptr */,
): Deno.PointerValue | null /* Windows.Win32.Foundation.HRESULT */ {
  return util.pointerFromFfi(libapi_ms_win_devices_query_l1_1_0_dll.DevCreateObjectQuery(ObjectType, QueryFlags, cRequestedProperties, util.toPointer(pRequestedProperties), cFilterExpressionCount, util.toPointer(pFilter), util.toPointer(pCallback), util.toPointer(pContext), util.toPointer(phDevQuery)));
}

export function DevCreateObjectQueryEx(
  ObjectType: DEV_OBJECT_TYPE /* Windows.Win32.Devices.DeviceQuery.DEV_OBJECT_TYPE */,
  QueryFlags: number /* u32 */,
  cRequestedProperties: number /* u32 */,
  pRequestedProperties: Deno.PointerValue | Uint8Array | null /* ptr */,
  cFilterExpressionCount: number /* u32 */,
  pFilter: Deno.PointerValue | Uint8Array | null /* ptr */,
  cExtendedParameterCount: number /* u32 */,
  pExtendedParameters: Deno.PointerValue | Uint8Array | null /* ptr */,
  pCallback: Uint8Array | Deno.PointerValue | null /* Windows.Win32.Devices.DeviceQuery.PDEV_QUERY_RESULT_CALLBACK */,
  pContext: Deno.PointerValue | Uint8Array | null /* ptr */,
  phDevQuery: Deno.PointerValue | Uint8Array | null /* ptr */,
): Deno.PointerValue | null /* Windows.Win32.Foundation.HRESULT */ {
  return util.pointerFromFfi(libapi_ms_win_devices_query_l1_1_1_dll.DevCreateObjectQueryEx(ObjectType, QueryFlags, cRequestedProperties, util.toPointer(pRequestedProperties), cFilterExpressionCount, util.toPointer(pFilter), cExtendedParameterCount, util.toPointer(pExtendedParameters), util.toPointer(pCallback), util.toPointer(pContext), util.toPointer(phDevQuery)));
}

export function DevCreateObjectQueryFromId(
  ObjectType: DEV_OBJECT_TYPE /* Windows.Win32.Devices.DeviceQuery.DEV_OBJECT_TYPE */,
  pszObjectId: string | null | Uint8Array | Uint16Array /* Windows.Win32.Foundation.PWSTR */,
  QueryFlags: number /* u32 */,
  cRequestedProperties: number /* u32 */,
  pRequestedProperties: Deno.PointerValue | Uint8Array | null /* ptr */,
  cFilterExpressionCount: number /* u32 */,
  pFilter: Deno.PointerValue | Uint8Array | null /* ptr */,
  pCallback: Uint8Array | Deno.PointerValue | null /* Windows.Win32.Devices.DeviceQuery.PDEV_QUERY_RESULT_CALLBACK */,
  pContext: Deno.PointerValue | Uint8Array | null /* ptr */,
  phDevQuery: Deno.PointerValue | Uint8Array | null /* ptr */,
): Deno.PointerValue | null /* Windows.Win32.Foundation.HRESULT */ {
  return util.pointerFromFfi(libapi_ms_win_devices_query_l1_1_0_dll.DevCreateObjectQueryFromId(ObjectType, util.pwstrToFfi(pszObjectId), QueryFlags, cRequestedProperties, util.toPointer(pRequestedProperties), cFilterExpressionCount, util.toPointer(pFilter), util.toPointer(pCallback), util.toPointer(pContext), util.toPointer(phDevQuery)));
}

export function DevCreateObjectQueryFromIdEx(
  ObjectType: DEV_OBJECT_TYPE /* Windows.Win32.Devices.DeviceQuery.DEV_OBJECT_TYPE */,
  pszObjectId: string | null | Uint8Array | Uint16Array /* Windows.Win32.Foundation.PWSTR */,
  QueryFlags: number /* u32 */,
  cRequestedProperties: number /* u32 */,
  pRequestedProperties: Deno.PointerValue | Uint8Array | null /* ptr */,
  cFilterExpressionCount: number /* u32 */,
  pFilter: Deno.PointerValue | Uint8Array | null /* ptr */,
  cExtendedParameterCount: number /* u32 */,
  pExtendedParameters: Deno.PointerValue | Uint8Array | null /* ptr */,
  pCallback: Uint8Array | Deno.PointerValue | null /* Windows.Win32.Devices.DeviceQuery.PDEV_QUERY_RESULT_CALLBACK */,
  pContext: Deno.PointerValue | Uint8Array | null /* ptr */,
  phDevQuery: Deno.PointerValue | Uint8Array | null /* ptr */,
): Deno.PointerValue | null /* Windows.Win32.Foundation.HRESULT */ {
  return util.pointerFromFfi(libapi_ms_win_devices_query_l1_1_1_dll.DevCreateObjectQueryFromIdEx(ObjectType, util.pwstrToFfi(pszObjectId), QueryFlags, cRequestedProperties, util.toPointer(pRequestedProperties), cFilterExpressionCount, util.toPointer(pFilter), cExtendedParameterCount, util.toPointer(pExtendedParameters), util.toPointer(pCallback), util.toPointer(pContext), util.toPointer(phDevQuery)));
}

export function DevCreateObjectQueryFromIds(
  ObjectType: DEV_OBJECT_TYPE /* Windows.Win32.Devices.DeviceQuery.DEV_OBJECT_TYPE */,
  pszzObjectIds: string | null | Uint8Array | Uint16Array /* Windows.Win32.Foundation.PWSTR */,
  QueryFlags: number /* u32 */,
  cRequestedProperties: number /* u32 */,
  pRequestedProperties: Deno.PointerValue | Uint8Array | null /* ptr */,
  cFilterExpressionCount: number /* u32 */,
  pFilter: Deno.PointerValue | Uint8Array | null /* ptr */,
  pCallback: Uint8Array | Deno.PointerValue | null /* Windows.Win32.Devices.DeviceQuery.PDEV_QUERY_RESULT_CALLBACK */,
  pContext: Deno.PointerValue | Uint8Array | null /* ptr */,
  phDevQuery: Deno.PointerValue | Uint8Array | null /* ptr */,
): Deno.PointerValue | null /* Windows.Win32.Foundation.HRESULT */ {
  return util.pointerFromFfi(libapi_ms_win_devices_query_l1_1_0_dll.DevCreateObjectQueryFromIds(ObjectType, util.pwstrToFfi(pszzObjectIds), QueryFlags, cRequestedProperties, util.toPointer(pRequestedProperties), cFilterExpressionCount, util.toPointer(pFilter), util.toPointer(pCallback), util.toPointer(pContext), util.toPointer(phDevQuery)));
}

export function DevCreateObjectQueryFromIdsEx(
  ObjectType: DEV_OBJECT_TYPE /* Windows.Win32.Devices.DeviceQuery.DEV_OBJECT_TYPE */,
  pszzObjectIds: string | null | Uint8Array | Uint16Array /* Windows.Win32.Foundation.PWSTR */,
  QueryFlags: number /* u32 */,
  cRequestedProperties: number /* u32 */,
  pRequestedProperties: Deno.PointerValue | Uint8Array | null /* ptr */,
  cFilterExpressionCount: number /* u32 */,
  pFilter: Deno.PointerValue | Uint8Array | null /* ptr */,
  cExtendedParameterCount: number /* u32 */,
  pExtendedParameters: Deno.PointerValue | Uint8Array | null /* ptr */,
  pCallback: Uint8Array | Deno.PointerValue | null /* Windows.Win32.Devices.DeviceQuery.PDEV_QUERY_RESULT_CALLBACK */,
  pContext: Deno.PointerValue | Uint8Array | null /* ptr */,
  phDevQuery: Deno.PointerValue | Uint8Array | null /* ptr */,
): Deno.PointerValue | null /* Windows.Win32.Foundation.HRESULT */ {
  return util.pointerFromFfi(libapi_ms_win_devices_query_l1_1_1_dll.DevCreateObjectQueryFromIdsEx(ObjectType, util.pwstrToFfi(pszzObjectIds), QueryFlags, cRequestedProperties, util.toPointer(pRequestedProperties), cFilterExpressionCount, util.toPointer(pFilter), cExtendedParameterCount, util.toPointer(pExtendedParameters), util.toPointer(pCallback), util.toPointer(pContext), util.toPointer(phDevQuery)));
}

export function DevCloseObjectQuery(
  hDevQuery: Deno.PointerValue | Uint8Array | null /* ptr */,
): void /* void */ {
  return libapi_ms_win_devices_query_l1_1_0_dll.DevCloseObjectQuery(util.toPointer(hDevQuery));
}

export function DevGetObjects(
  ObjectType: DEV_OBJECT_TYPE /* Windows.Win32.Devices.DeviceQuery.DEV_OBJECT_TYPE */,
  QueryFlags: number /* u32 */,
  cRequestedProperties: number /* u32 */,
  pRequestedProperties: Deno.PointerValue | Uint8Array | null /* ptr */,
  cFilterExpressionCount: number /* u32 */,
  pFilter: Deno.PointerValue | Uint8Array | null /* ptr */,
  pcObjectCount: Deno.PointerValue | Uint8Array | null /* ptr */,
  ppObjects: Deno.PointerValue | Uint8Array | null /* ptr */,
): Deno.PointerValue | null /* Windows.Win32.Foundation.HRESULT */ {
  return util.pointerFromFfi(libapi_ms_win_devices_query_l1_1_0_dll.DevGetObjects(ObjectType, QueryFlags, cRequestedProperties, util.toPointer(pRequestedProperties), cFilterExpressionCount, util.toPointer(pFilter), util.toPointer(pcObjectCount), util.toPointer(ppObjects)));
}

export function DevGetObjectsEx(
  ObjectType: DEV_OBJECT_TYPE /* Windows.Win32.Devices.DeviceQuery.DEV_OBJECT_TYPE */,
  QueryFlags: number /* u32 */,
  cRequestedProperties: number /* u32 */,
  pRequestedProperties: Deno.PointerValue | Uint8Array | null /* ptr */,
  cFilterExpressionCount: number /* u32 */,
  pFilter: Deno.PointerValue | Uint8Array | null /* ptr */,
  cExtendedParameterCount: number /* u32 */,
  pExtendedParameters: Deno.PointerValue | Uint8Array | null /* ptr */,
  pcObjectCount: Deno.PointerValue | Uint8Array | null /* ptr */,
  ppObjects: Deno.PointerValue | Uint8Array | null /* ptr */,
): Deno.PointerValue | null /* Windows.Win32.Foundation.HRESULT */ {
  return util.pointerFromFfi(libapi_ms_win_devices_query_l1_1_1_dll.DevGetObjectsEx(ObjectType, QueryFlags, cRequestedProperties, util.toPointer(pRequestedProperties), cFilterExpressionCount, util.toPointer(pFilter), cExtendedParameterCount, util.toPointer(pExtendedParameters), util.toPointer(pcObjectCount), util.toPointer(ppObjects)));
}

export function DevFreeObjects(
  cObjectCount: number /* u32 */,
  pObjects: Deno.PointerValue | Uint8Array | null /* ptr */,
): void /* void */ {
  return libapi_ms_win_devices_query_l1_1_0_dll.DevFreeObjects(cObjectCount, util.toPointer(pObjects));
}

export function DevGetObjectProperties(
  ObjectType: DEV_OBJECT_TYPE /* Windows.Win32.Devices.DeviceQuery.DEV_OBJECT_TYPE */,
  pszObjectId: string | null | Uint8Array | Uint16Array /* Windows.Win32.Foundation.PWSTR */,
  QueryFlags: number /* u32 */,
  cRequestedProperties: number /* u32 */,
  pRequestedProperties: Deno.PointerValue | Uint8Array | null /* ptr */,
  pcPropertyCount: Deno.PointerValue | Uint8Array | null /* ptr */,
  ppProperties: Deno.PointerValue | Uint8Array | null /* ptr */,
): Deno.PointerValue | null /* Windows.Win32.Foundation.HRESULT */ {
  return util.pointerFromFfi(libapi_ms_win_devices_query_l1_1_0_dll.DevGetObjectProperties(ObjectType, util.pwstrToFfi(pszObjectId), QueryFlags, cRequestedProperties, util.toPointer(pRequestedProperties), util.toPointer(pcPropertyCount), util.toPointer(ppProperties)));
}

export function DevGetObjectPropertiesEx(
  ObjectType: DEV_OBJECT_TYPE /* Windows.Win32.Devices.DeviceQuery.DEV_OBJECT_TYPE */,
  pszObjectId: string | null | Uint8Array | Uint16Array /* Windows.Win32.Foundation.PWSTR */,
  QueryFlags: number /* u32 */,
  cRequestedProperties: number /* u32 */,
  pRequestedProperties: Deno.PointerValue | Uint8Array | null /* ptr */,
  cExtendedParameterCount: number /* u32 */,
  pExtendedParameters: Deno.PointerValue | Uint8Array | null /* ptr */,
  pcPropertyCount: Deno.PointerValue | Uint8Array | null /* ptr */,
  ppProperties: Deno.PointerValue | Uint8Array | null /* ptr */,
): Deno.PointerValue | null /* Windows.Win32.Foundation.HRESULT */ {
  return util.pointerFromFfi(libapi_ms_win_devices_query_l1_1_1_dll.DevGetObjectPropertiesEx(ObjectType, util.pwstrToFfi(pszObjectId), QueryFlags, cRequestedProperties, util.toPointer(pRequestedProperties), cExtendedParameterCount, util.toPointer(pExtendedParameters), util.toPointer(pcPropertyCount), util.toPointer(ppProperties)));
}

export function DevFreeObjectProperties(
  cPropertyCount: number /* u32 */,
  pProperties: Deno.PointerValue | Uint8Array | null /* ptr */,
): void /* void */ {
  return libapi_ms_win_devices_query_l1_1_0_dll.DevFreeObjectProperties(cPropertyCount, util.toPointer(pProperties));
}

export function DevFindProperty(
  pKey: Deno.PointerValue | Uint8Array | null /* ptr */,
  Store: DEVPROPSTORE /* Windows.Win32.Devices.Properties.DEVPROPSTORE */,
  pszLocaleName: string | null | Uint8Array | Uint16Array /* Windows.Win32.Foundation.PWSTR */,
  cProperties: number /* u32 */,
  pProperties: Deno.PointerValue | Uint8Array | null /* ptr */,
): Deno.PointerValue | null /* ptr */ {
  return util.pointerFromFfi(libapi_ms_win_devices_query_l1_1_0_dll.DevFindProperty(util.toPointer(pKey), Store, util.pwstrToFfi(pszLocaleName), cProperties, util.toPointer(pProperties)));
}

