/// Auto-generated by Deno Win32: Windows.Win32.Devices.ImageAcquisition.Apis

import * as util from "../../util.ts";

// Enums
export type WIAVIDEO_STATE = number;

// Constants
export const WIA_DIP_DEV_ID = 2;
export const WIA_DIP_VEND_DESC = 3;
export const WIA_DIP_DEV_DESC = 4;
export const WIA_DIP_DEV_TYPE = 5;
export const WIA_DIP_PORT_NAME = 6;
export const WIA_DIP_DEV_NAME = 7;
export const WIA_DIP_SERVER_NAME = 8;
export const WIA_DIP_REMOTE_DEV_ID = 9;
export const WIA_DIP_UI_CLSID = 10;
export const WIA_DIP_HW_CONFIG = 11;
export const WIA_DIP_BAUDRATE = 12;
export const WIA_DIP_STI_GEN_CAPABILITIES = 13;
export const WIA_DIP_WIA_VERSION = 14;
export const WIA_DIP_DRIVER_VERSION = 15;
export const WIA_DIP_PNP_ID = 16;
export const WIA_DIP_STI_DRIVER_VERSION = 17;
export const WIA_DPA_FIRMWARE_VERSION = 1026;
export const WIA_DPA_CONNECT_STATUS = 1027;
export const WIA_DPA_DEVICE_TIME = 1028;
export const WIA_DPC_PICTURES_TAKEN = 2050;
export const WIA_DPC_PICTURES_REMAINING = 2051;
export const WIA_DPC_EXPOSURE_MODE = 2052;
export const WIA_DPC_EXPOSURE_COMP = 2053;
export const WIA_DPC_EXPOSURE_TIME = 2054;
export const WIA_DPC_FNUMBER = 2055;
export const WIA_DPC_FLASH_MODE = 2056;
export const WIA_DPC_FOCUS_MODE = 2057;
export const WIA_DPC_FOCUS_MANUAL_DIST = 2058;
export const WIA_DPC_ZOOM_POSITION = 2059;
export const WIA_DPC_PAN_POSITION = 2060;
export const WIA_DPC_TILT_POSITION = 2061;
export const WIA_DPC_TIMER_MODE = 2062;
export const WIA_DPC_TIMER_VALUE = 2063;
export const WIA_DPC_POWER_MODE = 2064;
export const WIA_DPC_BATTERY_STATUS = 2065;
export const WIA_DPC_THUMB_WIDTH = 2066;
export const WIA_DPC_THUMB_HEIGHT = 2067;
export const WIA_DPC_PICT_WIDTH = 2068;
export const WIA_DPC_PICT_HEIGHT = 2069;
export const WIA_DPC_DIMENSION = 2070;
export const WIA_DPC_COMPRESSION_SETTING = 2071;
export const WIA_DPC_FOCUS_METERING = 2072;
export const WIA_DPC_TIMELAPSE_INTERVAL = 2073;
export const WIA_DPC_TIMELAPSE_NUMBER = 2074;
export const WIA_DPC_BURST_INTERVAL = 2075;
export const WIA_DPC_BURST_NUMBER = 2076;
export const WIA_DPC_EFFECT_MODE = 2077;
export const WIA_DPC_DIGITAL_ZOOM = 2078;
export const WIA_DPC_SHARPNESS = 2079;
export const WIA_DPC_CONTRAST = 2080;
export const WIA_DPC_CAPTURE_MODE = 2081;
export const WIA_DPC_CAPTURE_DELAY = 2082;
export const WIA_DPC_EXPOSURE_INDEX = 2083;
export const WIA_DPC_EXPOSURE_METERING_MODE = 2084;
export const WIA_DPC_FOCUS_METERING_MODE = 2085;
export const WIA_DPC_FOCUS_DISTANCE = 2086;
export const WIA_DPC_FOCAL_LENGTH = 2087;
export const WIA_DPC_RGB_GAIN = 2088;
export const WIA_DPC_WHITE_BALANCE = 2089;
export const WIA_DPC_UPLOAD_URL = 2090;
export const WIA_DPC_ARTIST = 2091;
export const WIA_DPC_COPYRIGHT_INFO = 2092;
export const WIA_DPS_HORIZONTAL_BED_SIZE = 3074;
export const WIA_DPS_VERTICAL_BED_SIZE = 3075;
export const WIA_DPS_HORIZONTAL_SHEET_FEED_SIZE = 3076;
export const WIA_DPS_VERTICAL_SHEET_FEED_SIZE = 3077;
export const WIA_DPS_SHEET_FEEDER_REGISTRATION = 3078;
export const WIA_DPS_HORIZONTAL_BED_REGISTRATION = 3079;
export const WIA_DPS_VERTICAL_BED_REGISTRATION = 3080;
export const WIA_DPS_PLATEN_COLOR = 3081;
export const WIA_DPS_PAD_COLOR = 3082;
export const WIA_DPS_FILTER_SELECT = 3083;
export const WIA_DPS_DITHER_SELECT = 3084;
export const WIA_DPS_DITHER_PATTERN_DATA = 3085;
export const WIA_DPS_DOCUMENT_HANDLING_CAPABILITIES = 3086;
export const WIA_DPS_DOCUMENT_HANDLING_STATUS = 3087;
export const WIA_DPS_DOCUMENT_HANDLING_SELECT = 3088;
export const WIA_DPS_DOCUMENT_HANDLING_CAPACITY = 3089;
export const WIA_DPS_OPTICAL_XRES = 3090;
export const WIA_DPS_OPTICAL_YRES = 3091;
export const WIA_DPS_ENDORSER_CHARACTERS = 3092;
export const WIA_DPS_ENDORSER_STRING = 3093;
export const WIA_DPS_SCAN_AHEAD_PAGES = 3094;
export const WIA_DPS_MAX_SCAN_TIME = 3095;
export const WIA_DPS_PAGES = 3096;
export const WIA_DPS_PAGE_SIZE = 3097;
export const WIA_DPS_PAGE_WIDTH = 3098;
export const WIA_DPS_PAGE_HEIGHT = 3099;
export const WIA_DPS_PREVIEW = 3100;
export const WIA_DPS_TRANSPARENCY = 3101;
export const WIA_DPS_TRANSPARENCY_SELECT = 3102;
export const WIA_DPS_SHOW_PREVIEW_CONTROL = 3103;
export const WIA_DPS_MIN_HORIZONTAL_SHEET_FEED_SIZE = 3104;
export const WIA_DPS_MIN_VERTICAL_SHEET_FEED_SIZE = 3105;
export const WIA_DPS_TRANSPARENCY_CAPABILITIES = 3106;
export const WIA_DPS_TRANSPARENCY_STATUS = 3107;
export const WIA_DPF_MOUNT_POINT = 3330;
export const WIA_DPV_LAST_PICTURE_TAKEN = 3586;
export const WIA_DPV_IMAGES_DIRECTORY = 3587;
export const WIA_DPV_DSHOW_DEVICE_PATH = 3588;
export const WIA_IPA_ITEM_NAME = 4098;
export const WIA_IPA_FULL_ITEM_NAME = 4099;
export const WIA_IPA_ITEM_TIME = 4100;
export const WIA_IPA_ITEM_FLAGS = 4101;
export const WIA_IPA_ACCESS_RIGHTS = 4102;
export const WIA_IPA_DATATYPE = 4103;
export const WIA_IPA_DEPTH = 4104;
export const WIA_IPA_PREFERRED_FORMAT = 4105;
export const WIA_IPA_FORMAT = 4106;
export const WIA_IPA_COMPRESSION = 4107;
export const WIA_IPA_TYMED = 4108;
export const WIA_IPA_CHANNELS_PER_PIXEL = 4109;
export const WIA_IPA_BITS_PER_CHANNEL = 4110;
export const WIA_IPA_PLANAR = 4111;
export const WIA_IPA_PIXELS_PER_LINE = 4112;
export const WIA_IPA_BYTES_PER_LINE = 4113;
export const WIA_IPA_NUMBER_OF_LINES = 4114;
export const WIA_IPA_GAMMA_CURVES = 4115;
export const WIA_IPA_ITEM_SIZE = 4116;
export const WIA_IPA_COLOR_PROFILE = 4117;
export const WIA_IPA_MIN_BUFFER_SIZE = 4118;
export const WIA_IPA_BUFFER_SIZE = 4118;
export const WIA_IPA_REGION_TYPE = 4119;
export const WIA_IPA_ICM_PROFILE_NAME = 4120;
export const WIA_IPA_APP_COLOR_MAPPING = 4121;
export const WIA_IPA_PROP_STREAM_COMPAT_ID = 4122;
export const WIA_IPA_FILENAME_EXTENSION = 4123;
export const WIA_IPA_SUPPRESS_PROPERTY_PAGE = 4124;
export const WIA_IPC_THUMBNAIL = 5122;
export const WIA_IPC_THUMB_WIDTH = 5123;
export const WIA_IPC_THUMB_HEIGHT = 5124;
export const WIA_IPC_AUDIO_AVAILABLE = 5125;
export const WIA_IPC_AUDIO_DATA_FORMAT = 5126;
export const WIA_IPC_AUDIO_DATA = 5127;
export const WIA_IPC_NUM_PICT_PER_ROW = 5128;
export const WIA_IPC_SEQUENCE = 5129;
export const WIA_IPC_TIMEDELAY = 5130;
export const WIA_IPS_CUR_INTENT = 6146;
export const WIA_IPS_XRES = 6147;
export const WIA_IPS_YRES = 6148;
export const WIA_IPS_XPOS = 6149;
export const WIA_IPS_YPOS = 6150;
export const WIA_IPS_XEXTENT = 6151;
export const WIA_IPS_YEXTENT = 6152;
export const WIA_IPS_PHOTOMETRIC_INTERP = 6153;
export const WIA_IPS_BRIGHTNESS = 6154;
export const WIA_IPS_CONTRAST = 6155;
export const WIA_IPS_ORIENTATION = 6156;
export const WIA_IPS_ROTATION = 6157;
export const WIA_IPS_MIRROR = 6158;
export const WIA_IPS_THRESHOLD = 6159;
export const WIA_IPS_INVERT = 6160;
export const WIA_IPS_WARM_UP_TIME = 6161;
export const WIA_DPS_USER_NAME = 3112;
export const WIA_DPS_SERVICE_ID = 3113;
export const WIA_DPS_DEVICE_ID = 3114;
export const WIA_DPS_GLOBAL_IDENTITY = 3115;
export const WIA_DPS_SCAN_AVAILABLE_ITEM = 3116;
export const WIA_IPS_DESKEW_X = 6162;
export const WIA_IPS_DESKEW_Y = 6163;
export const WIA_IPS_SEGMENTATION = 6164;
export const WIA_IPS_MAX_HORIZONTAL_SIZE = 6165;
export const WIA_IPS_MAX_VERTICAL_SIZE = 6166;
export const WIA_IPS_MIN_HORIZONTAL_SIZE = 6167;
export const WIA_IPS_MIN_VERTICAL_SIZE = 6168;
export const WIA_IPS_TRANSFER_CAPABILITIES = 6169;
export const WIA_IPS_SHEET_FEEDER_REGISTRATION = 3078;
export const WIA_IPS_DOCUMENT_HANDLING_SELECT = 3088;
export const WIA_IPS_OPTICAL_XRES = 3090;
export const WIA_IPS_OPTICAL_YRES = 3091;
export const WIA_IPS_PAGES = 3096;
export const WIA_IPS_PAGE_SIZE = 3097;
export const WIA_IPS_PAGE_WIDTH = 3098;
export const WIA_IPS_PAGE_HEIGHT = 3099;
export const WIA_IPS_PREVIEW = 3100;
export const WIA_IPS_SHOW_PREVIEW_CONTROL = 3103;
export const WIA_IPS_FILM_SCAN_MODE = 3104;
export const WIA_IPS_LAMP = 3105;
export const WIA_IPS_LAMP_AUTO_OFF = 3106;
export const WIA_IPS_AUTO_DESKEW = 3107;
export const WIA_IPS_SUPPORTS_CHILD_ITEM_CREATION = 3108;
export const WIA_IPS_XSCALING = 3109;
export const WIA_IPS_YSCALING = 3110;
export const WIA_IPS_PREVIEW_TYPE = 3111;
export const WIA_IPA_ITEM_CATEGORY = 4125;
export const WIA_IPA_UPLOAD_ITEM_SIZE = 4126;
export const WIA_IPA_ITEMS_STORED = 4127;
export const WIA_IPA_RAW_BITS_PER_CHANNEL = 4128;
export const WIA_IPS_FILM_NODE_NAME = 4129;
export const WIA_IPS_PRINTER_ENDORSER = 4130;
export const WIA_IPS_PRINTER_ENDORSER_ORDER = 4131;
export const WIA_IPS_PRINTER_ENDORSER_COUNTER = 4132;
export const WIA_IPS_PRINTER_ENDORSER_STEP = 4133;
export const WIA_IPS_PRINTER_ENDORSER_XOFFSET = 4134;
export const WIA_IPS_PRINTER_ENDORSER_YOFFSET = 4135;
export const WIA_IPS_PRINTER_ENDORSER_NUM_LINES = 4136;
export const WIA_IPS_PRINTER_ENDORSER_STRING = 4137;
export const WIA_IPS_PRINTER_ENDORSER_VALID_CHARACTERS = 4138;
export const WIA_IPS_PRINTER_ENDORSER_VALID_FORMAT_SPECIFIERS = 4139;
export const WIA_IPS_PRINTER_ENDORSER_TEXT_UPLOAD = 4140;
export const WIA_IPS_PRINTER_ENDORSER_TEXT_DOWNLOAD = 4141;
export const WIA_IPS_PRINTER_ENDORSER_GRAPHICS = 4142;
export const WIA_IPS_PRINTER_ENDORSER_GRAPHICS_POSITION = 4143;
export const WIA_IPS_PRINTER_ENDORSER_GRAPHICS_MIN_WIDTH = 4144;
export const WIA_IPS_PRINTER_ENDORSER_GRAPHICS_MAX_WIDTH = 4145;
export const WIA_IPS_PRINTER_ENDORSER_GRAPHICS_MIN_HEIGHT = 4146;
export const WIA_IPS_PRINTER_ENDORSER_GRAPHICS_MAX_HEIGHT = 4147;
export const WIA_IPS_PRINTER_ENDORSER_GRAPHICS_UPLOAD = 4148;
export const WIA_IPS_PRINTER_ENDORSER_GRAPHICS_DOWNLOAD = 4149;
export const WIA_IPS_BARCODE_READER = 4150;
export const WIA_IPS_MAXIMUM_BARCODES_PER_PAGE = 4151;
export const WIA_IPS_BARCODE_SEARCH_DIRECTION = 4152;
export const WIA_IPS_MAXIMUM_BARCODE_SEARCH_RETRIES = 4153;
export const WIA_IPS_BARCODE_SEARCH_TIMEOUT = 4154;
export const WIA_IPS_SUPPORTED_BARCODE_TYPES = 4155;
export const WIA_IPS_ENABLED_BARCODE_TYPES = 4156;
export const WIA_IPS_PATCH_CODE_READER = 4157;
export const WIA_IPS_SUPPORTED_PATCH_CODE_TYPES = 4162;
export const WIA_IPS_ENABLED_PATCH_CODE_TYPES = 4163;
export const WIA_IPS_MICR_READER = 4164;
export const WIA_IPS_JOB_SEPARATORS = 4165;
export const WIA_IPS_LONG_DOCUMENT = 4166;
export const WIA_IPS_BLANK_PAGES = 4167;
export const WIA_IPS_MULTI_FEED = 4168;
export const WIA_IPS_MULTI_FEED_SENSITIVITY = 4169;
export const WIA_IPS_AUTO_CROP = 4170;
export const WIA_IPS_OVER_SCAN = 4171;
export const WIA_IPS_OVER_SCAN_LEFT = 4172;
export const WIA_IPS_OVER_SCAN_RIGHT = 4173;
export const WIA_IPS_OVER_SCAN_TOP = 4174;
export const WIA_IPS_OVER_SCAN_BOTTOM = 4175;
export const WIA_IPS_COLOR_DROP = 4176;
export const WIA_IPS_COLOR_DROP_RED = 4177;
export const WIA_IPS_COLOR_DROP_GREEN = 4178;
export const WIA_IPS_COLOR_DROP_BLUE = 4179;
export const WIA_IPS_SCAN_AHEAD = 4180;
export const WIA_IPS_SCAN_AHEAD_CAPACITY = 4181;
export const WIA_IPS_FEEDER_CONTROL = 4182;
export const WIA_IPS_PRINTER_ENDORSER_PADDING = 4183;
export const WIA_IPS_PRINTER_ENDORSER_FONT_TYPE = 4184;
export const WIA_IPS_ALARM = 4185;
export const WIA_IPS_PRINTER_ENDORSER_INK = 4186;
export const WIA_IPS_PRINTER_ENDORSER_CHARACTER_ROTATION = 4187;
export const WIA_IPS_PRINTER_ENDORSER_MAX_CHARACTERS = 4188;
export const WIA_IPS_PRINTER_ENDORSER_MAX_GRAPHICS = 4189;
export const WIA_IPS_PRINTER_ENDORSER_COUNTER_DIGITS = 4190;
export const WIA_IPS_COLOR_DROP_MULTI = 4191;
export const WIA_IPS_BLANK_PAGES_SENSITIVITY = 4192;
export const WIA_IPS_MULTI_FEED_DETECT_METHOD = 4193;
export const WIA_TRANSFER_CHILDREN_SINGLE_SCAN = 1;
export const WIA_USE_SEGMENTATION_FILTER = 0;
export const WIA_DONT_USE_SEGMENTATION_FILTER = 1;
export const WIA_FILM_COLOR_SLIDE = 0;
export const WIA_FILM_COLOR_NEGATIVE = 1;
export const WIA_FILM_BW_NEGATIVE = 2;
export const WIA_LAMP_ON = 0;
export const WIA_LAMP_OFF = 1;
export const WIA_AUTO_DESKEW_ON = 0;
export const WIA_AUTO_DESKEW_OFF = 1;
export const WIA_ADVANCED_PREVIEW = 0;
export const WIA_BASIC_PREVIEW = 1;
export const WIA_PRINTER_ENDORSER_DISABLED = 0;
export const WIA_PRINTER_ENDORSER_AUTO = 1;
export const WIA_PRINTER_ENDORSER_FLATBED = 2;
export const WIA_PRINTER_ENDORSER_FEEDER_FRONT = 3;
export const WIA_PRINTER_ENDORSER_FEEDER_BACK = 4;
export const WIA_PRINTER_ENDORSER_FEEDER_DUPLEX = 5;
export const WIA_PRINTER_ENDORSER_DIGITAL = 6;
export const WIA_PRINTER_ENDORSER_BEFORE_SCAN = 0;
export const WIA_PRINTER_ENDORSER_AFTER_SCAN = 1;
export const WIA_PRINT_DATE = 0;
export const WIA_PRINT_YEAR = 1;
export const WIA_PRINT_MONTH = 2;
export const WIA_PRINT_DAY = 3;
export const WIA_PRINT_WEEK_DAY = 4;
export const WIA_PRINT_TIME_24H = 5;
export const WIA_PRINT_TIME_12H = 6;
export const WIA_PRINT_HOUR_24H = 7;
export const WIA_PRINT_HOUR_12H = 8;
export const WIA_PRINT_AM_PM = 9;
export const WIA_PRINT_MINUTE = 10;
export const WIA_PRINT_SECOND = 11;
export const WIA_PRINT_PAGE_COUNT = 12;
export const WIA_PRINT_IMAGE = 13;
export const WIA_PRINT_MILLISECOND = 14;
export const WIA_PRINT_MONTH_NAME = 15;
export const WIA_PRINT_MONTH_SHORT = 16;
export const WIA_PRINT_WEEK_DAY_SHORT = 17;
export const WIA_PRINTER_ENDORSER_GRAPHICS_LEFT = 0;
export const WIA_PRINTER_ENDORSER_GRAPHICS_RIGHT = 1;
export const WIA_PRINTER_ENDORSER_GRAPHICS_TOP = 2;
export const WIA_PRINTER_ENDORSER_GRAPHICS_BOTTOM = 3;
export const WIA_PRINTER_ENDORSER_GRAPHICS_TOP_LEFT = 4;
export const WIA_PRINTER_ENDORSER_GRAPHICS_TOP_RIGHT = 5;
export const WIA_PRINTER_ENDORSER_GRAPHICS_BOTTOM_LEFT = 6;
export const WIA_PRINTER_ENDORSER_GRAPHICS_BOTTOM_RIGHT = 7;
export const WIA_PRINTER_ENDORSER_GRAPHICS_BACKGROUND = 8;
export const WIA_PRINTER_ENDORSER_GRAPHICS_DEVICE_DEFAULT = 9;
export const WIA_BARCODE_READER_DISABLED = 0;
export const WIA_BARCODE_READER_AUTO = 1;
export const WIA_BARCODE_READER_FLATBED = 2;
export const WIA_BARCODE_READER_FEEDER_FRONT = 3;
export const WIA_BARCODE_READER_FEEDER_BACK = 4;
export const WIA_BARCODE_READER_FEEDER_DUPLEX = 5;
export const WIA_BARCODE_HORIZONTAL_SEARCH = 0;
export const WIA_BARCODE_VERTICAL_SEARCH = 1;
export const WIA_BARCODE_HORIZONTAL_VERTICAL_SEARCH = 2;
export const WIA_BARCODE_VERTICAL_HORIZONTAL_SEARCH = 3;
export const WIA_BARCODE_AUTO_SEARCH = 4;
export const WIA_BARCODE_UPCA = 0;
export const WIA_BARCODE_UPCE = 1;
export const WIA_BARCODE_CODABAR = 2;
export const WIA_BARCODE_NONINTERLEAVED_2OF5 = 3;
export const WIA_BARCODE_INTERLEAVED_2OF5 = 4;
export const WIA_BARCODE_CODE39 = 5;
export const WIA_BARCODE_CODE39_MOD43 = 6;
export const WIA_BARCODE_CODE39_FULLASCII = 7;
export const WIA_BARCODE_CODE93 = 8;
export const WIA_BARCODE_CODE128 = 9;
export const WIA_BARCODE_CODE128A = 10;
export const WIA_BARCODE_CODE128B = 11;
export const WIA_BARCODE_CODE128C = 12;
export const WIA_BARCODE_GS1128 = 13;
export const WIA_BARCODE_GS1DATABAR = 14;
export const WIA_BARCODE_ITF14 = 15;
export const WIA_BARCODE_EAN8 = 16;
export const WIA_BARCODE_EAN13 = 17;
export const WIA_BARCODE_POSTNETA = 18;
export const WIA_BARCODE_POSTNETB = 19;
export const WIA_BARCODE_POSTNETC = 20;
export const WIA_BARCODE_POSTNET_DPBC = 21;
export const WIA_BARCODE_PLANET = 22;
export const WIA_BARCODE_INTELLIGENT_MAIL = 23;
export const WIA_BARCODE_POSTBAR = 24;
export const WIA_BARCODE_RM4SCC = 25;
export const WIA_BARCODE_HIGH_CAPACITY_COLOR = 26;
export const WIA_BARCODE_MAXICODE = 27;
export const WIA_BARCODE_PDF417 = 28;
export const WIA_BARCODE_CPCBINARY = 29;
export const WIA_BARCODE_FIM = 30;
export const WIA_BARCODE_PHARMACODE = 31;
export const WIA_BARCODE_PLESSEY = 32;
export const WIA_BARCODE_MSI = 33;
export const WIA_BARCODE_JAN = 34;
export const WIA_BARCODE_TELEPEN = 35;
export const WIA_BARCODE_AZTEC = 36;
export const WIA_BARCODE_SMALLAZTEC = 37;
export const WIA_BARCODE_DATAMATRIX = 38;
export const WIA_BARCODE_DATASTRIP = 39;
export const WIA_BARCODE_EZCODE = 40;
export const WIA_BARCODE_QRCODE = 41;
export const WIA_BARCODE_SHOTCODE = 42;
export const WIA_BARCODE_SPARQCODE = 43;
export const WIA_BARCODE_CUSTOMBASE = 32768;
export const WIA_PATCH_CODE_READER_DISABLED = 0;
export const WIA_PATCH_CODE_READER_AUTO = 1;
export const WIA_PATCH_CODE_READER_FLATBED = 2;
export const WIA_PATCH_CODE_READER_FEEDER_FRONT = 3;
export const WIA_PATCH_CODE_READER_FEEDER_BACK = 4;
export const WIA_PATCH_CODE_READER_FEEDER_DUPLEX = 5;
export const WIA_PATCH_CODE_UNKNOWN = 0;
export const WIA_PATCH_CODE_1 = 1;
export const WIA_PATCH_CODE_2 = 2;
export const WIA_PATCH_CODE_3 = 3;
export const WIA_PATCH_CODE_4 = 4;
export const WIA_PATCH_CODE_T = 5;
export const WIA_PATCH_CODE_6 = 6;
export const WIA_PATCH_CODE_7 = 7;
export const WIA_PATCH_CODE_8 = 8;
export const WIA_PATCH_CODE_9 = 9;
export const WIA_PATCH_CODE_10 = 10;
export const WIA_PATCH_CODE_11 = 11;
export const WIA_PATCH_CODE_12 = 12;
export const WIA_PATCH_CODE_13 = 13;
export const WIA_PATCH_CODE_14 = 14;
export const WIA_PATCH_CODE_CUSTOM_BASE = 32768;
export const WIA_MICR_READER_DISABLED = 0;
export const WIA_MICR_READER_AUTO = 1;
export const WIA_MICR_READER_FLATBED = 2;
export const WIA_MICR_READER_FEEDER_FRONT = 3;
export const WIA_MICR_READER_FEEDER_BACK = 4;
export const WIA_MICR_READER_FEEDER_DUPLEX = 5;
export const WIA_SEPARATOR_DISABLED = 0;
export const WIA_SEPARATOR_DETECT_SCAN_CONTINUE = 1;
export const WIA_SEPARATOR_DETECT_SCAN_STOP = 2;
export const WIA_SEPARATOR_DETECT_NOSCAN_CONTINUE = 3;
export const WIA_SEPARATOR_DETECT_NOSCAN_STOP = 4;
export const WIA_LONG_DOCUMENT_DISABLED = 0;
export const WIA_LONG_DOCUMENT_ENABLED = 1;
export const WIA_LONG_DOCUMENT_SPLIT = 2;
export const WIA_BLANK_PAGE_DETECTION_DISABLED = 0;
export const WIA_BLANK_PAGE_DISCARD = 1;
export const WIA_BLANK_PAGE_JOB_SEPARATOR = 2;
export const WIA_MULTI_FEED_DETECT_DISABLED = 0;
export const WIA_MULTI_FEED_DETECT_STOP_ERROR = 1;
export const WIA_MULTI_FEED_DETECT_STOP_SUCCESS = 2;
export const WIA_MULTI_FEED_DETECT_CONTINUE = 3;
export const WIA_MULTI_FEED_DETECT_METHOD_LENGTH = 0;
export const WIA_MULTI_FEED_DETECT_METHOD_OVERLAP = 1;
export const WIA_AUTO_CROP_DISABLED = 0;
export const WIA_AUTO_CROP_SINGLE = 1;
export const WIA_AUTO_CROP_MULTI = 2;
export const WIA_OVER_SCAN_DISABLED = 0;
export const WIA_OVER_SCAN_TOP_BOTTOM = 1;
export const WIA_OVER_SCAN_LEFT_RIGHT = 2;
export const WIA_OVER_SCAN_ALL = 3;
export const WIA_COLOR_DROP_DISABLED = 0;
export const WIA_COLOR_DROP_RED = 1;
export const WIA_COLOR_DROP_GREEN = 2;
export const WIA_COLOR_DROP_BLUE = 3;
export const WIA_COLOR_DROP_RGB = 4;
export const WIA_SCAN_AHEAD_DISABLED = 0;
export const WIA_SCAN_AHEAD_ENABLED = 1;
export const WIA_FEEDER_CONTROL_AUTO = 0;
export const WIA_FEEDER_CONTROL_MANUAL = 1;
export const WIA_PRINT_PADDING_NONE = 0;
export const WIA_PRINT_PADDING_ZERO = 1;
export const WIA_PRINT_PADDING_BLANK = 2;
export const WIA_PRINT_FONT_NORMAL = 0;
export const WIA_PRINT_FONT_BOLD = 1;
export const WIA_PRINT_FONT_EXTRA_BOLD = 2;
export const WIA_PRINT_FONT_ITALIC_BOLD = 3;
export const WIA_PRINT_FONT_ITALIC_EXTRA_BOLD = 4;
export const WIA_PRINT_FONT_ITALIC = 5;
export const WIA_PRINT_FONT_SMALL = 6;
export const WIA_PRINT_FONT_SMALL_BOLD = 7;
export const WIA_PRINT_FONT_SMALL_EXTRA_BOLD = 8;
export const WIA_PRINT_FONT_SMALL_ITALIC_BOLD = 9;
export const WIA_PRINT_FONT_SMALL_ITALIC_EXTRA_BOLD = 10;
export const WIA_PRINT_FONT_SMALL_ITALIC = 11;
export const WIA_PRINT_FONT_LARGE = 12;
export const WIA_PRINT_FONT_LARGE_BOLD = 13;
export const WIA_PRINT_FONT_LARGE_EXTRA_BOLD = 14;
export const WIA_PRINT_FONT_LARGE_ITALIC_BOLD = 15;
export const WIA_PRINT_FONT_LARGE_ITALIC_EXTRA_BOLD = 16;
export const WIA_PRINT_FONT_LARGE_ITALIC = 17;
export const WIA_ALARM_NONE = 0;
export const WIA_ALARM_BEEP1 = 1;
export const WIA_ALARM_BEEP2 = 2;
export const WIA_ALARM_BEEP3 = 3;
export const WIA_ALARM_BEEP4 = 4;
export const WIA_ALARM_BEEP5 = 5;
export const WIA_ALARM_BEEP6 = 6;
export const WIA_ALARM_BEEP7 = 7;
export const WIA_ALARM_BEEP8 = 8;
export const WIA_ALARM_BEEP9 = 9;
export const WIA_ALARM_BEEP10 = 10;
export const WIA_PRIVATE_DEVPROP = 38914;
export const WIA_PRIVATE_ITEMPROP = 71682;
export const BASE_VAL_WIA_ERROR = 0;
export const BASE_VAL_WIA_SUCCESS = 0;
export const WIA_ERROR_GENERAL_ERROR = 2377902821604392961n;
export const WIA_ERROR_PAPER_JAM = 58265339508621314n;
export const WIA_ERROR_PAPER_EMPTY = 2377905020627648515n;
export const WIA_ERROR_PAPER_PROBLEM = 2377906120139276292n;
export const WIA_ERROR_OFFLINE = 2377907219650904069n;
export const WIA_ERROR_BUSY = 2377908319162531846n;
export const WIA_ERROR_WARMING_UP = 2377909418674159623n;
export const WIA_ERROR_USER_INTERVENTION = 2377910518185787400n;
export const WIA_ERROR_ITEM_DELETED = 2377911617697415177n;
export const WIA_ERROR_DEVICE_COMMUNICATION = 2377912717209042954n;
export const WIA_ERROR_INVALID_COMMAND = 2377913816720670731n;
export const WIA_ERROR_INCORRECT_HARDWARE_SETTING = 2377914916232298508n;
export const WIA_ERROR_DEVICE_LOCKED = 2377916015743926285n;
export const WIA_ERROR_EXCEPTION_IN_DRIVER = 2377917115255554062n;
export const WIA_ERROR_INVALID_DRIVER_RESPONSE = 2377918214767181839n;
export const WIA_ERROR_COVER_OPEN = 2377919314278809616n;
export const WIA_ERROR_LAMP_OFF = 2377920413790437393n;
export const WIA_ERROR_DESTINATION = 2377921513302065170n;
export const WIA_ERROR_NETWORK_RESERVATION_FAILED = 2377922612813692947n;
export const WIA_ERROR_MULTI_FEED = 2377923712325320724n;
export const WIA_ERROR_MAXIMUM_PRINTER_ENDORSER_COUNTER = 2377901722092765205n;
export const WIA_STATUS_END_OF_MEDIA = 2377902819456909313n;
export const WIA_STATUS_WARMING_UP = 2377903918968537090n;
export const WIA_STATUS_CALIBRATING = 2377907217503420419n;
export const WIA_STATUS_RESERVING_NETWORK_DEVICE = 2377908317015048198n;
export const WIA_STATUS_NETWORK_DEVICE_RESERVED = 2377909416526675975n;
export const WIA_STATUS_CLEAR = 2377910516038303752n;
export const WIA_STATUS_SKIP_ITEM = 2377911615549931529n;
export const WIA_STATUS_NOT_HANDLED = 2377912715061559306n;
export const WIA_S_CHANGE_DEVICE = 1152920422277251083n;
export const WIA_S_NO_DEVICE_AVAILABLE = 2377901722092765205n;
export const WIA_SELECT_DEVICE_NODEFAULT = 1;
export const WIA_DEVICE_DIALOG_SINGLE_IMAGE = 2;
export const WIA_DEVICE_DIALOG_USE_COMMON_UI = 4;
export const WIA_REGISTER_EVENT_CALLBACK = 1;
export const WIA_UNREGISTER_EVENT_CALLBACK = 2;
export const WIA_SET_DEFAULT_HANDLER = 4;
export const WIA_NOTIFICATION_EVENT = 1;
export const WIA_ACTION_EVENT = 2;
export const WIA_LINE_ORDER_TOP_TO_BOTTOM = 1;
export const WIA_LINE_ORDER_BOTTOM_TO_TOP = 2;
export const WIA_IS_DEFAULT_HANDLER = 1;
export const TYMED_CALLBACK = 128;
export const TYMED_MULTIPAGE_FILE = 256;
export const TYMED_MULTIPAGE_CALLBACK = 512;
export const IT_MSG_DATA_HEADER = 1;
export const IT_MSG_DATA = 2;
export const IT_MSG_STATUS = 3;
export const IT_MSG_TERMINATION = 4;
export const IT_MSG_NEW_PAGE = 5;
export const IT_MSG_FILE_PREVIEW_DATA = 6;
export const IT_MSG_FILE_PREVIEW_DATA_HEADER = 7;
export const IT_STATUS_TRANSFER_FROM_DEVICE = 1;
export const IT_STATUS_PROCESSING_DATA = 2;
export const IT_STATUS_TRANSFER_TO_CLIENT = 4;
export const IT_STATUS_MASK = 7;
export const WIA_TRANSFER_ACQUIRE_CHILDREN = 1;
export const WIA_TRANSFER_MSG_STATUS = 1;
export const WIA_TRANSFER_MSG_END_OF_STREAM = 2;
export const WIA_TRANSFER_MSG_END_OF_TRANSFER = 3;
export const WIA_TRANSFER_MSG_DEVICE_STATUS = 5;
export const WIA_TRANSFER_MSG_NEW_PAGE = 6;
export const WIA_MAJOR_EVENT_DEVICE_CONNECT = 1;
export const WIA_MAJOR_EVENT_DEVICE_DISCONNECT = 2;
export const WIA_MAJOR_EVENT_PICTURE_TAKEN = 3;
export const WIA_MAJOR_EVENT_PICTURE_DELETED = 4;
export const WIA_DEVICE_NOT_CONNECTED = 0;
export const WIA_DEVICE_CONNECTED = 1;
export const WIA_DEVICE_COMMANDS = 1;
export const WIA_DEVICE_EVENTS = 2;
export const WIA_DEVINFO_ENUM_ALL = 15;
export const WIA_DEVINFO_ENUM_LOCAL = 16;
export const WiaItemTypeFree = 0;
export const WiaItemTypeImage = 1;
export const WiaItemTypeFile = 2;
export const WiaItemTypeFolder = 4;
export const WiaItemTypeRoot = 8;
export const WiaItemTypeAnalyze = 16;
export const WiaItemTypeAudio = 32;
export const WiaItemTypeDevice = 64;
export const WiaItemTypeDeleted = 128;
export const WiaItemTypeDisconnected = 256;
export const WiaItemTypeHPanorama = 512;
export const WiaItemTypeVPanorama = 1024;
export const WiaItemTypeBurst = 2048;
export const WiaItemTypeStorage = 4096;
export const WiaItemTypeTransfer = 8192;
export const WiaItemTypeGenerated = 16384;
export const WiaItemTypeHasAttachments = 32768;
export const WiaItemTypeVideo = 65536;
export const WiaItemTypeRemoved = 2147483648;
export const WiaItemTypeDocument = 262144;
export const WiaItemTypeProgrammableDataSource = 524288;
export const WiaItemTypeMask = 2148532223;
export const WIA_MAX_CTX_SIZE = 16777216;
export const WIA_PROP_READ = 1;
export const WIA_PROP_WRITE = 2;
export const WIA_PROP_SYNC_REQUIRED = 4;
export const WIA_PROP_NONE = 8;
export const WIA_PROP_RANGE = 16;
export const WIA_PROP_LIST = 32;
export const WIA_PROP_FLAG = 64;
export const WIA_PROP_CACHEABLE = 65536;
export const COPY_PARENT_PROPERTY_VALUES = 1073741824;
export const WIA_ITEM_CAN_BE_DELETED = 128;
export const WIA_ITEM_READ = 1;
export const WIA_ITEM_WRITE = 2;
export const WIA_RANGE_MIN = 0;
export const WIA_RANGE_NOM = 1;
export const WIA_RANGE_MAX = 2;
export const WIA_RANGE_STEP = 3;
export const WIA_RANGE_NUM_ELEMS = 4;
export const WIA_LIST_COUNT = 0;
export const WIA_LIST_NOM = 1;
export const WIA_LIST_VALUES = 2;
export const WIA_LIST_NUM_ELEMS = 2;
export const WIA_FLAG_NOM = 0;
export const WIA_FLAG_VALUES = 1;
export const WIA_FLAG_NUM_ELEMS = 2;
export const WIA_DIP_FIRST = 2;
export const WIA_IPA_FIRST = 4098;
export const WIA_DPF_FIRST = 3330;
export const WIA_IPS_FIRST = 6146;
export const WIA_DPS_FIRST = 3074;
export const WIA_IPC_FIRST = 5122;
export const WIA_NUM_IPC = 9;
export const WIA_RESERVED_FOR_NEW_PROPS = 1024;
export const WHITEBALANCE_MANUAL = 1;
export const WHITEBALANCE_AUTO = 2;
export const WHITEBALANCE_ONEPUSH_AUTO = 3;
export const WHITEBALANCE_DAYLIGHT = 4;
export const WHITEBALANCE_FLORESCENT = 5;
export const WHITEBALANCE_TUNGSTEN = 6;
export const WHITEBALANCE_FLASH = 7;
export const FOCUSMODE_MANUAL = 1;
export const FOCUSMODE_AUTO = 2;
export const FOCUSMODE_MACROAUTO = 3;
export const EXPOSUREMETERING_AVERAGE = 1;
export const EXPOSUREMETERING_CENTERWEIGHT = 2;
export const EXPOSUREMETERING_MULTISPOT = 3;
export const EXPOSUREMETERING_CENTERSPOT = 4;
export const FLASHMODE_AUTO = 1;
export const FLASHMODE_OFF = 2;
export const FLASHMODE_FILL = 3;
export const FLASHMODE_REDEYE_AUTO = 4;
export const FLASHMODE_REDEYE_FILL = 5;
export const FLASHMODE_EXTERNALSYNC = 6;
export const EXPOSUREMODE_MANUAL = 1;
export const EXPOSUREMODE_AUTO = 2;
export const EXPOSUREMODE_APERTURE_PRIORITY = 3;
export const EXPOSUREMODE_SHUTTER_PRIORITY = 4;
export const EXPOSUREMODE_PROGRAM_CREATIVE = 5;
export const EXPOSUREMODE_PROGRAM_ACTION = 6;
export const EXPOSUREMODE_PORTRAIT = 7;
export const CAPTUREMODE_NORMAL = 1;
export const CAPTUREMODE_BURST = 2;
export const CAPTUREMODE_TIMELAPSE = 3;
export const EFFECTMODE_STANDARD = 1;
export const EFFECTMODE_BW = 2;
export const EFFECTMODE_SEPIA = 3;
export const FOCUSMETERING_CENTERSPOT = 1;
export const FOCUSMETERING_MULTISPOT = 2;
export const POWERMODE_LINE = 1;
export const POWERMODE_BATTERY = 2;
export const LEFT_JUSTIFIED = 0;
export const CENTERED = 1;
export const RIGHT_JUSTIFIED = 2;
export const TOP_JUSTIFIED = 0;
export const BOTTOM_JUSTIFIED = 2;
export const PORTRAIT = 0;
export const LANSCAPE = 1;
export const LANDSCAPE = 1;
export const ROT180 = 2;
export const ROT270 = 3;
export const MIRRORED = 1;
export const FEED = 1;
export const FLAT = 2;
export const DUP = 4;
export const DETECT_FLAT = 8;
export const DETECT_SCAN = 16;
export const DETECT_FEED = 32;
export const DETECT_DUP = 64;
export const DETECT_FEED_AVAIL = 128;
export const DETECT_DUP_AVAIL = 256;
export const FILM_TPA = 512;
export const DETECT_FILM_TPA = 1024;
export const STOR = 2048;
export const DETECT_STOR = 4096;
export const ADVANCED_DUP = 8192;
export const AUTO_SOURCE = 32768;
export const IMPRINTER = 65536;
export const ENDORSER = 131072;
export const BARCODE_READER = 262144;
export const PATCH_CODE_READER = 524288;
export const MICR_READER = 1048576;
export const FEED_READY = 1;
export const FLAT_READY = 2;
export const DUP_READY = 4;
export const FLAT_COVER_UP = 8;
export const PATH_COVER_UP = 16;
export const PAPER_JAM = 32;
export const FILM_TPA_READY = 64;
export const STORAGE_READY = 128;
export const STORAGE_FULL = 256;
export const MULTIPLE_FEED = 512;
export const DEVICE_ATTENTION = 1024;
export const LAMP_ERR = 2048;
export const IMPRINTER_READY = 4096;
export const ENDORSER_READY = 8192;
export const BARCODE_READER_READY = 16384;
export const PATCH_CODE_READER_READY = 32768;
export const MICR_READER_READY = 65536;
export const FEEDER = 1;
export const FLATBED = 2;
export const DUPLEX = 4;
export const FRONT_FIRST = 8;
export const BACK_FIRST = 16;
export const FRONT_ONLY = 32;
export const BACK_ONLY = 64;
export const NEXT_PAGE = 128;
export const PREFEED = 256;
export const AUTO_ADVANCE = 512;
export const ADVANCED_DUPLEX = 1024;
export const LIGHT_SOURCE_PRESENT_DETECT = 1;
export const LIGHT_SOURCE_PRESENT = 2;
export const LIGHT_SOURCE_DETECT_READY = 4;
export const LIGHT_SOURCE_READY = 8;
export const TRANSPARENCY_DYNAMIC_FRAME_SUPPORT = 1;
export const TRANSPARENCY_STATIC_FRAME_SUPPORT = 2;
export const LIGHT_SOURCE_SELECT = 1;
export const LIGHT_SOURCE_POSITIVE = 2;
export const LIGHT_SOURCE_NEGATIVE = 4;
export const WIA_SCAN_AHEAD_ALL = 0;
export const ALL_PAGES = 0;
export const WIA_FINAL_SCAN = 0;
export const WIA_PREVIEW_SCAN = 1;
export const WIA_SHOW_PREVIEW_CONTROL = 0;
export const WIA_DONT_SHOW_PREVIEW_CONTROL = 1;
export const WIA_PAGE_A4 = 0;
export const WIA_PAGE_LETTER = 1;
export const WIA_PAGE_CUSTOM = 2;
export const WIA_PAGE_USLEGAL = 3;
export const WIA_PAGE_USLETTER = 1;
export const WIA_PAGE_USLEDGER = 4;
export const WIA_PAGE_USSTATEMENT = 5;
export const WIA_PAGE_BUSINESSCARD = 6;
export const WIA_PAGE_ISO_A0 = 7;
export const WIA_PAGE_ISO_A1 = 8;
export const WIA_PAGE_ISO_A2 = 9;
export const WIA_PAGE_ISO_A3 = 10;
export const WIA_PAGE_ISO_A4 = 0;
export const WIA_PAGE_ISO_A5 = 11;
export const WIA_PAGE_ISO_A6 = 12;
export const WIA_PAGE_ISO_A7 = 13;
export const WIA_PAGE_ISO_A8 = 14;
export const WIA_PAGE_ISO_A9 = 15;
export const WIA_PAGE_ISO_A10 = 16;
export const WIA_PAGE_ISO_B0 = 17;
export const WIA_PAGE_ISO_B1 = 18;
export const WIA_PAGE_ISO_B2 = 19;
export const WIA_PAGE_ISO_B3 = 20;
export const WIA_PAGE_ISO_B4 = 21;
export const WIA_PAGE_ISO_B5 = 22;
export const WIA_PAGE_ISO_B6 = 23;
export const WIA_PAGE_ISO_B7 = 24;
export const WIA_PAGE_ISO_B8 = 25;
export const WIA_PAGE_ISO_B9 = 26;
export const WIA_PAGE_ISO_B10 = 27;
export const WIA_PAGE_ISO_C0 = 28;
export const WIA_PAGE_ISO_C1 = 29;
export const WIA_PAGE_ISO_C2 = 30;
export const WIA_PAGE_ISO_C3 = 31;
export const WIA_PAGE_ISO_C4 = 32;
export const WIA_PAGE_ISO_C5 = 33;
export const WIA_PAGE_ISO_C6 = 34;
export const WIA_PAGE_ISO_C7 = 35;
export const WIA_PAGE_ISO_C8 = 36;
export const WIA_PAGE_ISO_C9 = 37;
export const WIA_PAGE_ISO_C10 = 38;
export const WIA_PAGE_JIS_B0 = 39;
export const WIA_PAGE_JIS_B1 = 40;
export const WIA_PAGE_JIS_B2 = 41;
export const WIA_PAGE_JIS_B3 = 42;
export const WIA_PAGE_JIS_B4 = 43;
export const WIA_PAGE_JIS_B5 = 44;
export const WIA_PAGE_JIS_B6 = 45;
export const WIA_PAGE_JIS_B7 = 46;
export const WIA_PAGE_JIS_B8 = 47;
export const WIA_PAGE_JIS_B9 = 48;
export const WIA_PAGE_JIS_B10 = 49;
export const WIA_PAGE_JIS_2A = 50;
export const WIA_PAGE_JIS_4A = 51;
export const WIA_PAGE_DIN_2B = 52;
export const WIA_PAGE_DIN_4B = 53;
export const WIA_PAGE_AUTO = 100;
export const WIA_PAGE_CUSTOM_BASE = 32768;
export const WIA_COMPRESSION_NONE = 0;
export const WIA_COMPRESSION_BI_RLE4 = 1;
export const WIA_COMPRESSION_BI_RLE8 = 2;
export const WIA_COMPRESSION_G3 = 3;
export const WIA_COMPRESSION_G4 = 4;
export const WIA_COMPRESSION_JPEG = 5;
export const WIA_COMPRESSION_JBIG = 6;
export const WIA_COMPRESSION_JPEG2K = 7;
export const WIA_COMPRESSION_PNG = 8;
export const WIA_COMPRESSION_AUTO = 100;
export const WIA_PACKED_PIXEL = 0;
export const WIA_PLANAR = 1;
export const WIA_DATA_THRESHOLD = 0;
export const WIA_DATA_DITHER = 1;
export const WIA_DATA_GRAYSCALE = 2;
export const WIA_DATA_COLOR = 3;
export const WIA_DATA_COLOR_THRESHOLD = 4;
export const WIA_DATA_COLOR_DITHER = 5;
export const WIA_DATA_RAW_RGB = 6;
export const WIA_DATA_RAW_BGR = 7;
export const WIA_DATA_RAW_YUV = 8;
export const WIA_DATA_RAW_YUVK = 9;
export const WIA_DATA_RAW_CMY = 10;
export const WIA_DATA_RAW_CMYK = 11;
export const WIA_DATA_AUTO = 100;
export const WIA_DEPTH_AUTO = 0;
export const WIA_PHOTO_WHITE_1 = 0;
export const WIA_PHOTO_WHITE_0 = 1;
export const WIA_PROPPAGE_SCANNER_ITEM_GENERAL = 1;
export const WIA_PROPPAGE_CAMERA_ITEM_GENERAL = 2;
export const WIA_PROPPAGE_DEVICE_GENERAL = 4;
export const WIA_INTENT_NONE = 0;
export const WIA_INTENT_IMAGE_TYPE_COLOR = 1;
export const WIA_INTENT_IMAGE_TYPE_GRAYSCALE = 2;
export const WIA_INTENT_IMAGE_TYPE_TEXT = 4;
export const WIA_INTENT_IMAGE_TYPE_MASK = 15;
export const WIA_INTENT_MINIMIZE_SIZE = 65536;
export const WIA_INTENT_MAXIMIZE_QUALITY = 131072;
export const WIA_INTENT_BEST_PREVIEW = 262144;
export const WIA_INTENT_SIZE_MASK = 983040;
export const WIA_NUM_DIP = 16;
export const MAX_IO_HANDLES = 16;
export const MAX_RESERVED = 4;
export const MAX_ANSI_CHAR = 255;
export const BUS_TYPE_SCSI = 200;
export const BUS_TYPE_USB = 201;
export const BUS_TYPE_PARALLEL = 202;
export const BUS_TYPE_FIREWIRE = 203;
export const SCAN_FIRST = 10;
export const SCAN_NEXT = 20;
export const SCAN_FINISHED = 30;
export const SCANMODE_FINALSCAN = 0;
export const SCANMODE_PREVIEWSCAN = 1;
export const CMD_INITIALIZE = 100;
export const CMD_UNINITIALIZE = 101;
export const CMD_SETXRESOLUTION = 102;
export const CMD_SETYRESOLUTION = 103;
export const CMD_SETCONTRAST = 104;
export const CMD_SETINTENSITY = 105;
export const CMD_SETDATATYPE = 106;
export const CMD_SETDITHER = 107;
export const CMD_SETMIRROR = 108;
export const CMD_SETNEGATIVE = 109;
export const CMD_SETTONEMAP = 110;
export const CMD_SETCOLORDITHER = 111;
export const CMD_SETMATRIX = 112;
export const CMD_SETSPEED = 113;
export const CMD_SETFILTER = 114;
export const CMD_LOAD_ADF = 115;
export const CMD_UNLOAD_ADF = 116;
export const CMD_GETADFAVAILABLE = 117;
export const CMD_GETADFOPEN = 118;
export const CMD_GETADFREADY = 119;
export const CMD_GETADFHASPAPER = 120;
export const CMD_GETADFSTATUS = 121;
export const CMD_GETADFUNLOADREADY = 122;
export const CMD_GETTPAAVAILABLE = 123;
export const CMD_GETTPAOPENED = 124;
export const CMD_TPAREADY = 125;
export const CMD_SETLAMP = 126;
export const CMD_SENDSCSICOMMAND = 127;
export const CMD_STI_DEVICERESET = 128;
export const CMD_STI_GETSTATUS = 129;
export const CMD_STI_DIAGNOSTIC = 130;
export const CMD_RESETSCANNER = 131;
export const CMD_GETCAPABILITIES = 132;
export const CMD_GET_INTERRUPT_EVENT = 133;
export const CMD_SETGSDNAME = 134;
export const CMD_SETSCANMODE = 135;
export const CMD_SETSTIDEVICEHKEY = 136;
export const CMD_GETSUPPORTEDFILEFORMATS = 138;
export const CMD_GETSUPPORTEDMEMORYFORMATS = 139;
export const CMD_SETFORMAT = 140;
export const SUPPORT_COLOR = 1;
export const SUPPORT_BW = 2;
export const SUPPORT_GRAYSCALE = 4;
export const MCRO_ERROR_GENERAL_ERROR = 0;
export const MCRO_STATUS_OK = 1;
export const MCRO_ERROR_PAPER_JAM = 2;
export const MCRO_ERROR_PAPER_PROBLEM = 3;
export const MCRO_ERROR_PAPER_EMPTY = 4;
export const MCRO_ERROR_OFFLINE = 5;
export const MCRO_ERROR_USER_INTERVENTION = 6;
export const WIA_ORDER_RGB = 0;
export const WIA_ORDER_BGR = 1;
export const WiaItemTypeTwainCapabilityPassThrough = 131072;
export const ESC_TWAIN_CAPABILITY = 2001;
export const ESC_TWAIN_PRIVATE_SUPPORTED_CAPS = 2002;
export const WIA_WSD_MANUFACTURER = 38914;
export const WIA_WSD_MANUFACTURER_URL = 38915;
export const WIA_WSD_MODEL_NAME = 38916;
export const WIA_WSD_MODEL_NUMBER = 38917;
export const WIA_WSD_MODEL_URL = 38918;
export const WIA_WSD_PRESENTATION_URL = 38919;
export const WIA_WSD_FRIENDLY_NAME = 38920;
export const WIA_WSD_SERIAL_NUMBER = 38921;
export const WIA_WSD_SCAN_AVAILABLE_ITEM = 38922;
export const WIAVIDEO_NO_VIDEO = 1;
export const WIAVIDEO_CREATING_VIDEO = 2;
export const WIAVIDEO_VIDEO_CREATED = 3;
export const WIAVIDEO_VIDEO_PLAYING = 4;
export const WIAVIDEO_VIDEO_PAUSED = 5;
export const WIAVIDEO_DESTROYING_VIDEO = 6;

// Structs

/**
 * Windows.Win32.Devices.ImageAcquisition.Apis (size: 840)
 */
export interface Apis {
  /** System.Guid */
  WIA_CATEGORY_FINISHED_FILE: Uint8Array | Deno.PointerValue | null;
  /** System.Guid */
  WIA_CATEGORY_FLATBED: Uint8Array | Deno.PointerValue | null;
  /** System.Guid */
  WIA_CATEGORY_FEEDER: Uint8Array | Deno.PointerValue | null;
  /** System.Guid */
  WIA_CATEGORY_FILM: Uint8Array | Deno.PointerValue | null;
  /** System.Guid */
  WIA_CATEGORY_ROOT: Uint8Array | Deno.PointerValue | null;
  /** System.Guid */
  WIA_CATEGORY_FOLDER: Uint8Array | Deno.PointerValue | null;
  /** System.Guid */
  WIA_CATEGORY_FEEDER_FRONT: Uint8Array | Deno.PointerValue | null;
  /** System.Guid */
  WIA_CATEGORY_FEEDER_BACK: Uint8Array | Deno.PointerValue | null;
  /** System.Guid */
  WIA_CATEGORY_AUTO: Uint8Array | Deno.PointerValue | null;
  /** System.Guid */
  WIA_CATEGORY_IMPRINTER: Uint8Array | Deno.PointerValue | null;
  /** System.Guid */
  WIA_CATEGORY_ENDORSER: Uint8Array | Deno.PointerValue | null;
  /** System.Guid */
  WIA_CATEGORY_BARCODE_READER: Uint8Array | Deno.PointerValue | null;
  /** System.Guid */
  WIA_CATEGORY_PATCH_CODE_READER: Uint8Array | Deno.PointerValue | null;
  /** System.Guid */
  WIA_CATEGORY_MICR_READER: Uint8Array | Deno.PointerValue | null;
  /** System.Guid */
  CLSID_WiaDefaultSegFilter: Uint8Array | Deno.PointerValue | null;
  /** System.Guid */
  WiaImgFmt_UNDEFINED: Uint8Array | Deno.PointerValue | null;
  /** System.Guid */
  WiaImgFmt_RAWRGB: Uint8Array | Deno.PointerValue | null;
  /** System.Guid */
  WiaImgFmt_MEMORYBMP: Uint8Array | Deno.PointerValue | null;
  /** System.Guid */
  WiaImgFmt_BMP: Uint8Array | Deno.PointerValue | null;
  /** System.Guid */
  WiaImgFmt_EMF: Uint8Array | Deno.PointerValue | null;
  /** System.Guid */
  WiaImgFmt_WMF: Uint8Array | Deno.PointerValue | null;
  /** System.Guid */
  WiaImgFmt_JPEG: Uint8Array | Deno.PointerValue | null;
  /** System.Guid */
  WiaImgFmt_PNG: Uint8Array | Deno.PointerValue | null;
  /** System.Guid */
  WiaImgFmt_GIF: Uint8Array | Deno.PointerValue | null;
  /** System.Guid */
  WiaImgFmt_TIFF: Uint8Array | Deno.PointerValue | null;
  /** System.Guid */
  WiaImgFmt_EXIF: Uint8Array | Deno.PointerValue | null;
  /** System.Guid */
  WiaImgFmt_PHOTOCD: Uint8Array | Deno.PointerValue | null;
  /** System.Guid */
  WiaImgFmt_FLASHPIX: Uint8Array | Deno.PointerValue | null;
  /** System.Guid */
  WiaImgFmt_ICO: Uint8Array | Deno.PointerValue | null;
  /** System.Guid */
  WiaImgFmt_CIFF: Uint8Array | Deno.PointerValue | null;
  /** System.Guid */
  WiaImgFmt_PICT: Uint8Array | Deno.PointerValue | null;
  /** System.Guid */
  WiaImgFmt_JPEG2K: Uint8Array | Deno.PointerValue | null;
  /** System.Guid */
  WiaImgFmt_JPEG2KX: Uint8Array | Deno.PointerValue | null;
  /** System.Guid */
  WiaImgFmt_RAW: Uint8Array | Deno.PointerValue | null;
  /** System.Guid */
  WiaImgFmt_JBIG: Uint8Array | Deno.PointerValue | null;
  /** System.Guid */
  WiaImgFmt_JBIG2: Uint8Array | Deno.PointerValue | null;
  /** System.Guid */
  WiaImgFmt_RTF: Uint8Array | Deno.PointerValue | null;
  /** System.Guid */
  WiaImgFmt_XML: Uint8Array | Deno.PointerValue | null;
  /** System.Guid */
  WiaImgFmt_HTML: Uint8Array | Deno.PointerValue | null;
  /** System.Guid */
  WiaImgFmt_TXT: Uint8Array | Deno.PointerValue | null;
  /** System.Guid */
  WiaImgFmt_PDFA: Uint8Array | Deno.PointerValue | null;
  /** System.Guid */
  WiaImgFmt_XPS: Uint8Array | Deno.PointerValue | null;
  /** System.Guid */
  WiaImgFmt_OXPS: Uint8Array | Deno.PointerValue | null;
  /** System.Guid */
  WiaImgFmt_CSV: Uint8Array | Deno.PointerValue | null;
  /** System.Guid */
  WiaImgFmt_MPG: Uint8Array | Deno.PointerValue | null;
  /** System.Guid */
  WiaImgFmt_AVI: Uint8Array | Deno.PointerValue | null;
  /** System.Guid */
  WiaAudFmt_WAV: Uint8Array | Deno.PointerValue | null;
  /** System.Guid */
  WiaAudFmt_MP3: Uint8Array | Deno.PointerValue | null;
  /** System.Guid */
  WiaAudFmt_AIFF: Uint8Array | Deno.PointerValue | null;
  /** System.Guid */
  WiaAudFmt_WMA: Uint8Array | Deno.PointerValue | null;
  /** System.Guid */
  WiaImgFmt_ASF: Uint8Array | Deno.PointerValue | null;
  /** System.Guid */
  WiaImgFmt_SCRIPT: Uint8Array | Deno.PointerValue | null;
  /** System.Guid */
  WiaImgFmt_EXEC: Uint8Array | Deno.PointerValue | null;
  /** System.Guid */
  WiaImgFmt_UNICODE16: Uint8Array | Deno.PointerValue | null;
  /** System.Guid */
  WiaImgFmt_DPOF: Uint8Array | Deno.PointerValue | null;
  /** System.Guid */
  WiaImgFmt_XMLBAR: Uint8Array | Deno.PointerValue | null;
  /** System.Guid */
  WiaImgFmt_RAWBAR: Uint8Array | Deno.PointerValue | null;
  /** System.Guid */
  WiaImgFmt_XMLPAT: Uint8Array | Deno.PointerValue | null;
  /** System.Guid */
  WiaImgFmt_RAWPAT: Uint8Array | Deno.PointerValue | null;
  /** System.Guid */
  WiaImgFmt_XMLMIC: Uint8Array | Deno.PointerValue | null;
  /** System.Guid */
  WiaImgFmt_RAWMIC: Uint8Array | Deno.PointerValue | null;
  /** System.Guid */
  WIA_EVENT_DEVICE_DISCONNECTED: Uint8Array | Deno.PointerValue | null;
  /** System.Guid */
  WIA_EVENT_DEVICE_CONNECTED: Uint8Array | Deno.PointerValue | null;
  /** System.Guid */
  WIA_EVENT_ITEM_DELETED: Uint8Array | Deno.PointerValue | null;
  /** System.Guid */
  WIA_EVENT_ITEM_CREATED: Uint8Array | Deno.PointerValue | null;
  /** System.Guid */
  WIA_EVENT_TREE_UPDATED: Uint8Array | Deno.PointerValue | null;
  /** System.Guid */
  WIA_EVENT_VOLUME_INSERT: Uint8Array | Deno.PointerValue | null;
  /** System.Guid */
  WIA_EVENT_SCAN_IMAGE: Uint8Array | Deno.PointerValue | null;
  /** System.Guid */
  WIA_EVENT_SCAN_PRINT_IMAGE: Uint8Array | Deno.PointerValue | null;
  /** System.Guid */
  WIA_EVENT_SCAN_FAX_IMAGE: Uint8Array | Deno.PointerValue | null;
  /** System.Guid */
  WIA_EVENT_SCAN_OCR_IMAGE: Uint8Array | Deno.PointerValue | null;
  /** System.Guid */
  WIA_EVENT_SCAN_EMAIL_IMAGE: Uint8Array | Deno.PointerValue | null;
  /** System.Guid */
  WIA_EVENT_SCAN_FILM_IMAGE: Uint8Array | Deno.PointerValue | null;
  /** System.Guid */
  WIA_EVENT_SCAN_IMAGE2: Uint8Array | Deno.PointerValue | null;
  /** System.Guid */
  WIA_EVENT_SCAN_IMAGE3: Uint8Array | Deno.PointerValue | null;
  /** System.Guid */
  WIA_EVENT_SCAN_IMAGE4: Uint8Array | Deno.PointerValue | null;
  /** System.Guid */
  WIA_EVENT_STORAGE_CREATED: Uint8Array | Deno.PointerValue | null;
  /** System.Guid */
  WIA_EVENT_STORAGE_DELETED: Uint8Array | Deno.PointerValue | null;
  /** System.Guid */
  WIA_EVENT_STI_PROXY: Uint8Array | Deno.PointerValue | null;
  /** System.Guid */
  WIA_EVENT_CANCEL_IO: Uint8Array | Deno.PointerValue | null;
  /** System.Guid */
  WIA_EVENT_POWER_SUSPEND: Uint8Array | Deno.PointerValue | null;
  /** System.Guid */
  WIA_EVENT_POWER_RESUME: Uint8Array | Deno.PointerValue | null;
  /** System.Guid */
  WIA_EVENT_HANDLER_NO_ACTION: Uint8Array | Deno.PointerValue | null;
  /** System.Guid */
  WIA_EVENT_HANDLER_PROMPT: Uint8Array | Deno.PointerValue | null;
  /** System.Guid */
  WIA_EVENT_DEVICE_NOT_READY: Uint8Array | Deno.PointerValue | null;
  /** System.Guid */
  WIA_EVENT_DEVICE_READY: Uint8Array | Deno.PointerValue | null;
  /** System.Guid */
  WIA_EVENT_FLATBED_LID_OPEN: Uint8Array | Deno.PointerValue | null;
  /** System.Guid */
  WIA_EVENT_FLATBED_LID_CLOSED: Uint8Array | Deno.PointerValue | null;
  /** System.Guid */
  WIA_EVENT_FEEDER_LOADED: Uint8Array | Deno.PointerValue | null;
  /** System.Guid */
  WIA_EVENT_FEEDER_EMPTIED: Uint8Array | Deno.PointerValue | null;
  /** System.Guid */
  WIA_EVENT_COVER_OPEN: Uint8Array | Deno.PointerValue | null;
  /** System.Guid */
  WIA_EVENT_COVER_CLOSED: Uint8Array | Deno.PointerValue | null;
  /** System.Guid */
  WIA_CMD_SYNCHRONIZE: Uint8Array | Deno.PointerValue | null;
  /** System.Guid */
  WIA_CMD_TAKE_PICTURE: Uint8Array | Deno.PointerValue | null;
  /** System.Guid */
  WIA_CMD_DELETE_ALL_ITEMS: Uint8Array | Deno.PointerValue | null;
  /** System.Guid */
  WIA_CMD_CHANGE_DOCUMENT: Uint8Array | Deno.PointerValue | null;
  /** System.Guid */
  WIA_CMD_UNLOAD_DOCUMENT: Uint8Array | Deno.PointerValue | null;
  /** System.Guid */
  WIA_CMD_DIAGNOSTIC: Uint8Array | Deno.PointerValue | null;
  /** System.Guid */
  WIA_CMD_FORMAT: Uint8Array | Deno.PointerValue | null;
  /** System.Guid */
  WIA_CMD_DELETE_DEVICE_TREE: Uint8Array | Deno.PointerValue | null;
  /** System.Guid */
  WIA_CMD_BUILD_DEVICE_TREE: Uint8Array | Deno.PointerValue | null;
  /** System.Guid */
  WIA_CMD_START_FEEDER: Uint8Array | Deno.PointerValue | null;
  /** System.Guid */
  WIA_CMD_STOP_FEEDER: Uint8Array | Deno.PointerValue | null;
  /** System.Guid */
  WIA_CMD_PAUSE_FEEDER: Uint8Array | Deno.PointerValue | null;
  /** System.Guid */
  GUID_DEVINTERFACE_IMAGE: Uint8Array | Deno.PointerValue | null;
}

export const sizeofApis = 840;

export function allocApis(data?: Partial<Apis>): Uint8Array {
  const buf = new Uint8Array(sizeofApis);
  const view = new DataView(buf.buffer);
  // 0x00: pointer
  if (data?.WIA_CATEGORY_FINISHED_FILE !== undefined) view.setBigUint64(0, data.WIA_CATEGORY_FINISHED_FILE === null ? 0n : BigInt(util.toPointer(data.WIA_CATEGORY_FINISHED_FILE)), true);
  // 0x08: pointer
  if (data?.WIA_CATEGORY_FLATBED !== undefined) view.setBigUint64(8, data.WIA_CATEGORY_FLATBED === null ? 0n : BigInt(util.toPointer(data.WIA_CATEGORY_FLATBED)), true);
  // 0x10: pointer
  if (data?.WIA_CATEGORY_FEEDER !== undefined) view.setBigUint64(16, data.WIA_CATEGORY_FEEDER === null ? 0n : BigInt(util.toPointer(data.WIA_CATEGORY_FEEDER)), true);
  // 0x18: pointer
  if (data?.WIA_CATEGORY_FILM !== undefined) view.setBigUint64(24, data.WIA_CATEGORY_FILM === null ? 0n : BigInt(util.toPointer(data.WIA_CATEGORY_FILM)), true);
  // 0x20: pointer
  if (data?.WIA_CATEGORY_ROOT !== undefined) view.setBigUint64(32, data.WIA_CATEGORY_ROOT === null ? 0n : BigInt(util.toPointer(data.WIA_CATEGORY_ROOT)), true);
  // 0x28: pointer
  if (data?.WIA_CATEGORY_FOLDER !== undefined) view.setBigUint64(40, data.WIA_CATEGORY_FOLDER === null ? 0n : BigInt(util.toPointer(data.WIA_CATEGORY_FOLDER)), true);
  // 0x30: pointer
  if (data?.WIA_CATEGORY_FEEDER_FRONT !== undefined) view.setBigUint64(48, data.WIA_CATEGORY_FEEDER_FRONT === null ? 0n : BigInt(util.toPointer(data.WIA_CATEGORY_FEEDER_FRONT)), true);
  // 0x38: pointer
  if (data?.WIA_CATEGORY_FEEDER_BACK !== undefined) view.setBigUint64(56, data.WIA_CATEGORY_FEEDER_BACK === null ? 0n : BigInt(util.toPointer(data.WIA_CATEGORY_FEEDER_BACK)), true);
  // 0x40: pointer
  if (data?.WIA_CATEGORY_AUTO !== undefined) view.setBigUint64(64, data.WIA_CATEGORY_AUTO === null ? 0n : BigInt(util.toPointer(data.WIA_CATEGORY_AUTO)), true);
  // 0x48: pointer
  if (data?.WIA_CATEGORY_IMPRINTER !== undefined) view.setBigUint64(72, data.WIA_CATEGORY_IMPRINTER === null ? 0n : BigInt(util.toPointer(data.WIA_CATEGORY_IMPRINTER)), true);
  // 0x50: pointer
  if (data?.WIA_CATEGORY_ENDORSER !== undefined) view.setBigUint64(80, data.WIA_CATEGORY_ENDORSER === null ? 0n : BigInt(util.toPointer(data.WIA_CATEGORY_ENDORSER)), true);
  // 0x58: pointer
  if (data?.WIA_CATEGORY_BARCODE_READER !== undefined) view.setBigUint64(88, data.WIA_CATEGORY_BARCODE_READER === null ? 0n : BigInt(util.toPointer(data.WIA_CATEGORY_BARCODE_READER)), true);
  // 0x60: pointer
  if (data?.WIA_CATEGORY_PATCH_CODE_READER !== undefined) view.setBigUint64(96, data.WIA_CATEGORY_PATCH_CODE_READER === null ? 0n : BigInt(util.toPointer(data.WIA_CATEGORY_PATCH_CODE_READER)), true);
  // 0x68: pointer
  if (data?.WIA_CATEGORY_MICR_READER !== undefined) view.setBigUint64(104, data.WIA_CATEGORY_MICR_READER === null ? 0n : BigInt(util.toPointer(data.WIA_CATEGORY_MICR_READER)), true);
  // 0x70: pointer
  if (data?.CLSID_WiaDefaultSegFilter !== undefined) view.setBigUint64(112, data.CLSID_WiaDefaultSegFilter === null ? 0n : BigInt(util.toPointer(data.CLSID_WiaDefaultSegFilter)), true);
  // 0x78: pointer
  if (data?.WiaImgFmt_UNDEFINED !== undefined) view.setBigUint64(120, data.WiaImgFmt_UNDEFINED === null ? 0n : BigInt(util.toPointer(data.WiaImgFmt_UNDEFINED)), true);
  // 0x80: pointer
  if (data?.WiaImgFmt_RAWRGB !== undefined) view.setBigUint64(128, data.WiaImgFmt_RAWRGB === null ? 0n : BigInt(util.toPointer(data.WiaImgFmt_RAWRGB)), true);
  // 0x88: pointer
  if (data?.WiaImgFmt_MEMORYBMP !== undefined) view.setBigUint64(136, data.WiaImgFmt_MEMORYBMP === null ? 0n : BigInt(util.toPointer(data.WiaImgFmt_MEMORYBMP)), true);
  // 0x90: pointer
  if (data?.WiaImgFmt_BMP !== undefined) view.setBigUint64(144, data.WiaImgFmt_BMP === null ? 0n : BigInt(util.toPointer(data.WiaImgFmt_BMP)), true);
  // 0x98: pointer
  if (data?.WiaImgFmt_EMF !== undefined) view.setBigUint64(152, data.WiaImgFmt_EMF === null ? 0n : BigInt(util.toPointer(data.WiaImgFmt_EMF)), true);
  // 0xa0: pointer
  if (data?.WiaImgFmt_WMF !== undefined) view.setBigUint64(160, data.WiaImgFmt_WMF === null ? 0n : BigInt(util.toPointer(data.WiaImgFmt_WMF)), true);
  // 0xa8: pointer
  if (data?.WiaImgFmt_JPEG !== undefined) view.setBigUint64(168, data.WiaImgFmt_JPEG === null ? 0n : BigInt(util.toPointer(data.WiaImgFmt_JPEG)), true);
  // 0xb0: pointer
  if (data?.WiaImgFmt_PNG !== undefined) view.setBigUint64(176, data.WiaImgFmt_PNG === null ? 0n : BigInt(util.toPointer(data.WiaImgFmt_PNG)), true);
  // 0xb8: pointer
  if (data?.WiaImgFmt_GIF !== undefined) view.setBigUint64(184, data.WiaImgFmt_GIF === null ? 0n : BigInt(util.toPointer(data.WiaImgFmt_GIF)), true);
  // 0xc0: pointer
  if (data?.WiaImgFmt_TIFF !== undefined) view.setBigUint64(192, data.WiaImgFmt_TIFF === null ? 0n : BigInt(util.toPointer(data.WiaImgFmt_TIFF)), true);
  // 0xc8: pointer
  if (data?.WiaImgFmt_EXIF !== undefined) view.setBigUint64(200, data.WiaImgFmt_EXIF === null ? 0n : BigInt(util.toPointer(data.WiaImgFmt_EXIF)), true);
  // 0xd0: pointer
  if (data?.WiaImgFmt_PHOTOCD !== undefined) view.setBigUint64(208, data.WiaImgFmt_PHOTOCD === null ? 0n : BigInt(util.toPointer(data.WiaImgFmt_PHOTOCD)), true);
  // 0xd8: pointer
  if (data?.WiaImgFmt_FLASHPIX !== undefined) view.setBigUint64(216, data.WiaImgFmt_FLASHPIX === null ? 0n : BigInt(util.toPointer(data.WiaImgFmt_FLASHPIX)), true);
  // 0xe0: pointer
  if (data?.WiaImgFmt_ICO !== undefined) view.setBigUint64(224, data.WiaImgFmt_ICO === null ? 0n : BigInt(util.toPointer(data.WiaImgFmt_ICO)), true);
  // 0xe8: pointer
  if (data?.WiaImgFmt_CIFF !== undefined) view.setBigUint64(232, data.WiaImgFmt_CIFF === null ? 0n : BigInt(util.toPointer(data.WiaImgFmt_CIFF)), true);
  // 0xf0: pointer
  if (data?.WiaImgFmt_PICT !== undefined) view.setBigUint64(240, data.WiaImgFmt_PICT === null ? 0n : BigInt(util.toPointer(data.WiaImgFmt_PICT)), true);
  // 0xf8: pointer
  if (data?.WiaImgFmt_JPEG2K !== undefined) view.setBigUint64(248, data.WiaImgFmt_JPEG2K === null ? 0n : BigInt(util.toPointer(data.WiaImgFmt_JPEG2K)), true);
  // 0x100: pointer
  if (data?.WiaImgFmt_JPEG2KX !== undefined) view.setBigUint64(256, data.WiaImgFmt_JPEG2KX === null ? 0n : BigInt(util.toPointer(data.WiaImgFmt_JPEG2KX)), true);
  // 0x108: pointer
  if (data?.WiaImgFmt_RAW !== undefined) view.setBigUint64(264, data.WiaImgFmt_RAW === null ? 0n : BigInt(util.toPointer(data.WiaImgFmt_RAW)), true);
  // 0x110: pointer
  if (data?.WiaImgFmt_JBIG !== undefined) view.setBigUint64(272, data.WiaImgFmt_JBIG === null ? 0n : BigInt(util.toPointer(data.WiaImgFmt_JBIG)), true);
  // 0x118: pointer
  if (data?.WiaImgFmt_JBIG2 !== undefined) view.setBigUint64(280, data.WiaImgFmt_JBIG2 === null ? 0n : BigInt(util.toPointer(data.WiaImgFmt_JBIG2)), true);
  // 0x120: pointer
  if (data?.WiaImgFmt_RTF !== undefined) view.setBigUint64(288, data.WiaImgFmt_RTF === null ? 0n : BigInt(util.toPointer(data.WiaImgFmt_RTF)), true);
  // 0x128: pointer
  if (data?.WiaImgFmt_XML !== undefined) view.setBigUint64(296, data.WiaImgFmt_XML === null ? 0n : BigInt(util.toPointer(data.WiaImgFmt_XML)), true);
  // 0x130: pointer
  if (data?.WiaImgFmt_HTML !== undefined) view.setBigUint64(304, data.WiaImgFmt_HTML === null ? 0n : BigInt(util.toPointer(data.WiaImgFmt_HTML)), true);
  // 0x138: pointer
  if (data?.WiaImgFmt_TXT !== undefined) view.setBigUint64(312, data.WiaImgFmt_TXT === null ? 0n : BigInt(util.toPointer(data.WiaImgFmt_TXT)), true);
  // 0x140: pointer
  if (data?.WiaImgFmt_PDFA !== undefined) view.setBigUint64(320, data.WiaImgFmt_PDFA === null ? 0n : BigInt(util.toPointer(data.WiaImgFmt_PDFA)), true);
  // 0x148: pointer
  if (data?.WiaImgFmt_XPS !== undefined) view.setBigUint64(328, data.WiaImgFmt_XPS === null ? 0n : BigInt(util.toPointer(data.WiaImgFmt_XPS)), true);
  // 0x150: pointer
  if (data?.WiaImgFmt_OXPS !== undefined) view.setBigUint64(336, data.WiaImgFmt_OXPS === null ? 0n : BigInt(util.toPointer(data.WiaImgFmt_OXPS)), true);
  // 0x158: pointer
  if (data?.WiaImgFmt_CSV !== undefined) view.setBigUint64(344, data.WiaImgFmt_CSV === null ? 0n : BigInt(util.toPointer(data.WiaImgFmt_CSV)), true);
  // 0x160: pointer
  if (data?.WiaImgFmt_MPG !== undefined) view.setBigUint64(352, data.WiaImgFmt_MPG === null ? 0n : BigInt(util.toPointer(data.WiaImgFmt_MPG)), true);
  // 0x168: pointer
  if (data?.WiaImgFmt_AVI !== undefined) view.setBigUint64(360, data.WiaImgFmt_AVI === null ? 0n : BigInt(util.toPointer(data.WiaImgFmt_AVI)), true);
  // 0x170: pointer
  if (data?.WiaAudFmt_WAV !== undefined) view.setBigUint64(368, data.WiaAudFmt_WAV === null ? 0n : BigInt(util.toPointer(data.WiaAudFmt_WAV)), true);
  // 0x178: pointer
  if (data?.WiaAudFmt_MP3 !== undefined) view.setBigUint64(376, data.WiaAudFmt_MP3 === null ? 0n : BigInt(util.toPointer(data.WiaAudFmt_MP3)), true);
  // 0x180: pointer
  if (data?.WiaAudFmt_AIFF !== undefined) view.setBigUint64(384, data.WiaAudFmt_AIFF === null ? 0n : BigInt(util.toPointer(data.WiaAudFmt_AIFF)), true);
  // 0x188: pointer
  if (data?.WiaAudFmt_WMA !== undefined) view.setBigUint64(392, data.WiaAudFmt_WMA === null ? 0n : BigInt(util.toPointer(data.WiaAudFmt_WMA)), true);
  // 0x190: pointer
  if (data?.WiaImgFmt_ASF !== undefined) view.setBigUint64(400, data.WiaImgFmt_ASF === null ? 0n : BigInt(util.toPointer(data.WiaImgFmt_ASF)), true);
  // 0x198: pointer
  if (data?.WiaImgFmt_SCRIPT !== undefined) view.setBigUint64(408, data.WiaImgFmt_SCRIPT === null ? 0n : BigInt(util.toPointer(data.WiaImgFmt_SCRIPT)), true);
  // 0x1a0: pointer
  if (data?.WiaImgFmt_EXEC !== undefined) view.setBigUint64(416, data.WiaImgFmt_EXEC === null ? 0n : BigInt(util.toPointer(data.WiaImgFmt_EXEC)), true);
  // 0x1a8: pointer
  if (data?.WiaImgFmt_UNICODE16 !== undefined) view.setBigUint64(424, data.WiaImgFmt_UNICODE16 === null ? 0n : BigInt(util.toPointer(data.WiaImgFmt_UNICODE16)), true);
  // 0x1b0: pointer
  if (data?.WiaImgFmt_DPOF !== undefined) view.setBigUint64(432, data.WiaImgFmt_DPOF === null ? 0n : BigInt(util.toPointer(data.WiaImgFmt_DPOF)), true);
  // 0x1b8: pointer
  if (data?.WiaImgFmt_XMLBAR !== undefined) view.setBigUint64(440, data.WiaImgFmt_XMLBAR === null ? 0n : BigInt(util.toPointer(data.WiaImgFmt_XMLBAR)), true);
  // 0x1c0: pointer
  if (data?.WiaImgFmt_RAWBAR !== undefined) view.setBigUint64(448, data.WiaImgFmt_RAWBAR === null ? 0n : BigInt(util.toPointer(data.WiaImgFmt_RAWBAR)), true);
  // 0x1c8: pointer
  if (data?.WiaImgFmt_XMLPAT !== undefined) view.setBigUint64(456, data.WiaImgFmt_XMLPAT === null ? 0n : BigInt(util.toPointer(data.WiaImgFmt_XMLPAT)), true);
  // 0x1d0: pointer
  if (data?.WiaImgFmt_RAWPAT !== undefined) view.setBigUint64(464, data.WiaImgFmt_RAWPAT === null ? 0n : BigInt(util.toPointer(data.WiaImgFmt_RAWPAT)), true);
  // 0x1d8: pointer
  if (data?.WiaImgFmt_XMLMIC !== undefined) view.setBigUint64(472, data.WiaImgFmt_XMLMIC === null ? 0n : BigInt(util.toPointer(data.WiaImgFmt_XMLMIC)), true);
  // 0x1e0: pointer
  if (data?.WiaImgFmt_RAWMIC !== undefined) view.setBigUint64(480, data.WiaImgFmt_RAWMIC === null ? 0n : BigInt(util.toPointer(data.WiaImgFmt_RAWMIC)), true);
  // 0x1e8: pointer
  if (data?.WIA_EVENT_DEVICE_DISCONNECTED !== undefined) view.setBigUint64(488, data.WIA_EVENT_DEVICE_DISCONNECTED === null ? 0n : BigInt(util.toPointer(data.WIA_EVENT_DEVICE_DISCONNECTED)), true);
  // 0x1f0: pointer
  if (data?.WIA_EVENT_DEVICE_CONNECTED !== undefined) view.setBigUint64(496, data.WIA_EVENT_DEVICE_CONNECTED === null ? 0n : BigInt(util.toPointer(data.WIA_EVENT_DEVICE_CONNECTED)), true);
  // 0x1f8: pointer
  if (data?.WIA_EVENT_ITEM_DELETED !== undefined) view.setBigUint64(504, data.WIA_EVENT_ITEM_DELETED === null ? 0n : BigInt(util.toPointer(data.WIA_EVENT_ITEM_DELETED)), true);
  // 0x200: pointer
  if (data?.WIA_EVENT_ITEM_CREATED !== undefined) view.setBigUint64(512, data.WIA_EVENT_ITEM_CREATED === null ? 0n : BigInt(util.toPointer(data.WIA_EVENT_ITEM_CREATED)), true);
  // 0x208: pointer
  if (data?.WIA_EVENT_TREE_UPDATED !== undefined) view.setBigUint64(520, data.WIA_EVENT_TREE_UPDATED === null ? 0n : BigInt(util.toPointer(data.WIA_EVENT_TREE_UPDATED)), true);
  // 0x210: pointer
  if (data?.WIA_EVENT_VOLUME_INSERT !== undefined) view.setBigUint64(528, data.WIA_EVENT_VOLUME_INSERT === null ? 0n : BigInt(util.toPointer(data.WIA_EVENT_VOLUME_INSERT)), true);
  // 0x218: pointer
  if (data?.WIA_EVENT_SCAN_IMAGE !== undefined) view.setBigUint64(536, data.WIA_EVENT_SCAN_IMAGE === null ? 0n : BigInt(util.toPointer(data.WIA_EVENT_SCAN_IMAGE)), true);
  // 0x220: pointer
  if (data?.WIA_EVENT_SCAN_PRINT_IMAGE !== undefined) view.setBigUint64(544, data.WIA_EVENT_SCAN_PRINT_IMAGE === null ? 0n : BigInt(util.toPointer(data.WIA_EVENT_SCAN_PRINT_IMAGE)), true);
  // 0x228: pointer
  if (data?.WIA_EVENT_SCAN_FAX_IMAGE !== undefined) view.setBigUint64(552, data.WIA_EVENT_SCAN_FAX_IMAGE === null ? 0n : BigInt(util.toPointer(data.WIA_EVENT_SCAN_FAX_IMAGE)), true);
  // 0x230: pointer
  if (data?.WIA_EVENT_SCAN_OCR_IMAGE !== undefined) view.setBigUint64(560, data.WIA_EVENT_SCAN_OCR_IMAGE === null ? 0n : BigInt(util.toPointer(data.WIA_EVENT_SCAN_OCR_IMAGE)), true);
  // 0x238: pointer
  if (data?.WIA_EVENT_SCAN_EMAIL_IMAGE !== undefined) view.setBigUint64(568, data.WIA_EVENT_SCAN_EMAIL_IMAGE === null ? 0n : BigInt(util.toPointer(data.WIA_EVENT_SCAN_EMAIL_IMAGE)), true);
  // 0x240: pointer
  if (data?.WIA_EVENT_SCAN_FILM_IMAGE !== undefined) view.setBigUint64(576, data.WIA_EVENT_SCAN_FILM_IMAGE === null ? 0n : BigInt(util.toPointer(data.WIA_EVENT_SCAN_FILM_IMAGE)), true);
  // 0x248: pointer
  if (data?.WIA_EVENT_SCAN_IMAGE2 !== undefined) view.setBigUint64(584, data.WIA_EVENT_SCAN_IMAGE2 === null ? 0n : BigInt(util.toPointer(data.WIA_EVENT_SCAN_IMAGE2)), true);
  // 0x250: pointer
  if (data?.WIA_EVENT_SCAN_IMAGE3 !== undefined) view.setBigUint64(592, data.WIA_EVENT_SCAN_IMAGE3 === null ? 0n : BigInt(util.toPointer(data.WIA_EVENT_SCAN_IMAGE3)), true);
  // 0x258: pointer
  if (data?.WIA_EVENT_SCAN_IMAGE4 !== undefined) view.setBigUint64(600, data.WIA_EVENT_SCAN_IMAGE4 === null ? 0n : BigInt(util.toPointer(data.WIA_EVENT_SCAN_IMAGE4)), true);
  // 0x260: pointer
  if (data?.WIA_EVENT_STORAGE_CREATED !== undefined) view.setBigUint64(608, data.WIA_EVENT_STORAGE_CREATED === null ? 0n : BigInt(util.toPointer(data.WIA_EVENT_STORAGE_CREATED)), true);
  // 0x268: pointer
  if (data?.WIA_EVENT_STORAGE_DELETED !== undefined) view.setBigUint64(616, data.WIA_EVENT_STORAGE_DELETED === null ? 0n : BigInt(util.toPointer(data.WIA_EVENT_STORAGE_DELETED)), true);
  // 0x270: pointer
  if (data?.WIA_EVENT_STI_PROXY !== undefined) view.setBigUint64(624, data.WIA_EVENT_STI_PROXY === null ? 0n : BigInt(util.toPointer(data.WIA_EVENT_STI_PROXY)), true);
  // 0x278: pointer
  if (data?.WIA_EVENT_CANCEL_IO !== undefined) view.setBigUint64(632, data.WIA_EVENT_CANCEL_IO === null ? 0n : BigInt(util.toPointer(data.WIA_EVENT_CANCEL_IO)), true);
  // 0x280: pointer
  if (data?.WIA_EVENT_POWER_SUSPEND !== undefined) view.setBigUint64(640, data.WIA_EVENT_POWER_SUSPEND === null ? 0n : BigInt(util.toPointer(data.WIA_EVENT_POWER_SUSPEND)), true);
  // 0x288: pointer
  if (data?.WIA_EVENT_POWER_RESUME !== undefined) view.setBigUint64(648, data.WIA_EVENT_POWER_RESUME === null ? 0n : BigInt(util.toPointer(data.WIA_EVENT_POWER_RESUME)), true);
  // 0x290: pointer
  if (data?.WIA_EVENT_HANDLER_NO_ACTION !== undefined) view.setBigUint64(656, data.WIA_EVENT_HANDLER_NO_ACTION === null ? 0n : BigInt(util.toPointer(data.WIA_EVENT_HANDLER_NO_ACTION)), true);
  // 0x298: pointer
  if (data?.WIA_EVENT_HANDLER_PROMPT !== undefined) view.setBigUint64(664, data.WIA_EVENT_HANDLER_PROMPT === null ? 0n : BigInt(util.toPointer(data.WIA_EVENT_HANDLER_PROMPT)), true);
  // 0x2a0: pointer
  if (data?.WIA_EVENT_DEVICE_NOT_READY !== undefined) view.setBigUint64(672, data.WIA_EVENT_DEVICE_NOT_READY === null ? 0n : BigInt(util.toPointer(data.WIA_EVENT_DEVICE_NOT_READY)), true);
  // 0x2a8: pointer
  if (data?.WIA_EVENT_DEVICE_READY !== undefined) view.setBigUint64(680, data.WIA_EVENT_DEVICE_READY === null ? 0n : BigInt(util.toPointer(data.WIA_EVENT_DEVICE_READY)), true);
  // 0x2b0: pointer
  if (data?.WIA_EVENT_FLATBED_LID_OPEN !== undefined) view.setBigUint64(688, data.WIA_EVENT_FLATBED_LID_OPEN === null ? 0n : BigInt(util.toPointer(data.WIA_EVENT_FLATBED_LID_OPEN)), true);
  // 0x2b8: pointer
  if (data?.WIA_EVENT_FLATBED_LID_CLOSED !== undefined) view.setBigUint64(696, data.WIA_EVENT_FLATBED_LID_CLOSED === null ? 0n : BigInt(util.toPointer(data.WIA_EVENT_FLATBED_LID_CLOSED)), true);
  // 0x2c0: pointer
  if (data?.WIA_EVENT_FEEDER_LOADED !== undefined) view.setBigUint64(704, data.WIA_EVENT_FEEDER_LOADED === null ? 0n : BigInt(util.toPointer(data.WIA_EVENT_FEEDER_LOADED)), true);
  // 0x2c8: pointer
  if (data?.WIA_EVENT_FEEDER_EMPTIED !== undefined) view.setBigUint64(712, data.WIA_EVENT_FEEDER_EMPTIED === null ? 0n : BigInt(util.toPointer(data.WIA_EVENT_FEEDER_EMPTIED)), true);
  // 0x2d0: pointer
  if (data?.WIA_EVENT_COVER_OPEN !== undefined) view.setBigUint64(720, data.WIA_EVENT_COVER_OPEN === null ? 0n : BigInt(util.toPointer(data.WIA_EVENT_COVER_OPEN)), true);
  // 0x2d8: pointer
  if (data?.WIA_EVENT_COVER_CLOSED !== undefined) view.setBigUint64(728, data.WIA_EVENT_COVER_CLOSED === null ? 0n : BigInt(util.toPointer(data.WIA_EVENT_COVER_CLOSED)), true);
  // 0x2e0: pointer
  if (data?.WIA_CMD_SYNCHRONIZE !== undefined) view.setBigUint64(736, data.WIA_CMD_SYNCHRONIZE === null ? 0n : BigInt(util.toPointer(data.WIA_CMD_SYNCHRONIZE)), true);
  // 0x2e8: pointer
  if (data?.WIA_CMD_TAKE_PICTURE !== undefined) view.setBigUint64(744, data.WIA_CMD_TAKE_PICTURE === null ? 0n : BigInt(util.toPointer(data.WIA_CMD_TAKE_PICTURE)), true);
  // 0x2f0: pointer
  if (data?.WIA_CMD_DELETE_ALL_ITEMS !== undefined) view.setBigUint64(752, data.WIA_CMD_DELETE_ALL_ITEMS === null ? 0n : BigInt(util.toPointer(data.WIA_CMD_DELETE_ALL_ITEMS)), true);
  // 0x2f8: pointer
  if (data?.WIA_CMD_CHANGE_DOCUMENT !== undefined) view.setBigUint64(760, data.WIA_CMD_CHANGE_DOCUMENT === null ? 0n : BigInt(util.toPointer(data.WIA_CMD_CHANGE_DOCUMENT)), true);
  // 0x300: pointer
  if (data?.WIA_CMD_UNLOAD_DOCUMENT !== undefined) view.setBigUint64(768, data.WIA_CMD_UNLOAD_DOCUMENT === null ? 0n : BigInt(util.toPointer(data.WIA_CMD_UNLOAD_DOCUMENT)), true);
  // 0x308: pointer
  if (data?.WIA_CMD_DIAGNOSTIC !== undefined) view.setBigUint64(776, data.WIA_CMD_DIAGNOSTIC === null ? 0n : BigInt(util.toPointer(data.WIA_CMD_DIAGNOSTIC)), true);
  // 0x310: pointer
  if (data?.WIA_CMD_FORMAT !== undefined) view.setBigUint64(784, data.WIA_CMD_FORMAT === null ? 0n : BigInt(util.toPointer(data.WIA_CMD_FORMAT)), true);
  // 0x318: pointer
  if (data?.WIA_CMD_DELETE_DEVICE_TREE !== undefined) view.setBigUint64(792, data.WIA_CMD_DELETE_DEVICE_TREE === null ? 0n : BigInt(util.toPointer(data.WIA_CMD_DELETE_DEVICE_TREE)), true);
  // 0x320: pointer
  if (data?.WIA_CMD_BUILD_DEVICE_TREE !== undefined) view.setBigUint64(800, data.WIA_CMD_BUILD_DEVICE_TREE === null ? 0n : BigInt(util.toPointer(data.WIA_CMD_BUILD_DEVICE_TREE)), true);
  // 0x328: pointer
  if (data?.WIA_CMD_START_FEEDER !== undefined) view.setBigUint64(808, data.WIA_CMD_START_FEEDER === null ? 0n : BigInt(util.toPointer(data.WIA_CMD_START_FEEDER)), true);
  // 0x330: pointer
  if (data?.WIA_CMD_STOP_FEEDER !== undefined) view.setBigUint64(816, data.WIA_CMD_STOP_FEEDER === null ? 0n : BigInt(util.toPointer(data.WIA_CMD_STOP_FEEDER)), true);
  // 0x338: pointer
  if (data?.WIA_CMD_PAUSE_FEEDER !== undefined) view.setBigUint64(824, data.WIA_CMD_PAUSE_FEEDER === null ? 0n : BigInt(util.toPointer(data.WIA_CMD_PAUSE_FEEDER)), true);
  // 0x340: pointer
  if (data?.GUID_DEVINTERFACE_IMAGE !== undefined) view.setBigUint64(832, data.GUID_DEVINTERFACE_IMAGE === null ? 0n : BigInt(util.toPointer(data.GUID_DEVINTERFACE_IMAGE)), true);
  return buf;
}

export type BSTR = Deno.PointerValue | Uint8Array | null;

/**
 * Windows.Win32.Devices.ImageAcquisition.WIA_DITHER_PATTERN_DATA (size: 40)
 */
export interface WIA_DITHER_PATTERN_DATA {
  /** i32 */
  lSize: number;
  /** Windows.Win32.Foundation.BSTR */
  bstrPatternName: Uint8Array | Deno.PointerValue | null;
  /** i32 */
  lPatternWidth: number;
  /** i32 */
  lPatternLength: number;
  /** i32 */
  cbPattern: number;
  /** ptr */
  pbPattern: Deno.PointerValue | Uint8Array | null;
}

export const sizeofWIA_DITHER_PATTERN_DATA = 40;

export function allocWIA_DITHER_PATTERN_DATA(data?: Partial<WIA_DITHER_PATTERN_DATA>): Uint8Array {
  const buf = new Uint8Array(sizeofWIA_DITHER_PATTERN_DATA);
  const view = new DataView(buf.buffer);
  // 0x00: i32
  if (data?.lSize !== undefined) view.setInt32(0, Number(data.lSize), true);
  // 0x04: pad4
  // 0x08: pointer
  if (data?.bstrPatternName !== undefined) view.setBigUint64(8, data.bstrPatternName === null ? 0n : BigInt(util.toPointer(data.bstrPatternName)), true);
  // 0x10: i32
  if (data?.lPatternWidth !== undefined) view.setInt32(16, Number(data.lPatternWidth), true);
  // 0x14: i32
  if (data?.lPatternLength !== undefined) view.setInt32(20, Number(data.lPatternLength), true);
  // 0x18: i32
  if (data?.cbPattern !== undefined) view.setInt32(24, Number(data.cbPattern), true);
  // 0x1c: pad4
  // 0x20: pointer
  if (data?.pbPattern !== undefined) view.setBigUint64(32, data.pbPattern === null ? 0n : BigInt(util.toPointer(data.pbPattern)), true);
  return buf;
}

export type PWSTR = Deno.PointerValue | Uint8Array | null;

/**
 * Windows.Win32.Devices.ImageAcquisition.WIA_PROPID_TO_NAME (size: 16)
 */
export interface WIA_PROPID_TO_NAME {
  /** u32 */
  propid: number;
  /** Windows.Win32.Foundation.PWSTR */
  pszName: string | null;
}

export const sizeofWIA_PROPID_TO_NAME = 16;

export function allocWIA_PROPID_TO_NAME(data?: Partial<WIA_PROPID_TO_NAME>): Uint8Array {
  const buf = new Uint8Array(sizeofWIA_PROPID_TO_NAME);
  const view = new DataView(buf.buffer);
  // 0x00: u32
  if (data?.propid !== undefined) view.setUint32(0, Number(data.propid), true);
  // 0x04: pad4
  // 0x08: buffer
  if (data?.pszName !== undefined) {
    (buf as any)._f8 = util.pwstrToFfi(data.pszName);
    view.setBigUint64(8, (buf as any)._f8 === null ? 0n : BigInt(Deno.UnsafePointer.of((buf as any)._f8)), true);
  }
  return buf;
}

/**
 * Windows.Win32.Devices.ImageAcquisition.WIA_FORMAT_INFO (size: 16)
 */
export interface WIA_FORMAT_INFO {
  /** System.Guid */
  guidFormatID: Uint8Array | Deno.PointerValue | null;
  /** i32 */
  lTymed: number;
}

export const sizeofWIA_FORMAT_INFO = 16;

export function allocWIA_FORMAT_INFO(data?: Partial<WIA_FORMAT_INFO>): Uint8Array {
  const buf = new Uint8Array(sizeofWIA_FORMAT_INFO);
  const view = new DataView(buf.buffer);
  // 0x00: pointer
  if (data?.guidFormatID !== undefined) view.setBigUint64(0, data.guidFormatID === null ? 0n : BigInt(util.toPointer(data.guidFormatID)), true);
  // 0x08: i32
  if (data?.lTymed !== undefined) view.setInt32(8, Number(data.lTymed), true);
  // 0x0c: pad4
  return buf;
}

/**
 * Windows.Win32.Devices.ImageAcquisition.WIA_RAW_HEADER (size: 88)
 */
export interface WIA_RAW_HEADER {
  /** u32 */
  Tag: number;
  /** u32 */
  Version: number;
  /** u32 */
  HeaderSize: number;
  /** u32 */
  XRes: number;
  /** u32 */
  YRes: number;
  /** u32 */
  XExtent: number;
  /** u32 */
  YExtent: number;
  /** u32 */
  BytesPerLine: number;
  /** u32 */
  BitsPerPixel: number;
  /** u32 */
  ChannelsPerPixel: number;
  /** u32 */
  DataType: number;
  /** array */
  BitsPerChannel: Deno.PointerValue | null;
  /** u32 */
  Compression: number;
  /** u32 */
  PhotometricInterp: number;
  /** u32 */
  LineOrder: number;
  /** u32 */
  RawDataOffset: number;
  /** u32 */
  RawDataSize: number;
  /** u32 */
  PaletteOffset: number;
  /** u32 */
  PaletteSize: number;
}

export const sizeofWIA_RAW_HEADER = 88;

export function allocWIA_RAW_HEADER(data?: Partial<WIA_RAW_HEADER>): Uint8Array {
  const buf = new Uint8Array(sizeofWIA_RAW_HEADER);
  const view = new DataView(buf.buffer);
  // 0x00: u32
  if (data?.Tag !== undefined) view.setUint32(0, Number(data.Tag), true);
  // 0x04: u32
  if (data?.Version !== undefined) view.setUint32(4, Number(data.Version), true);
  // 0x08: u32
  if (data?.HeaderSize !== undefined) view.setUint32(8, Number(data.HeaderSize), true);
  // 0x0c: u32
  if (data?.XRes !== undefined) view.setUint32(12, Number(data.XRes), true);
  // 0x10: u32
  if (data?.YRes !== undefined) view.setUint32(16, Number(data.YRes), true);
  // 0x14: u32
  if (data?.XExtent !== undefined) view.setUint32(20, Number(data.XExtent), true);
  // 0x18: u32
  if (data?.YExtent !== undefined) view.setUint32(24, Number(data.YExtent), true);
  // 0x1c: u32
  if (data?.BytesPerLine !== undefined) view.setUint32(28, Number(data.BytesPerLine), true);
  // 0x20: u32
  if (data?.BitsPerPixel !== undefined) view.setUint32(32, Number(data.BitsPerPixel), true);
  // 0x24: u32
  if (data?.ChannelsPerPixel !== undefined) view.setUint32(36, Number(data.ChannelsPerPixel), true);
  // 0x28: u32
  if (data?.DataType !== undefined) view.setUint32(40, Number(data.DataType), true);
  // 0x2c: pad4
  // 0x30: pointer
  if (data?.BitsPerChannel !== undefined) view.setBigUint64(48, data.BitsPerChannel === null ? 0n : BigInt(util.toPointer(data.BitsPerChannel)), true);
  // 0x38: u32
  if (data?.Compression !== undefined) view.setUint32(56, Number(data.Compression), true);
  // 0x3c: u32
  if (data?.PhotometricInterp !== undefined) view.setUint32(60, Number(data.PhotometricInterp), true);
  // 0x40: u32
  if (data?.LineOrder !== undefined) view.setUint32(64, Number(data.LineOrder), true);
  // 0x44: u32
  if (data?.RawDataOffset !== undefined) view.setUint32(68, Number(data.RawDataOffset), true);
  // 0x48: u32
  if (data?.RawDataSize !== undefined) view.setUint32(72, Number(data.RawDataSize), true);
  // 0x4c: u32
  if (data?.PaletteOffset !== undefined) view.setUint32(76, Number(data.PaletteOffset), true);
  // 0x50: u32
  if (data?.PaletteSize !== undefined) view.setUint32(80, Number(data.PaletteSize), true);
  // 0x54: pad4
  return buf;
}

/**
 * Windows.Win32.Devices.ImageAcquisition.WIA_BARCODE_INFO (size: 40)
 */
export interface WIA_BARCODE_INFO {
  /** u32 */
  Size: number;
  /** u32 */
  Type: number;
  /** u32 */
  Page: number;
  /** u32 */
  Confidence: number;
  /** u32 */
  XOffset: number;
  /** u32 */
  YOffset: number;
  /** u32 */
  Rotation: number;
  /** u32 */
  Length: number;
  /** array */
  Text: Deno.PointerValue | null;
}

export const sizeofWIA_BARCODE_INFO = 40;

export function allocWIA_BARCODE_INFO(data?: Partial<WIA_BARCODE_INFO>): Uint8Array {
  const buf = new Uint8Array(sizeofWIA_BARCODE_INFO);
  const view = new DataView(buf.buffer);
  // 0x00: u32
  if (data?.Size !== undefined) view.setUint32(0, Number(data.Size), true);
  // 0x04: u32
  if (data?.Type !== undefined) view.setUint32(4, Number(data.Type), true);
  // 0x08: u32
  if (data?.Page !== undefined) view.setUint32(8, Number(data.Page), true);
  // 0x0c: u32
  if (data?.Confidence !== undefined) view.setUint32(12, Number(data.Confidence), true);
  // 0x10: u32
  if (data?.XOffset !== undefined) view.setUint32(16, Number(data.XOffset), true);
  // 0x14: u32
  if (data?.YOffset !== undefined) view.setUint32(20, Number(data.YOffset), true);
  // 0x18: u32
  if (data?.Rotation !== undefined) view.setUint32(24, Number(data.Rotation), true);
  // 0x1c: u32
  if (data?.Length !== undefined) view.setUint32(28, Number(data.Length), true);
  // 0x20: pointer
  if (data?.Text !== undefined) view.setBigUint64(32, data.Text === null ? 0n : BigInt(util.toPointer(data.Text)), true);
  return buf;
}

/**
 * Windows.Win32.Devices.ImageAcquisition.WIA_BARCODES (size: 24)
 */
export interface WIA_BARCODES {
  /** u32 */
  Tag: number;
  /** u32 */
  Version: number;
  /** u32 */
  Size: number;
  /** u32 */
  Count: number;
  /** array */
  Barcodes: Deno.PointerValue | null;
}

export const sizeofWIA_BARCODES = 24;

export function allocWIA_BARCODES(data?: Partial<WIA_BARCODES>): Uint8Array {
  const buf = new Uint8Array(sizeofWIA_BARCODES);
  const view = new DataView(buf.buffer);
  // 0x00: u32
  if (data?.Tag !== undefined) view.setUint32(0, Number(data.Tag), true);
  // 0x04: u32
  if (data?.Version !== undefined) view.setUint32(4, Number(data.Version), true);
  // 0x08: u32
  if (data?.Size !== undefined) view.setUint32(8, Number(data.Size), true);
  // 0x0c: u32
  if (data?.Count !== undefined) view.setUint32(12, Number(data.Count), true);
  // 0x10: pointer
  if (data?.Barcodes !== undefined) view.setBigUint64(16, data.Barcodes === null ? 0n : BigInt(util.toPointer(data.Barcodes)), true);
  return buf;
}

/**
 * Windows.Win32.Devices.ImageAcquisition.WIA_PATCH_CODE_INFO (size: 8)
 */
export interface WIA_PATCH_CODE_INFO {
  /** u32 */
  Type: number;
}

export const sizeofWIA_PATCH_CODE_INFO = 8;

export function allocWIA_PATCH_CODE_INFO(data?: Partial<WIA_PATCH_CODE_INFO>): Uint8Array {
  const buf = new Uint8Array(sizeofWIA_PATCH_CODE_INFO);
  const view = new DataView(buf.buffer);
  // 0x00: u32
  if (data?.Type !== undefined) view.setUint32(0, Number(data.Type), true);
  // 0x04: pad4
  return buf;
}

/**
 * Windows.Win32.Devices.ImageAcquisition.WIA_PATCH_CODES (size: 24)
 */
export interface WIA_PATCH_CODES {
  /** u32 */
  Tag: number;
  /** u32 */
  Version: number;
  /** u32 */
  Size: number;
  /** u32 */
  Count: number;
  /** array */
  PatchCodes: Deno.PointerValue | null;
}

export const sizeofWIA_PATCH_CODES = 24;

export function allocWIA_PATCH_CODES(data?: Partial<WIA_PATCH_CODES>): Uint8Array {
  const buf = new Uint8Array(sizeofWIA_PATCH_CODES);
  const view = new DataView(buf.buffer);
  // 0x00: u32
  if (data?.Tag !== undefined) view.setUint32(0, Number(data.Tag), true);
  // 0x04: u32
  if (data?.Version !== undefined) view.setUint32(4, Number(data.Version), true);
  // 0x08: u32
  if (data?.Size !== undefined) view.setUint32(8, Number(data.Size), true);
  // 0x0c: u32
  if (data?.Count !== undefined) view.setUint32(12, Number(data.Count), true);
  // 0x10: pointer
  if (data?.PatchCodes !== undefined) view.setBigUint64(16, data.PatchCodes === null ? 0n : BigInt(util.toPointer(data.PatchCodes)), true);
  return buf;
}

/**
 * Windows.Win32.Devices.ImageAcquisition.WIA_MICR_INFO (size: 24)
 */
export interface WIA_MICR_INFO {
  /** u32 */
  Size: number;
  /** u32 */
  Page: number;
  /** u32 */
  Length: number;
  /** array */
  Text: Deno.PointerValue | null;
}

export const sizeofWIA_MICR_INFO = 24;

export function allocWIA_MICR_INFO(data?: Partial<WIA_MICR_INFO>): Uint8Array {
  const buf = new Uint8Array(sizeofWIA_MICR_INFO);
  const view = new DataView(buf.buffer);
  // 0x00: u32
  if (data?.Size !== undefined) view.setUint32(0, Number(data.Size), true);
  // 0x04: u32
  if (data?.Page !== undefined) view.setUint32(4, Number(data.Page), true);
  // 0x08: u32
  if (data?.Length !== undefined) view.setUint32(8, Number(data.Length), true);
  // 0x0c: pad4
  // 0x10: pointer
  if (data?.Text !== undefined) view.setBigUint64(16, data.Text === null ? 0n : BigInt(util.toPointer(data.Text)), true);
  return buf;
}

/**
 * Windows.Win32.Devices.ImageAcquisition.WIA_MICR (size: 40)
 */
export interface WIA_MICR {
  /** u32 */
  Tag: number;
  /** u32 */
  Version: number;
  /** u32 */
  Size: number;
  /** char */
  Placeholder: Uint8Array | Deno.PointerValue | null;
  /** u16 */
  Reserved: number;
  /** u32 */
  Count: number;
  /** array */
  Micr: Deno.PointerValue | null;
}

export const sizeofWIA_MICR = 40;

export function allocWIA_MICR(data?: Partial<WIA_MICR>): Uint8Array {
  const buf = new Uint8Array(sizeofWIA_MICR);
  const view = new DataView(buf.buffer);
  // 0x00: u32
  if (data?.Tag !== undefined) view.setUint32(0, Number(data.Tag), true);
  // 0x04: u32
  if (data?.Version !== undefined) view.setUint32(4, Number(data.Version), true);
  // 0x08: u32
  if (data?.Size !== undefined) view.setUint32(8, Number(data.Size), true);
  // 0x0c: pad4
  // 0x10: pointer
  if (data?.Placeholder !== undefined) view.setBigUint64(16, data.Placeholder === null ? 0n : BigInt(util.toPointer(data.Placeholder)), true);
  // 0x18: u16
  if (data?.Reserved !== undefined) view.setUint16(24, Number(data.Reserved), true);
  // 0x1a: u32
  if (data?.Count !== undefined) view.setUint32(26, Number(data.Count), true);
  // 0x1e: pad2
  // 0x20: pointer
  if (data?.Micr !== undefined) view.setBigUint64(32, data.Micr === null ? 0n : BigInt(util.toPointer(data.Micr)), true);
  return buf;
}

/**
 * Windows.Win32.Devices.ImageAcquisition.WIA_DATA_CALLBACK_HEADER (size: 24)
 */
export interface WIA_DATA_CALLBACK_HEADER {
  /** i32 */
  lSize: number;
  /** System.Guid */
  guidFormatID: Uint8Array | Deno.PointerValue | null;
  /** i32 */
  lBufferSize: number;
  /** i32 */
  lPageCount: number;
}

export const sizeofWIA_DATA_CALLBACK_HEADER = 24;

export function allocWIA_DATA_CALLBACK_HEADER(data?: Partial<WIA_DATA_CALLBACK_HEADER>): Uint8Array {
  const buf = new Uint8Array(sizeofWIA_DATA_CALLBACK_HEADER);
  const view = new DataView(buf.buffer);
  // 0x00: i32
  if (data?.lSize !== undefined) view.setInt32(0, Number(data.lSize), true);
  // 0x04: pad4
  // 0x08: pointer
  if (data?.guidFormatID !== undefined) view.setBigUint64(8, data.guidFormatID === null ? 0n : BigInt(util.toPointer(data.guidFormatID)), true);
  // 0x10: i32
  if (data?.lBufferSize !== undefined) view.setInt32(16, Number(data.lBufferSize), true);
  // 0x14: i32
  if (data?.lPageCount !== undefined) view.setInt32(20, Number(data.lPageCount), true);
  return buf;
}

export type BOOL = number;

/**
 * Windows.Win32.Devices.ImageAcquisition.WIA_DATA_TRANSFER_INFO (size: 32)
 */
export interface WIA_DATA_TRANSFER_INFO {
  /** u32 */
  ulSize: number;
  /** u32 */
  ulSection: number;
  /** u32 */
  ulBufferSize: number;
  /** Windows.Win32.Foundation.BOOL */
  bDoubleBuffer: boolean;
  /** u32 */
  ulReserved1: number;
  /** u32 */
  ulReserved2: number;
  /** u32 */
  ulReserved3: number;
}

export const sizeofWIA_DATA_TRANSFER_INFO = 32;

export function allocWIA_DATA_TRANSFER_INFO(data?: Partial<WIA_DATA_TRANSFER_INFO>): Uint8Array {
  const buf = new Uint8Array(sizeofWIA_DATA_TRANSFER_INFO);
  const view = new DataView(buf.buffer);
  // 0x00: u32
  if (data?.ulSize !== undefined) view.setUint32(0, Number(data.ulSize), true);
  // 0x04: u32
  if (data?.ulSection !== undefined) view.setUint32(4, Number(data.ulSection), true);
  // 0x08: u32
  if (data?.ulBufferSize !== undefined) view.setUint32(8, Number(data.ulBufferSize), true);
  // 0x0c: i32
  if (data?.bDoubleBuffer !== undefined) view.setInt32(12, Number(data.bDoubleBuffer), true);
  // 0x10: u32
  if (data?.ulReserved1 !== undefined) view.setUint32(16, Number(data.ulReserved1), true);
  // 0x14: u32
  if (data?.ulReserved2 !== undefined) view.setUint32(20, Number(data.ulReserved2), true);
  // 0x18: u32
  if (data?.ulReserved3 !== undefined) view.setUint32(24, Number(data.ulReserved3), true);
  // 0x1c: pad4
  return buf;
}

/**
 * Windows.Win32.Devices.ImageAcquisition.WIA_EXTENDED_TRANSFER_INFO (size: 24)
 */
export interface WIA_EXTENDED_TRANSFER_INFO {
  /** u32 */
  ulSize: number;
  /** u32 */
  ulMinBufferSize: number;
  /** u32 */
  ulOptimalBufferSize: number;
  /** u32 */
  ulMaxBufferSize: number;
  /** u32 */
  ulNumBuffers: number;
}

export const sizeofWIA_EXTENDED_TRANSFER_INFO = 24;

export function allocWIA_EXTENDED_TRANSFER_INFO(data?: Partial<WIA_EXTENDED_TRANSFER_INFO>): Uint8Array {
  const buf = new Uint8Array(sizeofWIA_EXTENDED_TRANSFER_INFO);
  const view = new DataView(buf.buffer);
  // 0x00: u32
  if (data?.ulSize !== undefined) view.setUint32(0, Number(data.ulSize), true);
  // 0x04: u32
  if (data?.ulMinBufferSize !== undefined) view.setUint32(4, Number(data.ulMinBufferSize), true);
  // 0x08: u32
  if (data?.ulOptimalBufferSize !== undefined) view.setUint32(8, Number(data.ulOptimalBufferSize), true);
  // 0x0c: u32
  if (data?.ulMaxBufferSize !== undefined) view.setUint32(12, Number(data.ulMaxBufferSize), true);
  // 0x10: u32
  if (data?.ulNumBuffers !== undefined) view.setUint32(16, Number(data.ulNumBuffers), true);
  // 0x14: pad4
  return buf;
}

/**
 * Windows.Win32.Devices.ImageAcquisition.WIA_DEV_CAP (size: 48)
 */
export interface WIA_DEV_CAP {
  /** System.Guid */
  guid: Uint8Array | Deno.PointerValue | null;
  /** u32 */
  ulFlags: number;
  /** Windows.Win32.Foundation.BSTR */
  bstrName: Uint8Array | Deno.PointerValue | null;
  /** Windows.Win32.Foundation.BSTR */
  bstrDescription: Uint8Array | Deno.PointerValue | null;
  /** Windows.Win32.Foundation.BSTR */
  bstrIcon: Uint8Array | Deno.PointerValue | null;
  /** Windows.Win32.Foundation.BSTR */
  bstrCommandline: Uint8Array | Deno.PointerValue | null;
}

export const sizeofWIA_DEV_CAP = 48;

export function allocWIA_DEV_CAP(data?: Partial<WIA_DEV_CAP>): Uint8Array {
  const buf = new Uint8Array(sizeofWIA_DEV_CAP);
  const view = new DataView(buf.buffer);
  // 0x00: pointer
  if (data?.guid !== undefined) view.setBigUint64(0, data.guid === null ? 0n : BigInt(util.toPointer(data.guid)), true);
  // 0x08: u32
  if (data?.ulFlags !== undefined) view.setUint32(8, Number(data.ulFlags), true);
  // 0x0c: pad4
  // 0x10: pointer
  if (data?.bstrName !== undefined) view.setBigUint64(16, data.bstrName === null ? 0n : BigInt(util.toPointer(data.bstrName)), true);
  // 0x18: pointer
  if (data?.bstrDescription !== undefined) view.setBigUint64(24, data.bstrDescription === null ? 0n : BigInt(util.toPointer(data.bstrDescription)), true);
  // 0x20: pointer
  if (data?.bstrIcon !== undefined) view.setBigUint64(32, data.bstrIcon === null ? 0n : BigInt(util.toPointer(data.bstrIcon)), true);
  // 0x28: pointer
  if (data?.bstrCommandline !== undefined) view.setBigUint64(40, data.bstrCommandline === null ? 0n : BigInt(util.toPointer(data.bstrCommandline)), true);
  return buf;
}

export type HRESULT = number;

/**
 * Windows.Win32.Devices.ImageAcquisition.WiaTransferParams (size: 24)
 */
export interface WiaTransferParams {
  /** i32 */
  lMessage: number;
  /** i32 */
  lPercentComplete: number;
  /** u64 */
  ulTransferredBytes: Deno.PointerValue;
  /** Windows.Win32.Foundation.HRESULT */
  hrErrorStatus: Uint8Array | Deno.PointerValue | null;
}

export const sizeofWiaTransferParams = 24;

export function allocWiaTransferParams(data?: Partial<WiaTransferParams>): Uint8Array {
  const buf = new Uint8Array(sizeofWiaTransferParams);
  const view = new DataView(buf.buffer);
  // 0x00: i32
  if (data?.lMessage !== undefined) view.setInt32(0, Number(data.lMessage), true);
  // 0x04: i32
  if (data?.lPercentComplete !== undefined) view.setInt32(4, Number(data.lPercentComplete), true);
  // 0x08: u64
  if (data?.ulTransferredBytes !== undefined) view.setBigUint64(8, BigInt(data.ulTransferredBytes), true);
  // 0x10: pointer
  if (data?.hrErrorStatus !== undefined) view.setBigUint64(16, data.hrErrorStatus === null ? 0n : BigInt(util.toPointer(data.hrErrorStatus)), true);
  return buf;
}

/**
 * Windows.Win32.Devices.ImageAcquisition.MINIDRV_TRANSFER_CONTEXT (size: 144)
 */
export interface MINIDRV_TRANSFER_CONTEXT {
  /** i32 */
  lSize: number;
  /** i32 */
  lWidthInPixels: number;
  /** i32 */
  lLines: number;
  /** i32 */
  lDepth: number;
  /** i32 */
  lXRes: number;
  /** i32 */
  lYRes: number;
  /** i32 */
  lCompression: number;
  /** System.Guid */
  guidFormatID: Uint8Array | Deno.PointerValue | null;
  /** i32 */
  tymed: number;
  /** isize */
  hFile: Deno.PointerValue;
  /** i32 */
  cbOffset: number;
  /** i32 */
  lBufferSize: number;
  /** i32 */
  lActiveBuffer: number;
  /** i32 */
  lNumBuffers: number;
  /** ptr */
  pBaseBuffer: Deno.PointerValue | Uint8Array | null;
  /** ptr */
  pTransferBuffer: Deno.PointerValue | Uint8Array | null;
  /** Windows.Win32.Foundation.BOOL */
  bTransferDataCB: boolean;
  /** Windows.Win32.Foundation.BOOL */
  bClassDrvAllocBuf: boolean;
  /** isize */
  lClientAddress: Deno.PointerValue;
  /** Windows.Win32.Devices.ImageAcquisition.IWiaMiniDrvCallBack */
  pIWiaMiniDrvCallBack: Uint8Array | Deno.PointerValue | null;
  /** i32 */
  lImageSize: number;
  /** i32 */
  lHeaderSize: number;
  /** i32 */
  lItemSize: number;
  /** i32 */
  cbWidthInBytes: number;
  /** i32 */
  lPage: number;
  /** i32 */
  lCurIfdOffset: number;
  /** i32 */
  lPrevIfdOffset: number;
}

export const sizeofMINIDRV_TRANSFER_CONTEXT = 144;

export function allocMINIDRV_TRANSFER_CONTEXT(data?: Partial<MINIDRV_TRANSFER_CONTEXT>): Uint8Array {
  const buf = new Uint8Array(sizeofMINIDRV_TRANSFER_CONTEXT);
  const view = new DataView(buf.buffer);
  // 0x00: i32
  if (data?.lSize !== undefined) view.setInt32(0, Number(data.lSize), true);
  // 0x04: i32
  if (data?.lWidthInPixels !== undefined) view.setInt32(4, Number(data.lWidthInPixels), true);
  // 0x08: i32
  if (data?.lLines !== undefined) view.setInt32(8, Number(data.lLines), true);
  // 0x0c: i32
  if (data?.lDepth !== undefined) view.setInt32(12, Number(data.lDepth), true);
  // 0x10: i32
  if (data?.lXRes !== undefined) view.setInt32(16, Number(data.lXRes), true);
  // 0x14: i32
  if (data?.lYRes !== undefined) view.setInt32(20, Number(data.lYRes), true);
  // 0x18: i32
  if (data?.lCompression !== undefined) view.setInt32(24, Number(data.lCompression), true);
  // 0x1c: pad4
  // 0x20: pointer
  if (data?.guidFormatID !== undefined) view.setBigUint64(32, data.guidFormatID === null ? 0n : BigInt(util.toPointer(data.guidFormatID)), true);
  // 0x28: i32
  if (data?.tymed !== undefined) view.setInt32(40, Number(data.tymed), true);
  // 0x2c: pad4
  // 0x30: isize
  if (data?.hFile !== undefined) view.setBigInt64(48, BigInt(data.hFile), true);
  // 0x38: i32
  if (data?.cbOffset !== undefined) view.setInt32(56, Number(data.cbOffset), true);
  // 0x3c: i32
  if (data?.lBufferSize !== undefined) view.setInt32(60, Number(data.lBufferSize), true);
  // 0x40: i32
  if (data?.lActiveBuffer !== undefined) view.setInt32(64, Number(data.lActiveBuffer), true);
  // 0x44: i32
  if (data?.lNumBuffers !== undefined) view.setInt32(68, Number(data.lNumBuffers), true);
  // 0x48: pointer
  if (data?.pBaseBuffer !== undefined) view.setBigUint64(72, data.pBaseBuffer === null ? 0n : BigInt(util.toPointer(data.pBaseBuffer)), true);
  // 0x50: pointer
  if (data?.pTransferBuffer !== undefined) view.setBigUint64(80, data.pTransferBuffer === null ? 0n : BigInt(util.toPointer(data.pTransferBuffer)), true);
  // 0x58: i32
  if (data?.bTransferDataCB !== undefined) view.setInt32(88, Number(data.bTransferDataCB), true);
  // 0x5c: i32
  if (data?.bClassDrvAllocBuf !== undefined) view.setInt32(92, Number(data.bClassDrvAllocBuf), true);
  // 0x60: isize
  if (data?.lClientAddress !== undefined) view.setBigInt64(96, BigInt(data.lClientAddress), true);
  // 0x68: pointer
  if (data?.pIWiaMiniDrvCallBack !== undefined) view.setBigUint64(104, data.pIWiaMiniDrvCallBack === null ? 0n : BigInt(util.toPointer(data.pIWiaMiniDrvCallBack)), true);
  // 0x70: i32
  if (data?.lImageSize !== undefined) view.setInt32(112, Number(data.lImageSize), true);
  // 0x74: i32
  if (data?.lHeaderSize !== undefined) view.setInt32(116, Number(data.lHeaderSize), true);
  // 0x78: i32
  if (data?.lItemSize !== undefined) view.setInt32(120, Number(data.lItemSize), true);
  // 0x7c: i32
  if (data?.cbWidthInBytes !== undefined) view.setInt32(124, Number(data.cbWidthInBytes), true);
  // 0x80: i32
  if (data?.lPage !== undefined) view.setInt32(128, Number(data.lPage), true);
  // 0x84: i32
  if (data?.lCurIfdOffset !== undefined) view.setInt32(132, Number(data.lCurIfdOffset), true);
  // 0x88: i32
  if (data?.lPrevIfdOffset !== undefined) view.setInt32(136, Number(data.lPrevIfdOffset), true);
  // 0x8c: pad4
  return buf;
}

/**
 * Windows.Win32.Devices.ImageAcquisition.WIA_DEV_CAP_DRV (size: 40)
 */
export interface WIA_DEV_CAP_DRV {
  /** ptr */
  guid: Deno.PointerValue | Uint8Array | null;
  /** u32 */
  ulFlags: number;
  /** Windows.Win32.Foundation.PWSTR */
  wszName: string | null;
  /** Windows.Win32.Foundation.PWSTR */
  wszDescription: string | null;
  /** Windows.Win32.Foundation.PWSTR */
  wszIcon: string | null;
}

export const sizeofWIA_DEV_CAP_DRV = 40;

export function allocWIA_DEV_CAP_DRV(data?: Partial<WIA_DEV_CAP_DRV>): Uint8Array {
  const buf = new Uint8Array(sizeofWIA_DEV_CAP_DRV);
  const view = new DataView(buf.buffer);
  // 0x00: pointer
  if (data?.guid !== undefined) view.setBigUint64(0, data.guid === null ? 0n : BigInt(util.toPointer(data.guid)), true);
  // 0x08: u32
  if (data?.ulFlags !== undefined) view.setUint32(8, Number(data.ulFlags), true);
  // 0x0c: pad4
  // 0x10: buffer
  if (data?.wszName !== undefined) {
    (buf as any)._f16 = util.pwstrToFfi(data.wszName);
    view.setBigUint64(16, (buf as any)._f16 === null ? 0n : BigInt(Deno.UnsafePointer.of((buf as any)._f16)), true);
  }
  // 0x18: buffer
  if (data?.wszDescription !== undefined) {
    (buf as any)._f24 = util.pwstrToFfi(data.wszDescription);
    view.setBigUint64(24, (buf as any)._f24 === null ? 0n : BigInt(Deno.UnsafePointer.of((buf as any)._f24)), true);
  }
  // 0x20: buffer
  if (data?.wszIcon !== undefined) {
    (buf as any)._f32 = util.pwstrToFfi(data.wszIcon);
    view.setBigUint64(32, (buf as any)._f32 === null ? 0n : BigInt(Deno.UnsafePointer.of((buf as any)._f32)), true);
  }
  return buf;
}

/**
 * _Range_e__Struct (size: 16)
 */
export interface _Range_e__Struct {
  /** u16 */
  UsageMin: number;
  /** u16 */
  UsageMax: number;
  /** u16 */
  StringMin: number;
  /** u16 */
  StringMax: number;
  /** u16 */
  DesignatorMin: number;
  /** u16 */
  DesignatorMax: number;
  /** u16 */
  DataIndexMin: number;
  /** u16 */
  DataIndexMax: number;
}

export const sizeof_Range_e__Struct = 16;

export function alloc_Range_e__Struct(data?: Partial<_Range_e__Struct>): Uint8Array {
  const buf = new Uint8Array(sizeof_Range_e__Struct);
  const view = new DataView(buf.buffer);
  // 0x00: u16
  if (data?.UsageMin !== undefined) view.setUint16(0, Number(data.UsageMin), true);
  // 0x02: u16
  if (data?.UsageMax !== undefined) view.setUint16(2, Number(data.UsageMax), true);
  // 0x04: u16
  if (data?.StringMin !== undefined) view.setUint16(4, Number(data.StringMin), true);
  // 0x06: u16
  if (data?.StringMax !== undefined) view.setUint16(6, Number(data.StringMax), true);
  // 0x08: u16
  if (data?.DesignatorMin !== undefined) view.setUint16(8, Number(data.DesignatorMin), true);
  // 0x0a: u16
  if (data?.DesignatorMax !== undefined) view.setUint16(10, Number(data.DesignatorMax), true);
  // 0x0c: u16
  if (data?.DataIndexMin !== undefined) view.setUint16(12, Number(data.DataIndexMin), true);
  // 0x0e: u16
  if (data?.DataIndexMax !== undefined) view.setUint16(14, Number(data.DataIndexMax), true);
  return buf;
}

/**
 * _RangeFloat_e__Struct (size: 32)
 */
export interface _RangeFloat_e__Struct {
  /** f64 */
  Min: number;
  /** f64 */
  Nom: number;
  /** f64 */
  Max: number;
  /** f64 */
  Inc: number;
}

export const sizeof_RangeFloat_e__Struct = 32;

export function alloc_RangeFloat_e__Struct(data?: Partial<_RangeFloat_e__Struct>): Uint8Array {
  const buf = new Uint8Array(sizeof_RangeFloat_e__Struct);
  const view = new DataView(buf.buffer);
  // 0x00: f64
  if (data?.Min !== undefined) view.setFloat64(0, Number(data.Min), true);
  // 0x08: f64
  if (data?.Nom !== undefined) view.setFloat64(8, Number(data.Nom), true);
  // 0x10: f64
  if (data?.Max !== undefined) view.setFloat64(16, Number(data.Max), true);
  // 0x18: f64
  if (data?.Inc !== undefined) view.setFloat64(24, Number(data.Inc), true);
  return buf;
}

/**
 * _List_e__Struct (size: 16)
 */
export interface _List_e__Struct {
  /** i32 */
  cNumList: number;
  /** i32 */
  Nom: number;
  /** ptr */
  pList: Deno.PointerValue | Uint8Array | null;
}

export const sizeof_List_e__Struct = 16;

export function alloc_List_e__Struct(data?: Partial<_List_e__Struct>): Uint8Array {
  const buf = new Uint8Array(sizeof_List_e__Struct);
  const view = new DataView(buf.buffer);
  // 0x00: i32
  if (data?.cNumList !== undefined) view.setInt32(0, Number(data.cNumList), true);
  // 0x04: i32
  if (data?.Nom !== undefined) view.setInt32(4, Number(data.Nom), true);
  // 0x08: pointer
  if (data?.pList !== undefined) view.setBigUint64(8, data.pList === null ? 0n : BigInt(util.toPointer(data.pList)), true);
  return buf;
}

/**
 * _ListFloat_e__Struct (size: 24)
 */
export interface _ListFloat_e__Struct {
  /** i32 */
  cNumList: number;
  /** f64 */
  Nom: number;
  /** ptr */
  pList: Deno.PointerValue | Uint8Array | null;
}

export const sizeof_ListFloat_e__Struct = 24;

export function alloc_ListFloat_e__Struct(data?: Partial<_ListFloat_e__Struct>): Uint8Array {
  const buf = new Uint8Array(sizeof_ListFloat_e__Struct);
  const view = new DataView(buf.buffer);
  // 0x00: i32
  if (data?.cNumList !== undefined) view.setInt32(0, Number(data.cNumList), true);
  // 0x04: pad4
  // 0x08: f64
  if (data?.Nom !== undefined) view.setFloat64(8, Number(data.Nom), true);
  // 0x10: pointer
  if (data?.pList !== undefined) view.setBigUint64(16, data.pList === null ? 0n : BigInt(util.toPointer(data.pList)), true);
  return buf;
}

/**
 * _ListGuid_e__Struct (size: 24)
 */
export interface _ListGuid_e__Struct {
  /** i32 */
  cNumList: number;
  /** System.Guid */
  Nom: Uint8Array | Deno.PointerValue | null;
  /** ptr */
  pList: Deno.PointerValue | Uint8Array | null;
}

export const sizeof_ListGuid_e__Struct = 24;

export function alloc_ListGuid_e__Struct(data?: Partial<_ListGuid_e__Struct>): Uint8Array {
  const buf = new Uint8Array(sizeof_ListGuid_e__Struct);
  const view = new DataView(buf.buffer);
  // 0x00: i32
  if (data?.cNumList !== undefined) view.setInt32(0, Number(data.cNumList), true);
  // 0x04: pad4
  // 0x08: pointer
  if (data?.Nom !== undefined) view.setBigUint64(8, data.Nom === null ? 0n : BigInt(util.toPointer(data.Nom)), true);
  // 0x10: pointer
  if (data?.pList !== undefined) view.setBigUint64(16, data.pList === null ? 0n : BigInt(util.toPointer(data.pList)), true);
  return buf;
}

/**
 * _ListBStr_e__Struct (size: 24)
 */
export interface _ListBStr_e__Struct {
  /** i32 */
  cNumList: number;
  /** Windows.Win32.Foundation.BSTR */
  Nom: Uint8Array | Deno.PointerValue | null;
  /** ptr */
  pList: Deno.PointerValue | Uint8Array | null;
}

export const sizeof_ListBStr_e__Struct = 24;

export function alloc_ListBStr_e__Struct(data?: Partial<_ListBStr_e__Struct>): Uint8Array {
  const buf = new Uint8Array(sizeof_ListBStr_e__Struct);
  const view = new DataView(buf.buffer);
  // 0x00: i32
  if (data?.cNumList !== undefined) view.setInt32(0, Number(data.cNumList), true);
  // 0x04: pad4
  // 0x08: pointer
  if (data?.Nom !== undefined) view.setBigUint64(8, data.Nom === null ? 0n : BigInt(util.toPointer(data.Nom)), true);
  // 0x10: pointer
  if (data?.pList !== undefined) view.setBigUint64(16, data.pList === null ? 0n : BigInt(util.toPointer(data.pList)), true);
  return buf;
}

/**
 * _Flag_e__Struct (size: 8)
 */
export interface _Flag_e__Struct {
  /** i32 */
  Nom: number;
  /** i32 */
  ValidBits: number;
}

export const sizeof_Flag_e__Struct = 8;

export function alloc_Flag_e__Struct(data?: Partial<_Flag_e__Struct>): Uint8Array {
  const buf = new Uint8Array(sizeof_Flag_e__Struct);
  const view = new DataView(buf.buffer);
  // 0x00: i32
  if (data?.Nom !== undefined) view.setInt32(0, Number(data.Nom), true);
  // 0x04: i32
  if (data?.ValidBits !== undefined) view.setInt32(4, Number(data.ValidBits), true);
  return buf;
}

/**
 * _None_e__Struct (size: 8)
 */
export interface _None_e__Struct {
  /** i32 */
  Dummy: number;
}

export const sizeof_None_e__Struct = 8;

export function alloc_None_e__Struct(data?: Partial<_None_e__Struct>): Uint8Array {
  const buf = new Uint8Array(sizeof_None_e__Struct);
  const view = new DataView(buf.buffer);
  // 0x00: i32
  if (data?.Dummy !== undefined) view.setInt32(0, Number(data.Dummy), true);
  // 0x04: pad4
  return buf;
}

/**
 * _ValidVal_e__Union (size: 64)
 */
export interface _ValidVal_e__Union {
  /** _Range_e__Struct */
  Range: Uint8Array | Deno.PointerValue | null;
  /** _RangeFloat_e__Struct */
  RangeFloat: Uint8Array | Deno.PointerValue | null;
  /** _List_e__Struct */
  List: Uint8Array | Deno.PointerValue | null;
  /** _ListFloat_e__Struct */
  ListFloat: Uint8Array | Deno.PointerValue | null;
  /** _ListGuid_e__Struct */
  ListGuid: Uint8Array | Deno.PointerValue | null;
  /** _ListBStr_e__Struct */
  ListBStr: Uint8Array | Deno.PointerValue | null;
  /** _Flag_e__Struct */
  Flag: Uint8Array | Deno.PointerValue | null;
  /** _None_e__Struct */
  None: Uint8Array | Deno.PointerValue | null;
}

export const sizeof_ValidVal_e__Union = 64;

export function alloc_ValidVal_e__Union(data?: Partial<_ValidVal_e__Union>): Uint8Array {
  const buf = new Uint8Array(sizeof_ValidVal_e__Union);
  const view = new DataView(buf.buffer);
  // 0x00: pointer
  if (data?.Range !== undefined) view.setBigUint64(0, data.Range === null ? 0n : BigInt(util.toPointer(data.Range)), true);
  // 0x08: pointer
  if (data?.RangeFloat !== undefined) view.setBigUint64(8, data.RangeFloat === null ? 0n : BigInt(util.toPointer(data.RangeFloat)), true);
  // 0x10: pointer
  if (data?.List !== undefined) view.setBigUint64(16, data.List === null ? 0n : BigInt(util.toPointer(data.List)), true);
  // 0x18: pointer
  if (data?.ListFloat !== undefined) view.setBigUint64(24, data.ListFloat === null ? 0n : BigInt(util.toPointer(data.ListFloat)), true);
  // 0x20: pointer
  if (data?.ListGuid !== undefined) view.setBigUint64(32, data.ListGuid === null ? 0n : BigInt(util.toPointer(data.ListGuid)), true);
  // 0x28: pointer
  if (data?.ListBStr !== undefined) view.setBigUint64(40, data.ListBStr === null ? 0n : BigInt(util.toPointer(data.ListBStr)), true);
  // 0x30: pointer
  if (data?.Flag !== undefined) view.setBigUint64(48, data.Flag === null ? 0n : BigInt(util.toPointer(data.Flag)), true);
  // 0x38: pointer
  if (data?.None !== undefined) view.setBigUint64(56, data.None === null ? 0n : BigInt(util.toPointer(data.None)), true);
  return buf;
}

/**
 * Windows.Win32.Devices.ImageAcquisition.WIA_PROPERTY_INFO (size: 16)
 */
export interface WIA_PROPERTY_INFO {
  /** u32 */
  lAccessFlags: number;
  /** u16 */
  vt: number;
  /** _ValidVal_e__Union */
  ValidVal: Uint8Array | Deno.PointerValue | null;
}

export const sizeofWIA_PROPERTY_INFO = 16;

export function allocWIA_PROPERTY_INFO(data?: Partial<WIA_PROPERTY_INFO>): Uint8Array {
  const buf = new Uint8Array(sizeofWIA_PROPERTY_INFO);
  const view = new DataView(buf.buffer);
  // 0x00: u32
  if (data?.lAccessFlags !== undefined) view.setUint32(0, Number(data.lAccessFlags), true);
  // 0x04: u16
  if (data?.vt !== undefined) view.setUint16(4, Number(data.vt), true);
  // 0x06: pad2
  // 0x08: pointer
  if (data?.ValidVal !== undefined) view.setBigUint64(8, data.ValidVal === null ? 0n : BigInt(util.toPointer(data.ValidVal)), true);
  return buf;
}

/**
 * Windows.Win32.Devices.ImageAcquisition.WIA_PROPERTY_CONTEXT (size: 24)
 */
export interface WIA_PROPERTY_CONTEXT {
  /** u32 */
  cProps: number;
  /** ptr */
  pProps: Deno.PointerValue | Uint8Array | null;
  /** ptr */
  pChanged: Deno.PointerValue | Uint8Array | null;
}

export const sizeofWIA_PROPERTY_CONTEXT = 24;

export function allocWIA_PROPERTY_CONTEXT(data?: Partial<WIA_PROPERTY_CONTEXT>): Uint8Array {
  const buf = new Uint8Array(sizeofWIA_PROPERTY_CONTEXT);
  const view = new DataView(buf.buffer);
  // 0x00: u32
  if (data?.cProps !== undefined) view.setUint32(0, Number(data.cProps), true);
  // 0x04: pad4
  // 0x08: pointer
  if (data?.pProps !== undefined) view.setBigUint64(8, data.pProps === null ? 0n : BigInt(util.toPointer(data.pProps)), true);
  // 0x10: pointer
  if (data?.pChanged !== undefined) view.setBigUint64(16, data.pChanged === null ? 0n : BigInt(util.toPointer(data.pChanged)), true);
  return buf;
}

/**
 * _Old_e__Union (size: 24)
 */
export interface _Old_e__Union {
  /** i32 */
  lVal: number;
  /** f32 */
  fltVal: number;
  /** Windows.Win32.Foundation.BSTR */
  bstrVal: Uint8Array | Deno.PointerValue | null;
  /** System.Guid */
  guidVal: Uint8Array | Deno.PointerValue | null;
}

export const sizeof_Old_e__Union = 24;

export function alloc_Old_e__Union(data?: Partial<_Old_e__Union>): Uint8Array {
  const buf = new Uint8Array(sizeof_Old_e__Union);
  const view = new DataView(buf.buffer);
  // 0x00: i32
  if (data?.lVal !== undefined) view.setInt32(0, Number(data.lVal), true);
  // 0x04: f32
  if (data?.fltVal !== undefined) view.setFloat32(4, Number(data.fltVal), true);
  // 0x08: pointer
  if (data?.bstrVal !== undefined) view.setBigUint64(8, data.bstrVal === null ? 0n : BigInt(util.toPointer(data.bstrVal)), true);
  // 0x10: pointer
  if (data?.guidVal !== undefined) view.setBigUint64(16, data.guidVal === null ? 0n : BigInt(util.toPointer(data.guidVal)), true);
  return buf;
}

/**
 * _Current_e__Union (size: 24)
 */
export interface _Current_e__Union {
  /** i32 */
  lVal: number;
  /** f32 */
  fltVal: number;
  /** Windows.Win32.Foundation.BSTR */
  bstrVal: Uint8Array | Deno.PointerValue | null;
  /** System.Guid */
  guidVal: Uint8Array | Deno.PointerValue | null;
}

export const sizeof_Current_e__Union = 24;

export function alloc_Current_e__Union(data?: Partial<_Current_e__Union>): Uint8Array {
  const buf = new Uint8Array(sizeof_Current_e__Union);
  const view = new DataView(buf.buffer);
  // 0x00: i32
  if (data?.lVal !== undefined) view.setInt32(0, Number(data.lVal), true);
  // 0x04: f32
  if (data?.fltVal !== undefined) view.setFloat32(4, Number(data.fltVal), true);
  // 0x08: pointer
  if (data?.bstrVal !== undefined) view.setBigUint64(8, data.bstrVal === null ? 0n : BigInt(util.toPointer(data.bstrVal)), true);
  // 0x10: pointer
  if (data?.guidVal !== undefined) view.setBigUint64(16, data.guidVal === null ? 0n : BigInt(util.toPointer(data.guidVal)), true);
  return buf;
}

/**
 * Windows.Win32.Devices.ImageAcquisition.WIAS_CHANGED_VALUE_INFO (size: 24)
 */
export interface WIAS_CHANGED_VALUE_INFO {
  /** Windows.Win32.Foundation.BOOL */
  bChanged: boolean;
  /** i32 */
  vt: number;
  /** _Old_e__Union */
  Old: Uint8Array | Deno.PointerValue | null;
  /** _Current_e__Union */
  Current: Uint8Array | Deno.PointerValue | null;
}

export const sizeofWIAS_CHANGED_VALUE_INFO = 24;

export function allocWIAS_CHANGED_VALUE_INFO(data?: Partial<WIAS_CHANGED_VALUE_INFO>): Uint8Array {
  const buf = new Uint8Array(sizeofWIAS_CHANGED_VALUE_INFO);
  const view = new DataView(buf.buffer);
  // 0x00: i32
  if (data?.bChanged !== undefined) view.setInt32(0, Number(data.bChanged), true);
  // 0x04: i32
  if (data?.vt !== undefined) view.setInt32(4, Number(data.vt), true);
  // 0x08: pointer
  if (data?.Old !== undefined) view.setBigUint64(8, data.Old === null ? 0n : BigInt(util.toPointer(data.Old)), true);
  // 0x10: pointer
  if (data?.Current !== undefined) view.setBigUint64(16, data.Current === null ? 0n : BigInt(util.toPointer(data.Current)), true);
  return buf;
}

/**
 * Windows.Win32.Devices.ImageAcquisition.WIAS_DOWN_SAMPLE_INFO (size: 56)
 */
export interface WIAS_DOWN_SAMPLE_INFO {
  /** u32 */
  ulOriginalWidth: number;
  /** u32 */
  ulOriginalHeight: number;
  /** u32 */
  ulBitsPerPixel: number;
  /** u32 */
  ulXRes: number;
  /** u32 */
  ulYRes: number;
  /** u32 */
  ulDownSampledWidth: number;
  /** u32 */
  ulDownSampledHeight: number;
  /** u32 */
  ulActualSize: number;
  /** u32 */
  ulDestBufSize: number;
  /** u32 */
  ulSrcBufSize: number;
  /** ptr */
  pSrcBuffer: Deno.PointerValue | Uint8Array | null;
  /** ptr */
  pDestBuffer: Deno.PointerValue | Uint8Array | null;
}

export const sizeofWIAS_DOWN_SAMPLE_INFO = 56;

export function allocWIAS_DOWN_SAMPLE_INFO(data?: Partial<WIAS_DOWN_SAMPLE_INFO>): Uint8Array {
  const buf = new Uint8Array(sizeofWIAS_DOWN_SAMPLE_INFO);
  const view = new DataView(buf.buffer);
  // 0x00: u32
  if (data?.ulOriginalWidth !== undefined) view.setUint32(0, Number(data.ulOriginalWidth), true);
  // 0x04: u32
  if (data?.ulOriginalHeight !== undefined) view.setUint32(4, Number(data.ulOriginalHeight), true);
  // 0x08: u32
  if (data?.ulBitsPerPixel !== undefined) view.setUint32(8, Number(data.ulBitsPerPixel), true);
  // 0x0c: u32
  if (data?.ulXRes !== undefined) view.setUint32(12, Number(data.ulXRes), true);
  // 0x10: u32
  if (data?.ulYRes !== undefined) view.setUint32(16, Number(data.ulYRes), true);
  // 0x14: u32
  if (data?.ulDownSampledWidth !== undefined) view.setUint32(20, Number(data.ulDownSampledWidth), true);
  // 0x18: u32
  if (data?.ulDownSampledHeight !== undefined) view.setUint32(24, Number(data.ulDownSampledHeight), true);
  // 0x1c: u32
  if (data?.ulActualSize !== undefined) view.setUint32(28, Number(data.ulActualSize), true);
  // 0x20: u32
  if (data?.ulDestBufSize !== undefined) view.setUint32(32, Number(data.ulDestBufSize), true);
  // 0x24: u32
  if (data?.ulSrcBufSize !== undefined) view.setUint32(36, Number(data.ulSrcBufSize), true);
  // 0x28: pointer
  if (data?.pSrcBuffer !== undefined) view.setBigUint64(40, data.pSrcBuffer === null ? 0n : BigInt(util.toPointer(data.pSrcBuffer)), true);
  // 0x30: pointer
  if (data?.pDestBuffer !== undefined) view.setBigUint64(48, data.pDestBuffer === null ? 0n : BigInt(util.toPointer(data.pDestBuffer)), true);
  return buf;
}

/**
 * Windows.Win32.Devices.ImageAcquisition.WIAS_ENDORSER_VALUE (size: 16)
 */
export interface WIAS_ENDORSER_VALUE {
  /** Windows.Win32.Foundation.PWSTR */
  wszTokenName: string | null;
  /** Windows.Win32.Foundation.PWSTR */
  wszValue: string | null;
}

export const sizeofWIAS_ENDORSER_VALUE = 16;

export function allocWIAS_ENDORSER_VALUE(data?: Partial<WIAS_ENDORSER_VALUE>): Uint8Array {
  const buf = new Uint8Array(sizeofWIAS_ENDORSER_VALUE);
  const view = new DataView(buf.buffer);
  // 0x00: buffer
  if (data?.wszTokenName !== undefined) {
    (buf as any)._f0 = util.pwstrToFfi(data.wszTokenName);
    view.setBigUint64(0, (buf as any)._f0 === null ? 0n : BigInt(Deno.UnsafePointer.of((buf as any)._f0)), true);
  }
  // 0x08: buffer
  if (data?.wszValue !== undefined) {
    (buf as any)._f8 = util.pwstrToFfi(data.wszValue);
    view.setBigUint64(8, (buf as any)._f8 === null ? 0n : BigInt(Deno.UnsafePointer.of((buf as any)._f8)), true);
  }
  return buf;
}

/**
 * Windows.Win32.Devices.ImageAcquisition.WIAS_ENDORSER_INFO (size: 16)
 */
export interface WIAS_ENDORSER_INFO {
  /** u32 */
  ulPageCount: number;
  /** u32 */
  ulNumEndorserValues: number;
  /** ptr */
  pEndorserValues: Deno.PointerValue | Uint8Array | null;
}

export const sizeofWIAS_ENDORSER_INFO = 16;

export function allocWIAS_ENDORSER_INFO(data?: Partial<WIAS_ENDORSER_INFO>): Uint8Array {
  const buf = new Uint8Array(sizeofWIAS_ENDORSER_INFO);
  const view = new DataView(buf.buffer);
  // 0x00: u32
  if (data?.ulPageCount !== undefined) view.setUint32(0, Number(data.ulPageCount), true);
  // 0x04: u32
  if (data?.ulNumEndorserValues !== undefined) view.setUint32(4, Number(data.ulNumEndorserValues), true);
  // 0x08: pointer
  if (data?.pEndorserValues !== undefined) view.setBigUint64(8, data.pEndorserValues === null ? 0n : BigInt(util.toPointer(data.pEndorserValues)), true);
  return buf;
}

export type HWND = Deno.PointerValue;

/**
 * Windows.Win32.Devices.ImageAcquisition.DEVICEDIALOGDATA2 (size: 72)
 */
export interface DEVICEDIALOGDATA2 {
  /** u32 */
  cbSize: number;
  /** Windows.Win32.Devices.ImageAcquisition.IWiaItem2 */
  pIWiaItemRoot: Uint8Array | Deno.PointerValue | null;
  /** u32 */
  dwFlags: number;
  /** Windows.Win32.Foundation.HWND */
  hwndParent: Deno.PointerValue | null;
  /** Windows.Win32.Foundation.BSTR */
  bstrFolderName: Uint8Array | Deno.PointerValue | null;
  /** Windows.Win32.Foundation.BSTR */
  bstrFilename: Uint8Array | Deno.PointerValue | null;
  /** i32 */
  lNumFiles: number;
  /** ptr */
  pbstrFilePaths: Deno.PointerValue | Uint8Array | null;
  /** Windows.Win32.Devices.ImageAcquisition.IWiaItem2 */
  pWiaItem: Uint8Array | Deno.PointerValue | null;
}

export const sizeofDEVICEDIALOGDATA2 = 72;

export function allocDEVICEDIALOGDATA2(data?: Partial<DEVICEDIALOGDATA2>): Uint8Array {
  const buf = new Uint8Array(sizeofDEVICEDIALOGDATA2);
  const view = new DataView(buf.buffer);
  // 0x00: u32
  if (data?.cbSize !== undefined) view.setUint32(0, Number(data.cbSize), true);
  // 0x04: pad4
  // 0x08: pointer
  if (data?.pIWiaItemRoot !== undefined) view.setBigUint64(8, data.pIWiaItemRoot === null ? 0n : BigInt(util.toPointer(data.pIWiaItemRoot)), true);
  // 0x10: u32
  if (data?.dwFlags !== undefined) view.setUint32(16, Number(data.dwFlags), true);
  // 0x14: pad4
  // 0x18: pointer
  if (data?.hwndParent !== undefined) view.setBigUint64(24, data.hwndParent === null ? 0n : BigInt(util.toPointer(data.hwndParent)), true);
  // 0x20: pointer
  if (data?.bstrFolderName !== undefined) view.setBigUint64(32, data.bstrFolderName === null ? 0n : BigInt(util.toPointer(data.bstrFolderName)), true);
  // 0x28: pointer
  if (data?.bstrFilename !== undefined) view.setBigUint64(40, data.bstrFilename === null ? 0n : BigInt(util.toPointer(data.bstrFilename)), true);
  // 0x30: i32
  if (data?.lNumFiles !== undefined) view.setInt32(48, Number(data.lNumFiles), true);
  // 0x34: pad4
  // 0x38: pointer
  if (data?.pbstrFilePaths !== undefined) view.setBigUint64(56, data.pbstrFilePaths === null ? 0n : BigInt(util.toPointer(data.pbstrFilePaths)), true);
  // 0x40: pointer
  if (data?.pWiaItem !== undefined) view.setBigUint64(64, data.pWiaItem === null ? 0n : BigInt(util.toPointer(data.pWiaItem)), true);
  return buf;
}

/**
 * Windows.Win32.Devices.ImageAcquisition.DEVICEDIALOGDATA (size: 48)
 */
export interface DEVICEDIALOGDATA {
  /** u32 */
  cbSize: number;
  /** Windows.Win32.Foundation.HWND */
  hwndParent: Deno.PointerValue | null;
  /** Windows.Win32.Devices.ImageAcquisition.IWiaItem */
  pIWiaItemRoot: Uint8Array | Deno.PointerValue | null;
  /** u32 */
  dwFlags: number;
  /** i32 */
  lIntent: number;
  /** i32 */
  lItemCount: number;
  /** ptr */
  ppWiaItems: Deno.PointerValue | Uint8Array | null;
}

export const sizeofDEVICEDIALOGDATA = 48;

export function allocDEVICEDIALOGDATA(data?: Partial<DEVICEDIALOGDATA>): Uint8Array {
  const buf = new Uint8Array(sizeofDEVICEDIALOGDATA);
  const view = new DataView(buf.buffer);
  // 0x00: u32
  if (data?.cbSize !== undefined) view.setUint32(0, Number(data.cbSize), true);
  // 0x04: pad4
  // 0x08: pointer
  if (data?.hwndParent !== undefined) view.setBigUint64(8, data.hwndParent === null ? 0n : BigInt(util.toPointer(data.hwndParent)), true);
  // 0x10: pointer
  if (data?.pIWiaItemRoot !== undefined) view.setBigUint64(16, data.pIWiaItemRoot === null ? 0n : BigInt(util.toPointer(data.pIWiaItemRoot)), true);
  // 0x18: u32
  if (data?.dwFlags !== undefined) view.setUint32(24, Number(data.dwFlags), true);
  // 0x1c: i32
  if (data?.lIntent !== undefined) view.setInt32(28, Number(data.lIntent), true);
  // 0x20: i32
  if (data?.lItemCount !== undefined) view.setInt32(32, Number(data.lItemCount), true);
  // 0x24: pad4
  // 0x28: pointer
  if (data?.ppWiaItems !== undefined) view.setBigUint64(40, data.ppWiaItems === null ? 0n : BigInt(util.toPointer(data.ppWiaItems)), true);
  return buf;
}

/**
 * Windows.Win32.Devices.ImageAcquisition.RANGEVALUE (size: 16)
 */
export interface RANGEVALUE {
  /** i32 */
  lMin: number;
  /** i32 */
  lMax: number;
  /** i32 */
  lStep: number;
}

export const sizeofRANGEVALUE = 16;

export function allocRANGEVALUE(data?: Partial<RANGEVALUE>): Uint8Array {
  const buf = new Uint8Array(sizeofRANGEVALUE);
  const view = new DataView(buf.buffer);
  // 0x00: i32
  if (data?.lMin !== undefined) view.setInt32(0, Number(data.lMin), true);
  // 0x04: i32
  if (data?.lMax !== undefined) view.setInt32(4, Number(data.lMax), true);
  // 0x08: i32
  if (data?.lStep !== undefined) view.setInt32(8, Number(data.lStep), true);
  // 0x0c: pad4
  return buf;
}

/**
 * Windows.Win32.Devices.ImageAcquisition.SCANWINDOW (size: 16)
 */
export interface SCANWINDOW {
  /** i32 */
  xPos: number;
  /** i32 */
  yPos: number;
  /** i32 */
  xExtent: number;
  /** i32 */
  yExtent: number;
}

export const sizeofSCANWINDOW = 16;

export function allocSCANWINDOW(data?: Partial<SCANWINDOW>): Uint8Array {
  const buf = new Uint8Array(sizeofSCANWINDOW);
  const view = new DataView(buf.buffer);
  // 0x00: i32
  if (data?.xPos !== undefined) view.setInt32(0, Number(data.xPos), true);
  // 0x04: i32
  if (data?.yPos !== undefined) view.setInt32(4, Number(data.yPos), true);
  // 0x08: i32
  if (data?.xExtent !== undefined) view.setInt32(8, Number(data.xExtent), true);
  // 0x0c: i32
  if (data?.yExtent !== undefined) view.setInt32(12, Number(data.yExtent), true);
  return buf;
}

/**
 * Windows.Win32.Devices.ImageAcquisition.SCANINFO (size: 176)
 */
export interface SCANINFO {
  /** i32 */
  ADF: number;
  /** i32 */
  TPA: number;
  /** i32 */
  Endorser: number;
  /** i32 */
  OpticalXResolution: number;
  /** i32 */
  OpticalYResolution: number;
  /** i32 */
  BedWidth: number;
  /** i32 */
  BedHeight: number;
  /** Windows.Win32.Devices.ImageAcquisition.RANGEVALUE */
  IntensityRange: Uint8Array | Deno.PointerValue | null;
  /** Windows.Win32.Devices.ImageAcquisition.RANGEVALUE */
  ContrastRange: Uint8Array | Deno.PointerValue | null;
  /** i32 */
  SupportedCompressionType: number;
  /** i32 */
  SupportedDataTypes: number;
  /** i32 */
  WidthPixels: number;
  /** i32 */
  WidthBytes: number;
  /** i32 */
  Lines: number;
  /** i32 */
  DataType: number;
  /** i32 */
  PixelBits: number;
  /** i32 */
  Intensity: number;
  /** i32 */
  Contrast: number;
  /** i32 */
  Xresolution: number;
  /** i32 */
  Yresolution: number;
  /** Windows.Win32.Devices.ImageAcquisition.SCANWINDOW */
  Window: Uint8Array | Deno.PointerValue | null;
  /** i32 */
  DitherPattern: number;
  /** i32 */
  Negative: number;
  /** i32 */
  Mirror: number;
  /** i32 */
  AutoBack: number;
  /** i32 */
  ColorDitherPattern: number;
  /** i32 */
  ToneMap: number;
  /** i32 */
  Compression: number;
  /** i32 */
  RawDataFormat: number;
  /** i32 */
  RawPixelOrder: number;
  /** i32 */
  bNeedDataAlignment: number;
  /** i32 */
  DelayBetweenRead: number;
  /** i32 */
  MaxBufferSize: number;
  /** array */
  DeviceIOHandles: Deno.PointerValue | null;
  /** array */
  lReserved: Deno.PointerValue | null;
  /** ptr */
  pMicroDriverContext: Deno.PointerValue | Uint8Array | null;
}

export const sizeofSCANINFO = 176;

export function allocSCANINFO(data?: Partial<SCANINFO>): Uint8Array {
  const buf = new Uint8Array(sizeofSCANINFO);
  const view = new DataView(buf.buffer);
  // 0x00: i32
  if (data?.ADF !== undefined) view.setInt32(0, Number(data.ADF), true);
  // 0x04: i32
  if (data?.TPA !== undefined) view.setInt32(4, Number(data.TPA), true);
  // 0x08: i32
  if (data?.Endorser !== undefined) view.setInt32(8, Number(data.Endorser), true);
  // 0x0c: i32
  if (data?.OpticalXResolution !== undefined) view.setInt32(12, Number(data.OpticalXResolution), true);
  // 0x10: i32
  if (data?.OpticalYResolution !== undefined) view.setInt32(16, Number(data.OpticalYResolution), true);
  // 0x14: i32
  if (data?.BedWidth !== undefined) view.setInt32(20, Number(data.BedWidth), true);
  // 0x18: i32
  if (data?.BedHeight !== undefined) view.setInt32(24, Number(data.BedHeight), true);
  // 0x1c: pad4
  // 0x20: pointer
  if (data?.IntensityRange !== undefined) view.setBigUint64(32, data.IntensityRange === null ? 0n : BigInt(util.toPointer(data.IntensityRange)), true);
  // 0x28: pointer
  if (data?.ContrastRange !== undefined) view.setBigUint64(40, data.ContrastRange === null ? 0n : BigInt(util.toPointer(data.ContrastRange)), true);
  // 0x30: i32
  if (data?.SupportedCompressionType !== undefined) view.setInt32(48, Number(data.SupportedCompressionType), true);
  // 0x34: i32
  if (data?.SupportedDataTypes !== undefined) view.setInt32(52, Number(data.SupportedDataTypes), true);
  // 0x38: i32
  if (data?.WidthPixels !== undefined) view.setInt32(56, Number(data.WidthPixels), true);
  // 0x3c: i32
  if (data?.WidthBytes !== undefined) view.setInt32(60, Number(data.WidthBytes), true);
  // 0x40: i32
  if (data?.Lines !== undefined) view.setInt32(64, Number(data.Lines), true);
  // 0x44: i32
  if (data?.DataType !== undefined) view.setInt32(68, Number(data.DataType), true);
  // 0x48: i32
  if (data?.PixelBits !== undefined) view.setInt32(72, Number(data.PixelBits), true);
  // 0x4c: i32
  if (data?.Intensity !== undefined) view.setInt32(76, Number(data.Intensity), true);
  // 0x50: i32
  if (data?.Contrast !== undefined) view.setInt32(80, Number(data.Contrast), true);
  // 0x54: i32
  if (data?.Xresolution !== undefined) view.setInt32(84, Number(data.Xresolution), true);
  // 0x58: i32
  if (data?.Yresolution !== undefined) view.setInt32(88, Number(data.Yresolution), true);
  // 0x5c: pad4
  // 0x60: pointer
  if (data?.Window !== undefined) view.setBigUint64(96, data.Window === null ? 0n : BigInt(util.toPointer(data.Window)), true);
  // 0x68: i32
  if (data?.DitherPattern !== undefined) view.setInt32(104, Number(data.DitherPattern), true);
  // 0x6c: i32
  if (data?.Negative !== undefined) view.setInt32(108, Number(data.Negative), true);
  // 0x70: i32
  if (data?.Mirror !== undefined) view.setInt32(112, Number(data.Mirror), true);
  // 0x74: i32
  if (data?.AutoBack !== undefined) view.setInt32(116, Number(data.AutoBack), true);
  // 0x78: i32
  if (data?.ColorDitherPattern !== undefined) view.setInt32(120, Number(data.ColorDitherPattern), true);
  // 0x7c: i32
  if (data?.ToneMap !== undefined) view.setInt32(124, Number(data.ToneMap), true);
  // 0x80: i32
  if (data?.Compression !== undefined) view.setInt32(128, Number(data.Compression), true);
  // 0x84: i32
  if (data?.RawDataFormat !== undefined) view.setInt32(132, Number(data.RawDataFormat), true);
  // 0x88: i32
  if (data?.RawPixelOrder !== undefined) view.setInt32(136, Number(data.RawPixelOrder), true);
  // 0x8c: i32
  if (data?.bNeedDataAlignment !== undefined) view.setInt32(140, Number(data.bNeedDataAlignment), true);
  // 0x90: i32
  if (data?.DelayBetweenRead !== undefined) view.setInt32(144, Number(data.DelayBetweenRead), true);
  // 0x94: i32
  if (data?.MaxBufferSize !== undefined) view.setInt32(148, Number(data.MaxBufferSize), true);
  // 0x98: pointer
  if (data?.DeviceIOHandles !== undefined) view.setBigUint64(152, data.DeviceIOHandles === null ? 0n : BigInt(util.toPointer(data.DeviceIOHandles)), true);
  // 0xa0: pointer
  if (data?.lReserved !== undefined) view.setBigUint64(160, data.lReserved === null ? 0n : BigInt(util.toPointer(data.lReserved)), true);
  // 0xa8: pointer
  if (data?.pMicroDriverContext !== undefined) view.setBigUint64(168, data.pMicroDriverContext === null ? 0n : BigInt(util.toPointer(data.pMicroDriverContext)), true);
  return buf;
}

/**
 * Windows.Win32.Devices.ImageAcquisition.VAL (size: 72)
 */
export interface VAL {
  /** i32 */
  lVal: number;
  /** f64 */
  dblVal: number;
  /** ptr */
  pGuid: Deno.PointerValue | Uint8Array | null;
  /** ptr */
  pScanInfo: Deno.PointerValue | Uint8Array | null;
  /** isize */
  handle: Deno.PointerValue;
  /** ptr */
  ppButtonNames: Deno.PointerValue | Uint8Array | null;
  /** ptr */
  pHandle: Deno.PointerValue | Uint8Array | null;
  /** i32 */
  lReserved: number;
  /** array */
  szVal: Deno.PointerValue | null;
}

export const sizeofVAL = 72;

export function allocVAL(data?: Partial<VAL>): Uint8Array {
  const buf = new Uint8Array(sizeofVAL);
  const view = new DataView(buf.buffer);
  // 0x00: i32
  if (data?.lVal !== undefined) view.setInt32(0, Number(data.lVal), true);
  // 0x04: pad4
  // 0x08: f64
  if (data?.dblVal !== undefined) view.setFloat64(8, Number(data.dblVal), true);
  // 0x10: pointer
  if (data?.pGuid !== undefined) view.setBigUint64(16, data.pGuid === null ? 0n : BigInt(util.toPointer(data.pGuid)), true);
  // 0x18: pointer
  if (data?.pScanInfo !== undefined) view.setBigUint64(24, data.pScanInfo === null ? 0n : BigInt(util.toPointer(data.pScanInfo)), true);
  // 0x20: isize
  if (data?.handle !== undefined) view.setBigInt64(32, BigInt(data.handle), true);
  // 0x28: pointer
  if (data?.ppButtonNames !== undefined) view.setBigUint64(40, data.ppButtonNames === null ? 0n : BigInt(util.toPointer(data.ppButtonNames)), true);
  // 0x30: pointer
  if (data?.pHandle !== undefined) view.setBigUint64(48, data.pHandle === null ? 0n : BigInt(util.toPointer(data.pHandle)), true);
  // 0x38: i32
  if (data?.lReserved !== undefined) view.setInt32(56, Number(data.lReserved), true);
  // 0x3c: pad4
  // 0x40: pointer
  if (data?.szVal !== undefined) view.setBigUint64(64, data.szVal === null ? 0n : BigInt(util.toPointer(data.szVal)), true);
  return buf;
}

/**
 * Windows.Win32.Devices.ImageAcquisition.TWAIN_CAPABILITY (size: 40)
 */
export interface TWAIN_CAPABILITY {
  /** i32 */
  lSize: number;
  /** i32 */
  lMSG: number;
  /** i32 */
  lCapID: number;
  /** i32 */
  lConType: number;
  /** i32 */
  lRC: number;
  /** i32 */
  lCC: number;
  /** i32 */
  lDataSize: number;
  /** array */
  Data: Deno.PointerValue | null;
}

export const sizeofTWAIN_CAPABILITY = 40;

export function allocTWAIN_CAPABILITY(data?: Partial<TWAIN_CAPABILITY>): Uint8Array {
  const buf = new Uint8Array(sizeofTWAIN_CAPABILITY);
  const view = new DataView(buf.buffer);
  // 0x00: i32
  if (data?.lSize !== undefined) view.setInt32(0, Number(data.lSize), true);
  // 0x04: i32
  if (data?.lMSG !== undefined) view.setInt32(4, Number(data.lMSG), true);
  // 0x08: i32
  if (data?.lCapID !== undefined) view.setInt32(8, Number(data.lCapID), true);
  // 0x0c: i32
  if (data?.lConType !== undefined) view.setInt32(12, Number(data.lConType), true);
  // 0x10: i32
  if (data?.lRC !== undefined) view.setInt32(16, Number(data.lRC), true);
  // 0x14: i32
  if (data?.lCC !== undefined) view.setInt32(20, Number(data.lCC), true);
  // 0x18: i32
  if (data?.lDataSize !== undefined) view.setInt32(24, Number(data.lDataSize), true);
  // 0x1c: pad4
  // 0x20: pointer
  if (data?.Data !== undefined) view.setBigUint64(32, data.Data === null ? 0n : BigInt(util.toPointer(data.Data)), true);
  return buf;
}

// Native Libraries

// Symbols

