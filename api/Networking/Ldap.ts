/// Auto-generated by Deno Win32: Windows.Win32.Networking.Ldap.Apis

import * as util from "../../util.ts";

// Enums
export type LDAP_RETCODE = number;

// Constants
export const LBER_ERROR = "-1";
export const LBER_DEFAULT = "-1";
export const LDAP_UNICODE = 1;
export const LDAP_PORT = 389;
export const LDAP_SSL_PORT = 636;
export const LDAP_GC_PORT = 3268;
export const LDAP_SSL_GC_PORT = 3269;
export const LDAP_VERSION1 = 1;
export const LDAP_VERSION2 = 2;
export const LDAP_VERSION3 = 3;
export const LDAP_VERSION = 2;
export const LDAP_BIND_CMD = 96;
export const LDAP_UNBIND_CMD = 66;
export const LDAP_SEARCH_CMD = 99;
export const LDAP_MODIFY_CMD = 102;
export const LDAP_ADD_CMD = 104;
export const LDAP_DELETE_CMD = 74;
export const LDAP_MODRDN_CMD = 108;
export const LDAP_COMPARE_CMD = 110;
export const LDAP_ABANDON_CMD = 80;
export const LDAP_SESSION_CMD = 113;
export const LDAP_EXTENDED_CMD = 119;
export const LDAP_RES_BIND = 97;
export const LDAP_RES_SEARCH_ENTRY = 100;
export const LDAP_RES_SEARCH_RESULT = 101;
export const LDAP_RES_MODIFY = 103;
export const LDAP_RES_ADD = 105;
export const LDAP_RES_DELETE = 107;
export const LDAP_RES_MODRDN = 109;
export const LDAP_RES_COMPARE = 111;
export const LDAP_RES_SESSION = 114;
export const LDAP_RES_REFERRAL = 115;
export const LDAP_RES_EXTENDED = 120;
export const LDAP_RES_ANY = "-1";
export const LDAP_INVALID_CMD = 255;
export const LDAP_INVALID_RES = 255;
export const LDAP_AUTH_SIMPLE = 128;
export const LDAP_AUTH_SASL = 131;
export const LDAP_AUTH_OTHERKIND = 134;
export const LDAP_FILTER_AND = 160;
export const LDAP_FILTER_OR = 161;
export const LDAP_FILTER_NOT = 162;
export const LDAP_FILTER_EQUALITY = 163;
export const LDAP_FILTER_SUBSTRINGS = 164;
export const LDAP_FILTER_GE = 165;
export const LDAP_FILTER_LE = 166;
export const LDAP_FILTER_PRESENT = 135;
export const LDAP_FILTER_APPROX = 168;
export const LDAP_FILTER_EXTENSIBLE = 169;
export const LDAP_SUBSTRING_INITIAL = 128;
export const LDAP_SUBSTRING_ANY = 129;
export const LDAP_SUBSTRING_FINAL = 130;
export const LDAP_DEREF_NEVER = 0;
export const LDAP_DEREF_SEARCHING = 1;
export const LDAP_DEREF_FINDING = 2;
export const LDAP_DEREF_ALWAYS = 3;
export const LDAP_NO_LIMIT = 0;
export const LDAP_OPT_DNS = 1;
export const LDAP_OPT_CHASE_REFERRALS = 2;
export const LDAP_OPT_RETURN_REFS = 4;
export const LDAP_MOD_ADD = 0;
export const LDAP_MOD_DELETE = 1;
export const LDAP_MOD_REPLACE = 2;
export const LDAP_MOD_BVALUES = 128;
export const LDAP_OPT_API_INFO = 0;
export const LDAP_OPT_DESC = 1;
export const LDAP_OPT_DEREF = 2;
export const LDAP_OPT_SIZELIMIT = 3;
export const LDAP_OPT_TIMELIMIT = 4;
export const LDAP_OPT_THREAD_FN_PTRS = 5;
export const LDAP_OPT_REBIND_FN = 6;
export const LDAP_OPT_REBIND_ARG = 7;
export const LDAP_OPT_REFERRALS = 8;
export const LDAP_OPT_RESTART = 9;
export const LDAP_OPT_SSL = 10;
export const LDAP_OPT_IO_FN_PTRS = 11;
export const LDAP_OPT_CACHE_FN_PTRS = 13;
export const LDAP_OPT_CACHE_STRATEGY = 14;
export const LDAP_OPT_CACHE_ENABLE = 15;
export const LDAP_OPT_REFERRAL_HOP_LIMIT = 16;
export const LDAP_OPT_PROTOCOL_VERSION = 17;
export const LDAP_OPT_VERSION = 17;
export const LDAP_OPT_API_FEATURE_INFO = 21;
export const LDAP_OPT_HOST_NAME = 48;
export const LDAP_OPT_ERROR_NUMBER = 49;
export const LDAP_OPT_ERROR_STRING = 50;
export const LDAP_OPT_SERVER_ERROR = 51;
export const LDAP_OPT_SERVER_EXT_ERROR = 52;
export const LDAP_OPT_HOST_REACHABLE = 62;
export const LDAP_OPT_PING_KEEP_ALIVE = 54;
export const LDAP_OPT_PING_WAIT_TIME = 55;
export const LDAP_OPT_PING_LIMIT = 56;
export const LDAP_OPT_DNSDOMAIN_NAME = 59;
export const LDAP_OPT_GETDSNAME_FLAGS = 61;
export const LDAP_OPT_PROMPT_CREDENTIALS = 63;
export const LDAP_OPT_AUTO_RECONNECT = 145;
export const LDAP_OPT_SSPI_FLAGS = 146;
export const LDAP_OPT_SSL_INFO = 147;
export const LDAP_OPT_TLS = 10;
export const LDAP_OPT_TLS_INFO = 147;
export const LDAP_OPT_SIGN = 149;
export const LDAP_OPT_ENCRYPT = 150;
export const LDAP_OPT_SASL_METHOD = 151;
export const LDAP_OPT_AREC_EXCLUSIVE = 152;
export const LDAP_OPT_SECURITY_CONTEXT = 153;
export const LDAP_OPT_ROOTDSE_CACHE = 154;
export const LDAP_OPT_TCP_KEEPALIVE = 64;
export const LDAP_OPT_FAST_CONCURRENT_BIND = 65;
export const LDAP_OPT_SEND_TIMEOUT = 66;
export const LDAP_OPT_SCH_FLAGS = 67;
export const LDAP_OPT_SOCKET_BIND_ADDRESSES = 68;
export const LDAP_CHASE_SUBORDINATE_REFERRALS = 32;
export const LDAP_CHASE_EXTERNAL_REFERRALS = 64;
export const LDAP_SCOPE_BASE = 0;
export const LDAP_SCOPE_ONELEVEL = 1;
export const LDAP_SCOPE_SUBTREE = 2;
export const LDAP_MSG_ONE = 0;
export const LDAP_MSG_ALL = 1;
export const LDAP_MSG_RECEIVED = 2;
export const LBER_USE_DER = 1;
export const LBER_USE_INDEFINITE_LEN = 2;
export const LBER_TRANSLATE_STRINGS = 4;
export const LAPI_MAJOR_VER1 = 1;
export const LAPI_MINOR_VER1 = 1;
export const LDAP_API_INFO_VERSION = 1;
export const LDAP_API_VERSION = 2004;
export const LDAP_VERSION_MIN = 2;
export const LDAP_VERSION_MAX = 3;
export const LDAP_VENDOR_VERSION = 510;
export const LDAP_FEATURE_INFO_VERSION = 1;
export const LDAP_API_FEATURE_VIRTUAL_LIST_VIEW = 1001;
export const LDAP_VLVINFO_VERSION = 1;
export const LDAP_OPT_REFERRAL_CALLBACK = 112;
export const LDAP_OPT_CLIENT_CERTIFICATE = 128;
export const LDAP_OPT_SERVER_CERTIFICATE = 129;
export const LDAP_OPT_REF_DEREF_CONN_PER_MSG = 148;
export const SERVER_SEARCH_FLAG_DOMAIN_SCOPE = 1;
export const SERVER_SEARCH_FLAG_PHANTOM_ROOT = 2;
export const LDAP_DIRSYNC_OBJECT_SECURITY = 1;
export const LDAP_DIRSYNC_ANCESTORS_FIRST_ORDER = 2048;
export const LDAP_DIRSYNC_PUBLIC_DATA_ONLY = 8192;
export const LDAP_DIRSYNC_INCREMENTAL_VALUES = 2147483648;
export const LDAP_DIRSYNC_ROPAS_DATA_ONLY = 1073741824;
export const LDAP_POLICYHINT_APPLY_FULLPWDPOLICY = 1;
export const LDAP_SUCCESS = 0;
export const LDAP_OPERATIONS_ERROR = 1;
export const LDAP_PROTOCOL_ERROR = 2;
export const LDAP_TIMELIMIT_EXCEEDED = 3;
export const LDAP_SIZELIMIT_EXCEEDED = 4;
export const LDAP_COMPARE_FALSE = 5;
export const LDAP_COMPARE_TRUE = 6;
export const LDAP_AUTH_METHOD_NOT_SUPPORTED = 7;
export const LDAP_STRONG_AUTH_REQUIRED = 8;
export const LDAP_REFERRAL_V2 = 9;
export const LDAP_PARTIAL_RESULTS = 9;
export const LDAP_REFERRAL = 10;
export const LDAP_ADMIN_LIMIT_EXCEEDED = 11;
export const LDAP_UNAVAILABLE_CRIT_EXTENSION = 12;
export const LDAP_CONFIDENTIALITY_REQUIRED = 13;
export const LDAP_SASL_BIND_IN_PROGRESS = 14;
export const LDAP_NO_SUCH_ATTRIBUTE = 16;
export const LDAP_UNDEFINED_TYPE = 17;
export const LDAP_INAPPROPRIATE_MATCHING = 18;
export const LDAP_CONSTRAINT_VIOLATION = 19;
export const LDAP_ATTRIBUTE_OR_VALUE_EXISTS = 20;
export const LDAP_INVALID_SYNTAX = 21;
export const LDAP_NO_SUCH_OBJECT = 32;
export const LDAP_ALIAS_PROBLEM = 33;
export const LDAP_INVALID_DN_SYNTAX = 34;
export const LDAP_IS_LEAF = 35;
export const LDAP_ALIAS_DEREF_PROBLEM = 36;
export const LDAP_INAPPROPRIATE_AUTH = 48;
export const LDAP_INVALID_CREDENTIALS = 49;
export const LDAP_INSUFFICIENT_RIGHTS = 50;
export const LDAP_BUSY = 51;
export const LDAP_UNAVAILABLE = 52;
export const LDAP_UNWILLING_TO_PERFORM = 53;
export const LDAP_LOOP_DETECT = 54;
export const LDAP_SORT_CONTROL_MISSING = 60;
export const LDAP_OFFSET_RANGE_ERROR = 61;
export const LDAP_NAMING_VIOLATION = 64;
export const LDAP_OBJECT_CLASS_VIOLATION = 65;
export const LDAP_NOT_ALLOWED_ON_NONLEAF = 66;
export const LDAP_NOT_ALLOWED_ON_RDN = 67;
export const LDAP_ALREADY_EXISTS = 68;
export const LDAP_NO_OBJECT_CLASS_MODS = 69;
export const LDAP_RESULTS_TOO_LARGE = 70;
export const LDAP_AFFECTS_MULTIPLE_DSAS = 71;
export const LDAP_VIRTUAL_LIST_VIEW_ERROR = 76;
export const LDAP_OTHER = 80;
export const LDAP_SERVER_DOWN = 81;
export const LDAP_LOCAL_ERROR = 82;
export const LDAP_ENCODING_ERROR = 83;
export const LDAP_DECODING_ERROR = 84;
export const LDAP_TIMEOUT = 85;
export const LDAP_AUTH_UNKNOWN = 86;
export const LDAP_FILTER_ERROR = 87;
export const LDAP_USER_CANCELLED = 88;
export const LDAP_PARAM_ERROR = 89;
export const LDAP_NO_MEMORY = 90;
export const LDAP_CONNECT_ERROR = 91;
export const LDAP_NOT_SUPPORTED = 92;
export const LDAP_NO_RESULTS_RETURNED = 94;
export const LDAP_CONTROL_NOT_FOUND = 93;
export const LDAP_MORE_RESULTS_TO_RETURN = 95;
export const LDAP_CLIENT_LOOP = 96;
export const LDAP_REFERRAL_LIMIT_EXCEEDED = 97;

// Structs

/**
 * _ld_sb_e__Struct (size: 32)
 */
export interface _ld_sb_e__Struct {
  /** usize */
  sb_sd: Deno.PointerValue;
  /** array */
  Reserved1: Deno.PointerValue | null;
  /** usize */
  sb_naddr: Deno.PointerValue;
  /** array */
  Reserved2: Deno.PointerValue | null;
}

export const sizeof_ld_sb_e__Struct = 32;

export function alloc_ld_sb_e__Struct(data?: Partial<_ld_sb_e__Struct>): Uint8Array {
  const buf = new Uint8Array(sizeof_ld_sb_e__Struct);
  const view = new DataView(buf.buffer);
  // 0x00: usize
  if (data?.sb_sd !== undefined) view.setBigUint64(0, BigInt(data.sb_sd), true);
  // 0x08: pointer
  if (data?.Reserved1 !== undefined) view.setBigUint64(8, data.Reserved1 === null ? 0n : BigInt(util.toPointer(data.Reserved1)), true);
  // 0x10: usize
  if (data?.sb_naddr !== undefined) view.setBigUint64(16, BigInt(data.sb_naddr), true);
  // 0x18: pointer
  if (data?.Reserved2 !== undefined) view.setBigUint64(24, data.Reserved2 === null ? 0n : BigInt(util.toPointer(data.Reserved2)), true);
  return buf;
}

export type PSTR = Deno.PointerValue | Uint8Array | null;

/**
 * Windows.Win32.Networking.Ldap.ldap (size: 88)
 */
export interface ldap {
  /** _ld_sb_e__Struct */
  ld_sb: Uint8Array | Deno.PointerValue | null;
  /** Windows.Win32.Foundation.PSTR */
  ld_host: string | null;
  /** u32 */
  ld_version: number;
  /** u8 */
  ld_lberoptions: number;
  /** u32 */
  ld_deref: number;
  /** u32 */
  ld_timelimit: number;
  /** u32 */
  ld_sizelimit: number;
  /** u32 */
  ld_errno: number;
  /** Windows.Win32.Foundation.PSTR */
  ld_matched: string | null;
  /** Windows.Win32.Foundation.PSTR */
  ld_error: string | null;
  /** u32 */
  ld_msgid: number;
  /** array */
  Reserved3: Deno.PointerValue | null;
  /** u32 */
  ld_cldaptries: number;
  /** u32 */
  ld_cldaptimeout: number;
  /** u32 */
  ld_refhoplimit: number;
  /** u32 */
  ld_options: number;
}

export const sizeofLdap = 88;

export function allocLdap(data?: Partial<ldap>): Uint8Array {
  const buf = new Uint8Array(sizeofLdap);
  const view = new DataView(buf.buffer);
  // 0x00: pointer
  if (data?.ld_sb !== undefined) view.setBigUint64(0, data.ld_sb === null ? 0n : BigInt(util.toPointer(data.ld_sb)), true);
  // 0x08: buffer
  if (data?.ld_host !== undefined) {
    (buf as any)._f8 = util.pstrToFfi(data.ld_host);
    view.setBigUint64(8, (buf as any)._f8 === null ? 0n : BigInt(Deno.UnsafePointer.of((buf as any)._f8)), true);
  }
  // 0x10: u32
  if (data?.ld_version !== undefined) view.setUint32(16, Number(data.ld_version), true);
  // 0x14: u8
  if (data?.ld_lberoptions !== undefined) view.setUint8(20, Number(data.ld_lberoptions));
  // 0x15: u32
  if (data?.ld_deref !== undefined) view.setUint32(21, Number(data.ld_deref), true);
  // 0x19: u32
  if (data?.ld_timelimit !== undefined) view.setUint32(25, Number(data.ld_timelimit), true);
  // 0x1d: u32
  if (data?.ld_sizelimit !== undefined) view.setUint32(29, Number(data.ld_sizelimit), true);
  // 0x21: u32
  if (data?.ld_errno !== undefined) view.setUint32(33, Number(data.ld_errno), true);
  // 0x25: pad3
  // 0x28: buffer
  if (data?.ld_matched !== undefined) {
    (buf as any)._f40 = util.pstrToFfi(data.ld_matched);
    view.setBigUint64(40, (buf as any)._f40 === null ? 0n : BigInt(Deno.UnsafePointer.of((buf as any)._f40)), true);
  }
  // 0x30: buffer
  if (data?.ld_error !== undefined) {
    (buf as any)._f48 = util.pstrToFfi(data.ld_error);
    view.setBigUint64(48, (buf as any)._f48 === null ? 0n : BigInt(Deno.UnsafePointer.of((buf as any)._f48)), true);
  }
  // 0x38: u32
  if (data?.ld_msgid !== undefined) view.setUint32(56, Number(data.ld_msgid), true);
  // 0x3c: pad4
  // 0x40: pointer
  if (data?.Reserved3 !== undefined) view.setBigUint64(64, data.Reserved3 === null ? 0n : BigInt(util.toPointer(data.Reserved3)), true);
  // 0x48: u32
  if (data?.ld_cldaptries !== undefined) view.setUint32(72, Number(data.ld_cldaptries), true);
  // 0x4c: u32
  if (data?.ld_cldaptimeout !== undefined) view.setUint32(76, Number(data.ld_cldaptimeout), true);
  // 0x50: u32
  if (data?.ld_refhoplimit !== undefined) view.setUint32(80, Number(data.ld_refhoplimit), true);
  // 0x54: u32
  if (data?.ld_options !== undefined) view.setUint32(84, Number(data.ld_options), true);
  return buf;
}

/**
 * Windows.Win32.Networking.Ldap.LDAP_TIMEVAL (size: 8)
 */
export interface LDAP_TIMEVAL {
  /** i32 */
  tv_sec: number;
  /** i32 */
  tv_usec: number;
}

export const sizeofLDAP_TIMEVAL = 8;

export function allocLDAP_TIMEVAL(data?: Partial<LDAP_TIMEVAL>): Uint8Array {
  const buf = new Uint8Array(sizeofLDAP_TIMEVAL);
  const view = new DataView(buf.buffer);
  // 0x00: i32
  if (data?.tv_sec !== undefined) view.setInt32(0, Number(data.tv_sec), true);
  // 0x04: i32
  if (data?.tv_usec !== undefined) view.setInt32(4, Number(data.tv_usec), true);
  return buf;
}

/**
 * Windows.Win32.Networking.Ldap.LDAP_BERVAL (size: 16)
 */
export interface LDAP_BERVAL {
  /** u32 */
  bv_len: number;
  /** Windows.Win32.Foundation.PSTR */
  bv_val: string | null;
}

export const sizeofLDAP_BERVAL = 16;

export function allocLDAP_BERVAL(data?: Partial<LDAP_BERVAL>): Uint8Array {
  const buf = new Uint8Array(sizeofLDAP_BERVAL);
  const view = new DataView(buf.buffer);
  // 0x00: u32
  if (data?.bv_len !== undefined) view.setUint32(0, Number(data.bv_len), true);
  // 0x04: pad4
  // 0x08: buffer
  if (data?.bv_val !== undefined) {
    (buf as any)._f8 = util.pstrToFfi(data.bv_val);
    view.setBigUint64(8, (buf as any)._f8 === null ? 0n : BigInt(Deno.UnsafePointer.of((buf as any)._f8)), true);
  }
  return buf;
}

export type BOOLEAN = number;

/**
 * Windows.Win32.Networking.Ldap.LDAPMessage (size: 88)
 */
export interface LDAPMessage {
  /** u32 */
  lm_msgid: number;
  /** u32 */
  lm_msgtype: number;
  /** ptr */
  lm_ber: Deno.PointerValue | Uint8Array | null;
  /** ptr */
  lm_chain: Deno.PointerValue | Uint8Array | null;
  /** ptr */
  lm_next: Deno.PointerValue | Uint8Array | null;
  /** u32 */
  lm_time: number;
  /** ptr */
  Connection: Deno.PointerValue | Uint8Array | null;
  /** ptr */
  Request: Deno.PointerValue | Uint8Array | null;
  /** u32 */
  lm_returncode: number;
  /** u16 */
  lm_referral: number;
  /** Windows.Win32.Foundation.BOOLEAN */
  lm_chased: Uint8Array | Deno.PointerValue | null;
  /** Windows.Win32.Foundation.BOOLEAN */
  lm_eom: Uint8Array | Deno.PointerValue | null;
  /** Windows.Win32.Foundation.BOOLEAN */
  ConnectionReferenced: Uint8Array | Deno.PointerValue | null;
}

export const sizeofLDAPMessage = 88;

export function allocLDAPMessage(data?: Partial<LDAPMessage>): Uint8Array {
  const buf = new Uint8Array(sizeofLDAPMessage);
  const view = new DataView(buf.buffer);
  // 0x00: u32
  if (data?.lm_msgid !== undefined) view.setUint32(0, Number(data.lm_msgid), true);
  // 0x04: u32
  if (data?.lm_msgtype !== undefined) view.setUint32(4, Number(data.lm_msgtype), true);
  // 0x08: pointer
  if (data?.lm_ber !== undefined) view.setBigUint64(8, data.lm_ber === null ? 0n : BigInt(util.toPointer(data.lm_ber)), true);
  // 0x10: pointer
  if (data?.lm_chain !== undefined) view.setBigUint64(16, data.lm_chain === null ? 0n : BigInt(util.toPointer(data.lm_chain)), true);
  // 0x18: pointer
  if (data?.lm_next !== undefined) view.setBigUint64(24, data.lm_next === null ? 0n : BigInt(util.toPointer(data.lm_next)), true);
  // 0x20: u32
  if (data?.lm_time !== undefined) view.setUint32(32, Number(data.lm_time), true);
  // 0x24: pad4
  // 0x28: pointer
  if (data?.Connection !== undefined) view.setBigUint64(40, data.Connection === null ? 0n : BigInt(util.toPointer(data.Connection)), true);
  // 0x30: pointer
  if (data?.Request !== undefined) view.setBigUint64(48, data.Request === null ? 0n : BigInt(util.toPointer(data.Request)), true);
  // 0x38: u32
  if (data?.lm_returncode !== undefined) view.setUint32(56, Number(data.lm_returncode), true);
  // 0x3c: u16
  if (data?.lm_referral !== undefined) view.setUint16(60, Number(data.lm_referral), true);
  // 0x3e: pad2
  // 0x40: pointer
  if (data?.lm_chased !== undefined) view.setBigUint64(64, data.lm_chased === null ? 0n : BigInt(util.toPointer(data.lm_chased)), true);
  // 0x48: pointer
  if (data?.lm_eom !== undefined) view.setBigUint64(72, data.lm_eom === null ? 0n : BigInt(util.toPointer(data.lm_eom)), true);
  // 0x50: pointer
  if (data?.ConnectionReferenced !== undefined) view.setBigUint64(80, data.ConnectionReferenced === null ? 0n : BigInt(util.toPointer(data.ConnectionReferenced)), true);
  return buf;
}

/**
 * Windows.Win32.Networking.Ldap.ldapcontrolA (size: 24)
 */
export interface ldapcontrolA {
  /** Windows.Win32.Foundation.PSTR */
  ldctl_oid: string | null;
  /** Windows.Win32.Networking.Ldap.LDAP_BERVAL */
  ldctl_value: Uint8Array | Deno.PointerValue | null;
  /** Windows.Win32.Foundation.BOOLEAN */
  ldctl_iscritical: Uint8Array | Deno.PointerValue | null;
}

export const sizeofLdapcontrolA = 24;

export function allocLdapcontrolA(data?: Partial<ldapcontrolA>): Uint8Array {
  const buf = new Uint8Array(sizeofLdapcontrolA);
  const view = new DataView(buf.buffer);
  // 0x00: buffer
  if (data?.ldctl_oid !== undefined) {
    (buf as any)._f0 = util.pstrToFfi(data.ldctl_oid);
    view.setBigUint64(0, (buf as any)._f0 === null ? 0n : BigInt(Deno.UnsafePointer.of((buf as any)._f0)), true);
  }
  // 0x08: pointer
  if (data?.ldctl_value !== undefined) view.setBigUint64(8, data.ldctl_value === null ? 0n : BigInt(util.toPointer(data.ldctl_value)), true);
  // 0x10: pointer
  if (data?.ldctl_iscritical !== undefined) view.setBigUint64(16, data.ldctl_iscritical === null ? 0n : BigInt(util.toPointer(data.ldctl_iscritical)), true);
  return buf;
}

export type PWSTR = Deno.PointerValue | Uint8Array | null;

/**
 * Windows.Win32.Networking.Ldap.ldapcontrolW (size: 24)
 */
export interface ldapcontrolW {
  /** Windows.Win32.Foundation.PWSTR */
  ldctl_oid: string | null;
  /** Windows.Win32.Networking.Ldap.LDAP_BERVAL */
  ldctl_value: Uint8Array | Deno.PointerValue | null;
  /** Windows.Win32.Foundation.BOOLEAN */
  ldctl_iscritical: Uint8Array | Deno.PointerValue | null;
}

export const sizeofLdapcontrolW = 24;

export function allocLdapcontrolW(data?: Partial<ldapcontrolW>): Uint8Array {
  const buf = new Uint8Array(sizeofLdapcontrolW);
  const view = new DataView(buf.buffer);
  // 0x00: buffer
  if (data?.ldctl_oid !== undefined) {
    (buf as any)._f0 = util.pwstrToFfi(data.ldctl_oid);
    view.setBigUint64(0, (buf as any)._f0 === null ? 0n : BigInt(Deno.UnsafePointer.of((buf as any)._f0)), true);
  }
  // 0x08: pointer
  if (data?.ldctl_value !== undefined) view.setBigUint64(8, data.ldctl_value === null ? 0n : BigInt(util.toPointer(data.ldctl_value)), true);
  // 0x10: pointer
  if (data?.ldctl_iscritical !== undefined) view.setBigUint64(16, data.ldctl_iscritical === null ? 0n : BigInt(util.toPointer(data.ldctl_iscritical)), true);
  return buf;
}

/**
 * _mod_vals_e__Union (size: 16)
 */
export interface _mod_vals_e__Union {
  /** ptr */
  modv_strvals: Deno.PointerValue | Uint8Array | null;
  /** ptr */
  modv_bvals: Deno.PointerValue | Uint8Array | null;
}

export const sizeof_mod_vals_e__Union = 16;

export function alloc_mod_vals_e__Union(data?: Partial<_mod_vals_e__Union>): Uint8Array {
  const buf = new Uint8Array(sizeof_mod_vals_e__Union);
  const view = new DataView(buf.buffer);
  // 0x00: pointer
  if (data?.modv_strvals !== undefined) view.setBigUint64(0, data.modv_strvals === null ? 0n : BigInt(util.toPointer(data.modv_strvals)), true);
  // 0x08: pointer
  if (data?.modv_bvals !== undefined) view.setBigUint64(8, data.modv_bvals === null ? 0n : BigInt(util.toPointer(data.modv_bvals)), true);
  return buf;
}

/**
 * Windows.Win32.Networking.Ldap.ldapmodW (size: 24)
 */
export interface ldapmodW {
  /** u32 */
  mod_op: number;
  /** Windows.Win32.Foundation.PWSTR */
  mod_type: string | null;
  /** _mod_vals_e__Union */
  mod_vals: Uint8Array | Deno.PointerValue | null;
}

export const sizeofLdapmodW = 24;

export function allocLdapmodW(data?: Partial<ldapmodW>): Uint8Array {
  const buf = new Uint8Array(sizeofLdapmodW);
  const view = new DataView(buf.buffer);
  // 0x00: u32
  if (data?.mod_op !== undefined) view.setUint32(0, Number(data.mod_op), true);
  // 0x04: pad4
  // 0x08: buffer
  if (data?.mod_type !== undefined) {
    (buf as any)._f8 = util.pwstrToFfi(data.mod_type);
    view.setBigUint64(8, (buf as any)._f8 === null ? 0n : BigInt(Deno.UnsafePointer.of((buf as any)._f8)), true);
  }
  // 0x10: pointer
  if (data?.mod_vals !== undefined) view.setBigUint64(16, data.mod_vals === null ? 0n : BigInt(util.toPointer(data.mod_vals)), true);
  return buf;
}

/**
 * Windows.Win32.Networking.Ldap.ldapmodA (size: 24)
 */
export interface ldapmodA {
  /** u32 */
  mod_op: number;
  /** Windows.Win32.Foundation.PSTR */
  mod_type: string | null;
  /** _mod_vals_e__Union */
  mod_vals: Uint8Array | Deno.PointerValue | null;
}

export const sizeofLdapmodA = 24;

export function allocLdapmodA(data?: Partial<ldapmodA>): Uint8Array {
  const buf = new Uint8Array(sizeofLdapmodA);
  const view = new DataView(buf.buffer);
  // 0x00: u32
  if (data?.mod_op !== undefined) view.setUint32(0, Number(data.mod_op), true);
  // 0x04: pad4
  // 0x08: buffer
  if (data?.mod_type !== undefined) {
    (buf as any)._f8 = util.pstrToFfi(data.mod_type);
    view.setBigUint64(8, (buf as any)._f8 === null ? 0n : BigInt(Deno.UnsafePointer.of((buf as any)._f8)), true);
  }
  // 0x10: pointer
  if (data?.mod_vals !== undefined) view.setBigUint64(16, data.mod_vals === null ? 0n : BigInt(util.toPointer(data.mod_vals)), true);
  return buf;
}

/**
 * Windows.Win32.Networking.Ldap.berelement (size: 8)
 */
export interface berelement {
  /** Windows.Win32.Foundation.PSTR */
  opaque: string | null;
}

export const sizeofBerelement = 8;

export function allocBerelement(data?: Partial<berelement>): Uint8Array {
  const buf = new Uint8Array(sizeofBerelement);
  const view = new DataView(buf.buffer);
  // 0x00: buffer
  if (data?.opaque !== undefined) {
    (buf as any)._f0 = util.pstrToFfi(data.opaque);
    view.setBigUint64(0, (buf as any)._f0 === null ? 0n : BigInt(Deno.UnsafePointer.of((buf as any)._f0)), true);
  }
  return buf;
}

/**
 * Windows.Win32.Networking.Ldap.ldap_version_info (size: 16)
 */
export interface ldap_version_info {
  /** u32 */
  lv_size: number;
  /** u32 */
  lv_major: number;
  /** u32 */
  lv_minor: number;
}

export const sizeofLdap_version_info = 16;

export function allocLdap_version_info(data?: Partial<ldap_version_info>): Uint8Array {
  const buf = new Uint8Array(sizeofLdap_version_info);
  const view = new DataView(buf.buffer);
  // 0x00: u32
  if (data?.lv_size !== undefined) view.setUint32(0, Number(data.lv_size), true);
  // 0x04: u32
  if (data?.lv_major !== undefined) view.setUint32(4, Number(data.lv_major), true);
  // 0x08: u32
  if (data?.lv_minor !== undefined) view.setUint32(8, Number(data.lv_minor), true);
  // 0x0c: pad4
  return buf;
}

/**
 * Windows.Win32.Networking.Ldap.ldapapiinfoA (size: 40)
 */
export interface ldapapiinfoA {
  /** i32 */
  ldapai_info_version: number;
  /** i32 */
  ldapai_api_version: number;
  /** i32 */
  ldapai_protocol_version: number;
  /** ptr */
  ldapai_extensions: Deno.PointerValue | Uint8Array | null;
  /** Windows.Win32.Foundation.PSTR */
  ldapai_vendor_name: string | null;
  /** i32 */
  ldapai_vendor_version: number;
}

export const sizeofLdapapiinfoA = 40;

export function allocLdapapiinfoA(data?: Partial<ldapapiinfoA>): Uint8Array {
  const buf = new Uint8Array(sizeofLdapapiinfoA);
  const view = new DataView(buf.buffer);
  // 0x00: i32
  if (data?.ldapai_info_version !== undefined) view.setInt32(0, Number(data.ldapai_info_version), true);
  // 0x04: i32
  if (data?.ldapai_api_version !== undefined) view.setInt32(4, Number(data.ldapai_api_version), true);
  // 0x08: i32
  if (data?.ldapai_protocol_version !== undefined) view.setInt32(8, Number(data.ldapai_protocol_version), true);
  // 0x0c: pad4
  // 0x10: pointer
  if (data?.ldapai_extensions !== undefined) view.setBigUint64(16, data.ldapai_extensions === null ? 0n : BigInt(util.toPointer(data.ldapai_extensions)), true);
  // 0x18: buffer
  if (data?.ldapai_vendor_name !== undefined) {
    (buf as any)._f24 = util.pstrToFfi(data.ldapai_vendor_name);
    view.setBigUint64(24, (buf as any)._f24 === null ? 0n : BigInt(Deno.UnsafePointer.of((buf as any)._f24)), true);
  }
  // 0x20: i32
  if (data?.ldapai_vendor_version !== undefined) view.setInt32(32, Number(data.ldapai_vendor_version), true);
  // 0x24: pad4
  return buf;
}

/**
 * Windows.Win32.Networking.Ldap.ldapapiinfoW (size: 40)
 */
export interface ldapapiinfoW {
  /** i32 */
  ldapai_info_version: number;
  /** i32 */
  ldapai_api_version: number;
  /** i32 */
  ldapai_protocol_version: number;
  /** ptr */
  ldapai_extensions: Deno.PointerValue | Uint8Array | null;
  /** Windows.Win32.Foundation.PWSTR */
  ldapai_vendor_name: string | null;
  /** i32 */
  ldapai_vendor_version: number;
}

export const sizeofLdapapiinfoW = 40;

export function allocLdapapiinfoW(data?: Partial<ldapapiinfoW>): Uint8Array {
  const buf = new Uint8Array(sizeofLdapapiinfoW);
  const view = new DataView(buf.buffer);
  // 0x00: i32
  if (data?.ldapai_info_version !== undefined) view.setInt32(0, Number(data.ldapai_info_version), true);
  // 0x04: i32
  if (data?.ldapai_api_version !== undefined) view.setInt32(4, Number(data.ldapai_api_version), true);
  // 0x08: i32
  if (data?.ldapai_protocol_version !== undefined) view.setInt32(8, Number(data.ldapai_protocol_version), true);
  // 0x0c: pad4
  // 0x10: pointer
  if (data?.ldapai_extensions !== undefined) view.setBigUint64(16, data.ldapai_extensions === null ? 0n : BigInt(util.toPointer(data.ldapai_extensions)), true);
  // 0x18: buffer
  if (data?.ldapai_vendor_name !== undefined) {
    (buf as any)._f24 = util.pwstrToFfi(data.ldapai_vendor_name);
    view.setBigUint64(24, (buf as any)._f24 === null ? 0n : BigInt(Deno.UnsafePointer.of((buf as any)._f24)), true);
  }
  // 0x20: i32
  if (data?.ldapai_vendor_version !== undefined) view.setInt32(32, Number(data.ldapai_vendor_version), true);
  // 0x24: pad4
  return buf;
}

/**
 * Windows.Win32.Networking.Ldap.LDAPAPIFeatureInfoA (size: 24)
 */
export interface LDAPAPIFeatureInfoA {
  /** i32 */
  ldapaif_info_version: number;
  /** Windows.Win32.Foundation.PSTR */
  ldapaif_name: string | null;
  /** i32 */
  ldapaif_version: number;
}

export const sizeofLDAPAPIFeatureInfoA = 24;

export function allocLDAPAPIFeatureInfoA(data?: Partial<LDAPAPIFeatureInfoA>): Uint8Array {
  const buf = new Uint8Array(sizeofLDAPAPIFeatureInfoA);
  const view = new DataView(buf.buffer);
  // 0x00: i32
  if (data?.ldapaif_info_version !== undefined) view.setInt32(0, Number(data.ldapaif_info_version), true);
  // 0x04: pad4
  // 0x08: buffer
  if (data?.ldapaif_name !== undefined) {
    (buf as any)._f8 = util.pstrToFfi(data.ldapaif_name);
    view.setBigUint64(8, (buf as any)._f8 === null ? 0n : BigInt(Deno.UnsafePointer.of((buf as any)._f8)), true);
  }
  // 0x10: i32
  if (data?.ldapaif_version !== undefined) view.setInt32(16, Number(data.ldapaif_version), true);
  // 0x14: pad4
  return buf;
}

/**
 * Windows.Win32.Networking.Ldap.LDAPAPIFeatureInfoW (size: 24)
 */
export interface LDAPAPIFeatureInfoW {
  /** i32 */
  ldapaif_info_version: number;
  /** Windows.Win32.Foundation.PWSTR */
  ldapaif_name: string | null;
  /** i32 */
  ldapaif_version: number;
}

export const sizeofLDAPAPIFeatureInfoW = 24;

export function allocLDAPAPIFeatureInfoW(data?: Partial<LDAPAPIFeatureInfoW>): Uint8Array {
  const buf = new Uint8Array(sizeofLDAPAPIFeatureInfoW);
  const view = new DataView(buf.buffer);
  // 0x00: i32
  if (data?.ldapaif_info_version !== undefined) view.setInt32(0, Number(data.ldapaif_info_version), true);
  // 0x04: pad4
  // 0x08: buffer
  if (data?.ldapaif_name !== undefined) {
    (buf as any)._f8 = util.pwstrToFfi(data.ldapaif_name);
    view.setBigUint64(8, (buf as any)._f8 === null ? 0n : BigInt(Deno.UnsafePointer.of((buf as any)._f8)), true);
  }
  // 0x10: i32
  if (data?.ldapaif_version !== undefined) view.setInt32(16, Number(data.ldapaif_version), true);
  // 0x14: pad4
  return buf;
}

/**
 * Windows.Win32.Networking.Ldap.ldapsortkeyW (size: 24)
 */
export interface ldapsortkeyW {
  /** Windows.Win32.Foundation.PWSTR */
  sk_attrtype: string | null;
  /** Windows.Win32.Foundation.PWSTR */
  sk_matchruleoid: string | null;
  /** Windows.Win32.Foundation.BOOLEAN */
  sk_reverseorder: Uint8Array | Deno.PointerValue | null;
}

export const sizeofLdapsortkeyW = 24;

export function allocLdapsortkeyW(data?: Partial<ldapsortkeyW>): Uint8Array {
  const buf = new Uint8Array(sizeofLdapsortkeyW);
  const view = new DataView(buf.buffer);
  // 0x00: buffer
  if (data?.sk_attrtype !== undefined) {
    (buf as any)._f0 = util.pwstrToFfi(data.sk_attrtype);
    view.setBigUint64(0, (buf as any)._f0 === null ? 0n : BigInt(Deno.UnsafePointer.of((buf as any)._f0)), true);
  }
  // 0x08: buffer
  if (data?.sk_matchruleoid !== undefined) {
    (buf as any)._f8 = util.pwstrToFfi(data.sk_matchruleoid);
    view.setBigUint64(8, (buf as any)._f8 === null ? 0n : BigInt(Deno.UnsafePointer.of((buf as any)._f8)), true);
  }
  // 0x10: pointer
  if (data?.sk_reverseorder !== undefined) view.setBigUint64(16, data.sk_reverseorder === null ? 0n : BigInt(util.toPointer(data.sk_reverseorder)), true);
  return buf;
}

/**
 * Windows.Win32.Networking.Ldap.ldapsortkeyA (size: 24)
 */
export interface ldapsortkeyA {
  /** Windows.Win32.Foundation.PSTR */
  sk_attrtype: string | null;
  /** Windows.Win32.Foundation.PSTR */
  sk_matchruleoid: string | null;
  /** Windows.Win32.Foundation.BOOLEAN */
  sk_reverseorder: Uint8Array | Deno.PointerValue | null;
}

export const sizeofLdapsortkeyA = 24;

export function allocLdapsortkeyA(data?: Partial<ldapsortkeyA>): Uint8Array {
  const buf = new Uint8Array(sizeofLdapsortkeyA);
  const view = new DataView(buf.buffer);
  // 0x00: buffer
  if (data?.sk_attrtype !== undefined) {
    (buf as any)._f0 = util.pstrToFfi(data.sk_attrtype);
    view.setBigUint64(0, (buf as any)._f0 === null ? 0n : BigInt(Deno.UnsafePointer.of((buf as any)._f0)), true);
  }
  // 0x08: buffer
  if (data?.sk_matchruleoid !== undefined) {
    (buf as any)._f8 = util.pstrToFfi(data.sk_matchruleoid);
    view.setBigUint64(8, (buf as any)._f8 === null ? 0n : BigInt(Deno.UnsafePointer.of((buf as any)._f8)), true);
  }
  // 0x10: pointer
  if (data?.sk_reverseorder !== undefined) view.setBigUint64(16, data.sk_reverseorder === null ? 0n : BigInt(util.toPointer(data.sk_reverseorder)), true);
  return buf;
}

/**
 * Windows.Win32.Networking.Ldap.ldapvlvinfo (size: 48)
 */
export interface ldapvlvinfo {
  /** i32 */
  ldvlv_version: number;
  /** u32 */
  ldvlv_before_count: number;
  /** u32 */
  ldvlv_after_count: number;
  /** u32 */
  ldvlv_offset: number;
  /** u32 */
  ldvlv_count: number;
  /** ptr */
  ldvlv_attrvalue: Deno.PointerValue | Uint8Array | null;
  /** ptr */
  ldvlv_context: Deno.PointerValue | Uint8Array | null;
  /** ptr */
  ldvlv_extradata: Deno.PointerValue | Uint8Array | null;
}

export const sizeofLdapvlvinfo = 48;

export function allocLdapvlvinfo(data?: Partial<ldapvlvinfo>): Uint8Array {
  const buf = new Uint8Array(sizeofLdapvlvinfo);
  const view = new DataView(buf.buffer);
  // 0x00: i32
  if (data?.ldvlv_version !== undefined) view.setInt32(0, Number(data.ldvlv_version), true);
  // 0x04: u32
  if (data?.ldvlv_before_count !== undefined) view.setUint32(4, Number(data.ldvlv_before_count), true);
  // 0x08: u32
  if (data?.ldvlv_after_count !== undefined) view.setUint32(8, Number(data.ldvlv_after_count), true);
  // 0x0c: u32
  if (data?.ldvlv_offset !== undefined) view.setUint32(12, Number(data.ldvlv_offset), true);
  // 0x10: u32
  if (data?.ldvlv_count !== undefined) view.setUint32(16, Number(data.ldvlv_count), true);
  // 0x14: pad4
  // 0x18: pointer
  if (data?.ldvlv_attrvalue !== undefined) view.setBigUint64(24, data.ldvlv_attrvalue === null ? 0n : BigInt(util.toPointer(data.ldvlv_attrvalue)), true);
  // 0x20: pointer
  if (data?.ldvlv_context !== undefined) view.setBigUint64(32, data.ldvlv_context === null ? 0n : BigInt(util.toPointer(data.ldvlv_context)), true);
  // 0x28: pointer
  if (data?.ldvlv_extradata !== undefined) view.setBigUint64(40, data.ldvlv_extradata === null ? 0n : BigInt(util.toPointer(data.ldvlv_extradata)), true);
  return buf;
}

/**
 * Windows.Win32.Networking.Ldap.LDAP_REFERRAL_CALLBACK (size: 32)
 */
export interface LDAP_REFERRAL_CALLBACK {
  /** u32 */
  SizeOfCallbacks: number;
  /** Windows.Win32.Networking.Ldap.QUERYFORCONNECTION */
  QueryForConnection: Uint8Array | Deno.PointerValue | null;
  /** Windows.Win32.Networking.Ldap.NOTIFYOFNEWCONNECTION */
  NotifyRoutine: Uint8Array | Deno.PointerValue | null;
  /** Windows.Win32.Networking.Ldap.DEREFERENCECONNECTION */
  DereferenceRoutine: Uint8Array | Deno.PointerValue | null;
}

export const sizeofLDAP_REFERRAL_CALLBACK = 32;

export function allocLDAP_REFERRAL_CALLBACK(data?: Partial<LDAP_REFERRAL_CALLBACK>): Uint8Array {
  const buf = new Uint8Array(sizeofLDAP_REFERRAL_CALLBACK);
  const view = new DataView(buf.buffer);
  // 0x00: u32
  if (data?.SizeOfCallbacks !== undefined) view.setUint32(0, Number(data.SizeOfCallbacks), true);
  // 0x04: pad4
  // 0x08: pointer
  if (data?.QueryForConnection !== undefined) view.setBigUint64(8, data.QueryForConnection === null ? 0n : BigInt(util.toPointer(data.QueryForConnection)), true);
  // 0x10: pointer
  if (data?.NotifyRoutine !== undefined) view.setBigUint64(16, data.NotifyRoutine === null ? 0n : BigInt(util.toPointer(data.NotifyRoutine)), true);
  // 0x18: pointer
  if (data?.DereferenceRoutine !== undefined) view.setBigUint64(24, data.DereferenceRoutine === null ? 0n : BigInt(util.toPointer(data.DereferenceRoutine)), true);
  return buf;
}

export type HANDLE = Deno.PointerValue;

// Native Libraries

try {
  var libWLDAP32 = Deno.dlopen("WLDAP32", {
    ldap_openW: {
      parameters: ["buffer", "u32"],
      result: "pointer",
    },
    ldap_openA: {
      parameters: ["buffer", "u32"],
      result: "pointer",
    },
    ldap_initW: {
      parameters: ["buffer", "u32"],
      result: "pointer",
    },
    ldap_initA: {
      parameters: ["buffer", "u32"],
      result: "pointer",
    },
    ldap_sslinitW: {
      parameters: ["buffer", "u32", "i32"],
      result: "pointer",
    },
    ldap_sslinitA: {
      parameters: ["buffer", "u32", "i32"],
      result: "pointer",
    },
    ldap_connect: {
      parameters: ["pointer", "pointer"],
      result: "u32",
    },
    ldap_open: {
      parameters: ["buffer", "u32"],
      result: "pointer",
    },
    ldap_init: {
      parameters: ["buffer", "u32"],
      result: "pointer",
    },
    ldap_sslinit: {
      parameters: ["buffer", "u32", "i32"],
      result: "pointer",
    },
    cldap_openW: {
      parameters: ["buffer", "u32"],
      result: "pointer",
    },
    cldap_openA: {
      parameters: ["buffer", "u32"],
      result: "pointer",
    },
    cldap_open: {
      parameters: ["buffer", "u32"],
      result: "pointer",
    },
    ldap_unbind: {
      parameters: ["pointer"],
      result: "u32",
    },
    ldap_unbind_s: {
      parameters: ["pointer"],
      result: "u32",
    },
    ldap_get_option: {
      parameters: ["pointer", "i32", "pointer"],
      result: "u32",
    },
    ldap_get_optionW: {
      parameters: ["pointer", "i32", "pointer"],
      result: "u32",
    },
    ldap_set_option: {
      parameters: ["pointer", "i32", "pointer"],
      result: "u32",
    },
    ldap_set_optionW: {
      parameters: ["pointer", "i32", "pointer"],
      result: "u32",
    },
    ldap_simple_bindW: {
      parameters: ["pointer", "buffer", "buffer"],
      result: "u32",
    },
    ldap_simple_bindA: {
      parameters: ["pointer", "buffer", "buffer"],
      result: "u32",
    },
    ldap_simple_bind_sW: {
      parameters: ["pointer", "buffer", "buffer"],
      result: "u32",
    },
    ldap_simple_bind_sA: {
      parameters: ["pointer", "buffer", "buffer"],
      result: "u32",
    },
    ldap_bindW: {
      parameters: ["pointer", "buffer", "buffer", "u32"],
      result: "u32",
    },
    ldap_bindA: {
      parameters: ["pointer", "buffer", "buffer", "u32"],
      result: "u32",
    },
    ldap_bind_sW: {
      parameters: ["pointer", "buffer", "buffer", "u32"],
      result: "u32",
    },
    ldap_bind_sA: {
      parameters: ["pointer", "buffer", "buffer", "u32"],
      result: "u32",
    },
    ldap_sasl_bindA: {
      parameters: ["pointer", "buffer", "buffer", "pointer", "pointer", "pointer", "pointer"],
      result: "i32",
    },
    ldap_sasl_bindW: {
      parameters: ["pointer", "buffer", "buffer", "pointer", "pointer", "pointer", "pointer"],
      result: "i32",
    },
    ldap_sasl_bind_sA: {
      parameters: ["pointer", "buffer", "buffer", "pointer", "pointer", "pointer", "pointer"],
      result: "i32",
    },
    ldap_sasl_bind_sW: {
      parameters: ["pointer", "buffer", "buffer", "pointer", "pointer", "pointer", "pointer"],
      result: "i32",
    },
    ldap_simple_bind: {
      parameters: ["pointer", "buffer", "buffer"],
      result: "u32",
    },
    ldap_simple_bind_s: {
      parameters: ["pointer", "buffer", "buffer"],
      result: "u32",
    },
    ldap_bind: {
      parameters: ["pointer", "buffer", "buffer", "u32"],
      result: "u32",
    },
    ldap_bind_s: {
      parameters: ["pointer", "buffer", "buffer", "u32"],
      result: "u32",
    },
    ldap_searchW: {
      parameters: ["pointer", "buffer", "u32", "buffer", "pointer", "u32"],
      result: "u32",
    },
    ldap_searchA: {
      parameters: ["pointer", "buffer", "u32", "buffer", "pointer", "u32"],
      result: "u32",
    },
    ldap_search_sW: {
      parameters: ["pointer", "buffer", "u32", "buffer", "pointer", "u32", "pointer"],
      result: "u32",
    },
    ldap_search_sA: {
      parameters: ["pointer", "buffer", "u32", "buffer", "pointer", "u32", "pointer"],
      result: "u32",
    },
    ldap_search_stW: {
      parameters: ["pointer", "buffer", "u32", "buffer", "pointer", "u32", "pointer", "pointer"],
      result: "u32",
    },
    ldap_search_stA: {
      parameters: ["pointer", "buffer", "u32", "buffer", "pointer", "u32", "pointer", "pointer"],
      result: "u32",
    },
    ldap_search_extW: {
      parameters: ["pointer", "buffer", "u32", "buffer", "pointer", "u32", "pointer", "pointer", "u32", "u32", "pointer"],
      result: "u32",
    },
    ldap_search_extA: {
      parameters: ["pointer", "buffer", "u32", "buffer", "pointer", "u32", "pointer", "pointer", "u32", "u32", "pointer"],
      result: "u32",
    },
    ldap_search_ext_sW: {
      parameters: ["pointer", "buffer", "u32", "buffer", "pointer", "u32", "pointer", "pointer", "pointer", "u32", "pointer"],
      result: "u32",
    },
    ldap_search_ext_sA: {
      parameters: ["pointer", "buffer", "u32", "buffer", "pointer", "u32", "pointer", "pointer", "pointer", "u32", "pointer"],
      result: "u32",
    },
    ldap_search: {
      parameters: ["pointer", "buffer", "u32", "buffer", "pointer", "u32"],
      result: "u32",
    },
    ldap_search_s: {
      parameters: ["pointer", "buffer", "u32", "buffer", "pointer", "u32", "pointer"],
      result: "u32",
    },
    ldap_search_st: {
      parameters: ["pointer", "buffer", "u32", "buffer", "pointer", "u32", "pointer", "pointer"],
      result: "u32",
    },
    ldap_search_ext: {
      parameters: ["pointer", "buffer", "u32", "buffer", "pointer", "u32", "pointer", "pointer", "u32", "u32", "pointer"],
      result: "u32",
    },
    ldap_search_ext_s: {
      parameters: ["pointer", "buffer", "u32", "buffer", "pointer", "u32", "pointer", "pointer", "pointer", "u32", "pointer"],
      result: "u32",
    },
    ldap_check_filterW: {
      parameters: ["pointer", "buffer"],
      result: "u32",
    },
    ldap_check_filterA: {
      parameters: ["pointer", "buffer"],
      result: "u32",
    },
    ldap_modifyW: {
      parameters: ["pointer", "buffer", "pointer"],
      result: "u32",
    },
    ldap_modifyA: {
      parameters: ["pointer", "buffer", "pointer"],
      result: "u32",
    },
    ldap_modify_sW: {
      parameters: ["pointer", "buffer", "pointer"],
      result: "u32",
    },
    ldap_modify_sA: {
      parameters: ["pointer", "buffer", "pointer"],
      result: "u32",
    },
    ldap_modify_extW: {
      parameters: ["pointer", "buffer", "pointer", "pointer", "pointer", "pointer"],
      result: "u32",
    },
    ldap_modify_extA: {
      parameters: ["pointer", "buffer", "pointer", "pointer", "pointer", "pointer"],
      result: "u32",
    },
    ldap_modify_ext_sW: {
      parameters: ["pointer", "buffer", "pointer", "pointer", "pointer"],
      result: "u32",
    },
    ldap_modify_ext_sA: {
      parameters: ["pointer", "buffer", "pointer", "pointer", "pointer"],
      result: "u32",
    },
    ldap_modify: {
      parameters: ["pointer", "buffer", "pointer"],
      result: "u32",
    },
    ldap_modify_s: {
      parameters: ["pointer", "buffer", "pointer"],
      result: "u32",
    },
    ldap_modify_ext: {
      parameters: ["pointer", "buffer", "pointer", "pointer", "pointer", "pointer"],
      result: "u32",
    },
    ldap_modify_ext_s: {
      parameters: ["pointer", "buffer", "pointer", "pointer", "pointer"],
      result: "u32",
    },
    ldap_modrdn2W: {
      parameters: ["pointer", "buffer", "buffer", "i32"],
      result: "u32",
    },
    ldap_modrdn2A: {
      parameters: ["pointer", "buffer", "buffer", "i32"],
      result: "u32",
    },
    ldap_modrdnW: {
      parameters: ["pointer", "buffer", "buffer"],
      result: "u32",
    },
    ldap_modrdnA: {
      parameters: ["pointer", "buffer", "buffer"],
      result: "u32",
    },
    ldap_modrdn2_sW: {
      parameters: ["pointer", "buffer", "buffer", "i32"],
      result: "u32",
    },
    ldap_modrdn2_sA: {
      parameters: ["pointer", "buffer", "buffer", "i32"],
      result: "u32",
    },
    ldap_modrdn_sW: {
      parameters: ["pointer", "buffer", "buffer"],
      result: "u32",
    },
    ldap_modrdn_sA: {
      parameters: ["pointer", "buffer", "buffer"],
      result: "u32",
    },
    ldap_modrdn2: {
      parameters: ["pointer", "buffer", "buffer", "i32"],
      result: "u32",
    },
    ldap_modrdn: {
      parameters: ["pointer", "buffer", "buffer"],
      result: "u32",
    },
    ldap_modrdn2_s: {
      parameters: ["pointer", "buffer", "buffer", "i32"],
      result: "u32",
    },
    ldap_modrdn_s: {
      parameters: ["pointer", "buffer", "buffer"],
      result: "u32",
    },
    ldap_rename_extW: {
      parameters: ["pointer", "buffer", "buffer", "buffer", "i32", "pointer", "pointer", "pointer"],
      result: "u32",
    },
    ldap_rename_extA: {
      parameters: ["pointer", "buffer", "buffer", "buffer", "i32", "pointer", "pointer", "pointer"],
      result: "u32",
    },
    ldap_rename_ext_sW: {
      parameters: ["pointer", "buffer", "buffer", "buffer", "i32", "pointer", "pointer"],
      result: "u32",
    },
    ldap_rename_ext_sA: {
      parameters: ["pointer", "buffer", "buffer", "buffer", "i32", "pointer", "pointer"],
      result: "u32",
    },
    ldap_rename_ext: {
      parameters: ["pointer", "buffer", "buffer", "buffer", "i32", "pointer", "pointer", "pointer"],
      result: "u32",
    },
    ldap_rename_ext_s: {
      parameters: ["pointer", "buffer", "buffer", "buffer", "i32", "pointer", "pointer"],
      result: "u32",
    },
    ldap_addW: {
      parameters: ["pointer", "buffer", "pointer"],
      result: "u32",
    },
    ldap_addA: {
      parameters: ["pointer", "buffer", "pointer"],
      result: "u32",
    },
    ldap_add_sW: {
      parameters: ["pointer", "buffer", "pointer"],
      result: "u32",
    },
    ldap_add_sA: {
      parameters: ["pointer", "buffer", "pointer"],
      result: "u32",
    },
    ldap_add_extW: {
      parameters: ["pointer", "buffer", "pointer", "pointer", "pointer", "pointer"],
      result: "u32",
    },
    ldap_add_extA: {
      parameters: ["pointer", "buffer", "pointer", "pointer", "pointer", "pointer"],
      result: "u32",
    },
    ldap_add_ext_sW: {
      parameters: ["pointer", "buffer", "pointer", "pointer", "pointer"],
      result: "u32",
    },
    ldap_add_ext_sA: {
      parameters: ["pointer", "buffer", "pointer", "pointer", "pointer"],
      result: "u32",
    },
    ldap_add: {
      parameters: ["pointer", "buffer", "pointer"],
      result: "u32",
    },
    ldap_add_s: {
      parameters: ["pointer", "buffer", "pointer"],
      result: "u32",
    },
    ldap_add_ext: {
      parameters: ["pointer", "buffer", "pointer", "pointer", "pointer", "pointer"],
      result: "u32",
    },
    ldap_add_ext_s: {
      parameters: ["pointer", "buffer", "pointer", "pointer", "pointer"],
      result: "u32",
    },
    ldap_compareW: {
      parameters: ["pointer", "buffer", "buffer", "buffer"],
      result: "u32",
    },
    ldap_compareA: {
      parameters: ["pointer", "buffer", "buffer", "buffer"],
      result: "u32",
    },
    ldap_compare_sW: {
      parameters: ["pointer", "buffer", "buffer", "buffer"],
      result: "u32",
    },
    ldap_compare_sA: {
      parameters: ["pointer", "buffer", "buffer", "buffer"],
      result: "u32",
    },
    ldap_compare: {
      parameters: ["pointer", "buffer", "buffer", "buffer"],
      result: "u32",
    },
    ldap_compare_s: {
      parameters: ["pointer", "buffer", "buffer", "buffer"],
      result: "u32",
    },
    ldap_compare_extW: {
      parameters: ["pointer", "buffer", "buffer", "buffer", "pointer", "pointer", "pointer", "pointer"],
      result: "u32",
    },
    ldap_compare_extA: {
      parameters: ["pointer", "buffer", "buffer", "buffer", "pointer", "pointer", "pointer", "pointer"],
      result: "u32",
    },
    ldap_compare_ext_sW: {
      parameters: ["pointer", "buffer", "buffer", "buffer", "pointer", "pointer", "pointer"],
      result: "u32",
    },
    ldap_compare_ext_sA: {
      parameters: ["pointer", "buffer", "buffer", "buffer", "pointer", "pointer", "pointer"],
      result: "u32",
    },
    ldap_compare_ext: {
      parameters: ["pointer", "buffer", "buffer", "buffer", "pointer", "pointer", "pointer", "pointer"],
      result: "u32",
    },
    ldap_compare_ext_s: {
      parameters: ["pointer", "buffer", "buffer", "buffer", "pointer", "pointer", "pointer"],
      result: "u32",
    },
    ldap_deleteW: {
      parameters: ["pointer", "buffer"],
      result: "u32",
    },
    ldap_deleteA: {
      parameters: ["pointer", "buffer"],
      result: "u32",
    },
    ldap_delete_sW: {
      parameters: ["pointer", "buffer"],
      result: "u32",
    },
    ldap_delete_sA: {
      parameters: ["pointer", "buffer"],
      result: "u32",
    },
    ldap_delete_extW: {
      parameters: ["pointer", "buffer", "pointer", "pointer", "pointer"],
      result: "u32",
    },
    ldap_delete_extA: {
      parameters: ["pointer", "buffer", "pointer", "pointer", "pointer"],
      result: "u32",
    },
    ldap_delete_ext_sW: {
      parameters: ["pointer", "buffer", "pointer", "pointer"],
      result: "u32",
    },
    ldap_delete_ext_sA: {
      parameters: ["pointer", "buffer", "pointer", "pointer"],
      result: "u32",
    },
    ldap_delete: {
      parameters: ["pointer", "buffer"],
      result: "u32",
    },
    ldap_delete_s: {
      parameters: ["pointer", "buffer"],
      result: "u32",
    },
    ldap_delete_ext: {
      parameters: ["pointer", "buffer", "pointer", "pointer", "pointer"],
      result: "u32",
    },
    ldap_delete_ext_s: {
      parameters: ["pointer", "buffer", "pointer", "pointer"],
      result: "u32",
    },
    ldap_abandon: {
      parameters: ["pointer", "u32"],
      result: "u32",
    },
    ldap_result: {
      parameters: ["pointer", "u32", "u32", "pointer", "pointer"],
      result: "u32",
    },
    ldap_msgfree: {
      parameters: ["pointer"],
      result: "u32",
    },
    ldap_result2error: {
      parameters: ["pointer", "pointer", "u32"],
      result: "u32",
    },
    ldap_parse_resultW: {
      parameters: ["pointer", "pointer", "pointer", "pointer", "pointer", "pointer", "pointer", "pointer"],
      result: "u32",
    },
    ldap_parse_resultA: {
      parameters: ["pointer", "pointer", "pointer", "pointer", "pointer", "pointer", "pointer", "pointer"],
      result: "u32",
    },
    ldap_parse_extended_resultA: {
      parameters: ["pointer", "pointer", "pointer", "pointer", "pointer"],
      result: "u32",
    },
    ldap_parse_extended_resultW: {
      parameters: ["pointer", "pointer", "pointer", "pointer", "pointer"],
      result: "u32",
    },
    ldap_controls_freeA: {
      parameters: ["pointer"],
      result: "u32",
    },
    ldap_control_freeA: {
      parameters: ["pointer"],
      result: "u32",
    },
    ldap_controls_freeW: {
      parameters: ["pointer"],
      result: "u32",
    },
    ldap_control_freeW: {
      parameters: ["pointer"],
      result: "u32",
    },
    ldap_free_controlsW: {
      parameters: ["pointer"],
      result: "u32",
    },
    ldap_free_controlsA: {
      parameters: ["pointer"],
      result: "u32",
    },
    ldap_parse_result: {
      parameters: ["pointer", "pointer", "pointer", "pointer", "pointer", "pointer", "pointer", "pointer"],
      result: "u32",
    },
    ldap_controls_free: {
      parameters: ["pointer"],
      result: "u32",
    },
    ldap_control_free: {
      parameters: ["pointer"],
      result: "u32",
    },
    ldap_free_controls: {
      parameters: ["pointer"],
      result: "u32",
    },
    ldap_err2stringW: {
      parameters: ["u32"],
      result: "buffer",
    },
    ldap_err2stringA: {
      parameters: ["u32"],
      result: "buffer",
    },
    ldap_err2string: {
      parameters: ["u32"],
      result: "buffer",
    },
    ldap_perror: {
      parameters: ["pointer", "buffer"],
      result: "void",
    },
    ldap_first_entry: {
      parameters: ["pointer", "pointer"],
      result: "pointer",
    },
    ldap_next_entry: {
      parameters: ["pointer", "pointer"],
      result: "pointer",
    },
    ldap_count_entries: {
      parameters: ["pointer", "pointer"],
      result: "u32",
    },
    ldap_first_attributeW: {
      parameters: ["pointer", "pointer", "pointer"],
      result: "buffer",
    },
    ldap_first_attributeA: {
      parameters: ["pointer", "pointer", "pointer"],
      result: "buffer",
    },
    ldap_first_attribute: {
      parameters: ["pointer", "pointer", "pointer"],
      result: "buffer",
    },
    ldap_next_attributeW: {
      parameters: ["pointer", "pointer", "pointer"],
      result: "buffer",
    },
    ldap_next_attributeA: {
      parameters: ["pointer", "pointer", "pointer"],
      result: "buffer",
    },
    ldap_next_attribute: {
      parameters: ["pointer", "pointer", "pointer"],
      result: "buffer",
    },
    ldap_get_valuesW: {
      parameters: ["pointer", "pointer", "buffer"],
      result: "pointer",
    },
    ldap_get_valuesA: {
      parameters: ["pointer", "pointer", "buffer"],
      result: "pointer",
    },
    ldap_get_values: {
      parameters: ["pointer", "pointer", "buffer"],
      result: "pointer",
    },
    ldap_get_values_lenW: {
      parameters: ["pointer", "pointer", "buffer"],
      result: "pointer",
    },
    ldap_get_values_lenA: {
      parameters: ["pointer", "pointer", "buffer"],
      result: "pointer",
    },
    ldap_get_values_len: {
      parameters: ["pointer", "pointer", "buffer"],
      result: "pointer",
    },
    ldap_count_valuesW: {
      parameters: ["pointer"],
      result: "u32",
    },
    ldap_count_valuesA: {
      parameters: ["pointer"],
      result: "u32",
    },
    ldap_count_values: {
      parameters: ["pointer"],
      result: "u32",
    },
    ldap_count_values_len: {
      parameters: ["pointer"],
      result: "u32",
    },
    ldap_value_freeW: {
      parameters: ["pointer"],
      result: "u32",
    },
    ldap_value_freeA: {
      parameters: ["pointer"],
      result: "u32",
    },
    ldap_value_free: {
      parameters: ["pointer"],
      result: "u32",
    },
    ldap_value_free_len: {
      parameters: ["pointer"],
      result: "u32",
    },
    ldap_get_dnW: {
      parameters: ["pointer", "pointer"],
      result: "buffer",
    },
    ldap_get_dnA: {
      parameters: ["pointer", "pointer"],
      result: "buffer",
    },
    ldap_get_dn: {
      parameters: ["pointer", "pointer"],
      result: "buffer",
    },
    ldap_explode_dnW: {
      parameters: ["buffer", "u32"],
      result: "pointer",
    },
    ldap_explode_dnA: {
      parameters: ["buffer", "u32"],
      result: "pointer",
    },
    ldap_explode_dn: {
      parameters: ["buffer", "u32"],
      result: "pointer",
    },
    ldap_dn2ufnW: {
      parameters: ["buffer"],
      result: "buffer",
    },
    ldap_dn2ufnA: {
      parameters: ["buffer"],
      result: "buffer",
    },
    ldap_dn2ufn: {
      parameters: ["buffer"],
      result: "buffer",
    },
    ldap_memfreeW: {
      parameters: ["buffer"],
      result: "void",
    },
    ldap_memfreeA: {
      parameters: ["buffer"],
      result: "void",
    },
    ber_bvfree: {
      parameters: ["pointer"],
      result: "void",
    },
    ldap_memfree: {
      parameters: ["buffer"],
      result: "void",
    },
    ldap_ufn2dnW: {
      parameters: ["buffer", "pointer"],
      result: "u32",
    },
    ldap_ufn2dnA: {
      parameters: ["buffer", "pointer"],
      result: "u32",
    },
    ldap_ufn2dn: {
      parameters: ["buffer", "pointer"],
      result: "u32",
    },
    ldap_startup: {
      parameters: ["pointer", "pointer"],
      result: "u32",
    },
    ldap_cleanup: {
      parameters: ["pointer"],
      result: "u32",
    },
    ldap_escape_filter_elementW: {
      parameters: ["buffer", "u32", "buffer", "u32"],
      result: "u32",
    },
    ldap_escape_filter_elementA: {
      parameters: ["buffer", "u32", "buffer", "u32"],
      result: "u32",
    },
    ldap_escape_filter_element: {
      parameters: ["buffer", "u32", "buffer", "u32"],
      result: "u32",
    },
    ldap_set_dbg_flags: {
      parameters: ["u32"],
      result: "u32",
    },
    ldap_set_dbg_routine: {
      parameters: ["pointer"],
      result: "void",
    },
    LdapUTF8ToUnicode: {
      parameters: ["buffer", "i32", "buffer", "i32"],
      result: "i32",
    },
    LdapUnicodeToUTF8: {
      parameters: ["buffer", "i32", "buffer", "i32"],
      result: "i32",
    },
    ldap_create_sort_controlA: {
      parameters: ["pointer", "pointer", "u8", "pointer"],
      result: "u32",
    },
    ldap_create_sort_controlW: {
      parameters: ["pointer", "pointer", "u8", "pointer"],
      result: "u32",
    },
    ldap_parse_sort_controlA: {
      parameters: ["pointer", "pointer", "pointer", "pointer"],
      result: "u32",
    },
    ldap_parse_sort_controlW: {
      parameters: ["pointer", "pointer", "pointer", "pointer"],
      result: "u32",
    },
    ldap_create_sort_control: {
      parameters: ["pointer", "pointer", "u8", "pointer"],
      result: "u32",
    },
    ldap_parse_sort_control: {
      parameters: ["pointer", "pointer", "pointer", "pointer"],
      result: "u32",
    },
    ldap_encode_sort_controlW: {
      parameters: ["pointer", "pointer", "pointer", "pointer"],
      result: "u32",
    },
    ldap_encode_sort_controlA: {
      parameters: ["pointer", "pointer", "pointer", "pointer"],
      result: "u32",
    },
    ldap_create_page_controlW: {
      parameters: ["pointer", "u32", "pointer", "u8", "pointer"],
      result: "u32",
    },
    ldap_create_page_controlA: {
      parameters: ["pointer", "u32", "pointer", "u8", "pointer"],
      result: "u32",
    },
    ldap_parse_page_controlW: {
      parameters: ["pointer", "pointer", "pointer", "pointer"],
      result: "u32",
    },
    ldap_parse_page_controlA: {
      parameters: ["pointer", "pointer", "pointer", "pointer"],
      result: "u32",
    },
    ldap_create_page_control: {
      parameters: ["pointer", "u32", "pointer", "u8", "pointer"],
      result: "u32",
    },
    ldap_parse_page_control: {
      parameters: ["pointer", "pointer", "pointer", "pointer"],
      result: "u32",
    },
    ldap_search_init_pageW: {
      parameters: ["pointer", "buffer", "u32", "buffer", "pointer", "u32", "pointer", "pointer", "u32", "u32", "pointer"],
      result: "pointer",
    },
    ldap_search_init_pageA: {
      parameters: ["pointer", "buffer", "u32", "buffer", "pointer", "u32", "pointer", "pointer", "u32", "u32", "pointer"],
      result: "pointer",
    },
    ldap_search_init_page: {
      parameters: ["pointer", "buffer", "u32", "buffer", "pointer", "u32", "pointer", "pointer", "u32", "u32", "pointer"],
      result: "pointer",
    },
    ldap_get_next_page: {
      parameters: ["pointer", "pointer", "u32", "pointer"],
      result: "u32",
    },
    ldap_get_next_page_s: {
      parameters: ["pointer", "pointer", "pointer", "u32", "pointer", "pointer"],
      result: "u32",
    },
    ldap_get_paged_count: {
      parameters: ["pointer", "pointer", "pointer", "pointer"],
      result: "u32",
    },
    ldap_search_abandon_page: {
      parameters: ["pointer", "pointer"],
      result: "u32",
    },
    ldap_create_vlv_controlW: {
      parameters: ["pointer", "pointer", "u8", "pointer"],
      result: "i32",
    },
    ldap_create_vlv_controlA: {
      parameters: ["pointer", "pointer", "u8", "pointer"],
      result: "i32",
    },
    ldap_parse_vlv_controlW: {
      parameters: ["pointer", "pointer", "pointer", "pointer", "pointer", "pointer"],
      result: "i32",
    },
    ldap_parse_vlv_controlA: {
      parameters: ["pointer", "pointer", "pointer", "pointer", "pointer", "pointer"],
      result: "i32",
    },
    ldap_start_tls_sW: {
      parameters: ["pointer", "pointer", "pointer", "pointer", "pointer"],
      result: "u32",
    },
    ldap_start_tls_sA: {
      parameters: ["pointer", "pointer", "pointer", "pointer", "pointer"],
      result: "u32",
    },
    ldap_stop_tls_s: {
      parameters: ["pointer"],
      result: "pointer",
    },
    ldap_first_reference: {
      parameters: ["pointer", "pointer"],
      result: "pointer",
    },
    ldap_next_reference: {
      parameters: ["pointer", "pointer"],
      result: "pointer",
    },
    ldap_count_references: {
      parameters: ["pointer", "pointer"],
      result: "u32",
    },
    ldap_parse_referenceW: {
      parameters: ["pointer", "pointer", "pointer"],
      result: "u32",
    },
    ldap_parse_referenceA: {
      parameters: ["pointer", "pointer", "pointer"],
      result: "u32",
    },
    ldap_parse_reference: {
      parameters: ["pointer", "pointer", "pointer"],
      result: "u32",
    },
    ldap_extended_operationW: {
      parameters: ["pointer", "buffer", "pointer", "pointer", "pointer", "pointer"],
      result: "u32",
    },
    ldap_extended_operationA: {
      parameters: ["pointer", "buffer", "pointer", "pointer", "pointer", "pointer"],
      result: "u32",
    },
    ldap_extended_operation_sA: {
      parameters: ["pointer", "buffer", "pointer", "pointer", "pointer", "pointer", "pointer"],
      result: "u32",
    },
    ldap_extended_operation_sW: {
      parameters: ["pointer", "buffer", "pointer", "pointer", "pointer", "pointer", "pointer"],
      result: "u32",
    },
    ldap_extended_operation: {
      parameters: ["pointer", "buffer", "pointer", "pointer", "pointer", "pointer"],
      result: "u32",
    },
    ldap_close_extended_op: {
      parameters: ["pointer", "u32"],
      result: "u32",
    },
    LdapGetLastError: {
      parameters: [],
      result: "u32",
    },
    LdapMapErrorToWin32: {
      parameters: ["u32"],
      result: "u32",
    },
    ldap_conn_from_msg: {
      parameters: ["pointer", "pointer"],
      result: "pointer",
    },
    ber_init: {
      parameters: ["pointer"],
      result: "pointer",
    },
    ber_free: {
      parameters: ["pointer", "i32"],
      result: "void",
    },
    ber_bvecfree: {
      parameters: ["pointer"],
      result: "void",
    },
    ber_bvdup: {
      parameters: ["pointer"],
      result: "pointer",
    },
    ber_alloc_t: {
      parameters: ["i32"],
      result: "pointer",
    },
    ber_skip_tag: {
      parameters: ["pointer", "pointer"],
      result: "u32",
    },
    ber_peek_tag: {
      parameters: ["pointer", "pointer"],
      result: "u32",
    },
    ber_first_element: {
      parameters: ["pointer", "pointer", "pointer"],
      result: "u32",
    },
    ber_next_element: {
      parameters: ["pointer", "pointer", "buffer"],
      result: "u32",
    },
    ber_flatten: {
      parameters: ["pointer", "pointer"],
      result: "i32",
    },
    ber_printf: {
      parameters: ["pointer", "buffer"],
      result: "i32",
    },
    ber_scanf: {
      parameters: ["pointer", "buffer"],
      result: "u32",
    },
  }).symbols;
} catch(e) { /* ignore */ }

// Symbols

export function ldap_openW(
  HostName: string | null /* Windows.Win32.Foundation.PWSTR */,
  PortNumber: number /* u32 */,
): Deno.PointerValue | null /* ptr */ {
  return util.pointerFromFfi(libWLDAP32.ldap_openW(util.pwstrToFfi(HostName), PortNumber));
}

export function ldap_openA(
  HostName: string | null /* Windows.Win32.Foundation.PSTR */,
  PortNumber: number /* u32 */,
): Deno.PointerValue | null /* ptr */ {
  return util.pointerFromFfi(libWLDAP32.ldap_openA(util.pstrToFfi(HostName), PortNumber));
}

export function ldap_initW(
  HostName: string | null /* Windows.Win32.Foundation.PWSTR */,
  PortNumber: number /* u32 */,
): Deno.PointerValue | null /* ptr */ {
  return util.pointerFromFfi(libWLDAP32.ldap_initW(util.pwstrToFfi(HostName), PortNumber));
}

export function ldap_initA(
  HostName: string | null /* Windows.Win32.Foundation.PSTR */,
  PortNumber: number /* u32 */,
): Deno.PointerValue | null /* ptr */ {
  return util.pointerFromFfi(libWLDAP32.ldap_initA(util.pstrToFfi(HostName), PortNumber));
}

export function ldap_sslinitW(
  HostName: string | null /* Windows.Win32.Foundation.PWSTR */,
  PortNumber: number /* u32 */,
  secure: number /* i32 */,
): Deno.PointerValue | null /* ptr */ {
  return util.pointerFromFfi(libWLDAP32.ldap_sslinitW(util.pwstrToFfi(HostName), PortNumber, secure));
}

export function ldap_sslinitA(
  HostName: string | null /* Windows.Win32.Foundation.PSTR */,
  PortNumber: number /* u32 */,
  secure: number /* i32 */,
): Deno.PointerValue | null /* ptr */ {
  return util.pointerFromFfi(libWLDAP32.ldap_sslinitA(util.pstrToFfi(HostName), PortNumber, secure));
}

export function ldap_connect(
  ld: Deno.PointerValue | Uint8Array | null /* ptr */,
  timeout: Deno.PointerValue | Uint8Array | null /* ptr */,
): number /* u32 */ {
  return libWLDAP32.ldap_connect(util.toPointer(ld), util.toPointer(timeout));
}

export function ldap_open(
  HostName: string | null /* Windows.Win32.Foundation.PSTR */,
  PortNumber: number /* u32 */,
): Deno.PointerValue | null /* ptr */ {
  return util.pointerFromFfi(libWLDAP32.ldap_open(util.pstrToFfi(HostName), PortNumber));
}

export function ldap_init(
  HostName: string | null /* Windows.Win32.Foundation.PSTR */,
  PortNumber: number /* u32 */,
): Deno.PointerValue | null /* ptr */ {
  return util.pointerFromFfi(libWLDAP32.ldap_init(util.pstrToFfi(HostName), PortNumber));
}

export function ldap_sslinit(
  HostName: string | null /* Windows.Win32.Foundation.PSTR */,
  PortNumber: number /* u32 */,
  secure: number /* i32 */,
): Deno.PointerValue | null /* ptr */ {
  return util.pointerFromFfi(libWLDAP32.ldap_sslinit(util.pstrToFfi(HostName), PortNumber, secure));
}

export function cldap_openW(
  HostName: string | null /* Windows.Win32.Foundation.PWSTR */,
  PortNumber: number /* u32 */,
): Deno.PointerValue | null /* ptr */ {
  return util.pointerFromFfi(libWLDAP32.cldap_openW(util.pwstrToFfi(HostName), PortNumber));
}

export function cldap_openA(
  HostName: string | null /* Windows.Win32.Foundation.PSTR */,
  PortNumber: number /* u32 */,
): Deno.PointerValue | null /* ptr */ {
  return util.pointerFromFfi(libWLDAP32.cldap_openA(util.pstrToFfi(HostName), PortNumber));
}

export function cldap_open(
  HostName: string | null /* Windows.Win32.Foundation.PSTR */,
  PortNumber: number /* u32 */,
): Deno.PointerValue | null /* ptr */ {
  return util.pointerFromFfi(libWLDAP32.cldap_open(util.pstrToFfi(HostName), PortNumber));
}

export function ldap_unbind(
  ld: Deno.PointerValue | Uint8Array | null /* ptr */,
): number /* u32 */ {
  return libWLDAP32.ldap_unbind(util.toPointer(ld));
}

export function ldap_unbind_s(
  ld: Deno.PointerValue | Uint8Array | null /* ptr */,
): number /* u32 */ {
  return libWLDAP32.ldap_unbind_s(util.toPointer(ld));
}

export function ldap_get_option(
  ld: Deno.PointerValue | Uint8Array | null /* ptr */,
  option: number /* i32 */,
  outvalue: Deno.PointerValue | Uint8Array | null /* ptr */,
): number /* u32 */ {
  return libWLDAP32.ldap_get_option(util.toPointer(ld), option, util.toPointer(outvalue));
}

export function ldap_get_optionW(
  ld: Deno.PointerValue | Uint8Array | null /* ptr */,
  option: number /* i32 */,
  outvalue: Deno.PointerValue | Uint8Array | null /* ptr */,
): number /* u32 */ {
  return libWLDAP32.ldap_get_optionW(util.toPointer(ld), option, util.toPointer(outvalue));
}

export function ldap_set_option(
  ld: Deno.PointerValue | Uint8Array | null /* ptr */,
  option: number /* i32 */,
  invalue: Deno.PointerValue | Uint8Array | null /* ptr */,
): number /* u32 */ {
  return libWLDAP32.ldap_set_option(util.toPointer(ld), option, util.toPointer(invalue));
}

export function ldap_set_optionW(
  ld: Deno.PointerValue | Uint8Array | null /* ptr */,
  option: number /* i32 */,
  invalue: Deno.PointerValue | Uint8Array | null /* ptr */,
): number /* u32 */ {
  return libWLDAP32.ldap_set_optionW(util.toPointer(ld), option, util.toPointer(invalue));
}

export function ldap_simple_bindW(
  ld: Deno.PointerValue | Uint8Array | null /* ptr */,
  dn: string | null /* Windows.Win32.Foundation.PWSTR */,
  passwd: string | null /* Windows.Win32.Foundation.PWSTR */,
): number /* u32 */ {
  return libWLDAP32.ldap_simple_bindW(util.toPointer(ld), util.pwstrToFfi(dn), util.pwstrToFfi(passwd));
}

export function ldap_simple_bindA(
  ld: Deno.PointerValue | Uint8Array | null /* ptr */,
  dn: string | null /* Windows.Win32.Foundation.PSTR */,
  passwd: string | null /* Windows.Win32.Foundation.PSTR */,
): number /* u32 */ {
  return libWLDAP32.ldap_simple_bindA(util.toPointer(ld), util.pstrToFfi(dn), util.pstrToFfi(passwd));
}

export function ldap_simple_bind_sW(
  ld: Deno.PointerValue | Uint8Array | null /* ptr */,
  dn: string | null /* Windows.Win32.Foundation.PWSTR */,
  passwd: string | null /* Windows.Win32.Foundation.PWSTR */,
): number /* u32 */ {
  return libWLDAP32.ldap_simple_bind_sW(util.toPointer(ld), util.pwstrToFfi(dn), util.pwstrToFfi(passwd));
}

export function ldap_simple_bind_sA(
  ld: Deno.PointerValue | Uint8Array | null /* ptr */,
  dn: string | null /* Windows.Win32.Foundation.PSTR */,
  passwd: string | null /* Windows.Win32.Foundation.PSTR */,
): number /* u32 */ {
  return libWLDAP32.ldap_simple_bind_sA(util.toPointer(ld), util.pstrToFfi(dn), util.pstrToFfi(passwd));
}

export function ldap_bindW(
  ld: Deno.PointerValue | Uint8Array | null /* ptr */,
  dn: string | null /* Windows.Win32.Foundation.PWSTR */,
  cred: string | null /* Windows.Win32.Foundation.PWSTR */,
  method: number /* u32 */,
): number /* u32 */ {
  return libWLDAP32.ldap_bindW(util.toPointer(ld), util.pwstrToFfi(dn), util.pwstrToFfi(cred), method);
}

export function ldap_bindA(
  ld: Deno.PointerValue | Uint8Array | null /* ptr */,
  dn: string | null /* Windows.Win32.Foundation.PSTR */,
  cred: string | null /* Windows.Win32.Foundation.PSTR */,
  method: number /* u32 */,
): number /* u32 */ {
  return libWLDAP32.ldap_bindA(util.toPointer(ld), util.pstrToFfi(dn), util.pstrToFfi(cred), method);
}

export function ldap_bind_sW(
  ld: Deno.PointerValue | Uint8Array | null /* ptr */,
  dn: string | null /* Windows.Win32.Foundation.PWSTR */,
  cred: string | null /* Windows.Win32.Foundation.PWSTR */,
  method: number /* u32 */,
): number /* u32 */ {
  return libWLDAP32.ldap_bind_sW(util.toPointer(ld), util.pwstrToFfi(dn), util.pwstrToFfi(cred), method);
}

export function ldap_bind_sA(
  ld: Deno.PointerValue | Uint8Array | null /* ptr */,
  dn: string | null /* Windows.Win32.Foundation.PSTR */,
  cred: string | null /* Windows.Win32.Foundation.PSTR */,
  method: number /* u32 */,
): number /* u32 */ {
  return libWLDAP32.ldap_bind_sA(util.toPointer(ld), util.pstrToFfi(dn), util.pstrToFfi(cred), method);
}

export function ldap_sasl_bindA(
  ExternalHandle: Deno.PointerValue | Uint8Array | null /* ptr */,
  DistName: string | null /* Windows.Win32.Foundation.PSTR */,
  AuthMechanism: string | null /* Windows.Win32.Foundation.PSTR */,
  cred: Deno.PointerValue | Uint8Array | null /* ptr */,
  ServerCtrls: Deno.PointerValue | Uint8Array | null /* ptr */,
  ClientCtrls: Deno.PointerValue | Uint8Array | null /* ptr */,
  MessageNumber: Deno.PointerValue | Uint8Array | null /* ptr */,
): number /* i32 */ {
  return libWLDAP32.ldap_sasl_bindA(util.toPointer(ExternalHandle), util.pstrToFfi(DistName), util.pstrToFfi(AuthMechanism), util.toPointer(cred), util.toPointer(ServerCtrls), util.toPointer(ClientCtrls), util.toPointer(MessageNumber));
}

export function ldap_sasl_bindW(
  ExternalHandle: Deno.PointerValue | Uint8Array | null /* ptr */,
  DistName: string | null /* Windows.Win32.Foundation.PWSTR */,
  AuthMechanism: string | null /* Windows.Win32.Foundation.PWSTR */,
  cred: Deno.PointerValue | Uint8Array | null /* ptr */,
  ServerCtrls: Deno.PointerValue | Uint8Array | null /* ptr */,
  ClientCtrls: Deno.PointerValue | Uint8Array | null /* ptr */,
  MessageNumber: Deno.PointerValue | Uint8Array | null /* ptr */,
): number /* i32 */ {
  return libWLDAP32.ldap_sasl_bindW(util.toPointer(ExternalHandle), util.pwstrToFfi(DistName), util.pwstrToFfi(AuthMechanism), util.toPointer(cred), util.toPointer(ServerCtrls), util.toPointer(ClientCtrls), util.toPointer(MessageNumber));
}

export function ldap_sasl_bind_sA(
  ExternalHandle: Deno.PointerValue | Uint8Array | null /* ptr */,
  DistName: string | null /* Windows.Win32.Foundation.PSTR */,
  AuthMechanism: string | null /* Windows.Win32.Foundation.PSTR */,
  cred: Deno.PointerValue | Uint8Array | null /* ptr */,
  ServerCtrls: Deno.PointerValue | Uint8Array | null /* ptr */,
  ClientCtrls: Deno.PointerValue | Uint8Array | null /* ptr */,
  ServerData: Deno.PointerValue | Uint8Array | null /* ptr */,
): number /* i32 */ {
  return libWLDAP32.ldap_sasl_bind_sA(util.toPointer(ExternalHandle), util.pstrToFfi(DistName), util.pstrToFfi(AuthMechanism), util.toPointer(cred), util.toPointer(ServerCtrls), util.toPointer(ClientCtrls), util.toPointer(ServerData));
}

export function ldap_sasl_bind_sW(
  ExternalHandle: Deno.PointerValue | Uint8Array | null /* ptr */,
  DistName: string | null /* Windows.Win32.Foundation.PWSTR */,
  AuthMechanism: string | null /* Windows.Win32.Foundation.PWSTR */,
  cred: Deno.PointerValue | Uint8Array | null /* ptr */,
  ServerCtrls: Deno.PointerValue | Uint8Array | null /* ptr */,
  ClientCtrls: Deno.PointerValue | Uint8Array | null /* ptr */,
  ServerData: Deno.PointerValue | Uint8Array | null /* ptr */,
): number /* i32 */ {
  return libWLDAP32.ldap_sasl_bind_sW(util.toPointer(ExternalHandle), util.pwstrToFfi(DistName), util.pwstrToFfi(AuthMechanism), util.toPointer(cred), util.toPointer(ServerCtrls), util.toPointer(ClientCtrls), util.toPointer(ServerData));
}

export function ldap_simple_bind(
  ld: Deno.PointerValue | Uint8Array | null /* ptr */,
  dn: string | null /* Windows.Win32.Foundation.PSTR */,
  passwd: string | null /* Windows.Win32.Foundation.PSTR */,
): number /* u32 */ {
  return libWLDAP32.ldap_simple_bind(util.toPointer(ld), util.pstrToFfi(dn), util.pstrToFfi(passwd));
}

export function ldap_simple_bind_s(
  ld: Deno.PointerValue | Uint8Array | null /* ptr */,
  dn: string | null /* Windows.Win32.Foundation.PSTR */,
  passwd: string | null /* Windows.Win32.Foundation.PSTR */,
): number /* u32 */ {
  return libWLDAP32.ldap_simple_bind_s(util.toPointer(ld), util.pstrToFfi(dn), util.pstrToFfi(passwd));
}

export function ldap_bind(
  ld: Deno.PointerValue | Uint8Array | null /* ptr */,
  dn: string | null /* Windows.Win32.Foundation.PSTR */,
  cred: string | null /* Windows.Win32.Foundation.PSTR */,
  method: number /* u32 */,
): number /* u32 */ {
  return libWLDAP32.ldap_bind(util.toPointer(ld), util.pstrToFfi(dn), util.pstrToFfi(cred), method);
}

export function ldap_bind_s(
  ld: Deno.PointerValue | Uint8Array | null /* ptr */,
  dn: string | null /* Windows.Win32.Foundation.PSTR */,
  cred: string | null /* Windows.Win32.Foundation.PSTR */,
  method: number /* u32 */,
): number /* u32 */ {
  return libWLDAP32.ldap_bind_s(util.toPointer(ld), util.pstrToFfi(dn), util.pstrToFfi(cred), method);
}

export function ldap_searchW(
  ld: Deno.PointerValue | Uint8Array | null /* ptr */,
  base: string | null /* Windows.Win32.Foundation.PWSTR */,
  scope: number /* u32 */,
  filter: string | null /* Windows.Win32.Foundation.PWSTR */,
  attrs: Deno.PointerValue | Uint8Array | null /* ptr */,
  attrsonly: number /* u32 */,
): number /* u32 */ {
  return libWLDAP32.ldap_searchW(util.toPointer(ld), util.pwstrToFfi(base), scope, util.pwstrToFfi(filter), util.toPointer(attrs), attrsonly);
}

export function ldap_searchA(
  ld: Deno.PointerValue | Uint8Array | null /* ptr */,
  base: string | null /* Windows.Win32.Foundation.PSTR */,
  scope: number /* u32 */,
  filter: string | null /* Windows.Win32.Foundation.PSTR */,
  attrs: Deno.PointerValue | Uint8Array | null /* ptr */,
  attrsonly: number /* u32 */,
): number /* u32 */ {
  return libWLDAP32.ldap_searchA(util.toPointer(ld), util.pstrToFfi(base), scope, util.pstrToFfi(filter), util.toPointer(attrs), attrsonly);
}

export function ldap_search_sW(
  ld: Deno.PointerValue | Uint8Array | null /* ptr */,
  base: string | null /* Windows.Win32.Foundation.PWSTR */,
  scope: number /* u32 */,
  filter: string | null /* Windows.Win32.Foundation.PWSTR */,
  attrs: Deno.PointerValue | Uint8Array | null /* ptr */,
  attrsonly: number /* u32 */,
  res: Deno.PointerValue | Uint8Array | null /* ptr */,
): number /* u32 */ {
  return libWLDAP32.ldap_search_sW(util.toPointer(ld), util.pwstrToFfi(base), scope, util.pwstrToFfi(filter), util.toPointer(attrs), attrsonly, util.toPointer(res));
}

export function ldap_search_sA(
  ld: Deno.PointerValue | Uint8Array | null /* ptr */,
  base: string | null /* Windows.Win32.Foundation.PSTR */,
  scope: number /* u32 */,
  filter: string | null /* Windows.Win32.Foundation.PSTR */,
  attrs: Deno.PointerValue | Uint8Array | null /* ptr */,
  attrsonly: number /* u32 */,
  res: Deno.PointerValue | Uint8Array | null /* ptr */,
): number /* u32 */ {
  return libWLDAP32.ldap_search_sA(util.toPointer(ld), util.pstrToFfi(base), scope, util.pstrToFfi(filter), util.toPointer(attrs), attrsonly, util.toPointer(res));
}

export function ldap_search_stW(
  ld: Deno.PointerValue | Uint8Array | null /* ptr */,
  base: string | null /* Windows.Win32.Foundation.PWSTR */,
  scope: number /* u32 */,
  filter: string | null /* Windows.Win32.Foundation.PWSTR */,
  attrs: Deno.PointerValue | Uint8Array | null /* ptr */,
  attrsonly: number /* u32 */,
  timeout: Deno.PointerValue | Uint8Array | null /* ptr */,
  res: Deno.PointerValue | Uint8Array | null /* ptr */,
): number /* u32 */ {
  return libWLDAP32.ldap_search_stW(util.toPointer(ld), util.pwstrToFfi(base), scope, util.pwstrToFfi(filter), util.toPointer(attrs), attrsonly, util.toPointer(timeout), util.toPointer(res));
}

export function ldap_search_stA(
  ld: Deno.PointerValue | Uint8Array | null /* ptr */,
  base: string | null /* Windows.Win32.Foundation.PSTR */,
  scope: number /* u32 */,
  filter: string | null /* Windows.Win32.Foundation.PSTR */,
  attrs: Deno.PointerValue | Uint8Array | null /* ptr */,
  attrsonly: number /* u32 */,
  timeout: Deno.PointerValue | Uint8Array | null /* ptr */,
  res: Deno.PointerValue | Uint8Array | null /* ptr */,
): number /* u32 */ {
  return libWLDAP32.ldap_search_stA(util.toPointer(ld), util.pstrToFfi(base), scope, util.pstrToFfi(filter), util.toPointer(attrs), attrsonly, util.toPointer(timeout), util.toPointer(res));
}

export function ldap_search_extW(
  ld: Deno.PointerValue | Uint8Array | null /* ptr */,
  base: string | null /* Windows.Win32.Foundation.PWSTR */,
  scope: number /* u32 */,
  filter: string | null /* Windows.Win32.Foundation.PWSTR */,
  attrs: Deno.PointerValue | Uint8Array | null /* ptr */,
  attrsonly: number /* u32 */,
  ServerControls: Deno.PointerValue | Uint8Array | null /* ptr */,
  ClientControls: Deno.PointerValue | Uint8Array | null /* ptr */,
  TimeLimit: number /* u32 */,
  SizeLimit: number /* u32 */,
  MessageNumber: Deno.PointerValue | Uint8Array | null /* ptr */,
): number /* u32 */ {
  return libWLDAP32.ldap_search_extW(util.toPointer(ld), util.pwstrToFfi(base), scope, util.pwstrToFfi(filter), util.toPointer(attrs), attrsonly, util.toPointer(ServerControls), util.toPointer(ClientControls), TimeLimit, SizeLimit, util.toPointer(MessageNumber));
}

export function ldap_search_extA(
  ld: Deno.PointerValue | Uint8Array | null /* ptr */,
  base: string | null /* Windows.Win32.Foundation.PSTR */,
  scope: number /* u32 */,
  filter: string | null /* Windows.Win32.Foundation.PSTR */,
  attrs: Deno.PointerValue | Uint8Array | null /* ptr */,
  attrsonly: number /* u32 */,
  ServerControls: Deno.PointerValue | Uint8Array | null /* ptr */,
  ClientControls: Deno.PointerValue | Uint8Array | null /* ptr */,
  TimeLimit: number /* u32 */,
  SizeLimit: number /* u32 */,
  MessageNumber: Deno.PointerValue | Uint8Array | null /* ptr */,
): number /* u32 */ {
  return libWLDAP32.ldap_search_extA(util.toPointer(ld), util.pstrToFfi(base), scope, util.pstrToFfi(filter), util.toPointer(attrs), attrsonly, util.toPointer(ServerControls), util.toPointer(ClientControls), TimeLimit, SizeLimit, util.toPointer(MessageNumber));
}

export function ldap_search_ext_sW(
  ld: Deno.PointerValue | Uint8Array | null /* ptr */,
  base: string | null /* Windows.Win32.Foundation.PWSTR */,
  scope: number /* u32 */,
  filter: string | null /* Windows.Win32.Foundation.PWSTR */,
  attrs: Deno.PointerValue | Uint8Array | null /* ptr */,
  attrsonly: number /* u32 */,
  ServerControls: Deno.PointerValue | Uint8Array | null /* ptr */,
  ClientControls: Deno.PointerValue | Uint8Array | null /* ptr */,
  timeout: Deno.PointerValue | Uint8Array | null /* ptr */,
  SizeLimit: number /* u32 */,
  res: Deno.PointerValue | Uint8Array | null /* ptr */,
): number /* u32 */ {
  return libWLDAP32.ldap_search_ext_sW(util.toPointer(ld), util.pwstrToFfi(base), scope, util.pwstrToFfi(filter), util.toPointer(attrs), attrsonly, util.toPointer(ServerControls), util.toPointer(ClientControls), util.toPointer(timeout), SizeLimit, util.toPointer(res));
}

export function ldap_search_ext_sA(
  ld: Deno.PointerValue | Uint8Array | null /* ptr */,
  base: string | null /* Windows.Win32.Foundation.PSTR */,
  scope: number /* u32 */,
  filter: string | null /* Windows.Win32.Foundation.PSTR */,
  attrs: Deno.PointerValue | Uint8Array | null /* ptr */,
  attrsonly: number /* u32 */,
  ServerControls: Deno.PointerValue | Uint8Array | null /* ptr */,
  ClientControls: Deno.PointerValue | Uint8Array | null /* ptr */,
  timeout: Deno.PointerValue | Uint8Array | null /* ptr */,
  SizeLimit: number /* u32 */,
  res: Deno.PointerValue | Uint8Array | null /* ptr */,
): number /* u32 */ {
  return libWLDAP32.ldap_search_ext_sA(util.toPointer(ld), util.pstrToFfi(base), scope, util.pstrToFfi(filter), util.toPointer(attrs), attrsonly, util.toPointer(ServerControls), util.toPointer(ClientControls), util.toPointer(timeout), SizeLimit, util.toPointer(res));
}

export function ldap_search(
  ld: Deno.PointerValue | Uint8Array | null /* ptr */,
  base: string | null /* Windows.Win32.Foundation.PSTR */,
  scope: number /* u32 */,
  filter: string | null /* Windows.Win32.Foundation.PSTR */,
  attrs: Deno.PointerValue | Uint8Array | null /* ptr */,
  attrsonly: number /* u32 */,
): number /* u32 */ {
  return libWLDAP32.ldap_search(util.toPointer(ld), util.pstrToFfi(base), scope, util.pstrToFfi(filter), util.toPointer(attrs), attrsonly);
}

export function ldap_search_s(
  ld: Deno.PointerValue | Uint8Array | null /* ptr */,
  base: string | null /* Windows.Win32.Foundation.PSTR */,
  scope: number /* u32 */,
  filter: string | null /* Windows.Win32.Foundation.PSTR */,
  attrs: Deno.PointerValue | Uint8Array | null /* ptr */,
  attrsonly: number /* u32 */,
  res: Deno.PointerValue | Uint8Array | null /* ptr */,
): number /* u32 */ {
  return libWLDAP32.ldap_search_s(util.toPointer(ld), util.pstrToFfi(base), scope, util.pstrToFfi(filter), util.toPointer(attrs), attrsonly, util.toPointer(res));
}

export function ldap_search_st(
  ld: Deno.PointerValue | Uint8Array | null /* ptr */,
  base: string | null /* Windows.Win32.Foundation.PSTR */,
  scope: number /* u32 */,
  filter: string | null /* Windows.Win32.Foundation.PSTR */,
  attrs: Deno.PointerValue | Uint8Array | null /* ptr */,
  attrsonly: number /* u32 */,
  timeout: Deno.PointerValue | Uint8Array | null /* ptr */,
  res: Deno.PointerValue | Uint8Array | null /* ptr */,
): number /* u32 */ {
  return libWLDAP32.ldap_search_st(util.toPointer(ld), util.pstrToFfi(base), scope, util.pstrToFfi(filter), util.toPointer(attrs), attrsonly, util.toPointer(timeout), util.toPointer(res));
}

export function ldap_search_ext(
  ld: Deno.PointerValue | Uint8Array | null /* ptr */,
  base: string | null /* Windows.Win32.Foundation.PSTR */,
  scope: number /* u32 */,
  filter: string | null /* Windows.Win32.Foundation.PSTR */,
  attrs: Deno.PointerValue | Uint8Array | null /* ptr */,
  attrsonly: number /* u32 */,
  ServerControls: Deno.PointerValue | Uint8Array | null /* ptr */,
  ClientControls: Deno.PointerValue | Uint8Array | null /* ptr */,
  TimeLimit: number /* u32 */,
  SizeLimit: number /* u32 */,
  MessageNumber: Deno.PointerValue | Uint8Array | null /* ptr */,
): number /* u32 */ {
  return libWLDAP32.ldap_search_ext(util.toPointer(ld), util.pstrToFfi(base), scope, util.pstrToFfi(filter), util.toPointer(attrs), attrsonly, util.toPointer(ServerControls), util.toPointer(ClientControls), TimeLimit, SizeLimit, util.toPointer(MessageNumber));
}

export function ldap_search_ext_s(
  ld: Deno.PointerValue | Uint8Array | null /* ptr */,
  base: string | null /* Windows.Win32.Foundation.PSTR */,
  scope: number /* u32 */,
  filter: string | null /* Windows.Win32.Foundation.PSTR */,
  attrs: Deno.PointerValue | Uint8Array | null /* ptr */,
  attrsonly: number /* u32 */,
  ServerControls: Deno.PointerValue | Uint8Array | null /* ptr */,
  ClientControls: Deno.PointerValue | Uint8Array | null /* ptr */,
  timeout: Deno.PointerValue | Uint8Array | null /* ptr */,
  SizeLimit: number /* u32 */,
  res: Deno.PointerValue | Uint8Array | null /* ptr */,
): number /* u32 */ {
  return libWLDAP32.ldap_search_ext_s(util.toPointer(ld), util.pstrToFfi(base), scope, util.pstrToFfi(filter), util.toPointer(attrs), attrsonly, util.toPointer(ServerControls), util.toPointer(ClientControls), util.toPointer(timeout), SizeLimit, util.toPointer(res));
}

export function ldap_check_filterW(
  ld: Deno.PointerValue | Uint8Array | null /* ptr */,
  SearchFilter: string | null /* Windows.Win32.Foundation.PWSTR */,
): number /* u32 */ {
  return libWLDAP32.ldap_check_filterW(util.toPointer(ld), util.pwstrToFfi(SearchFilter));
}

export function ldap_check_filterA(
  ld: Deno.PointerValue | Uint8Array | null /* ptr */,
  SearchFilter: string | null /* Windows.Win32.Foundation.PSTR */,
): number /* u32 */ {
  return libWLDAP32.ldap_check_filterA(util.toPointer(ld), util.pstrToFfi(SearchFilter));
}

export function ldap_modifyW(
  ld: Deno.PointerValue | Uint8Array | null /* ptr */,
  dn: string | null /* Windows.Win32.Foundation.PWSTR */,
  mods: Deno.PointerValue | Uint8Array | null /* ptr */,
): number /* u32 */ {
  return libWLDAP32.ldap_modifyW(util.toPointer(ld), util.pwstrToFfi(dn), util.toPointer(mods));
}

export function ldap_modifyA(
  ld: Deno.PointerValue | Uint8Array | null /* ptr */,
  dn: string | null /* Windows.Win32.Foundation.PSTR */,
  mods: Deno.PointerValue | Uint8Array | null /* ptr */,
): number /* u32 */ {
  return libWLDAP32.ldap_modifyA(util.toPointer(ld), util.pstrToFfi(dn), util.toPointer(mods));
}

export function ldap_modify_sW(
  ld: Deno.PointerValue | Uint8Array | null /* ptr */,
  dn: string | null /* Windows.Win32.Foundation.PWSTR */,
  mods: Deno.PointerValue | Uint8Array | null /* ptr */,
): number /* u32 */ {
  return libWLDAP32.ldap_modify_sW(util.toPointer(ld), util.pwstrToFfi(dn), util.toPointer(mods));
}

export function ldap_modify_sA(
  ld: Deno.PointerValue | Uint8Array | null /* ptr */,
  dn: string | null /* Windows.Win32.Foundation.PSTR */,
  mods: Deno.PointerValue | Uint8Array | null /* ptr */,
): number /* u32 */ {
  return libWLDAP32.ldap_modify_sA(util.toPointer(ld), util.pstrToFfi(dn), util.toPointer(mods));
}

export function ldap_modify_extW(
  ld: Deno.PointerValue | Uint8Array | null /* ptr */,
  dn: string | null /* Windows.Win32.Foundation.PWSTR */,
  mods: Deno.PointerValue | Uint8Array | null /* ptr */,
  ServerControls: Deno.PointerValue | Uint8Array | null /* ptr */,
  ClientControls: Deno.PointerValue | Uint8Array | null /* ptr */,
  MessageNumber: Deno.PointerValue | Uint8Array | null /* ptr */,
): number /* u32 */ {
  return libWLDAP32.ldap_modify_extW(util.toPointer(ld), util.pwstrToFfi(dn), util.toPointer(mods), util.toPointer(ServerControls), util.toPointer(ClientControls), util.toPointer(MessageNumber));
}

export function ldap_modify_extA(
  ld: Deno.PointerValue | Uint8Array | null /* ptr */,
  dn: string | null /* Windows.Win32.Foundation.PSTR */,
  mods: Deno.PointerValue | Uint8Array | null /* ptr */,
  ServerControls: Deno.PointerValue | Uint8Array | null /* ptr */,
  ClientControls: Deno.PointerValue | Uint8Array | null /* ptr */,
  MessageNumber: Deno.PointerValue | Uint8Array | null /* ptr */,
): number /* u32 */ {
  return libWLDAP32.ldap_modify_extA(util.toPointer(ld), util.pstrToFfi(dn), util.toPointer(mods), util.toPointer(ServerControls), util.toPointer(ClientControls), util.toPointer(MessageNumber));
}

export function ldap_modify_ext_sW(
  ld: Deno.PointerValue | Uint8Array | null /* ptr */,
  dn: string | null /* Windows.Win32.Foundation.PWSTR */,
  mods: Deno.PointerValue | Uint8Array | null /* ptr */,
  ServerControls: Deno.PointerValue | Uint8Array | null /* ptr */,
  ClientControls: Deno.PointerValue | Uint8Array | null /* ptr */,
): number /* u32 */ {
  return libWLDAP32.ldap_modify_ext_sW(util.toPointer(ld), util.pwstrToFfi(dn), util.toPointer(mods), util.toPointer(ServerControls), util.toPointer(ClientControls));
}

export function ldap_modify_ext_sA(
  ld: Deno.PointerValue | Uint8Array | null /* ptr */,
  dn: string | null /* Windows.Win32.Foundation.PSTR */,
  mods: Deno.PointerValue | Uint8Array | null /* ptr */,
  ServerControls: Deno.PointerValue | Uint8Array | null /* ptr */,
  ClientControls: Deno.PointerValue | Uint8Array | null /* ptr */,
): number /* u32 */ {
  return libWLDAP32.ldap_modify_ext_sA(util.toPointer(ld), util.pstrToFfi(dn), util.toPointer(mods), util.toPointer(ServerControls), util.toPointer(ClientControls));
}

export function ldap_modify(
  ld: Deno.PointerValue | Uint8Array | null /* ptr */,
  dn: string | null /* Windows.Win32.Foundation.PSTR */,
  mods: Deno.PointerValue | Uint8Array | null /* ptr */,
): number /* u32 */ {
  return libWLDAP32.ldap_modify(util.toPointer(ld), util.pstrToFfi(dn), util.toPointer(mods));
}

export function ldap_modify_s(
  ld: Deno.PointerValue | Uint8Array | null /* ptr */,
  dn: string | null /* Windows.Win32.Foundation.PSTR */,
  mods: Deno.PointerValue | Uint8Array | null /* ptr */,
): number /* u32 */ {
  return libWLDAP32.ldap_modify_s(util.toPointer(ld), util.pstrToFfi(dn), util.toPointer(mods));
}

export function ldap_modify_ext(
  ld: Deno.PointerValue | Uint8Array | null /* ptr */,
  dn: string | null /* Windows.Win32.Foundation.PSTR */,
  mods: Deno.PointerValue | Uint8Array | null /* ptr */,
  ServerControls: Deno.PointerValue | Uint8Array | null /* ptr */,
  ClientControls: Deno.PointerValue | Uint8Array | null /* ptr */,
  MessageNumber: Deno.PointerValue | Uint8Array | null /* ptr */,
): number /* u32 */ {
  return libWLDAP32.ldap_modify_ext(util.toPointer(ld), util.pstrToFfi(dn), util.toPointer(mods), util.toPointer(ServerControls), util.toPointer(ClientControls), util.toPointer(MessageNumber));
}

export function ldap_modify_ext_s(
  ld: Deno.PointerValue | Uint8Array | null /* ptr */,
  dn: string | null /* Windows.Win32.Foundation.PSTR */,
  mods: Deno.PointerValue | Uint8Array | null /* ptr */,
  ServerControls: Deno.PointerValue | Uint8Array | null /* ptr */,
  ClientControls: Deno.PointerValue | Uint8Array | null /* ptr */,
): number /* u32 */ {
  return libWLDAP32.ldap_modify_ext_s(util.toPointer(ld), util.pstrToFfi(dn), util.toPointer(mods), util.toPointer(ServerControls), util.toPointer(ClientControls));
}

export function ldap_modrdn2W(
  ExternalHandle: Deno.PointerValue | Uint8Array | null /* ptr */,
  DistinguishedName: string | null /* Windows.Win32.Foundation.PWSTR */,
  NewDistinguishedName: string | null /* Windows.Win32.Foundation.PWSTR */,
  DeleteOldRdn: number /* i32 */,
): number /* u32 */ {
  return libWLDAP32.ldap_modrdn2W(util.toPointer(ExternalHandle), util.pwstrToFfi(DistinguishedName), util.pwstrToFfi(NewDistinguishedName), DeleteOldRdn);
}

export function ldap_modrdn2A(
  ExternalHandle: Deno.PointerValue | Uint8Array | null /* ptr */,
  DistinguishedName: string | null /* Windows.Win32.Foundation.PSTR */,
  NewDistinguishedName: string | null /* Windows.Win32.Foundation.PSTR */,
  DeleteOldRdn: number /* i32 */,
): number /* u32 */ {
  return libWLDAP32.ldap_modrdn2A(util.toPointer(ExternalHandle), util.pstrToFfi(DistinguishedName), util.pstrToFfi(NewDistinguishedName), DeleteOldRdn);
}

export function ldap_modrdnW(
  ExternalHandle: Deno.PointerValue | Uint8Array | null /* ptr */,
  DistinguishedName: string | null /* Windows.Win32.Foundation.PWSTR */,
  NewDistinguishedName: string | null /* Windows.Win32.Foundation.PWSTR */,
): number /* u32 */ {
  return libWLDAP32.ldap_modrdnW(util.toPointer(ExternalHandle), util.pwstrToFfi(DistinguishedName), util.pwstrToFfi(NewDistinguishedName));
}

export function ldap_modrdnA(
  ExternalHandle: Deno.PointerValue | Uint8Array | null /* ptr */,
  DistinguishedName: string | null /* Windows.Win32.Foundation.PSTR */,
  NewDistinguishedName: string | null /* Windows.Win32.Foundation.PSTR */,
): number /* u32 */ {
  return libWLDAP32.ldap_modrdnA(util.toPointer(ExternalHandle), util.pstrToFfi(DistinguishedName), util.pstrToFfi(NewDistinguishedName));
}

export function ldap_modrdn2_sW(
  ExternalHandle: Deno.PointerValue | Uint8Array | null /* ptr */,
  DistinguishedName: string | null /* Windows.Win32.Foundation.PWSTR */,
  NewDistinguishedName: string | null /* Windows.Win32.Foundation.PWSTR */,
  DeleteOldRdn: number /* i32 */,
): number /* u32 */ {
  return libWLDAP32.ldap_modrdn2_sW(util.toPointer(ExternalHandle), util.pwstrToFfi(DistinguishedName), util.pwstrToFfi(NewDistinguishedName), DeleteOldRdn);
}

export function ldap_modrdn2_sA(
  ExternalHandle: Deno.PointerValue | Uint8Array | null /* ptr */,
  DistinguishedName: string | null /* Windows.Win32.Foundation.PSTR */,
  NewDistinguishedName: string | null /* Windows.Win32.Foundation.PSTR */,
  DeleteOldRdn: number /* i32 */,
): number /* u32 */ {
  return libWLDAP32.ldap_modrdn2_sA(util.toPointer(ExternalHandle), util.pstrToFfi(DistinguishedName), util.pstrToFfi(NewDistinguishedName), DeleteOldRdn);
}

export function ldap_modrdn_sW(
  ExternalHandle: Deno.PointerValue | Uint8Array | null /* ptr */,
  DistinguishedName: string | null /* Windows.Win32.Foundation.PWSTR */,
  NewDistinguishedName: string | null /* Windows.Win32.Foundation.PWSTR */,
): number /* u32 */ {
  return libWLDAP32.ldap_modrdn_sW(util.toPointer(ExternalHandle), util.pwstrToFfi(DistinguishedName), util.pwstrToFfi(NewDistinguishedName));
}

export function ldap_modrdn_sA(
  ExternalHandle: Deno.PointerValue | Uint8Array | null /* ptr */,
  DistinguishedName: string | null /* Windows.Win32.Foundation.PSTR */,
  NewDistinguishedName: string | null /* Windows.Win32.Foundation.PSTR */,
): number /* u32 */ {
  return libWLDAP32.ldap_modrdn_sA(util.toPointer(ExternalHandle), util.pstrToFfi(DistinguishedName), util.pstrToFfi(NewDistinguishedName));
}

export function ldap_modrdn2(
  ExternalHandle: Deno.PointerValue | Uint8Array | null /* ptr */,
  DistinguishedName: string | null /* Windows.Win32.Foundation.PSTR */,
  NewDistinguishedName: string | null /* Windows.Win32.Foundation.PSTR */,
  DeleteOldRdn: number /* i32 */,
): number /* u32 */ {
  return libWLDAP32.ldap_modrdn2(util.toPointer(ExternalHandle), util.pstrToFfi(DistinguishedName), util.pstrToFfi(NewDistinguishedName), DeleteOldRdn);
}

export function ldap_modrdn(
  ExternalHandle: Deno.PointerValue | Uint8Array | null /* ptr */,
  DistinguishedName: string | null /* Windows.Win32.Foundation.PSTR */,
  NewDistinguishedName: string | null /* Windows.Win32.Foundation.PSTR */,
): number /* u32 */ {
  return libWLDAP32.ldap_modrdn(util.toPointer(ExternalHandle), util.pstrToFfi(DistinguishedName), util.pstrToFfi(NewDistinguishedName));
}

export function ldap_modrdn2_s(
  ExternalHandle: Deno.PointerValue | Uint8Array | null /* ptr */,
  DistinguishedName: string | null /* Windows.Win32.Foundation.PSTR */,
  NewDistinguishedName: string | null /* Windows.Win32.Foundation.PSTR */,
  DeleteOldRdn: number /* i32 */,
): number /* u32 */ {
  return libWLDAP32.ldap_modrdn2_s(util.toPointer(ExternalHandle), util.pstrToFfi(DistinguishedName), util.pstrToFfi(NewDistinguishedName), DeleteOldRdn);
}

export function ldap_modrdn_s(
  ExternalHandle: Deno.PointerValue | Uint8Array | null /* ptr */,
  DistinguishedName: string | null /* Windows.Win32.Foundation.PSTR */,
  NewDistinguishedName: string | null /* Windows.Win32.Foundation.PSTR */,
): number /* u32 */ {
  return libWLDAP32.ldap_modrdn_s(util.toPointer(ExternalHandle), util.pstrToFfi(DistinguishedName), util.pstrToFfi(NewDistinguishedName));
}

export function ldap_rename_extW(
  ld: Deno.PointerValue | Uint8Array | null /* ptr */,
  dn: string | null /* Windows.Win32.Foundation.PWSTR */,
  NewRDN: string | null /* Windows.Win32.Foundation.PWSTR */,
  NewParent: string | null /* Windows.Win32.Foundation.PWSTR */,
  DeleteOldRdn: number /* i32 */,
  ServerControls: Deno.PointerValue | Uint8Array | null /* ptr */,
  ClientControls: Deno.PointerValue | Uint8Array | null /* ptr */,
  MessageNumber: Deno.PointerValue | Uint8Array | null /* ptr */,
): number /* u32 */ {
  return libWLDAP32.ldap_rename_extW(util.toPointer(ld), util.pwstrToFfi(dn), util.pwstrToFfi(NewRDN), util.pwstrToFfi(NewParent), DeleteOldRdn, util.toPointer(ServerControls), util.toPointer(ClientControls), util.toPointer(MessageNumber));
}

export function ldap_rename_extA(
  ld: Deno.PointerValue | Uint8Array | null /* ptr */,
  dn: string | null /* Windows.Win32.Foundation.PSTR */,
  NewRDN: string | null /* Windows.Win32.Foundation.PSTR */,
  NewParent: string | null /* Windows.Win32.Foundation.PSTR */,
  DeleteOldRdn: number /* i32 */,
  ServerControls: Deno.PointerValue | Uint8Array | null /* ptr */,
  ClientControls: Deno.PointerValue | Uint8Array | null /* ptr */,
  MessageNumber: Deno.PointerValue | Uint8Array | null /* ptr */,
): number /* u32 */ {
  return libWLDAP32.ldap_rename_extA(util.toPointer(ld), util.pstrToFfi(dn), util.pstrToFfi(NewRDN), util.pstrToFfi(NewParent), DeleteOldRdn, util.toPointer(ServerControls), util.toPointer(ClientControls), util.toPointer(MessageNumber));
}

export function ldap_rename_ext_sW(
  ld: Deno.PointerValue | Uint8Array | null /* ptr */,
  dn: string | null /* Windows.Win32.Foundation.PWSTR */,
  NewRDN: string | null /* Windows.Win32.Foundation.PWSTR */,
  NewParent: string | null /* Windows.Win32.Foundation.PWSTR */,
  DeleteOldRdn: number /* i32 */,
  ServerControls: Deno.PointerValue | Uint8Array | null /* ptr */,
  ClientControls: Deno.PointerValue | Uint8Array | null /* ptr */,
): number /* u32 */ {
  return libWLDAP32.ldap_rename_ext_sW(util.toPointer(ld), util.pwstrToFfi(dn), util.pwstrToFfi(NewRDN), util.pwstrToFfi(NewParent), DeleteOldRdn, util.toPointer(ServerControls), util.toPointer(ClientControls));
}

export function ldap_rename_ext_sA(
  ld: Deno.PointerValue | Uint8Array | null /* ptr */,
  dn: string | null /* Windows.Win32.Foundation.PSTR */,
  NewRDN: string | null /* Windows.Win32.Foundation.PSTR */,
  NewParent: string | null /* Windows.Win32.Foundation.PSTR */,
  DeleteOldRdn: number /* i32 */,
  ServerControls: Deno.PointerValue | Uint8Array | null /* ptr */,
  ClientControls: Deno.PointerValue | Uint8Array | null /* ptr */,
): number /* u32 */ {
  return libWLDAP32.ldap_rename_ext_sA(util.toPointer(ld), util.pstrToFfi(dn), util.pstrToFfi(NewRDN), util.pstrToFfi(NewParent), DeleteOldRdn, util.toPointer(ServerControls), util.toPointer(ClientControls));
}

export function ldap_rename_ext(
  ld: Deno.PointerValue | Uint8Array | null /* ptr */,
  dn: string | null /* Windows.Win32.Foundation.PSTR */,
  NewRDN: string | null /* Windows.Win32.Foundation.PSTR */,
  NewParent: string | null /* Windows.Win32.Foundation.PSTR */,
  DeleteOldRdn: number /* i32 */,
  ServerControls: Deno.PointerValue | Uint8Array | null /* ptr */,
  ClientControls: Deno.PointerValue | Uint8Array | null /* ptr */,
  MessageNumber: Deno.PointerValue | Uint8Array | null /* ptr */,
): number /* u32 */ {
  return libWLDAP32.ldap_rename_ext(util.toPointer(ld), util.pstrToFfi(dn), util.pstrToFfi(NewRDN), util.pstrToFfi(NewParent), DeleteOldRdn, util.toPointer(ServerControls), util.toPointer(ClientControls), util.toPointer(MessageNumber));
}

export function ldap_rename_ext_s(
  ld: Deno.PointerValue | Uint8Array | null /* ptr */,
  dn: string | null /* Windows.Win32.Foundation.PSTR */,
  NewRDN: string | null /* Windows.Win32.Foundation.PSTR */,
  NewParent: string | null /* Windows.Win32.Foundation.PSTR */,
  DeleteOldRdn: number /* i32 */,
  ServerControls: Deno.PointerValue | Uint8Array | null /* ptr */,
  ClientControls: Deno.PointerValue | Uint8Array | null /* ptr */,
): number /* u32 */ {
  return libWLDAP32.ldap_rename_ext_s(util.toPointer(ld), util.pstrToFfi(dn), util.pstrToFfi(NewRDN), util.pstrToFfi(NewParent), DeleteOldRdn, util.toPointer(ServerControls), util.toPointer(ClientControls));
}

export function ldap_addW(
  ld: Deno.PointerValue | Uint8Array | null /* ptr */,
  dn: string | null /* Windows.Win32.Foundation.PWSTR */,
  attrs: Deno.PointerValue | Uint8Array | null /* ptr */,
): number /* u32 */ {
  return libWLDAP32.ldap_addW(util.toPointer(ld), util.pwstrToFfi(dn), util.toPointer(attrs));
}

export function ldap_addA(
  ld: Deno.PointerValue | Uint8Array | null /* ptr */,
  dn: string | null /* Windows.Win32.Foundation.PSTR */,
  attrs: Deno.PointerValue | Uint8Array | null /* ptr */,
): number /* u32 */ {
  return libWLDAP32.ldap_addA(util.toPointer(ld), util.pstrToFfi(dn), util.toPointer(attrs));
}

export function ldap_add_sW(
  ld: Deno.PointerValue | Uint8Array | null /* ptr */,
  dn: string | null /* Windows.Win32.Foundation.PWSTR */,
  attrs: Deno.PointerValue | Uint8Array | null /* ptr */,
): number /* u32 */ {
  return libWLDAP32.ldap_add_sW(util.toPointer(ld), util.pwstrToFfi(dn), util.toPointer(attrs));
}

export function ldap_add_sA(
  ld: Deno.PointerValue | Uint8Array | null /* ptr */,
  dn: string | null /* Windows.Win32.Foundation.PSTR */,
  attrs: Deno.PointerValue | Uint8Array | null /* ptr */,
): number /* u32 */ {
  return libWLDAP32.ldap_add_sA(util.toPointer(ld), util.pstrToFfi(dn), util.toPointer(attrs));
}

export function ldap_add_extW(
  ld: Deno.PointerValue | Uint8Array | null /* ptr */,
  dn: string | null /* Windows.Win32.Foundation.PWSTR */,
  attrs: Deno.PointerValue | Uint8Array | null /* ptr */,
  ServerControls: Deno.PointerValue | Uint8Array | null /* ptr */,
  ClientControls: Deno.PointerValue | Uint8Array | null /* ptr */,
  MessageNumber: Deno.PointerValue | Uint8Array | null /* ptr */,
): number /* u32 */ {
  return libWLDAP32.ldap_add_extW(util.toPointer(ld), util.pwstrToFfi(dn), util.toPointer(attrs), util.toPointer(ServerControls), util.toPointer(ClientControls), util.toPointer(MessageNumber));
}

export function ldap_add_extA(
  ld: Deno.PointerValue | Uint8Array | null /* ptr */,
  dn: string | null /* Windows.Win32.Foundation.PSTR */,
  attrs: Deno.PointerValue | Uint8Array | null /* ptr */,
  ServerControls: Deno.PointerValue | Uint8Array | null /* ptr */,
  ClientControls: Deno.PointerValue | Uint8Array | null /* ptr */,
  MessageNumber: Deno.PointerValue | Uint8Array | null /* ptr */,
): number /* u32 */ {
  return libWLDAP32.ldap_add_extA(util.toPointer(ld), util.pstrToFfi(dn), util.toPointer(attrs), util.toPointer(ServerControls), util.toPointer(ClientControls), util.toPointer(MessageNumber));
}

export function ldap_add_ext_sW(
  ld: Deno.PointerValue | Uint8Array | null /* ptr */,
  dn: string | null /* Windows.Win32.Foundation.PWSTR */,
  attrs: Deno.PointerValue | Uint8Array | null /* ptr */,
  ServerControls: Deno.PointerValue | Uint8Array | null /* ptr */,
  ClientControls: Deno.PointerValue | Uint8Array | null /* ptr */,
): number /* u32 */ {
  return libWLDAP32.ldap_add_ext_sW(util.toPointer(ld), util.pwstrToFfi(dn), util.toPointer(attrs), util.toPointer(ServerControls), util.toPointer(ClientControls));
}

export function ldap_add_ext_sA(
  ld: Deno.PointerValue | Uint8Array | null /* ptr */,
  dn: string | null /* Windows.Win32.Foundation.PSTR */,
  attrs: Deno.PointerValue | Uint8Array | null /* ptr */,
  ServerControls: Deno.PointerValue | Uint8Array | null /* ptr */,
  ClientControls: Deno.PointerValue | Uint8Array | null /* ptr */,
): number /* u32 */ {
  return libWLDAP32.ldap_add_ext_sA(util.toPointer(ld), util.pstrToFfi(dn), util.toPointer(attrs), util.toPointer(ServerControls), util.toPointer(ClientControls));
}

export function ldap_add(
  ld: Deno.PointerValue | Uint8Array | null /* ptr */,
  dn: string | null /* Windows.Win32.Foundation.PSTR */,
  attrs: Deno.PointerValue | Uint8Array | null /* ptr */,
): number /* u32 */ {
  return libWLDAP32.ldap_add(util.toPointer(ld), util.pstrToFfi(dn), util.toPointer(attrs));
}

export function ldap_add_s(
  ld: Deno.PointerValue | Uint8Array | null /* ptr */,
  dn: string | null /* Windows.Win32.Foundation.PSTR */,
  attrs: Deno.PointerValue | Uint8Array | null /* ptr */,
): number /* u32 */ {
  return libWLDAP32.ldap_add_s(util.toPointer(ld), util.pstrToFfi(dn), util.toPointer(attrs));
}

export function ldap_add_ext(
  ld: Deno.PointerValue | Uint8Array | null /* ptr */,
  dn: string | null /* Windows.Win32.Foundation.PSTR */,
  attrs: Deno.PointerValue | Uint8Array | null /* ptr */,
  ServerControls: Deno.PointerValue | Uint8Array | null /* ptr */,
  ClientControls: Deno.PointerValue | Uint8Array | null /* ptr */,
  MessageNumber: Deno.PointerValue | Uint8Array | null /* ptr */,
): number /* u32 */ {
  return libWLDAP32.ldap_add_ext(util.toPointer(ld), util.pstrToFfi(dn), util.toPointer(attrs), util.toPointer(ServerControls), util.toPointer(ClientControls), util.toPointer(MessageNumber));
}

export function ldap_add_ext_s(
  ld: Deno.PointerValue | Uint8Array | null /* ptr */,
  dn: string | null /* Windows.Win32.Foundation.PSTR */,
  attrs: Deno.PointerValue | Uint8Array | null /* ptr */,
  ServerControls: Deno.PointerValue | Uint8Array | null /* ptr */,
  ClientControls: Deno.PointerValue | Uint8Array | null /* ptr */,
): number /* u32 */ {
  return libWLDAP32.ldap_add_ext_s(util.toPointer(ld), util.pstrToFfi(dn), util.toPointer(attrs), util.toPointer(ServerControls), util.toPointer(ClientControls));
}

export function ldap_compareW(
  ld: Deno.PointerValue | Uint8Array | null /* ptr */,
  dn: string | null /* Windows.Win32.Foundation.PWSTR */,
  attr: string | null /* Windows.Win32.Foundation.PWSTR */,
  value: string | null /* Windows.Win32.Foundation.PWSTR */,
): number /* u32 */ {
  return libWLDAP32.ldap_compareW(util.toPointer(ld), util.pwstrToFfi(dn), util.pwstrToFfi(attr), util.pwstrToFfi(value));
}

export function ldap_compareA(
  ld: Deno.PointerValue | Uint8Array | null /* ptr */,
  dn: string | null /* Windows.Win32.Foundation.PSTR */,
  attr: string | null /* Windows.Win32.Foundation.PSTR */,
  value: string | null /* Windows.Win32.Foundation.PSTR */,
): number /* u32 */ {
  return libWLDAP32.ldap_compareA(util.toPointer(ld), util.pstrToFfi(dn), util.pstrToFfi(attr), util.pstrToFfi(value));
}

export function ldap_compare_sW(
  ld: Deno.PointerValue | Uint8Array | null /* ptr */,
  dn: string | null /* Windows.Win32.Foundation.PWSTR */,
  attr: string | null /* Windows.Win32.Foundation.PWSTR */,
  value: string | null /* Windows.Win32.Foundation.PWSTR */,
): number /* u32 */ {
  return libWLDAP32.ldap_compare_sW(util.toPointer(ld), util.pwstrToFfi(dn), util.pwstrToFfi(attr), util.pwstrToFfi(value));
}

export function ldap_compare_sA(
  ld: Deno.PointerValue | Uint8Array | null /* ptr */,
  dn: string | null /* Windows.Win32.Foundation.PSTR */,
  attr: string | null /* Windows.Win32.Foundation.PSTR */,
  value: string | null /* Windows.Win32.Foundation.PSTR */,
): number /* u32 */ {
  return libWLDAP32.ldap_compare_sA(util.toPointer(ld), util.pstrToFfi(dn), util.pstrToFfi(attr), util.pstrToFfi(value));
}

export function ldap_compare(
  ld: Deno.PointerValue | Uint8Array | null /* ptr */,
  dn: string | null /* Windows.Win32.Foundation.PSTR */,
  attr: string | null /* Windows.Win32.Foundation.PSTR */,
  value: string | null /* Windows.Win32.Foundation.PSTR */,
): number /* u32 */ {
  return libWLDAP32.ldap_compare(util.toPointer(ld), util.pstrToFfi(dn), util.pstrToFfi(attr), util.pstrToFfi(value));
}

export function ldap_compare_s(
  ld: Deno.PointerValue | Uint8Array | null /* ptr */,
  dn: string | null /* Windows.Win32.Foundation.PSTR */,
  attr: string | null /* Windows.Win32.Foundation.PSTR */,
  value: string | null /* Windows.Win32.Foundation.PSTR */,
): number /* u32 */ {
  return libWLDAP32.ldap_compare_s(util.toPointer(ld), util.pstrToFfi(dn), util.pstrToFfi(attr), util.pstrToFfi(value));
}

export function ldap_compare_extW(
  ld: Deno.PointerValue | Uint8Array | null /* ptr */,
  dn: string | null /* Windows.Win32.Foundation.PWSTR */,
  Attr: string | null /* Windows.Win32.Foundation.PWSTR */,
  Value: string | null /* Windows.Win32.Foundation.PWSTR */,
  Data: Deno.PointerValue | Uint8Array | null /* ptr */,
  ServerControls: Deno.PointerValue | Uint8Array | null /* ptr */,
  ClientControls: Deno.PointerValue | Uint8Array | null /* ptr */,
  MessageNumber: Deno.PointerValue | Uint8Array | null /* ptr */,
): number /* u32 */ {
  return libWLDAP32.ldap_compare_extW(util.toPointer(ld), util.pwstrToFfi(dn), util.pwstrToFfi(Attr), util.pwstrToFfi(Value), util.toPointer(Data), util.toPointer(ServerControls), util.toPointer(ClientControls), util.toPointer(MessageNumber));
}

export function ldap_compare_extA(
  ld: Deno.PointerValue | Uint8Array | null /* ptr */,
  dn: string | null /* Windows.Win32.Foundation.PSTR */,
  Attr: string | null /* Windows.Win32.Foundation.PSTR */,
  Value: string | null /* Windows.Win32.Foundation.PSTR */,
  Data: Deno.PointerValue | Uint8Array | null /* ptr */,
  ServerControls: Deno.PointerValue | Uint8Array | null /* ptr */,
  ClientControls: Deno.PointerValue | Uint8Array | null /* ptr */,
  MessageNumber: Deno.PointerValue | Uint8Array | null /* ptr */,
): number /* u32 */ {
  return libWLDAP32.ldap_compare_extA(util.toPointer(ld), util.pstrToFfi(dn), util.pstrToFfi(Attr), util.pstrToFfi(Value), util.toPointer(Data), util.toPointer(ServerControls), util.toPointer(ClientControls), util.toPointer(MessageNumber));
}

export function ldap_compare_ext_sW(
  ld: Deno.PointerValue | Uint8Array | null /* ptr */,
  dn: string | null /* Windows.Win32.Foundation.PWSTR */,
  Attr: string | null /* Windows.Win32.Foundation.PWSTR */,
  Value: string | null /* Windows.Win32.Foundation.PWSTR */,
  Data: Deno.PointerValue | Uint8Array | null /* ptr */,
  ServerControls: Deno.PointerValue | Uint8Array | null /* ptr */,
  ClientControls: Deno.PointerValue | Uint8Array | null /* ptr */,
): number /* u32 */ {
  return libWLDAP32.ldap_compare_ext_sW(util.toPointer(ld), util.pwstrToFfi(dn), util.pwstrToFfi(Attr), util.pwstrToFfi(Value), util.toPointer(Data), util.toPointer(ServerControls), util.toPointer(ClientControls));
}

export function ldap_compare_ext_sA(
  ld: Deno.PointerValue | Uint8Array | null /* ptr */,
  dn: string | null /* Windows.Win32.Foundation.PSTR */,
  Attr: string | null /* Windows.Win32.Foundation.PSTR */,
  Value: string | null /* Windows.Win32.Foundation.PSTR */,
  Data: Deno.PointerValue | Uint8Array | null /* ptr */,
  ServerControls: Deno.PointerValue | Uint8Array | null /* ptr */,
  ClientControls: Deno.PointerValue | Uint8Array | null /* ptr */,
): number /* u32 */ {
  return libWLDAP32.ldap_compare_ext_sA(util.toPointer(ld), util.pstrToFfi(dn), util.pstrToFfi(Attr), util.pstrToFfi(Value), util.toPointer(Data), util.toPointer(ServerControls), util.toPointer(ClientControls));
}

export function ldap_compare_ext(
  ld: Deno.PointerValue | Uint8Array | null /* ptr */,
  dn: string | null /* Windows.Win32.Foundation.PSTR */,
  Attr: string | null /* Windows.Win32.Foundation.PSTR */,
  Value: string | null /* Windows.Win32.Foundation.PSTR */,
  Data: Deno.PointerValue | Uint8Array | null /* ptr */,
  ServerControls: Deno.PointerValue | Uint8Array | null /* ptr */,
  ClientControls: Deno.PointerValue | Uint8Array | null /* ptr */,
  MessageNumber: Deno.PointerValue | Uint8Array | null /* ptr */,
): number /* u32 */ {
  return libWLDAP32.ldap_compare_ext(util.toPointer(ld), util.pstrToFfi(dn), util.pstrToFfi(Attr), util.pstrToFfi(Value), util.toPointer(Data), util.toPointer(ServerControls), util.toPointer(ClientControls), util.toPointer(MessageNumber));
}

export function ldap_compare_ext_s(
  ld: Deno.PointerValue | Uint8Array | null /* ptr */,
  dn: string | null /* Windows.Win32.Foundation.PSTR */,
  Attr: string | null /* Windows.Win32.Foundation.PSTR */,
  Value: string | null /* Windows.Win32.Foundation.PSTR */,
  Data: Deno.PointerValue | Uint8Array | null /* ptr */,
  ServerControls: Deno.PointerValue | Uint8Array | null /* ptr */,
  ClientControls: Deno.PointerValue | Uint8Array | null /* ptr */,
): number /* u32 */ {
  return libWLDAP32.ldap_compare_ext_s(util.toPointer(ld), util.pstrToFfi(dn), util.pstrToFfi(Attr), util.pstrToFfi(Value), util.toPointer(Data), util.toPointer(ServerControls), util.toPointer(ClientControls));
}

export function ldap_deleteW(
  ld: Deno.PointerValue | Uint8Array | null /* ptr */,
  dn: string | null /* Windows.Win32.Foundation.PWSTR */,
): number /* u32 */ {
  return libWLDAP32.ldap_deleteW(util.toPointer(ld), util.pwstrToFfi(dn));
}

export function ldap_deleteA(
  ld: Deno.PointerValue | Uint8Array | null /* ptr */,
  dn: string | null /* Windows.Win32.Foundation.PSTR */,
): number /* u32 */ {
  return libWLDAP32.ldap_deleteA(util.toPointer(ld), util.pstrToFfi(dn));
}

export function ldap_delete_sW(
  ld: Deno.PointerValue | Uint8Array | null /* ptr */,
  dn: string | null /* Windows.Win32.Foundation.PWSTR */,
): number /* u32 */ {
  return libWLDAP32.ldap_delete_sW(util.toPointer(ld), util.pwstrToFfi(dn));
}

export function ldap_delete_sA(
  ld: Deno.PointerValue | Uint8Array | null /* ptr */,
  dn: string | null /* Windows.Win32.Foundation.PSTR */,
): number /* u32 */ {
  return libWLDAP32.ldap_delete_sA(util.toPointer(ld), util.pstrToFfi(dn));
}

export function ldap_delete_extW(
  ld: Deno.PointerValue | Uint8Array | null /* ptr */,
  dn: string | null /* Windows.Win32.Foundation.PWSTR */,
  ServerControls: Deno.PointerValue | Uint8Array | null /* ptr */,
  ClientControls: Deno.PointerValue | Uint8Array | null /* ptr */,
  MessageNumber: Deno.PointerValue | Uint8Array | null /* ptr */,
): number /* u32 */ {
  return libWLDAP32.ldap_delete_extW(util.toPointer(ld), util.pwstrToFfi(dn), util.toPointer(ServerControls), util.toPointer(ClientControls), util.toPointer(MessageNumber));
}

export function ldap_delete_extA(
  ld: Deno.PointerValue | Uint8Array | null /* ptr */,
  dn: string | null /* Windows.Win32.Foundation.PSTR */,
  ServerControls: Deno.PointerValue | Uint8Array | null /* ptr */,
  ClientControls: Deno.PointerValue | Uint8Array | null /* ptr */,
  MessageNumber: Deno.PointerValue | Uint8Array | null /* ptr */,
): number /* u32 */ {
  return libWLDAP32.ldap_delete_extA(util.toPointer(ld), util.pstrToFfi(dn), util.toPointer(ServerControls), util.toPointer(ClientControls), util.toPointer(MessageNumber));
}

export function ldap_delete_ext_sW(
  ld: Deno.PointerValue | Uint8Array | null /* ptr */,
  dn: string | null /* Windows.Win32.Foundation.PWSTR */,
  ServerControls: Deno.PointerValue | Uint8Array | null /* ptr */,
  ClientControls: Deno.PointerValue | Uint8Array | null /* ptr */,
): number /* u32 */ {
  return libWLDAP32.ldap_delete_ext_sW(util.toPointer(ld), util.pwstrToFfi(dn), util.toPointer(ServerControls), util.toPointer(ClientControls));
}

export function ldap_delete_ext_sA(
  ld: Deno.PointerValue | Uint8Array | null /* ptr */,
  dn: string | null /* Windows.Win32.Foundation.PSTR */,
  ServerControls: Deno.PointerValue | Uint8Array | null /* ptr */,
  ClientControls: Deno.PointerValue | Uint8Array | null /* ptr */,
): number /* u32 */ {
  return libWLDAP32.ldap_delete_ext_sA(util.toPointer(ld), util.pstrToFfi(dn), util.toPointer(ServerControls), util.toPointer(ClientControls));
}

export function ldap_delete(
  ld: Deno.PointerValue | Uint8Array | null /* ptr */,
  dn: string | null /* Windows.Win32.Foundation.PSTR */,
): number /* u32 */ {
  return libWLDAP32.ldap_delete(util.toPointer(ld), util.pstrToFfi(dn));
}

export function ldap_delete_s(
  ld: Deno.PointerValue | Uint8Array | null /* ptr */,
  dn: string | null /* Windows.Win32.Foundation.PSTR */,
): number /* u32 */ {
  return libWLDAP32.ldap_delete_s(util.toPointer(ld), util.pstrToFfi(dn));
}

export function ldap_delete_ext(
  ld: Deno.PointerValue | Uint8Array | null /* ptr */,
  dn: string | null /* Windows.Win32.Foundation.PSTR */,
  ServerControls: Deno.PointerValue | Uint8Array | null /* ptr */,
  ClientControls: Deno.PointerValue | Uint8Array | null /* ptr */,
  MessageNumber: Deno.PointerValue | Uint8Array | null /* ptr */,
): number /* u32 */ {
  return libWLDAP32.ldap_delete_ext(util.toPointer(ld), util.pstrToFfi(dn), util.toPointer(ServerControls), util.toPointer(ClientControls), util.toPointer(MessageNumber));
}

export function ldap_delete_ext_s(
  ld: Deno.PointerValue | Uint8Array | null /* ptr */,
  dn: string | null /* Windows.Win32.Foundation.PSTR */,
  ServerControls: Deno.PointerValue | Uint8Array | null /* ptr */,
  ClientControls: Deno.PointerValue | Uint8Array | null /* ptr */,
): number /* u32 */ {
  return libWLDAP32.ldap_delete_ext_s(util.toPointer(ld), util.pstrToFfi(dn), util.toPointer(ServerControls), util.toPointer(ClientControls));
}

export function ldap_abandon(
  ld: Deno.PointerValue | Uint8Array | null /* ptr */,
  msgid: number /* u32 */,
): number /* u32 */ {
  return libWLDAP32.ldap_abandon(util.toPointer(ld), msgid);
}

export function ldap_result(
  ld: Deno.PointerValue | Uint8Array | null /* ptr */,
  msgid: number /* u32 */,
  all: number /* u32 */,
  timeout: Deno.PointerValue | Uint8Array | null /* ptr */,
  res: Deno.PointerValue | Uint8Array | null /* ptr */,
): number /* u32 */ {
  return libWLDAP32.ldap_result(util.toPointer(ld), msgid, all, util.toPointer(timeout), util.toPointer(res));
}

export function ldap_msgfree(
  res: Deno.PointerValue | Uint8Array | null /* ptr */,
): number /* u32 */ {
  return libWLDAP32.ldap_msgfree(util.toPointer(res));
}

export function ldap_result2error(
  ld: Deno.PointerValue | Uint8Array | null /* ptr */,
  res: Deno.PointerValue | Uint8Array | null /* ptr */,
  freeit: number /* u32 */,
): number /* u32 */ {
  return libWLDAP32.ldap_result2error(util.toPointer(ld), util.toPointer(res), freeit);
}

export function ldap_parse_resultW(
  Connection: Deno.PointerValue | Uint8Array | null /* ptr */,
  ResultMessage: Deno.PointerValue | Uint8Array | null /* ptr */,
  ReturnCode: Deno.PointerValue | Uint8Array | null /* ptr */,
  MatchedDNs: Deno.PointerValue | Uint8Array | null /* ptr */,
  ErrorMessage: Deno.PointerValue | Uint8Array | null /* ptr */,
  Referrals: Deno.PointerValue | Uint8Array | null /* ptr */,
  ServerControls: Deno.PointerValue | Uint8Array | null /* ptr */,
  Freeit: Uint8Array | Deno.PointerValue | null /* Windows.Win32.Foundation.BOOLEAN */,
): number /* u32 */ {
  return libWLDAP32.ldap_parse_resultW(util.toPointer(Connection), util.toPointer(ResultMessage), util.toPointer(ReturnCode), util.toPointer(MatchedDNs), util.toPointer(ErrorMessage), util.toPointer(Referrals), util.toPointer(ServerControls), util.toPointer(Freeit));
}

export function ldap_parse_resultA(
  Connection: Deno.PointerValue | Uint8Array | null /* ptr */,
  ResultMessage: Deno.PointerValue | Uint8Array | null /* ptr */,
  ReturnCode: Deno.PointerValue | Uint8Array | null /* ptr */,
  MatchedDNs: Deno.PointerValue | Uint8Array | null /* ptr */,
  ErrorMessage: Deno.PointerValue | Uint8Array | null /* ptr */,
  Referrals: Deno.PointerValue | Uint8Array | null /* ptr */,
  ServerControls: Deno.PointerValue | Uint8Array | null /* ptr */,
  Freeit: Uint8Array | Deno.PointerValue | null /* Windows.Win32.Foundation.BOOLEAN */,
): number /* u32 */ {
  return libWLDAP32.ldap_parse_resultA(util.toPointer(Connection), util.toPointer(ResultMessage), util.toPointer(ReturnCode), util.toPointer(MatchedDNs), util.toPointer(ErrorMessage), util.toPointer(Referrals), util.toPointer(ServerControls), util.toPointer(Freeit));
}

export function ldap_parse_extended_resultA(
  Connection: Deno.PointerValue | Uint8Array | null /* ptr */,
  ResultMessage: Deno.PointerValue | Uint8Array | null /* ptr */,
  ResultOID: Deno.PointerValue | Uint8Array | null /* ptr */,
  ResultData: Deno.PointerValue | Uint8Array | null /* ptr */,
  Freeit: Uint8Array | Deno.PointerValue | null /* Windows.Win32.Foundation.BOOLEAN */,
): number /* u32 */ {
  return libWLDAP32.ldap_parse_extended_resultA(util.toPointer(Connection), util.toPointer(ResultMessage), util.toPointer(ResultOID), util.toPointer(ResultData), util.toPointer(Freeit));
}

export function ldap_parse_extended_resultW(
  Connection: Deno.PointerValue | Uint8Array | null /* ptr */,
  ResultMessage: Deno.PointerValue | Uint8Array | null /* ptr */,
  ResultOID: Deno.PointerValue | Uint8Array | null /* ptr */,
  ResultData: Deno.PointerValue | Uint8Array | null /* ptr */,
  Freeit: Uint8Array | Deno.PointerValue | null /* Windows.Win32.Foundation.BOOLEAN */,
): number /* u32 */ {
  return libWLDAP32.ldap_parse_extended_resultW(util.toPointer(Connection), util.toPointer(ResultMessage), util.toPointer(ResultOID), util.toPointer(ResultData), util.toPointer(Freeit));
}

export function ldap_controls_freeA(
  Controls: Deno.PointerValue | Uint8Array | null /* ptr */,
): number /* u32 */ {
  return libWLDAP32.ldap_controls_freeA(util.toPointer(Controls));
}

export function ldap_control_freeA(
  Controls: Deno.PointerValue | Uint8Array | null /* ptr */,
): number /* u32 */ {
  return libWLDAP32.ldap_control_freeA(util.toPointer(Controls));
}

export function ldap_controls_freeW(
  Control: Deno.PointerValue | Uint8Array | null /* ptr */,
): number /* u32 */ {
  return libWLDAP32.ldap_controls_freeW(util.toPointer(Control));
}

export function ldap_control_freeW(
  Control: Deno.PointerValue | Uint8Array | null /* ptr */,
): number /* u32 */ {
  return libWLDAP32.ldap_control_freeW(util.toPointer(Control));
}

export function ldap_free_controlsW(
  Controls: Deno.PointerValue | Uint8Array | null /* ptr */,
): number /* u32 */ {
  return libWLDAP32.ldap_free_controlsW(util.toPointer(Controls));
}

export function ldap_free_controlsA(
  Controls: Deno.PointerValue | Uint8Array | null /* ptr */,
): number /* u32 */ {
  return libWLDAP32.ldap_free_controlsA(util.toPointer(Controls));
}

export function ldap_parse_result(
  Connection: Deno.PointerValue | Uint8Array | null /* ptr */,
  ResultMessage: Deno.PointerValue | Uint8Array | null /* ptr */,
  ReturnCode: Deno.PointerValue | Uint8Array | null /* ptr */,
  MatchedDNs: Deno.PointerValue | Uint8Array | null /* ptr */,
  ErrorMessage: Deno.PointerValue | Uint8Array | null /* ptr */,
  Referrals: Deno.PointerValue | Uint8Array | null /* ptr */,
  ServerControls: Deno.PointerValue | Uint8Array | null /* ptr */,
  Freeit: Uint8Array | Deno.PointerValue | null /* Windows.Win32.Foundation.BOOLEAN */,
): number /* u32 */ {
  return libWLDAP32.ldap_parse_result(util.toPointer(Connection), util.toPointer(ResultMessage), util.toPointer(ReturnCode), util.toPointer(MatchedDNs), util.toPointer(ErrorMessage), util.toPointer(Referrals), util.toPointer(ServerControls), util.toPointer(Freeit));
}

export function ldap_controls_free(
  Controls: Deno.PointerValue | Uint8Array | null /* ptr */,
): number /* u32 */ {
  return libWLDAP32.ldap_controls_free(util.toPointer(Controls));
}

export function ldap_control_free(
  Control: Deno.PointerValue | Uint8Array | null /* ptr */,
): number /* u32 */ {
  return libWLDAP32.ldap_control_free(util.toPointer(Control));
}

export function ldap_free_controls(
  Controls: Deno.PointerValue | Uint8Array | null /* ptr */,
): number /* u32 */ {
  return libWLDAP32.ldap_free_controls(util.toPointer(Controls));
}

export function ldap_err2stringW(
  err: number /* u32 */,
): string | null /* Windows.Win32.Foundation.PWSTR */ {
  return util.pwstrFromFfi(libWLDAP32.ldap_err2stringW(err));
}

export function ldap_err2stringA(
  err: number /* u32 */,
): string | null /* Windows.Win32.Foundation.PSTR */ {
  return util.pstrFromFfi(libWLDAP32.ldap_err2stringA(err));
}

export function ldap_err2string(
  err: number /* u32 */,
): string | null /* Windows.Win32.Foundation.PSTR */ {
  return util.pstrFromFfi(libWLDAP32.ldap_err2string(err));
}

export function ldap_perror(
  ld: Deno.PointerValue | Uint8Array | null /* ptr */,
  msg: string | null /* Windows.Win32.Foundation.PSTR */,
): void /* void */ {
  return libWLDAP32.ldap_perror(util.toPointer(ld), util.pstrToFfi(msg));
}

export function ldap_first_entry(
  ld: Deno.PointerValue | Uint8Array | null /* ptr */,
  res: Deno.PointerValue | Uint8Array | null /* ptr */,
): Deno.PointerValue | null /* ptr */ {
  return util.pointerFromFfi(libWLDAP32.ldap_first_entry(util.toPointer(ld), util.toPointer(res)));
}

export function ldap_next_entry(
  ld: Deno.PointerValue | Uint8Array | null /* ptr */,
  entry: Deno.PointerValue | Uint8Array | null /* ptr */,
): Deno.PointerValue | null /* ptr */ {
  return util.pointerFromFfi(libWLDAP32.ldap_next_entry(util.toPointer(ld), util.toPointer(entry)));
}

export function ldap_count_entries(
  ld: Deno.PointerValue | Uint8Array | null /* ptr */,
  res: Deno.PointerValue | Uint8Array | null /* ptr */,
): number /* u32 */ {
  return libWLDAP32.ldap_count_entries(util.toPointer(ld), util.toPointer(res));
}

export function ldap_first_attributeW(
  ld: Deno.PointerValue | Uint8Array | null /* ptr */,
  entry: Deno.PointerValue | Uint8Array | null /* ptr */,
  ptr: Deno.PointerValue | Uint8Array | null /* ptr */,
): string | null /* Windows.Win32.Foundation.PWSTR */ {
  return util.pwstrFromFfi(libWLDAP32.ldap_first_attributeW(util.toPointer(ld), util.toPointer(entry), util.toPointer(ptr)));
}

export function ldap_first_attributeA(
  ld: Deno.PointerValue | Uint8Array | null /* ptr */,
  entry: Deno.PointerValue | Uint8Array | null /* ptr */,
  ptr: Deno.PointerValue | Uint8Array | null /* ptr */,
): string | null /* Windows.Win32.Foundation.PSTR */ {
  return util.pstrFromFfi(libWLDAP32.ldap_first_attributeA(util.toPointer(ld), util.toPointer(entry), util.toPointer(ptr)));
}

export function ldap_first_attribute(
  ld: Deno.PointerValue | Uint8Array | null /* ptr */,
  entry: Deno.PointerValue | Uint8Array | null /* ptr */,
  ptr: Deno.PointerValue | Uint8Array | null /* ptr */,
): string | null /* Windows.Win32.Foundation.PSTR */ {
  return util.pstrFromFfi(libWLDAP32.ldap_first_attribute(util.toPointer(ld), util.toPointer(entry), util.toPointer(ptr)));
}

export function ldap_next_attributeW(
  ld: Deno.PointerValue | Uint8Array | null /* ptr */,
  entry: Deno.PointerValue | Uint8Array | null /* ptr */,
  ptr: Deno.PointerValue | Uint8Array | null /* ptr */,
): string | null /* Windows.Win32.Foundation.PWSTR */ {
  return util.pwstrFromFfi(libWLDAP32.ldap_next_attributeW(util.toPointer(ld), util.toPointer(entry), util.toPointer(ptr)));
}

export function ldap_next_attributeA(
  ld: Deno.PointerValue | Uint8Array | null /* ptr */,
  entry: Deno.PointerValue | Uint8Array | null /* ptr */,
  ptr: Deno.PointerValue | Uint8Array | null /* ptr */,
): string | null /* Windows.Win32.Foundation.PSTR */ {
  return util.pstrFromFfi(libWLDAP32.ldap_next_attributeA(util.toPointer(ld), util.toPointer(entry), util.toPointer(ptr)));
}

export function ldap_next_attribute(
  ld: Deno.PointerValue | Uint8Array | null /* ptr */,
  entry: Deno.PointerValue | Uint8Array | null /* ptr */,
  ptr: Deno.PointerValue | Uint8Array | null /* ptr */,
): string | null /* Windows.Win32.Foundation.PSTR */ {
  return util.pstrFromFfi(libWLDAP32.ldap_next_attribute(util.toPointer(ld), util.toPointer(entry), util.toPointer(ptr)));
}

export function ldap_get_valuesW(
  ld: Deno.PointerValue | Uint8Array | null /* ptr */,
  entry: Deno.PointerValue | Uint8Array | null /* ptr */,
  attr: string | null /* Windows.Win32.Foundation.PWSTR */,
): Deno.PointerValue | null /* ptr */ {
  return util.pointerFromFfi(libWLDAP32.ldap_get_valuesW(util.toPointer(ld), util.toPointer(entry), util.pwstrToFfi(attr)));
}

export function ldap_get_valuesA(
  ld: Deno.PointerValue | Uint8Array | null /* ptr */,
  entry: Deno.PointerValue | Uint8Array | null /* ptr */,
  attr: string | null /* Windows.Win32.Foundation.PSTR */,
): Deno.PointerValue | null /* ptr */ {
  return util.pointerFromFfi(libWLDAP32.ldap_get_valuesA(util.toPointer(ld), util.toPointer(entry), util.pstrToFfi(attr)));
}

export function ldap_get_values(
  ld: Deno.PointerValue | Uint8Array | null /* ptr */,
  entry: Deno.PointerValue | Uint8Array | null /* ptr */,
  attr: string | null /* Windows.Win32.Foundation.PSTR */,
): Deno.PointerValue | null /* ptr */ {
  return util.pointerFromFfi(libWLDAP32.ldap_get_values(util.toPointer(ld), util.toPointer(entry), util.pstrToFfi(attr)));
}

export function ldap_get_values_lenW(
  ExternalHandle: Deno.PointerValue | Uint8Array | null /* ptr */,
  Message: Deno.PointerValue | Uint8Array | null /* ptr */,
  attr: string | null /* Windows.Win32.Foundation.PWSTR */,
): Deno.PointerValue | null /* ptr */ {
  return util.pointerFromFfi(libWLDAP32.ldap_get_values_lenW(util.toPointer(ExternalHandle), util.toPointer(Message), util.pwstrToFfi(attr)));
}

export function ldap_get_values_lenA(
  ExternalHandle: Deno.PointerValue | Uint8Array | null /* ptr */,
  Message: Deno.PointerValue | Uint8Array | null /* ptr */,
  attr: string | null /* Windows.Win32.Foundation.PSTR */,
): Deno.PointerValue | null /* ptr */ {
  return util.pointerFromFfi(libWLDAP32.ldap_get_values_lenA(util.toPointer(ExternalHandle), util.toPointer(Message), util.pstrToFfi(attr)));
}

export function ldap_get_values_len(
  ExternalHandle: Deno.PointerValue | Uint8Array | null /* ptr */,
  Message: Deno.PointerValue | Uint8Array | null /* ptr */,
  attr: string | null /* Windows.Win32.Foundation.PSTR */,
): Deno.PointerValue | null /* ptr */ {
  return util.pointerFromFfi(libWLDAP32.ldap_get_values_len(util.toPointer(ExternalHandle), util.toPointer(Message), util.pstrToFfi(attr)));
}

export function ldap_count_valuesW(
  vals: Deno.PointerValue | Uint8Array | null /* ptr */,
): number /* u32 */ {
  return libWLDAP32.ldap_count_valuesW(util.toPointer(vals));
}

export function ldap_count_valuesA(
  vals: Deno.PointerValue | Uint8Array | null /* ptr */,
): number /* u32 */ {
  return libWLDAP32.ldap_count_valuesA(util.toPointer(vals));
}

export function ldap_count_values(
  vals: Deno.PointerValue | Uint8Array | null /* ptr */,
): number /* u32 */ {
  return libWLDAP32.ldap_count_values(util.toPointer(vals));
}

export function ldap_count_values_len(
  vals: Deno.PointerValue | Uint8Array | null /* ptr */,
): number /* u32 */ {
  return libWLDAP32.ldap_count_values_len(util.toPointer(vals));
}

export function ldap_value_freeW(
  vals: Deno.PointerValue | Uint8Array | null /* ptr */,
): number /* u32 */ {
  return libWLDAP32.ldap_value_freeW(util.toPointer(vals));
}

export function ldap_value_freeA(
  vals: Deno.PointerValue | Uint8Array | null /* ptr */,
): number /* u32 */ {
  return libWLDAP32.ldap_value_freeA(util.toPointer(vals));
}

export function ldap_value_free(
  vals: Deno.PointerValue | Uint8Array | null /* ptr */,
): number /* u32 */ {
  return libWLDAP32.ldap_value_free(util.toPointer(vals));
}

export function ldap_value_free_len(
  vals: Deno.PointerValue | Uint8Array | null /* ptr */,
): number /* u32 */ {
  return libWLDAP32.ldap_value_free_len(util.toPointer(vals));
}

export function ldap_get_dnW(
  ld: Deno.PointerValue | Uint8Array | null /* ptr */,
  entry: Deno.PointerValue | Uint8Array | null /* ptr */,
): string | null /* Windows.Win32.Foundation.PWSTR */ {
  return util.pwstrFromFfi(libWLDAP32.ldap_get_dnW(util.toPointer(ld), util.toPointer(entry)));
}

export function ldap_get_dnA(
  ld: Deno.PointerValue | Uint8Array | null /* ptr */,
  entry: Deno.PointerValue | Uint8Array | null /* ptr */,
): string | null /* Windows.Win32.Foundation.PSTR */ {
  return util.pstrFromFfi(libWLDAP32.ldap_get_dnA(util.toPointer(ld), util.toPointer(entry)));
}

export function ldap_get_dn(
  ld: Deno.PointerValue | Uint8Array | null /* ptr */,
  entry: Deno.PointerValue | Uint8Array | null /* ptr */,
): string | null /* Windows.Win32.Foundation.PSTR */ {
  return util.pstrFromFfi(libWLDAP32.ldap_get_dn(util.toPointer(ld), util.toPointer(entry)));
}

export function ldap_explode_dnW(
  dn: string | null /* Windows.Win32.Foundation.PWSTR */,
  notypes: number /* u32 */,
): Deno.PointerValue | null /* ptr */ {
  return util.pointerFromFfi(libWLDAP32.ldap_explode_dnW(util.pwstrToFfi(dn), notypes));
}

export function ldap_explode_dnA(
  dn: string | null /* Windows.Win32.Foundation.PSTR */,
  notypes: number /* u32 */,
): Deno.PointerValue | null /* ptr */ {
  return util.pointerFromFfi(libWLDAP32.ldap_explode_dnA(util.pstrToFfi(dn), notypes));
}

export function ldap_explode_dn(
  dn: string | null /* Windows.Win32.Foundation.PSTR */,
  notypes: number /* u32 */,
): Deno.PointerValue | null /* ptr */ {
  return util.pointerFromFfi(libWLDAP32.ldap_explode_dn(util.pstrToFfi(dn), notypes));
}

export function ldap_dn2ufnW(
  dn: string | null /* Windows.Win32.Foundation.PWSTR */,
): string | null /* Windows.Win32.Foundation.PWSTR */ {
  return util.pwstrFromFfi(libWLDAP32.ldap_dn2ufnW(util.pwstrToFfi(dn)));
}

export function ldap_dn2ufnA(
  dn: string | null /* Windows.Win32.Foundation.PSTR */,
): string | null /* Windows.Win32.Foundation.PSTR */ {
  return util.pstrFromFfi(libWLDAP32.ldap_dn2ufnA(util.pstrToFfi(dn)));
}

export function ldap_dn2ufn(
  dn: string | null /* Windows.Win32.Foundation.PSTR */,
): string | null /* Windows.Win32.Foundation.PSTR */ {
  return util.pstrFromFfi(libWLDAP32.ldap_dn2ufn(util.pstrToFfi(dn)));
}

export function ldap_memfreeW(
  Block: string | null /* Windows.Win32.Foundation.PWSTR */,
): void /* void */ {
  return libWLDAP32.ldap_memfreeW(util.pwstrToFfi(Block));
}

export function ldap_memfreeA(
  Block: string | null /* Windows.Win32.Foundation.PSTR */,
): void /* void */ {
  return libWLDAP32.ldap_memfreeA(util.pstrToFfi(Block));
}

export function ber_bvfree(
  bv: Deno.PointerValue | Uint8Array | null /* ptr */,
): void /* void */ {
  return libWLDAP32.ber_bvfree(util.toPointer(bv));
}

export function ldap_memfree(
  Block: string | null /* Windows.Win32.Foundation.PSTR */,
): void /* void */ {
  return libWLDAP32.ldap_memfree(util.pstrToFfi(Block));
}

export function ldap_ufn2dnW(
  ufn: string | null /* Windows.Win32.Foundation.PWSTR */,
  pDn: Deno.PointerValue | Uint8Array | null /* ptr */,
): number /* u32 */ {
  return libWLDAP32.ldap_ufn2dnW(util.pwstrToFfi(ufn), util.toPointer(pDn));
}

export function ldap_ufn2dnA(
  ufn: string | null /* Windows.Win32.Foundation.PSTR */,
  pDn: Deno.PointerValue | Uint8Array | null /* ptr */,
): number /* u32 */ {
  return libWLDAP32.ldap_ufn2dnA(util.pstrToFfi(ufn), util.toPointer(pDn));
}

export function ldap_ufn2dn(
  ufn: string | null /* Windows.Win32.Foundation.PSTR */,
  pDn: Deno.PointerValue | Uint8Array | null /* ptr */,
): number /* u32 */ {
  return libWLDAP32.ldap_ufn2dn(util.pstrToFfi(ufn), util.toPointer(pDn));
}

export function ldap_startup(
  version: Deno.PointerValue | Uint8Array | null /* ptr */,
  Instance: Deno.PointerValue | Uint8Array | null /* ptr */,
): number /* u32 */ {
  return libWLDAP32.ldap_startup(util.toPointer(version), util.toPointer(Instance));
}

export function ldap_cleanup(
  hInstance: Uint8Array | Deno.PointerValue | null /* Windows.Win32.Foundation.HANDLE */,
): number /* u32 */ {
  return libWLDAP32.ldap_cleanup(util.toPointer(hInstance));
}

export function ldap_escape_filter_elementW(
  sourceFilterElement: string | null /* Windows.Win32.Foundation.PSTR */,
  sourceLength: number /* u32 */,
  destFilterElement: string | null /* Windows.Win32.Foundation.PWSTR */,
  destLength: number /* u32 */,
): number /* u32 */ {
  return libWLDAP32.ldap_escape_filter_elementW(util.pstrToFfi(sourceFilterElement), sourceLength, util.pwstrToFfi(destFilterElement), destLength);
}

export function ldap_escape_filter_elementA(
  sourceFilterElement: string | null /* Windows.Win32.Foundation.PSTR */,
  sourceLength: number /* u32 */,
  destFilterElement: string | null /* Windows.Win32.Foundation.PSTR */,
  destLength: number /* u32 */,
): number /* u32 */ {
  return libWLDAP32.ldap_escape_filter_elementA(util.pstrToFfi(sourceFilterElement), sourceLength, util.pstrToFfi(destFilterElement), destLength);
}

export function ldap_escape_filter_element(
  sourceFilterElement: string | null /* Windows.Win32.Foundation.PSTR */,
  sourceLength: number /* u32 */,
  destFilterElement: string | null /* Windows.Win32.Foundation.PSTR */,
  destLength: number /* u32 */,
): number /* u32 */ {
  return libWLDAP32.ldap_escape_filter_element(util.pstrToFfi(sourceFilterElement), sourceLength, util.pstrToFfi(destFilterElement), destLength);
}

export function ldap_set_dbg_flags(
  NewFlags: number /* u32 */,
): number /* u32 */ {
  return libWLDAP32.ldap_set_dbg_flags(NewFlags);
}

export function ldap_set_dbg_routine(
  DebugPrintRoutine: Uint8Array | Deno.PointerValue | null /* Windows.Win32.Networking.Ldap.DBGPRINT */,
): void /* void */ {
  return libWLDAP32.ldap_set_dbg_routine(util.toPointer(DebugPrintRoutine));
}

export function LdapUTF8ToUnicode(
  lpSrcStr: string | null /* Windows.Win32.Foundation.PSTR */,
  cchSrc: number /* i32 */,
  lpDestStr: string | null /* Windows.Win32.Foundation.PWSTR */,
  cchDest: number /* i32 */,
): number /* i32 */ {
  return libWLDAP32.LdapUTF8ToUnicode(util.pstrToFfi(lpSrcStr), cchSrc, util.pwstrToFfi(lpDestStr), cchDest);
}

export function LdapUnicodeToUTF8(
  lpSrcStr: string | null /* Windows.Win32.Foundation.PWSTR */,
  cchSrc: number /* i32 */,
  lpDestStr: string | null /* Windows.Win32.Foundation.PSTR */,
  cchDest: number /* i32 */,
): number /* i32 */ {
  return libWLDAP32.LdapUnicodeToUTF8(util.pwstrToFfi(lpSrcStr), cchSrc, util.pstrToFfi(lpDestStr), cchDest);
}

export function ldap_create_sort_controlA(
  ExternalHandle: Deno.PointerValue | Uint8Array | null /* ptr */,
  SortKeys: Deno.PointerValue | Uint8Array | null /* ptr */,
  IsCritical: number /* u8 */,
  Control: Deno.PointerValue | Uint8Array | null /* ptr */,
): number /* u32 */ {
  return libWLDAP32.ldap_create_sort_controlA(util.toPointer(ExternalHandle), util.toPointer(SortKeys), IsCritical, util.toPointer(Control));
}

export function ldap_create_sort_controlW(
  ExternalHandle: Deno.PointerValue | Uint8Array | null /* ptr */,
  SortKeys: Deno.PointerValue | Uint8Array | null /* ptr */,
  IsCritical: number /* u8 */,
  Control: Deno.PointerValue | Uint8Array | null /* ptr */,
): number /* u32 */ {
  return libWLDAP32.ldap_create_sort_controlW(util.toPointer(ExternalHandle), util.toPointer(SortKeys), IsCritical, util.toPointer(Control));
}

export function ldap_parse_sort_controlA(
  ExternalHandle: Deno.PointerValue | Uint8Array | null /* ptr */,
  Control: Deno.PointerValue | Uint8Array | null /* ptr */,
  Result: Deno.PointerValue | Uint8Array | null /* ptr */,
  Attribute: Deno.PointerValue | Uint8Array | null /* ptr */,
): number /* u32 */ {
  return libWLDAP32.ldap_parse_sort_controlA(util.toPointer(ExternalHandle), util.toPointer(Control), util.toPointer(Result), util.toPointer(Attribute));
}

export function ldap_parse_sort_controlW(
  ExternalHandle: Deno.PointerValue | Uint8Array | null /* ptr */,
  Control: Deno.PointerValue | Uint8Array | null /* ptr */,
  Result: Deno.PointerValue | Uint8Array | null /* ptr */,
  Attribute: Deno.PointerValue | Uint8Array | null /* ptr */,
): number /* u32 */ {
  return libWLDAP32.ldap_parse_sort_controlW(util.toPointer(ExternalHandle), util.toPointer(Control), util.toPointer(Result), util.toPointer(Attribute));
}

export function ldap_create_sort_control(
  ExternalHandle: Deno.PointerValue | Uint8Array | null /* ptr */,
  SortKeys: Deno.PointerValue | Uint8Array | null /* ptr */,
  IsCritical: number /* u8 */,
  Control: Deno.PointerValue | Uint8Array | null /* ptr */,
): number /* u32 */ {
  return libWLDAP32.ldap_create_sort_control(util.toPointer(ExternalHandle), util.toPointer(SortKeys), IsCritical, util.toPointer(Control));
}

export function ldap_parse_sort_control(
  ExternalHandle: Deno.PointerValue | Uint8Array | null /* ptr */,
  Control: Deno.PointerValue | Uint8Array | null /* ptr */,
  Result: Deno.PointerValue | Uint8Array | null /* ptr */,
  Attribute: Deno.PointerValue | Uint8Array | null /* ptr */,
): number /* u32 */ {
  return libWLDAP32.ldap_parse_sort_control(util.toPointer(ExternalHandle), util.toPointer(Control), util.toPointer(Result), util.toPointer(Attribute));
}

export function ldap_encode_sort_controlW(
  ExternalHandle: Deno.PointerValue | Uint8Array | null /* ptr */,
  SortKeys: Deno.PointerValue | Uint8Array | null /* ptr */,
  Control: Deno.PointerValue | Uint8Array | null /* ptr */,
  Criticality: Uint8Array | Deno.PointerValue | null /* Windows.Win32.Foundation.BOOLEAN */,
): number /* u32 */ {
  return libWLDAP32.ldap_encode_sort_controlW(util.toPointer(ExternalHandle), util.toPointer(SortKeys), util.toPointer(Control), util.toPointer(Criticality));
}

export function ldap_encode_sort_controlA(
  ExternalHandle: Deno.PointerValue | Uint8Array | null /* ptr */,
  SortKeys: Deno.PointerValue | Uint8Array | null /* ptr */,
  Control: Deno.PointerValue | Uint8Array | null /* ptr */,
  Criticality: Uint8Array | Deno.PointerValue | null /* Windows.Win32.Foundation.BOOLEAN */,
): number /* u32 */ {
  return libWLDAP32.ldap_encode_sort_controlA(util.toPointer(ExternalHandle), util.toPointer(SortKeys), util.toPointer(Control), util.toPointer(Criticality));
}

export function ldap_create_page_controlW(
  ExternalHandle: Deno.PointerValue | Uint8Array | null /* ptr */,
  PageSize: number /* u32 */,
  Cookie: Deno.PointerValue | Uint8Array | null /* ptr */,
  IsCritical: number /* u8 */,
  Control: Deno.PointerValue | Uint8Array | null /* ptr */,
): number /* u32 */ {
  return libWLDAP32.ldap_create_page_controlW(util.toPointer(ExternalHandle), PageSize, util.toPointer(Cookie), IsCritical, util.toPointer(Control));
}

export function ldap_create_page_controlA(
  ExternalHandle: Deno.PointerValue | Uint8Array | null /* ptr */,
  PageSize: number /* u32 */,
  Cookie: Deno.PointerValue | Uint8Array | null /* ptr */,
  IsCritical: number /* u8 */,
  Control: Deno.PointerValue | Uint8Array | null /* ptr */,
): number /* u32 */ {
  return libWLDAP32.ldap_create_page_controlA(util.toPointer(ExternalHandle), PageSize, util.toPointer(Cookie), IsCritical, util.toPointer(Control));
}

export function ldap_parse_page_controlW(
  ExternalHandle: Deno.PointerValue | Uint8Array | null /* ptr */,
  ServerControls: Deno.PointerValue | Uint8Array | null /* ptr */,
  TotalCount: Deno.PointerValue | Uint8Array | null /* ptr */,
  Cookie: Deno.PointerValue | Uint8Array | null /* ptr */,
): number /* u32 */ {
  return libWLDAP32.ldap_parse_page_controlW(util.toPointer(ExternalHandle), util.toPointer(ServerControls), util.toPointer(TotalCount), util.toPointer(Cookie));
}

export function ldap_parse_page_controlA(
  ExternalHandle: Deno.PointerValue | Uint8Array | null /* ptr */,
  ServerControls: Deno.PointerValue | Uint8Array | null /* ptr */,
  TotalCount: Deno.PointerValue | Uint8Array | null /* ptr */,
  Cookie: Deno.PointerValue | Uint8Array | null /* ptr */,
): number /* u32 */ {
  return libWLDAP32.ldap_parse_page_controlA(util.toPointer(ExternalHandle), util.toPointer(ServerControls), util.toPointer(TotalCount), util.toPointer(Cookie));
}

export function ldap_create_page_control(
  ExternalHandle: Deno.PointerValue | Uint8Array | null /* ptr */,
  PageSize: number /* u32 */,
  Cookie: Deno.PointerValue | Uint8Array | null /* ptr */,
  IsCritical: number /* u8 */,
  Control: Deno.PointerValue | Uint8Array | null /* ptr */,
): number /* u32 */ {
  return libWLDAP32.ldap_create_page_control(util.toPointer(ExternalHandle), PageSize, util.toPointer(Cookie), IsCritical, util.toPointer(Control));
}

export function ldap_parse_page_control(
  ExternalHandle: Deno.PointerValue | Uint8Array | null /* ptr */,
  ServerControls: Deno.PointerValue | Uint8Array | null /* ptr */,
  TotalCount: Deno.PointerValue | Uint8Array | null /* ptr */,
  Cookie: Deno.PointerValue | Uint8Array | null /* ptr */,
): number /* u32 */ {
  return libWLDAP32.ldap_parse_page_control(util.toPointer(ExternalHandle), util.toPointer(ServerControls), util.toPointer(TotalCount), util.toPointer(Cookie));
}

export function ldap_search_init_pageW(
  ExternalHandle: Deno.PointerValue | Uint8Array | null /* ptr */,
  DistinguishedName: string | null /* Windows.Win32.Foundation.PWSTR */,
  ScopeOfSearch: number /* u32 */,
  SearchFilter: string | null /* Windows.Win32.Foundation.PWSTR */,
  AttributeList: Deno.PointerValue | Uint8Array | null /* ptr */,
  AttributesOnly: number /* u32 */,
  ServerControls: Deno.PointerValue | Uint8Array | null /* ptr */,
  ClientControls: Deno.PointerValue | Uint8Array | null /* ptr */,
  PageTimeLimit: number /* u32 */,
  TotalSizeLimit: number /* u32 */,
  SortKeys: Deno.PointerValue | Uint8Array | null /* ptr */,
): Deno.PointerValue | null /* ptr */ {
  return util.pointerFromFfi(libWLDAP32.ldap_search_init_pageW(util.toPointer(ExternalHandle), util.pwstrToFfi(DistinguishedName), ScopeOfSearch, util.pwstrToFfi(SearchFilter), util.toPointer(AttributeList), AttributesOnly, util.toPointer(ServerControls), util.toPointer(ClientControls), PageTimeLimit, TotalSizeLimit, util.toPointer(SortKeys)));
}

export function ldap_search_init_pageA(
  ExternalHandle: Deno.PointerValue | Uint8Array | null /* ptr */,
  DistinguishedName: string | null /* Windows.Win32.Foundation.PSTR */,
  ScopeOfSearch: number /* u32 */,
  SearchFilter: string | null /* Windows.Win32.Foundation.PSTR */,
  AttributeList: Deno.PointerValue | Uint8Array | null /* ptr */,
  AttributesOnly: number /* u32 */,
  ServerControls: Deno.PointerValue | Uint8Array | null /* ptr */,
  ClientControls: Deno.PointerValue | Uint8Array | null /* ptr */,
  PageTimeLimit: number /* u32 */,
  TotalSizeLimit: number /* u32 */,
  SortKeys: Deno.PointerValue | Uint8Array | null /* ptr */,
): Deno.PointerValue | null /* ptr */ {
  return util.pointerFromFfi(libWLDAP32.ldap_search_init_pageA(util.toPointer(ExternalHandle), util.pstrToFfi(DistinguishedName), ScopeOfSearch, util.pstrToFfi(SearchFilter), util.toPointer(AttributeList), AttributesOnly, util.toPointer(ServerControls), util.toPointer(ClientControls), PageTimeLimit, TotalSizeLimit, util.toPointer(SortKeys)));
}

export function ldap_search_init_page(
  ExternalHandle: Deno.PointerValue | Uint8Array | null /* ptr */,
  DistinguishedName: string | null /* Windows.Win32.Foundation.PSTR */,
  ScopeOfSearch: number /* u32 */,
  SearchFilter: string | null /* Windows.Win32.Foundation.PSTR */,
  AttributeList: Deno.PointerValue | Uint8Array | null /* ptr */,
  AttributesOnly: number /* u32 */,
  ServerControls: Deno.PointerValue | Uint8Array | null /* ptr */,
  ClientControls: Deno.PointerValue | Uint8Array | null /* ptr */,
  PageTimeLimit: number /* u32 */,
  TotalSizeLimit: number /* u32 */,
  SortKeys: Deno.PointerValue | Uint8Array | null /* ptr */,
): Deno.PointerValue | null /* ptr */ {
  return util.pointerFromFfi(libWLDAP32.ldap_search_init_page(util.toPointer(ExternalHandle), util.pstrToFfi(DistinguishedName), ScopeOfSearch, util.pstrToFfi(SearchFilter), util.toPointer(AttributeList), AttributesOnly, util.toPointer(ServerControls), util.toPointer(ClientControls), PageTimeLimit, TotalSizeLimit, util.toPointer(SortKeys)));
}

export function ldap_get_next_page(
  ExternalHandle: Deno.PointerValue | Uint8Array | null /* ptr */,
  SearchHandle: Deno.PointerValue | Uint8Array | null /* ptr */,
  PageSize: number /* u32 */,
  MessageNumber: Deno.PointerValue | Uint8Array | null /* ptr */,
): number /* u32 */ {
  return libWLDAP32.ldap_get_next_page(util.toPointer(ExternalHandle), util.toPointer(SearchHandle), PageSize, util.toPointer(MessageNumber));
}

export function ldap_get_next_page_s(
  ExternalHandle: Deno.PointerValue | Uint8Array | null /* ptr */,
  SearchHandle: Deno.PointerValue | Uint8Array | null /* ptr */,
  timeout: Deno.PointerValue | Uint8Array | null /* ptr */,
  PageSize: number /* u32 */,
  TotalCount: Deno.PointerValue | Uint8Array | null /* ptr */,
  Results: Deno.PointerValue | Uint8Array | null /* ptr */,
): number /* u32 */ {
  return libWLDAP32.ldap_get_next_page_s(util.toPointer(ExternalHandle), util.toPointer(SearchHandle), util.toPointer(timeout), PageSize, util.toPointer(TotalCount), util.toPointer(Results));
}

export function ldap_get_paged_count(
  ExternalHandle: Deno.PointerValue | Uint8Array | null /* ptr */,
  SearchBlock: Deno.PointerValue | Uint8Array | null /* ptr */,
  TotalCount: Deno.PointerValue | Uint8Array | null /* ptr */,
  Results: Deno.PointerValue | Uint8Array | null /* ptr */,
): number /* u32 */ {
  return libWLDAP32.ldap_get_paged_count(util.toPointer(ExternalHandle), util.toPointer(SearchBlock), util.toPointer(TotalCount), util.toPointer(Results));
}

export function ldap_search_abandon_page(
  ExternalHandle: Deno.PointerValue | Uint8Array | null /* ptr */,
  SearchBlock: Deno.PointerValue | Uint8Array | null /* ptr */,
): number /* u32 */ {
  return libWLDAP32.ldap_search_abandon_page(util.toPointer(ExternalHandle), util.toPointer(SearchBlock));
}

export function ldap_create_vlv_controlW(
  ExternalHandle: Deno.PointerValue | Uint8Array | null /* ptr */,
  VlvInfo: Deno.PointerValue | Uint8Array | null /* ptr */,
  IsCritical: number /* u8 */,
  Control: Deno.PointerValue | Uint8Array | null /* ptr */,
): number /* i32 */ {
  return libWLDAP32.ldap_create_vlv_controlW(util.toPointer(ExternalHandle), util.toPointer(VlvInfo), IsCritical, util.toPointer(Control));
}

export function ldap_create_vlv_controlA(
  ExternalHandle: Deno.PointerValue | Uint8Array | null /* ptr */,
  VlvInfo: Deno.PointerValue | Uint8Array | null /* ptr */,
  IsCritical: number /* u8 */,
  Control: Deno.PointerValue | Uint8Array | null /* ptr */,
): number /* i32 */ {
  return libWLDAP32.ldap_create_vlv_controlA(util.toPointer(ExternalHandle), util.toPointer(VlvInfo), IsCritical, util.toPointer(Control));
}

export function ldap_parse_vlv_controlW(
  ExternalHandle: Deno.PointerValue | Uint8Array | null /* ptr */,
  Control: Deno.PointerValue | Uint8Array | null /* ptr */,
  TargetPos: Deno.PointerValue | Uint8Array | null /* ptr */,
  ListCount: Deno.PointerValue | Uint8Array | null /* ptr */,
  Context: Deno.PointerValue | Uint8Array | null /* ptr */,
  ErrCode: Deno.PointerValue | Uint8Array | null /* ptr */,
): number /* i32 */ {
  return libWLDAP32.ldap_parse_vlv_controlW(util.toPointer(ExternalHandle), util.toPointer(Control), util.toPointer(TargetPos), util.toPointer(ListCount), util.toPointer(Context), util.toPointer(ErrCode));
}

export function ldap_parse_vlv_controlA(
  ExternalHandle: Deno.PointerValue | Uint8Array | null /* ptr */,
  Control: Deno.PointerValue | Uint8Array | null /* ptr */,
  TargetPos: Deno.PointerValue | Uint8Array | null /* ptr */,
  ListCount: Deno.PointerValue | Uint8Array | null /* ptr */,
  Context: Deno.PointerValue | Uint8Array | null /* ptr */,
  ErrCode: Deno.PointerValue | Uint8Array | null /* ptr */,
): number /* i32 */ {
  return libWLDAP32.ldap_parse_vlv_controlA(util.toPointer(ExternalHandle), util.toPointer(Control), util.toPointer(TargetPos), util.toPointer(ListCount), util.toPointer(Context), util.toPointer(ErrCode));
}

export function ldap_start_tls_sW(
  ExternalHandle: Deno.PointerValue | Uint8Array | null /* ptr */,
  ServerReturnValue: Deno.PointerValue | Uint8Array | null /* ptr */,
  result: Deno.PointerValue | Uint8Array | null /* ptr */,
  ServerControls: Deno.PointerValue | Uint8Array | null /* ptr */,
  ClientControls: Deno.PointerValue | Uint8Array | null /* ptr */,
): number /* u32 */ {
  return libWLDAP32.ldap_start_tls_sW(util.toPointer(ExternalHandle), util.toPointer(ServerReturnValue), util.toPointer(result), util.toPointer(ServerControls), util.toPointer(ClientControls));
}

export function ldap_start_tls_sA(
  ExternalHandle: Deno.PointerValue | Uint8Array | null /* ptr */,
  ServerReturnValue: Deno.PointerValue | Uint8Array | null /* ptr */,
  result: Deno.PointerValue | Uint8Array | null /* ptr */,
  ServerControls: Deno.PointerValue | Uint8Array | null /* ptr */,
  ClientControls: Deno.PointerValue | Uint8Array | null /* ptr */,
): number /* u32 */ {
  return libWLDAP32.ldap_start_tls_sA(util.toPointer(ExternalHandle), util.toPointer(ServerReturnValue), util.toPointer(result), util.toPointer(ServerControls), util.toPointer(ClientControls));
}

export function ldap_stop_tls_s(
  ExternalHandle: Deno.PointerValue | Uint8Array | null /* ptr */,
): Deno.PointerValue | null /* Windows.Win32.Foundation.BOOLEAN */ {
  return util.pointerFromFfi(libWLDAP32.ldap_stop_tls_s(util.toPointer(ExternalHandle)));
}

export function ldap_first_reference(
  ld: Deno.PointerValue | Uint8Array | null /* ptr */,
  res: Deno.PointerValue | Uint8Array | null /* ptr */,
): Deno.PointerValue | null /* ptr */ {
  return util.pointerFromFfi(libWLDAP32.ldap_first_reference(util.toPointer(ld), util.toPointer(res)));
}

export function ldap_next_reference(
  ld: Deno.PointerValue | Uint8Array | null /* ptr */,
  entry: Deno.PointerValue | Uint8Array | null /* ptr */,
): Deno.PointerValue | null /* ptr */ {
  return util.pointerFromFfi(libWLDAP32.ldap_next_reference(util.toPointer(ld), util.toPointer(entry)));
}

export function ldap_count_references(
  ld: Deno.PointerValue | Uint8Array | null /* ptr */,
  res: Deno.PointerValue | Uint8Array | null /* ptr */,
): number /* u32 */ {
  return libWLDAP32.ldap_count_references(util.toPointer(ld), util.toPointer(res));
}

export function ldap_parse_referenceW(
  Connection: Deno.PointerValue | Uint8Array | null /* ptr */,
  ResultMessage: Deno.PointerValue | Uint8Array | null /* ptr */,
  Referrals: Deno.PointerValue | Uint8Array | null /* ptr */,
): number /* u32 */ {
  return libWLDAP32.ldap_parse_referenceW(util.toPointer(Connection), util.toPointer(ResultMessage), util.toPointer(Referrals));
}

export function ldap_parse_referenceA(
  Connection: Deno.PointerValue | Uint8Array | null /* ptr */,
  ResultMessage: Deno.PointerValue | Uint8Array | null /* ptr */,
  Referrals: Deno.PointerValue | Uint8Array | null /* ptr */,
): number /* u32 */ {
  return libWLDAP32.ldap_parse_referenceA(util.toPointer(Connection), util.toPointer(ResultMessage), util.toPointer(Referrals));
}

export function ldap_parse_reference(
  Connection: Deno.PointerValue | Uint8Array | null /* ptr */,
  ResultMessage: Deno.PointerValue | Uint8Array | null /* ptr */,
  Referrals: Deno.PointerValue | Uint8Array | null /* ptr */,
): number /* u32 */ {
  return libWLDAP32.ldap_parse_reference(util.toPointer(Connection), util.toPointer(ResultMessage), util.toPointer(Referrals));
}

export function ldap_extended_operationW(
  ld: Deno.PointerValue | Uint8Array | null /* ptr */,
  Oid: string | null /* Windows.Win32.Foundation.PWSTR */,
  Data: Deno.PointerValue | Uint8Array | null /* ptr */,
  ServerControls: Deno.PointerValue | Uint8Array | null /* ptr */,
  ClientControls: Deno.PointerValue | Uint8Array | null /* ptr */,
  MessageNumber: Deno.PointerValue | Uint8Array | null /* ptr */,
): number /* u32 */ {
  return libWLDAP32.ldap_extended_operationW(util.toPointer(ld), util.pwstrToFfi(Oid), util.toPointer(Data), util.toPointer(ServerControls), util.toPointer(ClientControls), util.toPointer(MessageNumber));
}

export function ldap_extended_operationA(
  ld: Deno.PointerValue | Uint8Array | null /* ptr */,
  Oid: string | null /* Windows.Win32.Foundation.PSTR */,
  Data: Deno.PointerValue | Uint8Array | null /* ptr */,
  ServerControls: Deno.PointerValue | Uint8Array | null /* ptr */,
  ClientControls: Deno.PointerValue | Uint8Array | null /* ptr */,
  MessageNumber: Deno.PointerValue | Uint8Array | null /* ptr */,
): number /* u32 */ {
  return libWLDAP32.ldap_extended_operationA(util.toPointer(ld), util.pstrToFfi(Oid), util.toPointer(Data), util.toPointer(ServerControls), util.toPointer(ClientControls), util.toPointer(MessageNumber));
}

export function ldap_extended_operation_sA(
  ExternalHandle: Deno.PointerValue | Uint8Array | null /* ptr */,
  Oid: string | null /* Windows.Win32.Foundation.PSTR */,
  Data: Deno.PointerValue | Uint8Array | null /* ptr */,
  ServerControls: Deno.PointerValue | Uint8Array | null /* ptr */,
  ClientControls: Deno.PointerValue | Uint8Array | null /* ptr */,
  ReturnedOid: Deno.PointerValue | Uint8Array | null /* ptr */,
  ReturnedData: Deno.PointerValue | Uint8Array | null /* ptr */,
): number /* u32 */ {
  return libWLDAP32.ldap_extended_operation_sA(util.toPointer(ExternalHandle), util.pstrToFfi(Oid), util.toPointer(Data), util.toPointer(ServerControls), util.toPointer(ClientControls), util.toPointer(ReturnedOid), util.toPointer(ReturnedData));
}

export function ldap_extended_operation_sW(
  ExternalHandle: Deno.PointerValue | Uint8Array | null /* ptr */,
  Oid: string | null /* Windows.Win32.Foundation.PWSTR */,
  Data: Deno.PointerValue | Uint8Array | null /* ptr */,
  ServerControls: Deno.PointerValue | Uint8Array | null /* ptr */,
  ClientControls: Deno.PointerValue | Uint8Array | null /* ptr */,
  ReturnedOid: Deno.PointerValue | Uint8Array | null /* ptr */,
  ReturnedData: Deno.PointerValue | Uint8Array | null /* ptr */,
): number /* u32 */ {
  return libWLDAP32.ldap_extended_operation_sW(util.toPointer(ExternalHandle), util.pwstrToFfi(Oid), util.toPointer(Data), util.toPointer(ServerControls), util.toPointer(ClientControls), util.toPointer(ReturnedOid), util.toPointer(ReturnedData));
}

export function ldap_extended_operation(
  ld: Deno.PointerValue | Uint8Array | null /* ptr */,
  Oid: string | null /* Windows.Win32.Foundation.PSTR */,
  Data: Deno.PointerValue | Uint8Array | null /* ptr */,
  ServerControls: Deno.PointerValue | Uint8Array | null /* ptr */,
  ClientControls: Deno.PointerValue | Uint8Array | null /* ptr */,
  MessageNumber: Deno.PointerValue | Uint8Array | null /* ptr */,
): number /* u32 */ {
  return libWLDAP32.ldap_extended_operation(util.toPointer(ld), util.pstrToFfi(Oid), util.toPointer(Data), util.toPointer(ServerControls), util.toPointer(ClientControls), util.toPointer(MessageNumber));
}

export function ldap_close_extended_op(
  ld: Deno.PointerValue | Uint8Array | null /* ptr */,
  MessageNumber: number /* u32 */,
): number /* u32 */ {
  return libWLDAP32.ldap_close_extended_op(util.toPointer(ld), MessageNumber);
}

export function LdapGetLastError(): number /* u32 */ {
  return libWLDAP32.LdapGetLastError();
}

export function LdapMapErrorToWin32(
  LdapError: number /* u32 */,
): number /* u32 */ {
  return libWLDAP32.LdapMapErrorToWin32(LdapError);
}

export function ldap_conn_from_msg(
  PrimaryConn: Deno.PointerValue | Uint8Array | null /* ptr */,
  res: Deno.PointerValue | Uint8Array | null /* ptr */,
): Deno.PointerValue | null /* ptr */ {
  return util.pointerFromFfi(libWLDAP32.ldap_conn_from_msg(util.toPointer(PrimaryConn), util.toPointer(res)));
}

export function ber_init(
  pBerVal: Deno.PointerValue | Uint8Array | null /* ptr */,
): Deno.PointerValue | null /* ptr */ {
  return util.pointerFromFfi(libWLDAP32.ber_init(util.toPointer(pBerVal)));
}

export function ber_free(
  pBerElement: Deno.PointerValue | Uint8Array | null /* ptr */,
  fbuf: number /* i32 */,
): void /* void */ {
  return libWLDAP32.ber_free(util.toPointer(pBerElement), fbuf);
}

export function ber_bvecfree(
  pBerVal: Deno.PointerValue | Uint8Array | null /* ptr */,
): void /* void */ {
  return libWLDAP32.ber_bvecfree(util.toPointer(pBerVal));
}

export function ber_bvdup(
  pBerVal: Deno.PointerValue | Uint8Array | null /* ptr */,
): Deno.PointerValue | null /* ptr */ {
  return util.pointerFromFfi(libWLDAP32.ber_bvdup(util.toPointer(pBerVal)));
}

export function ber_alloc_t(
  options: number /* i32 */,
): Deno.PointerValue | null /* ptr */ {
  return util.pointerFromFfi(libWLDAP32.ber_alloc_t(options));
}

export function ber_skip_tag(
  pBerElement: Deno.PointerValue | Uint8Array | null /* ptr */,
  pLen: Deno.PointerValue | Uint8Array | null /* ptr */,
): number /* u32 */ {
  return libWLDAP32.ber_skip_tag(util.toPointer(pBerElement), util.toPointer(pLen));
}

export function ber_peek_tag(
  pBerElement: Deno.PointerValue | Uint8Array | null /* ptr */,
  pLen: Deno.PointerValue | Uint8Array | null /* ptr */,
): number /* u32 */ {
  return libWLDAP32.ber_peek_tag(util.toPointer(pBerElement), util.toPointer(pLen));
}

export function ber_first_element(
  pBerElement: Deno.PointerValue | Uint8Array | null /* ptr */,
  pLen: Deno.PointerValue | Uint8Array | null /* ptr */,
  ppOpaque: Deno.PointerValue | Uint8Array | null /* ptr */,
): number /* u32 */ {
  return libWLDAP32.ber_first_element(util.toPointer(pBerElement), util.toPointer(pLen), util.toPointer(ppOpaque));
}

export function ber_next_element(
  pBerElement: Deno.PointerValue | Uint8Array | null /* ptr */,
  pLen: Deno.PointerValue | Uint8Array | null /* ptr */,
  opaque: string | null /* Windows.Win32.Foundation.PSTR */,
): number /* u32 */ {
  return libWLDAP32.ber_next_element(util.toPointer(pBerElement), util.toPointer(pLen), util.pstrToFfi(opaque));
}

export function ber_flatten(
  pBerElement: Deno.PointerValue | Uint8Array | null /* ptr */,
  pBerVal: Deno.PointerValue | Uint8Array | null /* ptr */,
): number /* i32 */ {
  return libWLDAP32.ber_flatten(util.toPointer(pBerElement), util.toPointer(pBerVal));
}

export function ber_printf(
  pBerElement: Deno.PointerValue | Uint8Array | null /* ptr */,
  fmt: string | null /* Windows.Win32.Foundation.PSTR */,
): number /* i32 */ {
  return libWLDAP32.ber_printf(util.toPointer(pBerElement), util.pstrToFfi(fmt));
}

export function ber_scanf(
  pBerElement: Deno.PointerValue | Uint8Array | null /* ptr */,
  fmt: string | null /* Windows.Win32.Foundation.PSTR */,
): number /* u32 */ {
  return libWLDAP32.ber_scanf(util.toPointer(pBerElement), util.pstrToFfi(fmt));
}

