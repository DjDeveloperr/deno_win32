/// Auto-generated by Deno Win32: Windows.Win32.Security.Cryptography.Certificates.Apis

import * as util from "../../../util.ts";

// Enums
export type CERT_VIEW_COLUMN_INDEX = number;
export type CERT_DELETE_ROW_FLAGS = number;
export type FULL_RESPONSE_PROPERTY_ID = number;
export type CVRC_COLUMN = number;
export type CERT_IMPORT_FLAGS = number;
export type CERT_GET_CONFIG_FLAGS = number;
export type ENUM_CERT_COLUMN_VALUE_FLAGS = number;
export type PENDING_REQUEST_DESIRED_PROPERTY = number;
export type CERTADMIN_GET_ROLES_FLAGS = number;
export type CR_DISP = number;
export type XEKL_KEYSIZE = number;
export type CERT_CREATE_REQUEST_FLAGS = number;
export type CERT_EXIT_EVENT_MASK = number;
export type ADDED_CERT_TYPE = number;
export type CVRC_TABLE = number;
export type CERT_PROPERTY_TYPE = number;
export type CERT_ALT_NAME = number;
export type CSBACKUP_TYPE = number;
export type XEKL_KEYSPEC = number;
export type CERT_REQUEST_OUT_TYPE = number;
export type CERT_VIEW_SEEK_OPERATOR_FLAGS = number;
export type OCSPSigningFlag = number;
export type OCSPRequestFlag = number;
export type X509EnrollmentAuthFlags = number;
export type X509SCEPMessageType = number;
export type X509SCEPDisposition = number;
export type X509SCEPFailInfo = number;
export type CERTENROLL_OBJECTID = number;
export type WebSecurityLevel = number;
export type EncodingType = number;
export type PFXExportOptions = number;
export type ObjectIdGroupId = number;
export type ObjectIdPublicKeyFlags = number;
export type AlgorithmFlags = number;
export type X500NameFlags = number;
export type X509CertificateEnrollmentContext = number;
export type EnrollmentEnrollStatus = number;
export type EnrollmentSelectionStatus = number;
export type EnrollmentDisplayStatus = number;
export type X509ProviderType = number;
export type AlgorithmType = number;
export type AlgorithmOperationFlags = number;
export type X509KeySpec = number;
export type KeyIdentifierHashAlgorithm = number;
export type X509PrivateKeyExportFlags = number;
export type X509PrivateKeyUsageFlags = number;
export type X509PrivateKeyProtection = number;
export type X509PrivateKeyVerify = number;
export type X509HardwareKeyUsageFlags = number;
export type X509KeyParametersExportType = number;
export type X509KeyUsageFlags = number;
export type AlternativeNameType = number;
export type PolicyQualifierType = number;
export type RequestClientInfoClientId = number;
export type CERTENROLL_PROPERTYID = number;
export type EnrollmentPolicyServerPropertyFlags = number;
export type PolicyServerUrlFlags = number;
export type EnrollmentTemplateProperty = number;
export type CommitTemplateFlags = number;
export type EnrollmentCAProperty = number;
export type X509EnrollmentPolicyLoadOption = number;
export type EnrollmentPolicyFlags = number;
export type PolicyServerUrlPropertyID = number;
export type X509EnrollmentPolicyExportFlags = number;
export type X509RequestType = number;
export type X509RequestInheritOptions = number;
export type InnerRequestLevel = number;
export type Pkcs10AllowedSignatureTypes = number;
export type KeyAttestationClaimType = number;
export type InstallResponseRestrictionFlags = number;
export type WebEnrollmentFlags = number;
export type CRLRevocationReason = number;
export type X509SCEPProcessMessageFlags = number;
export type DelayRetryAction = number;
export type X509CertificateTemplateGeneralFlag = number;
export type X509CertificateTemplateEnrollmentFlag = number;
export type X509CertificateTemplateSubjectNameFlag = number;
export type X509CertificateTemplatePrivateKeyFlag = number;
export type ImportPFXFlags = number;
export type ENUM_CATYPES = number;

// Constants
export const CV_COLUMN_LOG_DEFAULT = "-2";
export const CV_COLUMN_LOG_FAILED_DEFAULT = "-3";
export const CV_COLUMN_QUEUE_DEFAULT = "-1";
export const CDR_EXPIRED = 1;
export const CDR_REQUEST_LAST_CHANGED = 2;
export const FR_PROP_NONE = 0;
export const FR_PROP_FULLRESPONSE = 1;
export const FR_PROP_STATUSINFOCOUNT = 2;
export const FR_PROP_BODYPARTSTRING = 3;
export const FR_PROP_STATUS = 4;
export const FR_PROP_STATUSSTRING = 5;
export const FR_PROP_OTHERINFOCHOICE = 6;
export const FR_PROP_FAILINFO = 7;
export const FR_PROP_PENDINFOTOKEN = 8;
export const FR_PROP_PENDINFOTIME = 9;
export const FR_PROP_ISSUEDCERTIFICATEHASH = 10;
export const FR_PROP_ISSUEDCERTIFICATE = 11;
export const FR_PROP_ISSUEDCERTIFICATECHAIN = 12;
export const FR_PROP_ISSUEDCERTIFICATECRLCHAIN = 13;
export const FR_PROP_ENCRYPTEDKEYHASH = 14;
export const FR_PROP_FULLRESPONSENOPKCS7 = 15;
export const FR_PROP_CAEXCHANGECERTIFICATEHASH = 16;
export const FR_PROP_CAEXCHANGECERTIFICATE = 17;
export const FR_PROP_CAEXCHANGECERTIFICATECHAIN = 18;
export const FR_PROP_CAEXCHANGECERTIFICATECRLCHAIN = 19;
export const FR_PROP_ATTESTATIONCHALLENGE = 20;
export const FR_PROP_ATTESTATIONPROVIDERNAME = 21;
export const CVRC_COLUMN_SCHEMA = 0;
export const CVRC_COLUMN_RESULT = 1;
export const CVRC_COLUMN_VALUE = 2;
export const CVRC_COLUMN_MASK = 4095;
export const CR_IN_BASE64HEADER = 0;
export const CR_IN_BASE64 = 1;
export const CR_IN_BINARY = 2;
export const CC_DEFAULTCONFIG = 0;
export const CC_FIRSTCONFIG = 2;
export const CC_LOCALACTIVECONFIG = 4;
export const CC_LOCALCONFIG = 3;
export const CC_UIPICKCONFIG = 1;
export const CC_UIPICKCONFIGSKIPLOCALCA_ = 5;
export const CV_OUT_BASE64 = 1;
export const CV_OUT_BASE64HEADER = 0;
export const CV_OUT_BASE64REQUESTHEADER = 3;
export const CV_OUT_BASE64X509CRLHEADER = 9;
export const CV_OUT_BINARY = 2;
export const CV_OUT_HEX = 4;
export const CV_OUT_HEXADDR = 10;
export const CV_OUT_HEXASCII = 5;
export const CV_OUT_HEXASCIIADDR = 11;
export const XEPR_CADNS = 1;
export const XEPR_CAFRIENDLYNAME = 3;
export const XEPR_CANAME = 2;
export const XEPR_HASH = 8;
export const XEPR_REQUESTID = 4;
export const CA_ACCESS_ADMIN = 1;
export const CA_ACCESS_AUDITOR = 4;
export const CA_ACCESS_ENROLL = 512;
export const CA_ACCESS_OFFICER = 2;
export const CA_ACCESS_OPERATOR = 8;
export const CA_ACCESS_READ = 256;
export const CR_DISP_DENIED = 2;
export const CR_DISP_ERROR = 1;
export const CR_DISP_INCOMPLETE = 0;
export const CR_DISP_ISSUED = 3;
export const CR_DISP_ISSUED_OUT_OF_BAND = 4;
export const CR_DISP_UNDER_SUBMISSION = 5;
export const XEKL_KEYSIZE_MIN = 1;
export const XEKL_KEYSIZE_MAX = 2;
export const XEKL_KEYSIZE_INC = 3;
export const XECR_CMC = 3;
export const XECR_PKCS10_V1_5 = 4;
export const XECR_PKCS10_V2_0 = 1;
export const XECR_PKCS7 = 2;
export const EXITEVENT_CERTDENIED = 4;
export const EXITEVENT_CERTISSUED = 1;
export const EXITEVENT_CERTPENDING = 2;
export const EXITEVENT_CERTRETRIEVEPENDING = 16;
export const EXITEVENT_CERTREVOKED = 8;
export const EXITEVENT_CRLISSUED = 32;
export const EXITEVENT_SHUTDOWN = 64;
export const XECT_EXTENSION_V1 = 1;
export const XECT_EXTENSION_V2 = 2;
export const CVRC_TABLE_ATTRIBUTES = 16384;
export const CVRC_TABLE_CRL = 20480;
export const CVRC_TABLE_EXTENSIONS = 12288;
export const CVRC_TABLE_REQCERT = 0;
export const PROPTYPE_BINARY = 3;
export const PROPTYPE_DATE = 2;
export const PROPTYPE_LONG = 1;
export const PROPTYPE_STRING = 4;
export const CERT_ALT_NAME_RFC822_NAME = 2;
export const CERT_ALT_NAME_DNS_NAME = 3;
export const CERT_ALT_NAME_URL = 7;
export const CERT_ALT_NAME_REGISTERED_ID = 9;
export const CERT_ALT_NAME_DIRECTORY_NAME = 5;
export const CERT_ALT_NAME_IP_ADDRESS = 8;
export const CERT_ALT_NAME_OTHER_NAME = 1;
export const CSBACKUP_TYPE_FULL = 1;
export const CSBACKUP_TYPE_LOGS_ONLY = 2;
export const XEKL_KEYSPEC_KEYX = 1;
export const XEKL_KEYSPEC_SIG = 2;
export const CR_OUT_BASE64HEADER = 0;
export const CR_OUT_BASE64 = 1;
export const CR_OUT_BINARY = 2;
export const CVR_SEEK_EQ = 1;
export const CVR_SEEK_LE = 4;
export const CVR_SEEK_LT = 2;
export const CVR_SEEK_GE = 8;
export const CVR_SEEK_GT = 16;
export const CA_DISP_INCOMPLETE = 0;
export const CA_DISP_ERROR = 1;
export const CA_DISP_REVOKED = 2;
export const CA_DISP_VALID = 3;
export const CA_DISP_INVALID = 4;
export const CA_DISP_UNDER_SUBMISSION = 5;
export const KRA_DISP_EXPIRED = 0;
export const KRA_DISP_NOTFOUND = 1;
export const KRA_DISP_REVOKED = 2;
export const KRA_DISP_VALID = 3;
export const KRA_DISP_INVALID = 4;
export const KRA_DISP_UNTRUSTED = 5;
export const KRA_DISP_NOTLOADED = 6;
export const CA_ACCESS_MASKROLES = 255;
export const CA_CRL_BASE = 1;
export const CA_CRL_DELTA = 2;
export const CA_CRL_REPUBLISH = 16;
export const ICF_ALLOWFOREIGN = 65536;
export const ICF_EXISTINGROW = 131072;
export const IKF_OVERWRITE = 65536;
export const CSBACKUP_TYPE_MASK = 3;
export const CSRESTORE_TYPE_FULL = 1;
export const CSRESTORE_TYPE_ONLINE = 2;
export const CSRESTORE_TYPE_CATCHUP = 4;
export const CSRESTORE_TYPE_MASK = 5;
export const CSBACKUP_DISABLE_INCREMENTAL = 4294967295;
export const CSBFT_DIRECTORY = 128;
export const CSBFT_DATABASE_DIRECTORY = 64;
export const CSBFT_LOG_DIRECTORY = 32;
export const CSCONTROL_SHUTDOWN = 1;
export const CSCONTROL_SUSPEND = 2;
export const CSCONTROL_RESTART = 3;
export const CAIF_DSENTRY = 1;
export const CAIF_SHAREDFOLDERENTRY = 2;
export const CAIF_REGISTRY = 4;
export const CAIF_LOCAL = 8;
export const CAIF_REGISTRYPARENT = 16;
export const CR_IN_ENCODEANY = 255;
export const CR_IN_ENCODEMASK = 255;
export const CR_IN_FORMATANY = 0;
export const CR_IN_PKCS10 = 256;
export const CR_IN_KEYGEN = 512;
export const CR_IN_PKCS7 = 768;
export const CR_IN_CMC = 1024;
export const CR_IN_CHALLENGERESPONSE = 1280;
export const CR_IN_SIGNEDCERTIFICATETIMESTAMPLIST = 1536;
export const CR_IN_FORMATMASK = 65280;
export const CR_IN_SCEP = 65536;
export const CR_IN_RPC = 131072;
export const CR_IN_HTTP = 196608;
export const CR_IN_FULLRESPONSE = 262144;
export const CR_IN_CRLS = 524288;
export const CR_IN_MACHINE = 1048576;
export const CR_IN_ROBO = 2097152;
export const CR_IN_CLIENTIDNONE = 4194304;
export const CR_IN_CONNECTONLY = 8388608;
export const CR_IN_RETURNCHALLENGE = 16777216;
export const CR_IN_SCEPPOST = 33554432;
export const CR_IN_CERTIFICATETRANSPARENCY = 67108864;
export const CC_UIPICKCONFIGSKIPLOCALCA = 5;
export const CR_DISP_REVOKED = 6;
export const CR_OUT_BASE64REQUESTHEADER = 3;
export const CR_OUT_HEX = 4;
export const CR_OUT_HEXASCII = 5;
export const CR_OUT_BASE64X509CRLHEADER = 9;
export const CR_OUT_HEXADDR = 10;
export const CR_OUT_HEXASCIIADDR = 11;
export const CR_OUT_HEXRAW = 12;
export const CR_OUT_ENCODEMASK = 255;
export const CR_OUT_CHAIN = 256;
export const CR_OUT_CRLS = 512;
export const CR_OUT_NOCRLF = 1073741824;
export const CR_OUT_NOCR = 2147483648;
export const CR_GEMT_DEFAULT = 0;
export const CR_GEMT_HRESULT_STRING = 1;
export const CR_GEMT_HTTP_ERROR = 2;
export const CR_PROP_NONE = 0;
export const CR_PROP_FILEVERSION = 1;
export const CR_PROP_PRODUCTVERSION = 2;
export const CR_PROP_EXITCOUNT = 3;
export const CR_PROP_EXITDESCRIPTION = 4;
export const CR_PROP_POLICYDESCRIPTION = 5;
export const CR_PROP_CANAME = 6;
export const CR_PROP_SANITIZEDCANAME = 7;
export const CR_PROP_SHAREDFOLDER = 8;
export const CR_PROP_PARENTCA = 9;
export const CR_PROP_CATYPE = 10;
export const CR_PROP_CASIGCERTCOUNT = 11;
export const CR_PROP_CASIGCERT = 12;
export const CR_PROP_CASIGCERTCHAIN = 13;
export const CR_PROP_CAXCHGCERTCOUNT = 14;
export const CR_PROP_CAXCHGCERT = 15;
export const CR_PROP_CAXCHGCERTCHAIN = 16;
export const CR_PROP_BASECRL = 17;
export const CR_PROP_DELTACRL = 18;
export const CR_PROP_CACERTSTATE = 19;
export const CR_PROP_CRLSTATE = 20;
export const CR_PROP_CAPROPIDMAX = 21;
export const CR_PROP_DNSNAME = 22;
export const CR_PROP_ROLESEPARATIONENABLED = 23;
export const CR_PROP_KRACERTUSEDCOUNT = 24;
export const CR_PROP_KRACERTCOUNT = 25;
export const CR_PROP_KRACERT = 26;
export const CR_PROP_KRACERTSTATE = 27;
export const CR_PROP_ADVANCEDSERVER = 28;
export const CR_PROP_TEMPLATES = 29;
export const CR_PROP_BASECRLPUBLISHSTATUS = 30;
export const CR_PROP_DELTACRLPUBLISHSTATUS = 31;
export const CR_PROP_CASIGCERTCRLCHAIN = 32;
export const CR_PROP_CAXCHGCERTCRLCHAIN = 33;
export const CR_PROP_CACERTSTATUSCODE = 34;
export const CR_PROP_CAFORWARDCROSSCERT = 35;
export const CR_PROP_CABACKWARDCROSSCERT = 36;
export const CR_PROP_CAFORWARDCROSSCERTSTATE = 37;
export const CR_PROP_CABACKWARDCROSSCERTSTATE = 38;
export const CR_PROP_CACERTVERSION = 39;
export const CR_PROP_SANITIZEDCASHORTNAME = 40;
export const CR_PROP_CERTCDPURLS = 41;
export const CR_PROP_CERTAIAURLS = 42;
export const CR_PROP_CERTAIAOCSPURLS = 43;
export const CR_PROP_LOCALENAME = 44;
export const CR_PROP_SUBJECTTEMPLATE_OIDS = 45;
export const CR_PROP_SCEPSERVERCERTS = 1000;
export const CR_PROP_SCEPSERVERCAPABILITIES = 1001;
export const CR_PROP_SCEPSERVERCERTSCHAIN = 1002;
export const CR_PROP_SCEPMIN = 1000;
export const CR_PROP_SCEPMAX = 1002;
export const FR_PROP_CLAIMCHALLENGE = 22;
export const EAN_NAMEOBJECTID = 2147483648;
export const EANR_SUPPRESS_IA5CONVERSION = 2147483648;
export const CERTENROLL_INDEX_BASE = 0;
export const EXITEVENT_INVALID = 0;
export const EXITEVENT_STARTUP = 128;
export const EXITEVENT_CERTIMPORTED = 512;
export const ENUMEXT_OBJECTID = 1;
export const CMM_REFRESHONLY = 1;
export const CMM_READONLY = 2;
export const DBG_CERTSRV = 1;
export const DBSESSIONCOUNTDEFAULT = 100;
export const DBFLAGS_READONLY = 1;
export const DBFLAGS_CREATEIFNEEDED = 2;
export const DBFLAGS_CIRCULARLOGGING = 4;
export const DBFLAGS_LAZYFLUSH = 8;
export const DBFLAGS_MAXCACHESIZEX100 = 16;
export const DBFLAGS_CHECKPOINTDEPTH60MB = 32;
export const DBFLAGS_LOGBUFFERSLARGE = 64;
export const DBFLAGS_LOGBUFFERSHUGE = 128;
export const DBFLAGS_LOGFILESIZE16MB = 256;
export const DBFLAGS_MULTITHREADTRANSACTIONS = 512;
export const DBFLAGS_DISABLESNAPSHOTBACKUP = 1024;
export const DBFLAGS_ENABLEVOLATILEREQUESTS = 2048;
export const LDAPF_SSLENABLE = 1;
export const LDAPF_SIGNDISABLE = 2;
export const CSVER_MAJOR_WIN2K = 1;
export const CSVER_MINOR_WIN2K = 1;
export const CSVER_MAJOR_WHISTLER = 2;
export const CSVER_MINOR_WHISTLER_BETA2 = 1;
export const CSVER_MINOR_WHISTLER_BETA3 = 2;
export const CSVER_MAJOR_LONGHORN = 3;
export const CSVER_MINOR_LONGHORN_BETA1 = 1;
export const CSVER_MAJOR_WIN7 = 4;
export const CSVER_MINOR_WIN7 = 1;
export const CSVER_MAJOR_WIN8 = 5;
export const CSVER_MINOR_WIN8 = 1;
export const CSVER_MAJOR_WINBLUE = 6;
export const CSVER_MINOR_WINBLUE = 1;
export const CSVER_MAJOR_THRESHOLD = 7;
export const CSVER_MINOR_THRESHOLD = 1;
export const CSVER_MAJOR = 7;
export const CSVER_MINOR = 1;
export const CCLOCKSKEWMINUTESDEFAULT = 10;
export const CVIEWAGEMINUTESDEFAULT = 16;
export const SETUP_SERVER_FLAG = 1;
export const SETUP_CLIENT_FLAG = 2;
export const SETUP_SUSPEND_FLAG = 4;
export const SETUP_REQUEST_FLAG = 8;
export const SETUP_ONLINE_FLAG = 16;
export const SETUP_DENIED_FLAG = 32;
export const SETUP_CREATEDB_FLAG = 64;
export const SETUP_ATTEMPT_VROOT_CREATE = 128;
export const SETUP_FORCECRL_FLAG = 256;
export const SETUP_UPDATE_CAOBJECT_SVRTYPE = 512;
export const SETUP_SERVER_UPGRADED_FLAG = 1024;
export const SETUP_W2K_SECURITY_NOT_UPGRADED_FLAG = 2048;
export const SETUP_SECURITY_CHANGED = 4096;
export const SETUP_DCOM_SECURITY_UPDATED_FLAG = 8192;
export const SETUP_SERVER_IS_UP_TO_DATE_FLAG = 16384;
export const CRLF_DELTA_USE_OLDEST_UNEXPIRED_BASE = 1;
export const CRLF_DELETE_EXPIRED_CRLS = 2;
export const CRLF_CRLNUMBER_CRITICAL = 4;
export const CRLF_REVCHECK_IGNORE_OFFLINE = 8;
export const CRLF_IGNORE_INVALID_POLICIES = 16;
export const CRLF_REBUILD_MODIFIED_SUBJECT_ONLY = 32;
export const CRLF_SAVE_FAILED_CERTS = 64;
export const CRLF_IGNORE_UNKNOWN_CMC_ATTRIBUTES = 128;
export const CRLF_IGNORE_CROSS_CERT_TRUST_ERROR = 256;
export const CRLF_PUBLISH_EXPIRED_CERT_CRLS = 512;
export const CRLF_ENFORCE_ENROLLMENT_AGENT = 1024;
export const CRLF_DISABLE_RDN_REORDER = 2048;
export const CRLF_DISABLE_ROOT_CROSS_CERTS = 4096;
export const CRLF_LOG_FULL_RESPONSE = 8192;
export const CRLF_USE_XCHG_CERT_TEMPLATE = 16384;
export const CRLF_USE_CROSS_CERT_TEMPLATE = 32768;
export const CRLF_ALLOW_REQUEST_ATTRIBUTE_SUBJECT = 65536;
export const CRLF_REVCHECK_IGNORE_NOREVCHECK = 131072;
export const CRLF_PRESERVE_EXPIRED_CA_CERTS = 262144;
export const CRLF_PRESERVE_REVOKED_CA_CERTS = 524288;
export const CRLF_DISABLE_CHAIN_VERIFICATION = 1048576;
export const CRLF_BUILD_ROOTCA_CRLENTRIES_BASEDONKEY = 2097152;
export const KRAF_ENABLEFOREIGN = 1;
export const KRAF_SAVEBADREQUESTKEY = 2;
export const KRAF_ENABLEARCHIVEALL = 4;
export const KRAF_DISABLEUSEDEFAULTPROVIDER = 8;
export const IF_LOCKICERTREQUEST = 1;
export const IF_NOREMOTEICERTREQUEST = 2;
export const IF_NOLOCALICERTREQUEST = 4;
export const IF_NORPCICERTREQUEST = 8;
export const IF_NOREMOTEICERTADMIN = 16;
export const IF_NOLOCALICERTADMIN = 32;
export const IF_NOREMOTEICERTADMINBACKUP = 64;
export const IF_NOLOCALICERTADMINBACKUP = 128;
export const IF_NOSNAPSHOTBACKUP = 256;
export const IF_ENFORCEENCRYPTICERTREQUEST = 512;
export const IF_ENFORCEENCRYPTICERTADMIN = 1024;
export const IF_ENABLEEXITKEYRETRIEVAL = 2048;
export const IF_ENABLEADMINASAUDITOR = 4096;
export const PROCFLG_NONE = 0;
export const PROCFLG_ENFORCEGOODKEYS = 1;
export const CSURL_SERVERPUBLISH = 1;
export const CSURL_ADDTOCERTCDP = 2;
export const CSURL_ADDTOFRESHESTCRL = 4;
export const CSURL_ADDTOCRLCDP = 8;
export const CSURL_PUBLISHRETRY = 16;
export const CSURL_ADDTOCERTOCSP = 32;
export const CSURL_SERVERPUBLISHDELTA = 64;
export const CSURL_ADDTOIDP = 128;
export const CAPATHLENGTH_INFINITE = 4294967295;
export const REQDISP_PENDING = 0;
export const REQDISP_ISSUE = 1;
export const REQDISP_DENY = 2;
export const REQDISP_USEREQUESTATTRIBUTE = 3;
export const REQDISP_MASK = 255;
export const REQDISP_PENDINGFIRST = 256;
export const REQDISP_DEFAULT_ENTERPRISE = 1;
export const REVEXT_CDPLDAPURL_OLD = 1;
export const REVEXT_CDPHTTPURL_OLD = 2;
export const REVEXT_CDPFTPURL_OLD = 4;
export const REVEXT_CDPFILEURL_OLD = 8;
export const REVEXT_CDPURLMASK_OLD = 255;
export const REVEXT_CDPENABLE = 256;
export const REVEXT_ASPENABLE = 512;
export const REVEXT_DEFAULT_NODS = 256;
export const REVEXT_DEFAULT_DS = 256;
export const ISSCERT_LDAPURL_OLD = 1;
export const ISSCERT_HTTPURL_OLD = 2;
export const ISSCERT_FTPURL_OLD = 4;
export const ISSCERT_FILEURL_OLD = 8;
export const ISSCERT_URLMASK_OLD = 255;
export const ISSCERT_ENABLE = 256;
export const ISSCERT_DEFAULT_NODS = 256;
export const ISSCERT_DEFAULT_DS = 256;
export const EDITF_ENABLEREQUESTEXTENSIONS = 1;
export const EDITF_REQUESTEXTENSIONLIST = 2;
export const EDITF_DISABLEEXTENSIONLIST = 4;
export const EDITF_ADDOLDKEYUSAGE = 8;
export const EDITF_ADDOLDCERTTYPE = 16;
export const EDITF_ATTRIBUTEENDDATE = 32;
export const EDITF_BASICCONSTRAINTSCRITICAL = 64;
export const EDITF_BASICCONSTRAINTSCA = 128;
export const EDITF_ENABLEAKIKEYID = 256;
export const EDITF_ATTRIBUTECA = 512;
export const EDITF_IGNOREREQUESTERGROUP = 1024;
export const EDITF_ENABLEAKIISSUERNAME = 2048;
export const EDITF_ENABLEAKIISSUERSERIAL = 4096;
export const EDITF_ENABLEAKICRITICAL = 8192;
export const EDITF_SERVERUPGRADED = 16384;
export const EDITF_ATTRIBUTEEKU = 32768;
export const EDITF_ENABLEDEFAULTSMIME = 65536;
export const EDITF_EMAILOPTIONAL = 131072;
export const EDITF_ATTRIBUTESUBJECTALTNAME2 = 262144;
export const EDITF_ENABLELDAPREFERRALS = 524288;
export const EDITF_ENABLECHASECLIENTDC = 1048576;
export const EDITF_AUDITCERTTEMPLATELOAD = 2097152;
export const EDITF_DISABLEOLDOSCNUPN = 4194304;
export const EDITF_DISABLELDAPPACKAGELIST = 8388608;
export const EDITF_ENABLEUPNMAP = 16777216;
export const EDITF_ENABLEOCSPREVNOCHECK = 33554432;
export const EDITF_ENABLERENEWONBEHALFOF = 67108864;
export const EDITF_ENABLEKEYENCIPHERMENTCACERT = 134217728;
export const EXITPUB_FILE = 1;
export const EXITPUB_ACTIVEDIRECTORY = 2;
export const EXITPUB_REMOVEOLDCERTS = 16;
export const EXITPUB_DEFAULT_ENTERPRISE = 2;
export const EXITPUB_DEFAULT_STANDALONE = 1;
export const TP_MACHINEPOLICY = 1;
export const KR_ENABLE_MACHINE = 1;
export const KR_ENABLE_USER = 2;
export const EXTENSION_CRITICAL_FLAG = 1;
export const EXTENSION_DISABLE_FLAG = 2;
export const EXTENSION_DELETE_FLAG = 4;
export const EXTENSION_POLICY_MASK = 65535;
export const EXTENSION_ORIGIN_REQUEST = 65536;
export const EXTENSION_ORIGIN_POLICY = 131072;
export const EXTENSION_ORIGIN_ADMIN = 196608;
export const EXTENSION_ORIGIN_SERVER = 262144;
export const EXTENSION_ORIGIN_RENEWALCERT = 327680;
export const EXTENSION_ORIGIN_IMPORTEDCERT = 393216;
export const EXTENSION_ORIGIN_PKCS7 = 458752;
export const EXTENSION_ORIGIN_CMC = 524288;
export const EXTENSION_ORIGIN_CACERT = 589824;
export const EXTENSION_ORIGIN_MASK = 983040;
export const CPF_BASE = 1;
export const CPF_DELTA = 2;
export const CPF_COMPLETE = 4;
export const CPF_SHADOW = 8;
export const CPF_CASTORE_ERROR = 16;
export const CPF_BADURL_ERROR = 32;
export const CPF_MANUAL = 64;
export const CPF_SIGNATURE_ERROR = 128;
export const CPF_LDAP_ERROR = 256;
export const CPF_FILE_ERROR = 512;
export const CPF_FTP_ERROR = 1024;
export const CPF_HTTP_ERROR = 2048;
export const CPF_POSTPONED_BASE_LDAP_ERROR = 4096;
export const CPF_POSTPONED_BASE_FILE_ERROR = 8192;
export const PROPTYPE_MASK = 255;
export const PROPCALLER_SERVER = 256;
export const PROPCALLER_POLICY = 512;
export const PROPCALLER_EXIT = 768;
export const PROPCALLER_ADMIN = 1024;
export const PROPCALLER_REQUEST = 1280;
export const PROPCALLER_MASK = 3840;
export const PROPFLAGS_INDEXED = 65536;
export const CR_FLG_FORCETELETEX = 1;
export const CR_FLG_RENEWAL = 2;
export const CR_FLG_FORCEUTF8 = 4;
export const CR_FLG_CAXCHGCERT = 8;
export const CR_FLG_ENROLLONBEHALFOF = 16;
export const CR_FLG_SUBJECTUNMODIFIED = 32;
export const CR_FLG_VALIDENCRYPTEDKEYHASH = 64;
export const CR_FLG_CACROSSCERT = 128;
export const CR_FLG_ENFORCEUTF8 = 256;
export const CR_FLG_DEFINEDCACERT = 512;
export const CR_FLG_CHALLENGEPENDING = 1024;
export const CR_FLG_CHALLENGESATISFIED = 2048;
export const CR_FLG_TRUSTONUSE = 4096;
export const CR_FLG_TRUSTEKCERT = 8192;
export const CR_FLG_TRUSTEKKEY = 16384;
export const CR_FLG_PUBLISHERROR = 2147483648;
export const DB_DISP_ACTIVE = 8;
export const DB_DISP_PENDING = 9;
export const DB_DISP_QUEUE_MAX = 9;
export const DB_DISP_FOREIGN = 12;
export const DB_DISP_CA_CERT = 15;
export const DB_DISP_CA_CERT_CHAIN = 16;
export const DB_DISP_KRA_CERT = 17;
export const DB_DISP_LOG_MIN = 20;
export const DB_DISP_ISSUED = 20;
export const DB_DISP_REVOKED = 21;
export const DB_DISP_LOG_FAILED_MIN = 30;
export const DB_DISP_ERROR = 30;
export const DB_DISP_DENIED = 31;
export const VR_PENDING = 0;
export const VR_INSTANT_OK = 1;
export const VR_INSTANT_BAD = 2;
export const CV_OUT_HEXRAW = 12;
export const CV_OUT_ENCODEMASK = 255;
export const CV_OUT_NOCRLF = 1073741824;
export const CV_OUT_NOCR = 2147483648;
export const CVR_SEEK_NONE = 0;
export const CVR_SEEK_MASK = 255;
export const CVR_SEEK_NODELTA = 4096;
export const CVR_SORT_NONE = 0;
export const CVR_SORT_ASCEND = 1;
export const CVR_SORT_DESCEND = 2;
export const CV_COLUMN_EXTENSION_DEFAULT = "-4";
export const CV_COLUMN_ATTRIBUTE_DEFAULT = "-5";
export const CV_COLUMN_CRL_DEFAULT = "-6";
export const CV_COLUMN_LOG_REVOKED_DEFAULT = "-7";
export const CVRC_TABLE_MASK = 61440;
export const CVRC_TABLE_SHIFT = 12;
export const CRYPT_ENUM_ALL_PROVIDERS = 1;
export const XEPR_ENUM_FIRST = "-1";
export const XEPR_DATE = 5;
export const XEPR_TEMPLATENAME = 6;
export const XEPR_VERSION = 7;
export const XEPR_V1TEMPLATENAME = 9;
export const XEPR_V2TEMPLATEOID = 16;
export const XEKL_KEYSIZE_DEFAULT = 4;
export const XECP_STRING_PROPERTY = 1;
export const XECI_DISABLE = 0;
export const XECI_XENROLL = 1;
export const XECI_AUTOENROLL = 2;
export const XECI_REQWIZARD = 3;
export const XECI_CERTREQ = 4;
export const wszCMM_PROP_NAME = "Name";
export const wszCMM_PROP_DESCRIPTION = "Description";
export const wszCMM_PROP_COPYRIGHT = "Copyright";
export const wszCMM_PROP_FILEVER = "File Version";
export const wszCMM_PROP_PRODUCTVER = "Product Version";
export const wszCMM_PROP_DISPLAY_HWND = "HWND";
export const wszCMM_PROP_ISMULTITHREADED = "IsMultiThreaded";
export const OCSP_SF_SILENT = 1;
export const OCSP_SF_USE_CACERT = 2;
export const OCSP_SF_ALLOW_SIGNINGCERT_AUTORENEWAL = 4;
export const OCSP_SF_FORCE_SIGNINGCERT_ISSUER_ISCA = 8;
export const OCSP_SF_AUTODISCOVER_SIGNINGCERT = 16;
export const OCSP_SF_MANUAL_ASSIGN_SIGNINGCERT = 32;
export const OCSP_SF_RESPONDER_ID_KEYHASH = 64;
export const OCSP_SF_RESPONDER_ID_NAME = 128;
export const OCSP_SF_ALLOW_NONCE_EXTENSION = 256;
export const OCSP_SF_ALLOW_SIGNINGCERT_AUTOENROLLMENT = 512;
export const OCSP_RF_REJECT_SIGNED_REQUESTS = 1;
export const X509AuthNone = 0;
export const X509AuthAnonymous = 1;
export const X509AuthKerberos = 2;
export const X509AuthUsername = 4;
export const X509AuthCertificate = 8;
export const SCEPMessageUnknown = "-1";
export const SCEPMessageCertResponse = 3;
export const SCEPMessagePKCSRequest = 19;
export const SCEPMessageGetCertInitial = 20;
export const SCEPMessageGetCert = 21;
export const SCEPMessageGetCRL = 22;
export const SCEPMessageClaimChallengeAnswer = 41;
export const SCEPDispositionUnknown = "-1";
export const SCEPDispositionSuccess = 0;
export const SCEPDispositionFailure = 2;
export const SCEPDispositionPending = 3;
export const SCEPDispositionPendingChallenge = 11;
export const SCEPFailUnknown = "-1";
export const SCEPFailBadAlgorithm = 0;
export const SCEPFailBadMessageCheck = 1;
export const SCEPFailBadRequest = 2;
export const SCEPFailBadTime = 3;
export const SCEPFailBadCertId = 4;
export const XCN_OID_NONE = 0;
export const XCN_OID_RSA = 1;
export const XCN_OID_PKCS = 2;
export const XCN_OID_RSA_HASH = 3;
export const XCN_OID_RSA_ENCRYPT = 4;
export const XCN_OID_PKCS_1 = 5;
export const XCN_OID_PKCS_2 = 6;
export const XCN_OID_PKCS_3 = 7;
export const XCN_OID_PKCS_4 = 8;
export const XCN_OID_PKCS_5 = 9;
export const XCN_OID_PKCS_6 = 10;
export const XCN_OID_PKCS_7 = 11;
export const XCN_OID_PKCS_8 = 12;
export const XCN_OID_PKCS_9 = 13;
export const XCN_OID_PKCS_10 = 14;
export const XCN_OID_PKCS_12 = 15;
export const XCN_OID_RSA_RSA = 16;
export const XCN_OID_RSA_MD2RSA = 17;
export const XCN_OID_RSA_MD4RSA = 18;
export const XCN_OID_RSA_MD5RSA = 19;
export const XCN_OID_RSA_SHA1RSA = 20;
export const XCN_OID_RSA_SETOAEP_RSA = 21;
export const XCN_OID_RSA_DH = 22;
export const XCN_OID_RSA_data = 23;
export const XCN_OID_RSA_signedData = 24;
export const XCN_OID_RSA_envelopedData = 25;
export const XCN_OID_RSA_signEnvData = 26;
export const XCN_OID_RSA_digestedData = 27;
export const XCN_OID_RSA_hashedData = 28;
export const XCN_OID_RSA_encryptedData = 29;
export const XCN_OID_RSA_emailAddr = 30;
export const XCN_OID_RSA_unstructName = 31;
export const XCN_OID_RSA_contentType = 32;
export const XCN_OID_RSA_messageDigest = 33;
export const XCN_OID_RSA_signingTime = 34;
export const XCN_OID_RSA_counterSign = 35;
export const XCN_OID_RSA_challengePwd = 36;
export const XCN_OID_RSA_unstructAddr = 37;
export const XCN_OID_RSA_extCertAttrs = 38;
export const XCN_OID_RSA_certExtensions = 39;
export const XCN_OID_RSA_SMIMECapabilities = 40;
export const XCN_OID_RSA_preferSignedData = 41;
export const XCN_OID_RSA_SMIMEalg = 42;
export const XCN_OID_RSA_SMIMEalgESDH = 43;
export const XCN_OID_RSA_SMIMEalgCMS3DESwrap = 44;
export const XCN_OID_RSA_SMIMEalgCMSRC2wrap = 45;
export const XCN_OID_RSA_MD2 = 46;
export const XCN_OID_RSA_MD4 = 47;
export const XCN_OID_RSA_MD5 = 48;
export const XCN_OID_RSA_RC2CBC = 49;
export const XCN_OID_RSA_RC4 = 50;
export const XCN_OID_RSA_DES_EDE3_CBC = 51;
export const XCN_OID_RSA_RC5_CBCPad = 52;
export const XCN_OID_ANSI_X942 = 53;
export const XCN_OID_ANSI_X942_DH = 54;
export const XCN_OID_X957 = 55;
export const XCN_OID_X957_DSA = 56;
export const XCN_OID_X957_SHA1DSA = 57;
export const XCN_OID_DS = 58;
export const XCN_OID_DSALG = 59;
export const XCN_OID_DSALG_CRPT = 60;
export const XCN_OID_DSALG_HASH = 61;
export const XCN_OID_DSALG_SIGN = 62;
export const XCN_OID_DSALG_RSA = 63;
export const XCN_OID_OIW = 64;
export const XCN_OID_OIWSEC = 65;
export const XCN_OID_OIWSEC_md4RSA = 66;
export const XCN_OID_OIWSEC_md5RSA = 67;
export const XCN_OID_OIWSEC_md4RSA2 = 68;
export const XCN_OID_OIWSEC_desECB = 69;
export const XCN_OID_OIWSEC_desCBC = 70;
export const XCN_OID_OIWSEC_desOFB = 71;
export const XCN_OID_OIWSEC_desCFB = 72;
export const XCN_OID_OIWSEC_desMAC = 73;
export const XCN_OID_OIWSEC_rsaSign = 74;
export const XCN_OID_OIWSEC_dsa = 75;
export const XCN_OID_OIWSEC_shaDSA = 76;
export const XCN_OID_OIWSEC_mdc2RSA = 77;
export const XCN_OID_OIWSEC_shaRSA = 78;
export const XCN_OID_OIWSEC_dhCommMod = 79;
export const XCN_OID_OIWSEC_desEDE = 80;
export const XCN_OID_OIWSEC_sha = 81;
export const XCN_OID_OIWSEC_mdc2 = 82;
export const XCN_OID_OIWSEC_dsaComm = 83;
export const XCN_OID_OIWSEC_dsaCommSHA = 84;
export const XCN_OID_OIWSEC_rsaXchg = 85;
export const XCN_OID_OIWSEC_keyHashSeal = 86;
export const XCN_OID_OIWSEC_md2RSASign = 87;
export const XCN_OID_OIWSEC_md5RSASign = 88;
export const XCN_OID_OIWSEC_sha1 = 89;
export const XCN_OID_OIWSEC_dsaSHA1 = 90;
export const XCN_OID_OIWSEC_dsaCommSHA1 = 91;
export const XCN_OID_OIWSEC_sha1RSASign = 92;
export const XCN_OID_OIWDIR = 93;
export const XCN_OID_OIWDIR_CRPT = 94;
export const XCN_OID_OIWDIR_HASH = 95;
export const XCN_OID_OIWDIR_SIGN = 96;
export const XCN_OID_OIWDIR_md2 = 97;
export const XCN_OID_OIWDIR_md2RSA = 98;
export const XCN_OID_INFOSEC = 99;
export const XCN_OID_INFOSEC_sdnsSignature = 100;
export const XCN_OID_INFOSEC_mosaicSignature = 101;
export const XCN_OID_INFOSEC_sdnsConfidentiality = 102;
export const XCN_OID_INFOSEC_mosaicConfidentiality = 103;
export const XCN_OID_INFOSEC_sdnsIntegrity = 104;
export const XCN_OID_INFOSEC_mosaicIntegrity = 105;
export const XCN_OID_INFOSEC_sdnsTokenProtection = 106;
export const XCN_OID_INFOSEC_mosaicTokenProtection = 107;
export const XCN_OID_INFOSEC_sdnsKeyManagement = 108;
export const XCN_OID_INFOSEC_mosaicKeyManagement = 109;
export const XCN_OID_INFOSEC_sdnsKMandSig = 110;
export const XCN_OID_INFOSEC_mosaicKMandSig = 111;
export const XCN_OID_INFOSEC_SuiteASignature = 112;
export const XCN_OID_INFOSEC_SuiteAConfidentiality = 113;
export const XCN_OID_INFOSEC_SuiteAIntegrity = 114;
export const XCN_OID_INFOSEC_SuiteATokenProtection = 115;
export const XCN_OID_INFOSEC_SuiteAKeyManagement = 116;
export const XCN_OID_INFOSEC_SuiteAKMandSig = 117;
export const XCN_OID_INFOSEC_mosaicUpdatedSig = 118;
export const XCN_OID_INFOSEC_mosaicKMandUpdSig = 119;
export const XCN_OID_INFOSEC_mosaicUpdatedInteg = 120;
export const XCN_OID_COMMON_NAME = 121;
export const XCN_OID_SUR_NAME = 122;
export const XCN_OID_DEVICE_SERIAL_NUMBER = 123;
export const XCN_OID_COUNTRY_NAME = 124;
export const XCN_OID_LOCALITY_NAME = 125;
export const XCN_OID_STATE_OR_PROVINCE_NAME = 126;
export const XCN_OID_STREET_ADDRESS = 127;
export const XCN_OID_ORGANIZATION_NAME = 128;
export const XCN_OID_ORGANIZATIONAL_UNIT_NAME = 129;
export const XCN_OID_TITLE = 130;
export const XCN_OID_DESCRIPTION = 131;
export const XCN_OID_SEARCH_GUIDE = 132;
export const XCN_OID_BUSINESS_CATEGORY = 133;
export const XCN_OID_POSTAL_ADDRESS = 134;
export const XCN_OID_POSTAL_CODE = 135;
export const XCN_OID_POST_OFFICE_BOX = 136;
export const XCN_OID_PHYSICAL_DELIVERY_OFFICE_NAME = 137;
export const XCN_OID_TELEPHONE_NUMBER = 138;
export const XCN_OID_TELEX_NUMBER = 139;
export const XCN_OID_TELETEXT_TERMINAL_IDENTIFIER = 140;
export const XCN_OID_FACSIMILE_TELEPHONE_NUMBER = 141;
export const XCN_OID_X21_ADDRESS = 142;
export const XCN_OID_INTERNATIONAL_ISDN_NUMBER = 143;
export const XCN_OID_REGISTERED_ADDRESS = 144;
export const XCN_OID_DESTINATION_INDICATOR = 145;
export const XCN_OID_PREFERRED_DELIVERY_METHOD = 146;
export const XCN_OID_PRESENTATION_ADDRESS = 147;
export const XCN_OID_SUPPORTED_APPLICATION_CONTEXT = 148;
export const XCN_OID_MEMBER = 149;
export const XCN_OID_OWNER = 150;
export const XCN_OID_ROLE_OCCUPANT = 151;
export const XCN_OID_SEE_ALSO = 152;
export const XCN_OID_USER_PASSWORD = 153;
export const XCN_OID_USER_CERTIFICATE = 154;
export const XCN_OID_CA_CERTIFICATE = 155;
export const XCN_OID_AUTHORITY_REVOCATION_LIST = 156;
export const XCN_OID_CERTIFICATE_REVOCATION_LIST = 157;
export const XCN_OID_CROSS_CERTIFICATE_PAIR = 158;
export const XCN_OID_GIVEN_NAME = 159;
export const XCN_OID_INITIALS = 160;
export const XCN_OID_DN_QUALIFIER = 161;
export const XCN_OID_DOMAIN_COMPONENT = 162;
export const XCN_OID_PKCS_12_FRIENDLY_NAME_ATTR = 163;
export const XCN_OID_PKCS_12_LOCAL_KEY_ID = 164;
export const XCN_OID_PKCS_12_KEY_PROVIDER_NAME_ATTR = 165;
export const XCN_OID_LOCAL_MACHINE_KEYSET = 166;
export const XCN_OID_PKCS_12_EXTENDED_ATTRIBUTES = 167;
export const XCN_OID_KEYID_RDN = 168;
export const XCN_OID_AUTHORITY_KEY_IDENTIFIER = 169;
export const XCN_OID_KEY_ATTRIBUTES = 170;
export const XCN_OID_CERT_POLICIES_95 = 171;
export const XCN_OID_KEY_USAGE_RESTRICTION = 172;
export const XCN_OID_SUBJECT_ALT_NAME = 173;
export const XCN_OID_ISSUER_ALT_NAME = 174;
export const XCN_OID_BASIC_CONSTRAINTS = 175;
export const XCN_OID_KEY_USAGE = 176;
export const XCN_OID_PRIVATEKEY_USAGE_PERIOD = 177;
export const XCN_OID_BASIC_CONSTRAINTS2 = 178;
export const XCN_OID_CERT_POLICIES = 179;
export const XCN_OID_ANY_CERT_POLICY = 180;
export const XCN_OID_AUTHORITY_KEY_IDENTIFIER2 = 181;
export const XCN_OID_SUBJECT_KEY_IDENTIFIER = 182;
export const XCN_OID_SUBJECT_ALT_NAME2 = 183;
export const XCN_OID_ISSUER_ALT_NAME2 = 184;
export const XCN_OID_CRL_REASON_CODE = 185;
export const XCN_OID_REASON_CODE_HOLD = 186;
export const XCN_OID_CRL_DIST_POINTS = 187;
export const XCN_OID_ENHANCED_KEY_USAGE = 188;
export const XCN_OID_CRL_NUMBER = 189;
export const XCN_OID_DELTA_CRL_INDICATOR = 190;
export const XCN_OID_ISSUING_DIST_POINT = 191;
export const XCN_OID_FRESHEST_CRL = 192;
export const XCN_OID_NAME_CONSTRAINTS = 193;
export const XCN_OID_POLICY_MAPPINGS = 194;
export const XCN_OID_LEGACY_POLICY_MAPPINGS = 195;
export const XCN_OID_POLICY_CONSTRAINTS = 196;
export const XCN_OID_RENEWAL_CERTIFICATE = 197;
export const XCN_OID_ENROLLMENT_NAME_VALUE_PAIR = 198;
export const XCN_OID_ENROLLMENT_CSP_PROVIDER = 199;
export const XCN_OID_OS_VERSION = 200;
export const XCN_OID_ENROLLMENT_AGENT = 201;
export const XCN_OID_PKIX = 202;
export const XCN_OID_PKIX_PE = 203;
export const XCN_OID_AUTHORITY_INFO_ACCESS = 204;
export const XCN_OID_BIOMETRIC_EXT = 205;
export const XCN_OID_LOGOTYPE_EXT = 206;
export const XCN_OID_CERT_EXTENSIONS = 207;
export const XCN_OID_NEXT_UPDATE_LOCATION = 208;
export const XCN_OID_REMOVE_CERTIFICATE = 209;
export const XCN_OID_CROSS_CERT_DIST_POINTS = 210;
export const XCN_OID_CTL = 211;
export const XCN_OID_SORTED_CTL = 212;
export const XCN_OID_SERIALIZED = 213;
export const XCN_OID_NT_PRINCIPAL_NAME = 214;
export const XCN_OID_PRODUCT_UPDATE = 215;
export const XCN_OID_ANY_APPLICATION_POLICY = 216;
export const XCN_OID_AUTO_ENROLL_CTL_USAGE = 217;
export const XCN_OID_ENROLL_CERTTYPE_EXTENSION = 218;
export const XCN_OID_CERT_MANIFOLD = 219;
export const XCN_OID_CERTSRV_CA_VERSION = 220;
export const XCN_OID_CERTSRV_PREVIOUS_CERT_HASH = 221;
export const XCN_OID_CRL_VIRTUAL_BASE = 222;
export const XCN_OID_CRL_NEXT_PUBLISH = 223;
export const XCN_OID_KP_CA_EXCHANGE = 224;
export const XCN_OID_KP_KEY_RECOVERY_AGENT = 225;
export const XCN_OID_CERTIFICATE_TEMPLATE = 226;
export const XCN_OID_ENTERPRISE_OID_ROOT = 227;
export const XCN_OID_RDN_DUMMY_SIGNER = 228;
export const XCN_OID_APPLICATION_CERT_POLICIES = 229;
export const XCN_OID_APPLICATION_POLICY_MAPPINGS = 230;
export const XCN_OID_APPLICATION_POLICY_CONSTRAINTS = 231;
export const XCN_OID_ARCHIVED_KEY_ATTR = 232;
export const XCN_OID_CRL_SELF_CDP = 233;
export const XCN_OID_REQUIRE_CERT_CHAIN_POLICY = 234;
export const XCN_OID_ARCHIVED_KEY_CERT_HASH = 235;
export const XCN_OID_ISSUED_CERT_HASH = 236;
export const XCN_OID_DS_EMAIL_REPLICATION = 237;
export const XCN_OID_REQUEST_CLIENT_INFO = 238;
export const XCN_OID_ENCRYPTED_KEY_HASH = 239;
export const XCN_OID_CERTSRV_CROSSCA_VERSION = 240;
export const XCN_OID_NTDS_REPLICATION = 241;
export const XCN_OID_SUBJECT_DIR_ATTRS = 242;
export const XCN_OID_PKIX_KP = 243;
export const XCN_OID_PKIX_KP_SERVER_AUTH = 244;
export const XCN_OID_PKIX_KP_CLIENT_AUTH = 245;
export const XCN_OID_PKIX_KP_CODE_SIGNING = 246;
export const XCN_OID_PKIX_KP_EMAIL_PROTECTION = 247;
export const XCN_OID_PKIX_KP_IPSEC_END_SYSTEM = 248;
export const XCN_OID_PKIX_KP_IPSEC_TUNNEL = 249;
export const XCN_OID_PKIX_KP_IPSEC_USER = 250;
export const XCN_OID_PKIX_KP_TIMESTAMP_SIGNING = 251;
export const XCN_OID_PKIX_KP_OCSP_SIGNING = 252;
export const XCN_OID_PKIX_OCSP_NOCHECK = 253;
export const XCN_OID_IPSEC_KP_IKE_INTERMEDIATE = 254;
export const XCN_OID_KP_CTL_USAGE_SIGNING = 255;
export const XCN_OID_KP_TIME_STAMP_SIGNING = 256;
export const XCN_OID_SERVER_GATED_CRYPTO = 257;
export const XCN_OID_SGC_NETSCAPE = 258;
export const XCN_OID_KP_EFS = 259;
export const XCN_OID_EFS_RECOVERY = 260;
export const XCN_OID_WHQL_CRYPTO = 261;
export const XCN_OID_NT5_CRYPTO = 262;
export const XCN_OID_OEM_WHQL_CRYPTO = 263;
export const XCN_OID_EMBEDDED_NT_CRYPTO = 264;
export const XCN_OID_ROOT_LIST_SIGNER = 265;
export const XCN_OID_KP_QUALIFIED_SUBORDINATION = 266;
export const XCN_OID_KP_KEY_RECOVERY = 267;
export const XCN_OID_KP_DOCUMENT_SIGNING = 268;
export const XCN_OID_KP_LIFETIME_SIGNING = 269;
export const XCN_OID_KP_MOBILE_DEVICE_SOFTWARE = 270;
export const XCN_OID_KP_SMART_DISPLAY = 271;
export const XCN_OID_KP_CSP_SIGNATURE = 272;
export const XCN_OID_DRM = 273;
export const XCN_OID_DRM_INDIVIDUALIZATION = 274;
export const XCN_OID_LICENSES = 275;
export const XCN_OID_LICENSE_SERVER = 276;
export const XCN_OID_KP_SMARTCARD_LOGON = 277;
export const XCN_OID_YESNO_TRUST_ATTR = 278;
export const XCN_OID_PKIX_POLICY_QUALIFIER_CPS = 279;
export const XCN_OID_PKIX_POLICY_QUALIFIER_USERNOTICE = 280;
export const XCN_OID_CERT_POLICIES_95_QUALIFIER1 = 281;
export const XCN_OID_PKIX_ACC_DESCR = 282;
export const XCN_OID_PKIX_OCSP = 283;
export const XCN_OID_PKIX_CA_ISSUERS = 284;
export const XCN_OID_VERISIGN_PRIVATE_6_9 = 285;
export const XCN_OID_VERISIGN_ONSITE_JURISDICTION_HASH = 286;
export const XCN_OID_VERISIGN_BITSTRING_6_13 = 287;
export const XCN_OID_VERISIGN_ISS_STRONG_CRYPTO = 288;
export const XCN_OID_NETSCAPE = 289;
export const XCN_OID_NETSCAPE_CERT_EXTENSION = 290;
export const XCN_OID_NETSCAPE_CERT_TYPE = 291;
export const XCN_OID_NETSCAPE_BASE_URL = 292;
export const XCN_OID_NETSCAPE_REVOCATION_URL = 293;
export const XCN_OID_NETSCAPE_CA_REVOCATION_URL = 294;
export const XCN_OID_NETSCAPE_CERT_RENEWAL_URL = 295;
export const XCN_OID_NETSCAPE_CA_POLICY_URL = 296;
export const XCN_OID_NETSCAPE_SSL_SERVER_NAME = 297;
export const XCN_OID_NETSCAPE_COMMENT = 298;
export const XCN_OID_NETSCAPE_DATA_TYPE = 299;
export const XCN_OID_NETSCAPE_CERT_SEQUENCE = 300;
export const XCN_OID_CT_PKI_DATA = 301;
export const XCN_OID_CT_PKI_RESPONSE = 302;
export const XCN_OID_PKIX_NO_SIGNATURE = 303;
export const XCN_OID_CMC = 304;
export const XCN_OID_CMC_STATUS_INFO = 305;
export const XCN_OID_CMC_IDENTIFICATION = 306;
export const XCN_OID_CMC_IDENTITY_PROOF = 307;
export const XCN_OID_CMC_DATA_RETURN = 308;
export const XCN_OID_CMC_TRANSACTION_ID = 309;
export const XCN_OID_CMC_SENDER_NONCE = 310;
export const XCN_OID_CMC_RECIPIENT_NONCE = 311;
export const XCN_OID_CMC_ADD_EXTENSIONS = 312;
export const XCN_OID_CMC_ENCRYPTED_POP = 313;
export const XCN_OID_CMC_DECRYPTED_POP = 314;
export const XCN_OID_CMC_LRA_POP_WITNESS = 315;
export const XCN_OID_CMC_GET_CERT = 316;
export const XCN_OID_CMC_GET_CRL = 317;
export const XCN_OID_CMC_REVOKE_REQUEST = 318;
export const XCN_OID_CMC_REG_INFO = 319;
export const XCN_OID_CMC_RESPONSE_INFO = 320;
export const XCN_OID_CMC_QUERY_PENDING = 321;
export const XCN_OID_CMC_ID_POP_LINK_RANDOM = 322;
export const XCN_OID_CMC_ID_POP_LINK_WITNESS = 323;
export const XCN_OID_CMC_ID_CONFIRM_CERT_ACCEPTANCE = 324;
export const XCN_OID_CMC_ADD_ATTRIBUTES = 325;
export const XCN_OID_LOYALTY_OTHER_LOGOTYPE = 326;
export const XCN_OID_BACKGROUND_OTHER_LOGOTYPE = 327;
export const XCN_OID_PKIX_OCSP_BASIC_SIGNED_RESPONSE = 328;
export const XCN_OID_PKCS_7_DATA = 329;
export const XCN_OID_PKCS_7_SIGNED = 330;
export const XCN_OID_PKCS_7_ENVELOPED = 331;
export const XCN_OID_PKCS_7_SIGNEDANDENVELOPED = 332;
export const XCN_OID_PKCS_7_DIGESTED = 333;
export const XCN_OID_PKCS_7_ENCRYPTED = 334;
export const XCN_OID_PKCS_9_CONTENT_TYPE = 335;
export const XCN_OID_PKCS_9_MESSAGE_DIGEST = 336;
export const XCN_OID_CERT_PROP_ID_PREFIX = 337;
export const XCN_OID_CERT_KEY_IDENTIFIER_PROP_ID = 338;
export const XCN_OID_CERT_ISSUER_SERIAL_NUMBER_MD5_HASH_PROP_ID = 339;
export const XCN_OID_CERT_SUBJECT_NAME_MD5_HASH_PROP_ID = 340;
export const XCN_OID_CERT_MD5_HASH_PROP_ID = 341;
export const XCN_OID_RSA_SHA256RSA = 342;
export const XCN_OID_RSA_SHA384RSA = 343;
export const XCN_OID_RSA_SHA512RSA = 344;
export const XCN_OID_NIST_sha256 = 345;
export const XCN_OID_NIST_sha384 = 346;
export const XCN_OID_NIST_sha512 = 347;
export const XCN_OID_RSA_MGF1 = 348;
export const XCN_OID_ECC_PUBLIC_KEY = 349;
export const XCN_OID_ECDSA_SHA1 = 350;
export const XCN_OID_ECDSA_SPECIFIED = 351;
export const XCN_OID_ANY_ENHANCED_KEY_USAGE = 352;
export const XCN_OID_RSA_SSA_PSS = 353;
export const XCN_OID_ATTR_SUPPORTED_ALGORITHMS = 355;
export const XCN_OID_ATTR_TPM_SECURITY_ASSERTIONS = 356;
export const XCN_OID_ATTR_TPM_SPECIFICATION = 357;
export const XCN_OID_CERT_DISALLOWED_FILETIME_PROP_ID = 358;
export const XCN_OID_CERT_SIGNATURE_HASH_PROP_ID = 359;
export const XCN_OID_CERT_STRONG_KEY_OS_1 = 360;
export const XCN_OID_CERT_STRONG_KEY_OS_CURRENT = 361;
export const XCN_OID_CERT_STRONG_KEY_OS_PREFIX = 362;
export const XCN_OID_CERT_STRONG_SIGN_OS_1 = 363;
export const XCN_OID_CERT_STRONG_SIGN_OS_CURRENT = 364;
export const XCN_OID_CERT_STRONG_SIGN_OS_PREFIX = 365;
export const XCN_OID_DH_SINGLE_PASS_STDDH_SHA1_KDF = 366;
export const XCN_OID_DH_SINGLE_PASS_STDDH_SHA256_KDF = 367;
export const XCN_OID_DH_SINGLE_PASS_STDDH_SHA384_KDF = 368;
export const XCN_OID_DISALLOWED_HASH = 369;
export const XCN_OID_DISALLOWED_LIST = 370;
export const XCN_OID_ECC_CURVE_P256 = 371;
export const XCN_OID_ECC_CURVE_P384 = 372;
export const XCN_OID_ECC_CURVE_P521 = 373;
export const XCN_OID_ECDSA_SHA256 = 374;
export const XCN_OID_ECDSA_SHA384 = 375;
export const XCN_OID_ECDSA_SHA512 = 376;
export const XCN_OID_ENROLL_CAXCHGCERT_HASH = 377;
export const XCN_OID_ENROLL_EK_INFO = 378;
export const XCN_OID_ENROLL_EKPUB_CHALLENGE = 379;
export const XCN_OID_ENROLL_EKVERIFYCERT = 380;
export const XCN_OID_ENROLL_EKVERIFYCREDS = 381;
export const XCN_OID_ENROLL_EKVERIFYKEY = 382;
export const XCN_OID_EV_RDN_COUNTRY = 383;
export const XCN_OID_EV_RDN_LOCALE = 384;
export const XCN_OID_EV_RDN_STATE_OR_PROVINCE = 385;
export const XCN_OID_INHIBIT_ANY_POLICY = 386;
export const XCN_OID_INTERNATIONALIZED_EMAIL_ADDRESS = 387;
export const XCN_OID_KP_KERNEL_MODE_CODE_SIGNING = 388;
export const XCN_OID_KP_KERNEL_MODE_HAL_EXTENSION_SIGNING = 389;
export const XCN_OID_KP_KERNEL_MODE_TRUSTED_BOOT_SIGNING = 390;
export const XCN_OID_KP_TPM_AIK_CERTIFICATE = 391;
export const XCN_OID_KP_TPM_EK_CERTIFICATE = 392;
export const XCN_OID_KP_TPM_PLATFORM_CERTIFICATE = 393;
export const XCN_OID_NIST_AES128_CBC = 394;
export const XCN_OID_NIST_AES128_WRAP = 395;
export const XCN_OID_NIST_AES192_CBC = 396;
export const XCN_OID_NIST_AES192_WRAP = 397;
export const XCN_OID_NIST_AES256_CBC = 398;
export const XCN_OID_NIST_AES256_WRAP = 399;
export const XCN_OID_PKCS_12_PbeIds = 400;
export const XCN_OID_PKCS_12_pbeWithSHA1And128BitRC2 = 401;
export const XCN_OID_PKCS_12_pbeWithSHA1And128BitRC4 = 402;
export const XCN_OID_PKCS_12_pbeWithSHA1And2KeyTripleDES = 403;
export const XCN_OID_PKCS_12_pbeWithSHA1And3KeyTripleDES = 404;
export const XCN_OID_PKCS_12_pbeWithSHA1And40BitRC2 = 405;
export const XCN_OID_PKCS_12_pbeWithSHA1And40BitRC4 = 406;
export const XCN_OID_PKCS_12_PROTECTED_PASSWORD_SECRET_BAG_TYPE_ID = 407;
export const XCN_OID_PKINIT_KP_KDC = 408;
export const XCN_OID_PKIX_CA_REPOSITORY = 409;
export const XCN_OID_PKIX_OCSP_NONCE = 410;
export const XCN_OID_PKIX_TIME_STAMPING = 411;
export const XCN_OID_QC_EU_COMPLIANCE = 412;
export const XCN_OID_QC_SSCD = 413;
export const XCN_OID_QC_STATEMENTS_EXT = 414;
export const XCN_OID_RDN_TPM_MANUFACTURER = 415;
export const XCN_OID_RDN_TPM_MODEL = 416;
export const XCN_OID_RDN_TPM_VERSION = 417;
export const XCN_OID_REVOKED_LIST_SIGNER = 418;
export const XCN_OID_RFC3161_counterSign = 419;
export const XCN_OID_ROOT_PROGRAM_AUTO_UPDATE_CA_REVOCATION = 420;
export const XCN_OID_ROOT_PROGRAM_AUTO_UPDATE_END_REVOCATION = 421;
export const XCN_OID_ROOT_PROGRAM_FLAGS = 422;
export const XCN_OID_ROOT_PROGRAM_NO_OCSP_FAILOVER_TO_CRL = 423;
export const XCN_OID_RSA_PSPECIFIED = 424;
export const XCN_OID_RSAES_OAEP = 425;
export const XCN_OID_SUBJECT_INFO_ACCESS = 426;
export const XCN_OID_TIMESTAMP_TOKEN = 427;
export const XCN_OID_ENROLL_SCEP_ERROR = 428;
export const XCN_OIDVerisign_MessageType = 429;
export const XCN_OIDVerisign_PkiStatus = 430;
export const XCN_OIDVerisign_FailInfo = 431;
export const XCN_OIDVerisign_SenderNonce = 432;
export const XCN_OIDVerisign_RecipientNonce = 433;
export const XCN_OIDVerisign_TransactionID = 434;
export const XCN_OID_ENROLL_ATTESTATION_CHALLENGE = 435;
export const XCN_OID_ENROLL_ATTESTATION_STATEMENT = 436;
export const XCN_OID_ENROLL_ENCRYPTION_ALGORITHM = 437;
export const XCN_OID_ENROLL_KSP_NAME = 438;
export const LevelUnsafe = 0;
export const LevelSafe = 1;
export const XCN_CRYPT_STRING_BASE64HEADER = 0;
export const XCN_CRYPT_STRING_BASE64 = 1;
export const XCN_CRYPT_STRING_BINARY = 2;
export const XCN_CRYPT_STRING_BASE64REQUESTHEADER = 3;
export const XCN_CRYPT_STRING_HEX = 4;
export const XCN_CRYPT_STRING_HEXASCII = 5;
export const XCN_CRYPT_STRING_BASE64_ANY = 6;
export const XCN_CRYPT_STRING_ANY = 7;
export const XCN_CRYPT_STRING_HEX_ANY = 8;
export const XCN_CRYPT_STRING_BASE64X509CRLHEADER = 9;
export const XCN_CRYPT_STRING_HEXADDR = 10;
export const XCN_CRYPT_STRING_HEXASCIIADDR = 11;
export const XCN_CRYPT_STRING_HEXRAW = 12;
export const XCN_CRYPT_STRING_BASE64URI = 13;
export const XCN_CRYPT_STRING_ENCODEMASK = 255;
export const XCN_CRYPT_STRING_CHAIN = 256;
export const XCN_CRYPT_STRING_TEXT = 512;
export const XCN_CRYPT_STRING_PERCENTESCAPE = 134217728;
export const XCN_CRYPT_STRING_HASHDATA = 268435456;
export const XCN_CRYPT_STRING_STRICT = 536870912;
export const XCN_CRYPT_STRING_NOCRLF = 1073741824;
export const XCN_CRYPT_STRING_NOCR = "-2147483648";
export const PFXExportEEOnly = 0;
export const PFXExportChainNoRoot = 1;
export const PFXExportChainWithRoot = 2;
export const XCN_CRYPT_ANY_GROUP_ID = 0;
export const XCN_CRYPT_HASH_ALG_OID_GROUP_ID = 1;
export const XCN_CRYPT_ENCRYPT_ALG_OID_GROUP_ID = 2;
export const XCN_CRYPT_PUBKEY_ALG_OID_GROUP_ID = 3;
export const XCN_CRYPT_SIGN_ALG_OID_GROUP_ID = 4;
export const XCN_CRYPT_RDN_ATTR_OID_GROUP_ID = 5;
export const XCN_CRYPT_EXT_OR_ATTR_OID_GROUP_ID = 6;
export const XCN_CRYPT_ENHKEY_USAGE_OID_GROUP_ID = 7;
export const XCN_CRYPT_POLICY_OID_GROUP_ID = 8;
export const XCN_CRYPT_TEMPLATE_OID_GROUP_ID = 9;
export const XCN_CRYPT_KDF_OID_GROUP_ID = 10;
export const XCN_CRYPT_LAST_OID_GROUP_ID = 10;
export const XCN_CRYPT_FIRST_ALG_OID_GROUP_ID = 1;
export const XCN_CRYPT_LAST_ALG_OID_GROUP_ID = 4;
export const XCN_CRYPT_GROUP_ID_MASK = 65535;
export const XCN_CRYPT_OID_PREFER_CNG_ALGID_FLAG = 1073741824;
export const XCN_CRYPT_OID_DISABLE_SEARCH_DS_FLAG = "-2147483648";
export const XCN_CRYPT_OID_INFO_OID_GROUP_BIT_LEN_MASK = 268369920;
export const XCN_CRYPT_OID_INFO_OID_GROUP_BIT_LEN_SHIFT = 16;
export const XCN_CRYPT_KEY_LENGTH_MASK = 268369920;
export const XCN_CRYPT_OID_INFO_PUBKEY_ANY = 0;
export const XCN_CRYPT_OID_INFO_PUBKEY_SIGN_KEY_FLAG = "-2147483648";
export const XCN_CRYPT_OID_INFO_PUBKEY_ENCRYPT_KEY_FLAG = 1073741824;
export const AlgorithmFlagsNone = 0;
export const AlgorithmFlagsWrap = 1;
export const XCN_CERT_NAME_STR_NONE = 0;
export const XCN_CERT_SIMPLE_NAME_STR = 1;
export const XCN_CERT_OID_NAME_STR = 2;
export const XCN_CERT_X500_NAME_STR = 3;
export const XCN_CERT_XML_NAME_STR = 4;
export const XCN_CERT_NAME_STR_SEMICOLON_FLAG = 1073741824;
export const XCN_CERT_NAME_STR_NO_PLUS_FLAG = 536870912;
export const XCN_CERT_NAME_STR_NO_QUOTING_FLAG = 268435456;
export const XCN_CERT_NAME_STR_CRLF_FLAG = 134217728;
export const XCN_CERT_NAME_STR_COMMA_FLAG = 67108864;
export const XCN_CERT_NAME_STR_REVERSE_FLAG = 33554432;
export const XCN_CERT_NAME_STR_FORWARD_FLAG = 16777216;
export const XCN_CERT_NAME_STR_AMBIGUOUS_SEPARATOR_FLAGS = 1275068416;
export const XCN_CERT_NAME_STR_DISABLE_IE4_UTF8_FLAG = 65536;
export const XCN_CERT_NAME_STR_ENABLE_T61_UNICODE_FLAG = 131072;
export const XCN_CERT_NAME_STR_ENABLE_UTF8_UNICODE_FLAG = 262144;
export const XCN_CERT_NAME_STR_FORCE_UTF8_DIR_STR_FLAG = 524288;
export const XCN_CERT_NAME_STR_DISABLE_UTF8_DIR_STR_FLAG = 1048576;
export const XCN_CERT_NAME_STR_ENABLE_PUNYCODE_FLAG = 2097152;
export const XCN_CERT_NAME_STR_DS_ESCAPED = 8388608;
export const ContextNone = 0;
export const ContextUser = 1;
export const ContextMachine = 2;
export const ContextAdministratorForceMachine = 3;
export const Enrolled = 1;
export const EnrollPended = 2;
export const EnrollUIDeferredEnrollmentRequired = 4;
export const EnrollError = 16;
export const EnrollUnknown = 32;
export const EnrollSkipped = 64;
export const EnrollDenied = 256;
export const SelectedNo = 0;
export const SelectedYes = 1;
export const DisplayNo = 0;
export const DisplayYes = 1;
export const XCN_PROV_NONE = 0;
export const XCN_PROV_RSA_FULL = 1;
export const XCN_PROV_RSA_SIG = 2;
export const XCN_PROV_DSS = 3;
export const XCN_PROV_FORTEZZA = 4;
export const XCN_PROV_MS_EXCHANGE = 5;
export const XCN_PROV_SSL = 6;
export const XCN_PROV_RSA_SCHANNEL = 12;
export const XCN_PROV_DSS_DH = 13;
export const XCN_PROV_EC_ECDSA_SIG = 14;
export const XCN_PROV_EC_ECNRA_SIG = 15;
export const XCN_PROV_EC_ECDSA_FULL = 16;
export const XCN_PROV_EC_ECNRA_FULL = 17;
export const XCN_PROV_DH_SCHANNEL = 18;
export const XCN_PROV_SPYRUS_LYNKS = 20;
export const XCN_PROV_RNG = 21;
export const XCN_PROV_INTEL_SEC = 22;
export const XCN_PROV_REPLACE_OWF = 23;
export const XCN_PROV_RSA_AES = 24;
export const XCN_BCRYPT_UNKNOWN_INTERFACE = 0;
export const XCN_BCRYPT_CIPHER_INTERFACE = 1;
export const XCN_BCRYPT_HASH_INTERFACE = 2;
export const XCN_BCRYPT_ASYMMETRIC_ENCRYPTION_INTERFACE = 3;
export const XCN_BCRYPT_SIGNATURE_INTERFACE = 5;
export const XCN_BCRYPT_SECRET_AGREEMENT_INTERFACE = 4;
export const XCN_BCRYPT_RNG_INTERFACE = 6;
export const XCN_BCRYPT_KEY_DERIVATION_INTERFACE = 7;
export const XCN_NCRYPT_NO_OPERATION = 0;
export const XCN_NCRYPT_CIPHER_OPERATION = 1;
export const XCN_NCRYPT_HASH_OPERATION = 2;
export const XCN_NCRYPT_ASYMMETRIC_ENCRYPTION_OPERATION = 4;
export const XCN_NCRYPT_SECRET_AGREEMENT_OPERATION = 8;
export const XCN_NCRYPT_SIGNATURE_OPERATION = 16;
export const XCN_NCRYPT_RNG_OPERATION = 32;
export const XCN_NCRYPT_KEY_DERIVATION_OPERATION = 64;
export const XCN_NCRYPT_ANY_ASYMMETRIC_OPERATION = 28;
export const XCN_NCRYPT_PREFER_SIGNATURE_ONLY_OPERATION = 2097152;
export const XCN_NCRYPT_PREFER_NON_SIGNATURE_OPERATION = 4194304;
export const XCN_NCRYPT_EXACT_MATCH_OPERATION = 8388608;
export const XCN_NCRYPT_PREFERENCE_MASK_OPERATION = 14680064;
export const XCN_AT_NONE = 0;
export const XCN_AT_KEYEXCHANGE = 1;
export const XCN_AT_SIGNATURE = 2;
export const SKIHashDefault = 0;
export const SKIHashSha1 = 1;
export const SKIHashCapiSha1 = 2;
export const SKIHashSha256 = 3;
export const SKIHashHPKP = 5;
export const XCN_NCRYPT_ALLOW_EXPORT_NONE = 0;
export const XCN_NCRYPT_ALLOW_EXPORT_FLAG = 1;
export const XCN_NCRYPT_ALLOW_PLAINTEXT_EXPORT_FLAG = 2;
export const XCN_NCRYPT_ALLOW_ARCHIVING_FLAG = 4;
export const XCN_NCRYPT_ALLOW_PLAINTEXT_ARCHIVING_FLAG = 8;
export const XCN_NCRYPT_ALLOW_USAGES_NONE = 0;
export const XCN_NCRYPT_ALLOW_DECRYPT_FLAG = 1;
export const XCN_NCRYPT_ALLOW_SIGNING_FLAG = 2;
export const XCN_NCRYPT_ALLOW_KEY_AGREEMENT_FLAG = 4;
export const XCN_NCRYPT_ALLOW_KEY_IMPORT_FLAG = 8;
export const XCN_NCRYPT_ALLOW_ALL_USAGES = 16777215;
export const XCN_NCRYPT_UI_NO_PROTECTION_FLAG = 0;
export const XCN_NCRYPT_UI_PROTECT_KEY_FLAG = 1;
export const XCN_NCRYPT_UI_FORCE_HIGH_PROTECTION_FLAG = 2;
export const XCN_NCRYPT_UI_FINGERPRINT_PROTECTION_FLAG = 4;
export const XCN_NCRYPT_UI_APPCONTAINER_ACCESS_MEDIUM_FLAG = 8;
export const VerifyNone = 0;
export const VerifySilent = 1;
export const VerifySmartCardNone = 2;
export const VerifySmartCardSilent = 3;
export const VerifyAllowUI = 4;
export const XCN_NCRYPT_PCP_NONE = 0;
export const XCN_NCRYPT_TPM12_PROVIDER = 65536;
export const XCN_NCRYPT_PCP_SIGNATURE_KEY = 1;
export const XCN_NCRYPT_PCP_ENCRYPTION_KEY = 2;
export const XCN_NCRYPT_PCP_GENERIC_KEY = 3;
export const XCN_NCRYPT_PCP_STORAGE_KEY = 4;
export const XCN_NCRYPT_PCP_IDENTITY_KEY = 8;
export const XCN_CRYPT_OID_USE_CURVE_NONE = 0;
export const XCN_CRYPT_OID_USE_CURVE_NAME_FOR_ENCODE_FLAG = 536870912;
export const XCN_CRYPT_OID_USE_CURVE_PARAMETERS_FOR_ENCODE_FLAG = 268435456;
export const XCN_CERT_NO_KEY_USAGE = 0;
export const XCN_CERT_DIGITAL_SIGNATURE_KEY_USAGE = 128;
export const XCN_CERT_NON_REPUDIATION_KEY_USAGE = 64;
export const XCN_CERT_KEY_ENCIPHERMENT_KEY_USAGE = 32;
export const XCN_CERT_DATA_ENCIPHERMENT_KEY_USAGE = 16;
export const XCN_CERT_KEY_AGREEMENT_KEY_USAGE = 8;
export const XCN_CERT_KEY_CERT_SIGN_KEY_USAGE = 4;
export const XCN_CERT_OFFLINE_CRL_SIGN_KEY_USAGE = 2;
export const XCN_CERT_CRL_SIGN_KEY_USAGE = 2;
export const XCN_CERT_ENCIPHER_ONLY_KEY_USAGE = 1;
export const XCN_CERT_DECIPHER_ONLY_KEY_USAGE = 32768;
export const XCN_CERT_ALT_NAME_UNKNOWN = 0;
export const XCN_CERT_ALT_NAME_OTHER_NAME = 1;
export const XCN_CERT_ALT_NAME_RFC822_NAME = 2;
export const XCN_CERT_ALT_NAME_DNS_NAME = 3;
export const XCN_CERT_ALT_NAME_X400_ADDRESS = 4;
export const XCN_CERT_ALT_NAME_DIRECTORY_NAME = 5;
export const XCN_CERT_ALT_NAME_EDI_PARTY_NAME = 6;
export const XCN_CERT_ALT_NAME_URL = 7;
export const XCN_CERT_ALT_NAME_IP_ADDRESS = 8;
export const XCN_CERT_ALT_NAME_REGISTERED_ID = 9;
export const XCN_CERT_ALT_NAME_GUID = 10;
export const XCN_CERT_ALT_NAME_USER_PRINCIPLE_NAME = 11;
export const PolicyQualifierTypeUnknown = 0;
export const PolicyQualifierTypeUrl = 1;
export const PolicyQualifierTypeUserNotice = 2;
export const PolicyQualifierTypeFlags = 3;
export const ClientIdNone = 0;
export const ClientIdXEnroll2003 = 1;
export const ClientIdAutoEnroll2003 = 2;
export const ClientIdWizard2003 = 3;
export const ClientIdCertReq2003 = 4;
export const ClientIdDefaultRequest = 5;
export const ClientIdAutoEnroll = 6;
export const ClientIdRequestWizard = 7;
export const ClientIdEOBO = 8;
export const ClientIdCertReq = 9;
export const ClientIdTest = 10;
export const ClientIdWinRT = 11;
export const ClientIdUserStart = 1000;
export const XCN_PROPERTYID_NONE = 0;
export const XCN_CERT_KEY_PROV_HANDLE_PROP_ID = 1;
export const XCN_CERT_KEY_PROV_INFO_PROP_ID = 2;
export const XCN_CERT_SHA1_HASH_PROP_ID = 3;
export const XCN_CERT_MD5_HASH_PROP_ID = 4;
export const XCN_CERT_HASH_PROP_ID = 3;
export const XCN_CERT_KEY_CONTEXT_PROP_ID = 5;
export const XCN_CERT_KEY_SPEC_PROP_ID = 6;
export const XCN_CERT_IE30_RESERVED_PROP_ID = 7;
export const XCN_CERT_PUBKEY_HASH_RESERVED_PROP_ID = 8;
export const XCN_CERT_ENHKEY_USAGE_PROP_ID = 9;
export const XCN_CERT_CTL_USAGE_PROP_ID = 9;
export const XCN_CERT_NEXT_UPDATE_LOCATION_PROP_ID = 10;
export const XCN_CERT_FRIENDLY_NAME_PROP_ID = 11;
export const XCN_CERT_PVK_FILE_PROP_ID = 12;
export const XCN_CERT_DESCRIPTION_PROP_ID = 13;
export const XCN_CERT_ACCESS_STATE_PROP_ID = 14;
export const XCN_CERT_SIGNATURE_HASH_PROP_ID = 15;
export const XCN_CERT_SMART_CARD_DATA_PROP_ID = 16;
export const XCN_CERT_EFS_PROP_ID = 17;
export const XCN_CERT_FORTEZZA_DATA_PROP_ID = 18;
export const XCN_CERT_ARCHIVED_PROP_ID = 19;
export const XCN_CERT_KEY_IDENTIFIER_PROP_ID = 20;
export const XCN_CERT_AUTO_ENROLL_PROP_ID = 21;
export const XCN_CERT_PUBKEY_ALG_PARA_PROP_ID = 22;
export const XCN_CERT_CROSS_CERT_DIST_POINTS_PROP_ID = 23;
export const XCN_CERT_ISSUER_PUBLIC_KEY_MD5_HASH_PROP_ID = 24;
export const XCN_CERT_SUBJECT_PUBLIC_KEY_MD5_HASH_PROP_ID = 25;
export const XCN_CERT_ENROLLMENT_PROP_ID = 26;
export const XCN_CERT_DATE_STAMP_PROP_ID = 27;
export const XCN_CERT_ISSUER_SERIAL_NUMBER_MD5_HASH_PROP_ID = 28;
export const XCN_CERT_SUBJECT_NAME_MD5_HASH_PROP_ID = 29;
export const XCN_CERT_EXTENDED_ERROR_INFO_PROP_ID = 30;
export const XCN_CERT_RENEWAL_PROP_ID = 64;
export const XCN_CERT_ARCHIVED_KEY_HASH_PROP_ID = 65;
export const XCN_CERT_AUTO_ENROLL_RETRY_PROP_ID = 66;
export const XCN_CERT_AIA_URL_RETRIEVED_PROP_ID = 67;
export const XCN_CERT_AUTHORITY_INFO_ACCESS_PROP_ID = 68;
export const XCN_CERT_BACKED_UP_PROP_ID = 69;
export const XCN_CERT_OCSP_RESPONSE_PROP_ID = 70;
export const XCN_CERT_REQUEST_ORIGINATOR_PROP_ID = 71;
export const XCN_CERT_SOURCE_LOCATION_PROP_ID = 72;
export const XCN_CERT_SOURCE_URL_PROP_ID = 73;
export const XCN_CERT_NEW_KEY_PROP_ID = 74;
export const XCN_CERT_OCSP_CACHE_PREFIX_PROP_ID = 75;
export const XCN_CERT_SMART_CARD_ROOT_INFO_PROP_ID = 76;
export const XCN_CERT_NO_AUTO_EXPIRE_CHECK_PROP_ID = 77;
export const XCN_CERT_NCRYPT_KEY_HANDLE_PROP_ID = 78;
export const XCN_CERT_HCRYPTPROV_OR_NCRYPT_KEY_HANDLE_PROP_ID = 79;
export const XCN_CERT_SUBJECT_INFO_ACCESS_PROP_ID = 80;
export const XCN_CERT_CA_OCSP_AUTHORITY_INFO_ACCESS_PROP_ID = 81;
export const XCN_CERT_CA_DISABLE_CRL_PROP_ID = 82;
export const XCN_CERT_ROOT_PROGRAM_CERT_POLICIES_PROP_ID = 83;
export const XCN_CERT_ROOT_PROGRAM_NAME_CONSTRAINTS_PROP_ID = 84;
export const XCN_CERT_SUBJECT_OCSP_AUTHORITY_INFO_ACCESS_PROP_ID = 85;
export const XCN_CERT_SUBJECT_DISABLE_CRL_PROP_ID = 86;
export const XCN_CERT_CEP_PROP_ID = 87;
export const XCN_CERT_SIGN_HASH_CNG_ALG_PROP_ID = 89;
export const XCN_CERT_SCARD_PIN_ID_PROP_ID = 90;
export const XCN_CERT_SCARD_PIN_INFO_PROP_ID = 91;
export const XCN_CERT_SUBJECT_PUB_KEY_BIT_LENGTH_PROP_ID = 92;
export const XCN_CERT_PUB_KEY_CNG_ALG_BIT_LENGTH_PROP_ID = 93;
export const XCN_CERT_ISSUER_PUB_KEY_BIT_LENGTH_PROP_ID = 94;
export const XCN_CERT_ISSUER_CHAIN_SIGN_HASH_CNG_ALG_PROP_ID = 95;
export const XCN_CERT_ISSUER_CHAIN_PUB_KEY_CNG_ALG_BIT_LENGTH_PROP_ID = 96;
export const XCN_CERT_NO_EXPIRE_NOTIFICATION_PROP_ID = 97;
export const XCN_CERT_AUTH_ROOT_SHA256_HASH_PROP_ID = 98;
export const XCN_CERT_NCRYPT_KEY_HANDLE_TRANSFER_PROP_ID = 99;
export const XCN_CERT_HCRYPTPROV_TRANSFER_PROP_ID = 100;
export const XCN_CERT_SMART_CARD_READER_PROP_ID = 101;
export const XCN_CERT_SEND_AS_TRUSTED_ISSUER_PROP_ID = 102;
export const XCN_CERT_KEY_REPAIR_ATTEMPTED_PROP_ID = 103;
export const XCN_CERT_DISALLOWED_FILETIME_PROP_ID = 104;
export const XCN_CERT_ROOT_PROGRAM_CHAIN_POLICIES_PROP_ID = 105;
export const XCN_CERT_SMART_CARD_READER_NON_REMOVABLE_PROP_ID = 106;
export const XCN_CERT_SHA256_HASH_PROP_ID = 107;
export const XCN_CERT_SCEP_SERVER_CERTS_PROP_ID = 108;
export const XCN_CERT_SCEP_RA_SIGNATURE_CERT_PROP_ID = 109;
export const XCN_CERT_SCEP_RA_ENCRYPTION_CERT_PROP_ID = 110;
export const XCN_CERT_SCEP_CA_CERT_PROP_ID = 111;
export const XCN_CERT_SCEP_SIGNER_CERT_PROP_ID = 112;
export const XCN_CERT_SCEP_NONCE_PROP_ID = 113;
export const XCN_CERT_SCEP_ENCRYPT_HASH_CNG_ALG_PROP_ID = 114;
export const XCN_CERT_SCEP_FLAGS_PROP_ID = 115;
export const XCN_CERT_SCEP_GUID_PROP_ID = 116;
export const XCN_CERT_SERIALIZABLE_KEY_CONTEXT_PROP_ID = 117;
export const XCN_CERT_ISOLATED_KEY_PROP_ID = 118;
export const XCN_CERT_SERIAL_CHAIN_PROP_ID = 119;
export const XCN_CERT_KEY_CLASSIFICATION_PROP_ID = 120;
export const XCN_CERT_DISALLOWED_ENHKEY_USAGE_PROP_ID = 122;
export const XCN_CERT_NONCOMPLIANT_ROOT_URL_PROP_ID = 123;
export const XCN_CERT_PIN_SHA256_HASH_PROP_ID = 124;
export const XCN_CERT_CLR_DELETE_KEY_PROP_ID = 125;
export const XCN_CERT_NOT_BEFORE_FILETIME_PROP_ID = 126;
export const XCN_CERT_CERT_NOT_BEFORE_ENHKEY_USAGE_PROP_ID = 127;
export const XCN_CERT_FIRST_RESERVED_PROP_ID = 128;
export const XCN_CERT_LAST_RESERVED_PROP_ID = 32767;
export const XCN_CERT_FIRST_USER_PROP_ID = 32768;
export const XCN_CERT_LAST_USER_PROP_ID = 65535;
export const XCN_CERT_STORE_LOCALIZED_NAME_PROP_ID = 4096;
export const DefaultNone = 0;
export const DefaultPolicyServer = 1;
export const PsfNone = 0;
export const PsfLocationGroupPolicy = 1;
export const PsfLocationRegistry = 2;
export const PsfUseClientId = 4;
export const PsfAutoEnrollmentEnabled = 16;
export const PsfAllowUnTrustedCA = 32;
export const TemplatePropCommonName = 1;
export const TemplatePropFriendlyName = 2;
export const TemplatePropEKUs = 3;
export const TemplatePropCryptoProviders = 4;
export const TemplatePropMajorRevision = 5;
export const TemplatePropDescription = 6;
export const TemplatePropKeySpec = 7;
export const TemplatePropSchemaVersion = 8;
export const TemplatePropMinorRevision = 9;
export const TemplatePropRASignatureCount = 10;
export const TemplatePropMinimumKeySize = 11;
export const TemplatePropOID = 12;
export const TemplatePropSupersede = 13;
export const TemplatePropRACertificatePolicies = 14;
export const TemplatePropRAEKUs = 15;
export const TemplatePropCertificatePolicies = 16;
export const TemplatePropV1ApplicationPolicy = 17;
export const TemplatePropAsymmetricAlgorithm = 18;
export const TemplatePropKeySecurityDescriptor = 19;
export const TemplatePropSymmetricAlgorithm = 20;
export const TemplatePropSymmetricKeyLength = 21;
export const TemplatePropHashAlgorithm = 22;
export const TemplatePropKeyUsage = 23;
export const TemplatePropEnrollmentFlags = 24;
export const TemplatePropSubjectNameFlags = 25;
export const TemplatePropPrivateKeyFlags = 26;
export const TemplatePropGeneralFlags = 27;
export const TemplatePropSecurityDescriptor = 28;
export const TemplatePropExtensions = 29;
export const TemplatePropValidityPeriod = 30;
export const TemplatePropRenewalPeriod = 31;
export const CommitFlagSaveTemplateGenerateOID = 1;
export const CommitFlagSaveTemplateUseCurrentOID = 2;
export const CommitFlagSaveTemplateOverwrite = 3;
export const CommitFlagDeleteTemplate = 4;
export const CAPropCommonName = 1;
export const CAPropDistinguishedName = 2;
export const CAPropSanitizedName = 3;
export const CAPropSanitizedShortName = 4;
export const CAPropDNSName = 5;
export const CAPropCertificateTypes = 6;
export const CAPropCertificate = 7;
export const CAPropDescription = 8;
export const CAPropWebServers = 9;
export const CAPropSiteName = 10;
export const CAPropSecurity = 11;
export const CAPropRenewalOnly = 12;
export const LoadOptionDefault = 0;
export const LoadOptionCacheOnly = 1;
export const LoadOptionReload = 2;
export const LoadOptionRegisterForADChanges = 4;
export const DisableGroupPolicyList = 2;
export const DisableUserServerList = 4;
export const PsPolicyID = 0;
export const PsFriendlyName = 1;
export const ExportTemplates = 1;
export const ExportOIDs = 2;
export const ExportCAs = 4;
export const TypeAny = 0;
export const TypePkcs10 = 1;
export const TypePkcs7 = 2;
export const TypeCmc = 3;
export const TypeCertificate = 4;
export const InheritDefault = 0;
export const InheritNewDefaultKey = 1;
export const InheritNewSimilarKey = 2;
export const InheritPrivateKey = 3;
export const InheritPublicKey = 4;
export const InheritKeyMask = 15;
export const InheritNone = 16;
export const InheritRenewalCertificateFlag = 32;
export const InheritTemplateFlag = 64;
export const InheritSubjectFlag = 128;
export const InheritExtensionsFlag = 256;
export const InheritSubjectAltNameFlag = 512;
export const InheritValidityPeriodFlag = 1024;
export const InheritReserved80000000 = "-2147483648";
export const LevelInnermost = 0;
export const LevelNext = 1;
export const AllowedKeySignature = 1;
export const AllowedNullSignature = 2;
export const XCN_NCRYPT_CLAIM_NONE = 0;
export const XCN_NCRYPT_CLAIM_AUTHORITY_AND_SUBJECT = 3;
export const XCN_NCRYPT_CLAIM_AUTHORITY_ONLY = 1;
export const XCN_NCRYPT_CLAIM_SUBJECT_ONLY = 2;
export const XCN_NCRYPT_CLAIM_UNKNOWN = 4096;
export const AllowNone = 0;
export const AllowNoOutstandingRequest = 1;
export const AllowUntrustedCertificate = 2;
export const AllowUntrustedRoot = 4;
export const EnrollPrompt = 1;
export const XCN_CRL_REASON_UNSPECIFIED = 0;
export const XCN_CRL_REASON_KEY_COMPROMISE = 1;
export const XCN_CRL_REASON_CA_COMPROMISE = 2;
export const XCN_CRL_REASON_AFFILIATION_CHANGED = 3;
export const XCN_CRL_REASON_SUPERSEDED = 4;
export const XCN_CRL_REASON_CESSATION_OF_OPERATION = 5;
export const XCN_CRL_REASON_CERTIFICATE_HOLD = 6;
export const XCN_CRL_REASON_REMOVE_FROM_CRL = 8;
export const XCN_CRL_REASON_PRIVILEGE_WITHDRAWN = 9;
export const XCN_CRL_REASON_AA_COMPROMISE = 10;
export const SCEPProcessDefault = 0;
export const SCEPProcessSkipCertInstall = 1;
export const DelayRetryUnknown = 0;
export const DelayRetryNone = 1;
export const DelayRetryShort = 2;
export const DelayRetryLong = 3;
export const DelayRetrySuccess = 4;
export const DelayRetryPastSuccess = 5;
export const GeneralMachineType = 64;
export const GeneralCA = 128;
export const GeneralCrossCA = 2048;
export const GeneralDefault = 65536;
export const GeneralModified = 131072;
export const GeneralDonotPersist = 4096;
export const EnrollmentIncludeSymmetricAlgorithms = 1;
export const EnrollmentPendAllRequests = 2;
export const EnrollmentPublishToKRAContainer = 4;
export const EnrollmentPublishToDS = 8;
export const EnrollmentAutoEnrollmentCheckUserDSCertificate = 16;
export const EnrollmentAutoEnrollment = 32;
export const EnrollmentDomainAuthenticationNotRequired = 128;
export const EnrollmentPreviousApprovalValidateReenrollment = 64;
export const EnrollmentUserInteractionRequired = 256;
export const EnrollmentAddTemplateName = 512;
export const EnrollmentRemoveInvalidCertificateFromPersonalStore = 1024;
export const EnrollmentAllowEnrollOnBehalfOf = 2048;
export const EnrollmentAddOCSPNoCheck = 4096;
export const EnrollmentReuseKeyOnFullSmartCard = 8192;
export const EnrollmentNoRevocationInfoInCerts = 16384;
export const EnrollmentIncludeBasicConstraintsForEECerts = 32768;
export const EnrollmentPreviousApprovalKeyBasedValidateReenrollment = 65536;
export const EnrollmentCertificateIssuancePoliciesFromRequest = 131072;
export const EnrollmentSkipAutoRenewal = 262144;
export const SubjectNameEnrolleeSupplies = 1;
export const SubjectNameRequireDirectoryPath = "-2147483648";
export const SubjectNameRequireCommonName = 1073741824;
export const SubjectNameRequireEmail = 536870912;
export const SubjectNameRequireDNS = 268435456;
export const SubjectNameAndAlternativeNameOldCertSupplies = 8;
export const SubjectAlternativeNameEnrolleeSupplies = 65536;
export const SubjectAlternativeNameRequireDirectoryGUID = 16777216;
export const SubjectAlternativeNameRequireUPN = 33554432;
export const SubjectAlternativeNameRequireEmail = 67108864;
export const SubjectAlternativeNameRequireSPN = 8388608;
export const SubjectAlternativeNameRequireDNS = 134217728;
export const SubjectAlternativeNameRequireDomainDNS = 4194304;
export const PrivateKeyRequireArchival = 1;
export const PrivateKeyExportable = 16;
export const PrivateKeyRequireStrongKeyProtection = 32;
export const PrivateKeyRequireAlternateSignatureAlgorithm = 64;
export const PrivateKeyRequireSameKeyRenewal = 128;
export const PrivateKeyUseLegacyProvider = 256;
export const PrivateKeyEKTrustOnUse = 512;
export const PrivateKeyEKValidateCert = 1024;
export const PrivateKeyEKValidateKey = 2048;
export const PrivateKeyAttestNone = 0;
export const PrivateKeyAttestPreferred = 4096;
export const PrivateKeyAttestRequired = 8192;
export const PrivateKeyAttestMask = 12288;
export const PrivateKeyAttestWithoutPolicy = 16384;
export const PrivateKeyServerVersionMask = 983040;
export const PrivateKeyServerVersionShift = 16;
export const PrivateKeyHelloKspKey = 1048576;
export const PrivateKeyHelloLogonKey = 2097152;
export const PrivateKeyClientVersionMask = 251658240;
export const PrivateKeyClientVersionShift = 24;
export const ImportNone = 0;
export const ImportMachineContext = 1;
export const ImportForceOverwrite = 2;
export const ImportSilent = 4;
export const ImportSaveProperties = 8;
export const ImportExportable = 16;
export const ImportExportableEncrypted = 32;
export const ImportNoUserProtected = 64;
export const ImportUserProtected = 128;
export const ImportUserProtectedHigh = 256;
export const ImportInstallCertificate = 512;
export const ImportInstallChain = 1024;
export const ImportInstallChainAndRoot = 2048;
export const ENUM_ENTERPRISE_ROOTCA = 0;
export const ENUM_ENTERPRISE_SUBCA = 1;
export const ENUM_STANDALONE_ROOTCA = 3;
export const ENUM_STANDALONE_SUBCA = 4;
export const ENUM_UNKNOWN_CA = 5;

// Structs

export type PWSTR = Deno.PointerValue | Uint8Array | null;

/**
 * Windows.Win32.Security.Cryptography.Certificates.CSEDB_RSTMAPW (size: 16)
 */
export interface CSEDB_RSTMAPW {
  /** Windows.Win32.Foundation.PWSTR */
  pwszDatabaseName: string | null;
  /** Windows.Win32.Foundation.PWSTR */
  pwszNewDatabaseName: string | null;
}

export const sizeofCSEDB_RSTMAPW = 16;

export function allocCSEDB_RSTMAPW(data?: Partial<CSEDB_RSTMAPW>): Uint8Array {
  const buf = new Uint8Array(sizeofCSEDB_RSTMAPW);
  const view = new DataView(buf.buffer);
  // 0x00: buffer
  if (data?.pwszDatabaseName !== undefined) {
    (buf as any)._f0 = util.pwstrToFfi(data.pwszDatabaseName);
    view.setBigUint64(0, (buf as any)._f0 === null ? 0n : BigInt(Deno.UnsafePointer.of((buf as any)._f0)), true);
  }
  // 0x08: buffer
  if (data?.pwszNewDatabaseName !== undefined) {
    (buf as any)._f8 = util.pwstrToFfi(data.pwszNewDatabaseName);
    view.setBigUint64(8, (buf as any)._f8 === null ? 0n : BigInt(Deno.UnsafePointer.of((buf as any)._f8)), true);
  }
  return buf;
}

/**
 * Windows.Win32.Security.Cryptography.Certificates.CERTTRANSBLOB (size: 16)
 */
export interface CERTTRANSBLOB {
  /** u32 */
  cb: number;
  /** ptr */
  pb: Deno.PointerValue | Uint8Array | null;
}

export const sizeofCERTTRANSBLOB = 16;

export function allocCERTTRANSBLOB(data?: Partial<CERTTRANSBLOB>): Uint8Array {
  const buf = new Uint8Array(sizeofCERTTRANSBLOB);
  const view = new DataView(buf.buffer);
  // 0x00: u32
  if (data?.cb !== undefined) view.setUint32(0, Number(data.cb), true);
  // 0x04: pad4
  // 0x08: pointer
  if (data?.pb !== undefined) view.setBigUint64(8, data.pb === null ? 0n : BigInt(util.toPointer(data.pb)), true);
  return buf;
}

/**
 * Windows.Win32.Security.Cryptography.Certificates.CERTVIEWRESTRICTION (size: 32)
 */
export interface CERTVIEWRESTRICTION {
  /** u32 */
  ColumnIndex: number;
  /** i32 */
  SeekOperator: number;
  /** i32 */
  SortOrder: number;
  /** ptr */
  pbValue: Deno.PointerValue | Uint8Array | null;
  /** u32 */
  cbValue: number;
}

export const sizeofCERTVIEWRESTRICTION = 32;

export function allocCERTVIEWRESTRICTION(data?: Partial<CERTVIEWRESTRICTION>): Uint8Array {
  const buf = new Uint8Array(sizeofCERTVIEWRESTRICTION);
  const view = new DataView(buf.buffer);
  // 0x00: u32
  if (data?.ColumnIndex !== undefined) view.setUint32(0, Number(data.ColumnIndex), true);
  // 0x04: i32
  if (data?.SeekOperator !== undefined) view.setInt32(4, Number(data.SeekOperator), true);
  // 0x08: i32
  if (data?.SortOrder !== undefined) view.setInt32(8, Number(data.SortOrder), true);
  // 0x0c: pad4
  // 0x10: pointer
  if (data?.pbValue !== undefined) view.setBigUint64(16, data.pbValue === null ? 0n : BigInt(util.toPointer(data.pbValue)), true);
  // 0x18: u32
  if (data?.cbValue !== undefined) view.setUint32(24, Number(data.cbValue), true);
  // 0x1c: pad4
  return buf;
}

/**
 * Windows.Win32.Security.Cryptography.Certificates.CAINFO (size: 40)
 */
export interface CAINFO {
  /** u32 */
  cbSize: number;
  /** Windows.Win32.Security.Cryptography.Certificates.ENUM_CATYPES */
  CAType: ENUM_CATYPES;
  /** u32 */
  cCASignatureCerts: number;
  /** u32 */
  cCAExchangeCerts: number;
  /** u32 */
  cExitModules: number;
  /** i32 */
  lPropIdMax: number;
  /** i32 */
  lRoleSeparationEnabled: number;
  /** u32 */
  cKRACertUsedCount: number;
  /** u32 */
  cKRACertCount: number;
  /** u32 */
  fAdvancedServer: number;
}

export const sizeofCAINFO = 40;

export function allocCAINFO(data?: Partial<CAINFO>): Uint8Array {
  const buf = new Uint8Array(sizeofCAINFO);
  const view = new DataView(buf.buffer);
  // 0x00: u32
  if (data?.cbSize !== undefined) view.setUint32(0, Number(data.cbSize), true);
  // 0x04: i32
  if (data?.CAType !== undefined) view.setInt32(4, Number(data.CAType), true);
  // 0x08: u32
  if (data?.cCASignatureCerts !== undefined) view.setUint32(8, Number(data.cCASignatureCerts), true);
  // 0x0c: u32
  if (data?.cCAExchangeCerts !== undefined) view.setUint32(12, Number(data.cCAExchangeCerts), true);
  // 0x10: u32
  if (data?.cExitModules !== undefined) view.setUint32(16, Number(data.cExitModules), true);
  // 0x14: i32
  if (data?.lPropIdMax !== undefined) view.setInt32(20, Number(data.lPropIdMax), true);
  // 0x18: i32
  if (data?.lRoleSeparationEnabled !== undefined) view.setInt32(24, Number(data.lRoleSeparationEnabled), true);
  // 0x1c: u32
  if (data?.cKRACertUsedCount !== undefined) view.setUint32(28, Number(data.cKRACertUsedCount), true);
  // 0x20: u32
  if (data?.cKRACertCount !== undefined) view.setUint32(32, Number(data.cKRACertCount), true);
  // 0x24: u32
  if (data?.fAdvancedServer !== undefined) view.setUint32(36, Number(data.fAdvancedServer), true);
  return buf;
}

export type HRESULT = number;

export type NTSTATUS = number;

export type BOOL = number;

// Native Libraries

try {
  var libcertadm = Deno.dlopen("certadm", {
    CertSrvIsServerOnlineW: {
      parameters: ["buffer", "pointer"],
      result: "pointer",
    },
    CertSrvBackupGetDynamicFileListW: {
      parameters: ["pointer", "pointer", "pointer"],
      result: "pointer",
    },
    CertSrvBackupPrepareW: {
      parameters: ["buffer", "u32", "u32", "pointer"],
      result: "pointer",
    },
    CertSrvBackupGetDatabaseNamesW: {
      parameters: ["pointer", "pointer", "pointer"],
      result: "pointer",
    },
    CertSrvBackupOpenFileW: {
      parameters: ["pointer", "buffer", "u32", "pointer"],
      result: "pointer",
    },
    CertSrvBackupRead: {
      parameters: ["pointer", "pointer", "u32", "pointer"],
      result: "pointer",
    },
    CertSrvBackupClose: {
      parameters: ["pointer"],
      result: "pointer",
    },
    CertSrvBackupGetBackupLogsW: {
      parameters: ["pointer", "pointer", "pointer"],
      result: "pointer",
    },
    CertSrvBackupTruncateLogs: {
      parameters: ["pointer"],
      result: "pointer",
    },
    CertSrvBackupEnd: {
      parameters: ["pointer"],
      result: "pointer",
    },
    CertSrvBackupFree: {
      parameters: ["pointer"],
      result: "void",
    },
    CertSrvRestoreGetDatabaseLocationsW: {
      parameters: ["pointer", "pointer", "pointer"],
      result: "pointer",
    },
    CertSrvRestorePrepareW: {
      parameters: ["buffer", "u32", "pointer"],
      result: "pointer",
    },
    CertSrvRestoreRegisterW: {
      parameters: ["pointer", "buffer", "buffer", "pointer", "i32", "buffer", "u32", "u32"],
      result: "pointer",
    },
    CertSrvRestoreRegisterThroughFile: {
      parameters: ["pointer", "buffer", "buffer", "pointer", "i32", "buffer", "u32", "u32"],
      result: "pointer",
    },
    CertSrvRestoreRegisterComplete: {
      parameters: ["pointer", "pointer"],
      result: "pointer",
    },
    CertSrvRestoreEnd: {
      parameters: ["pointer"],
      result: "pointer",
    },
    CertSrvServerControlW: {
      parameters: ["buffer", "u32", "pointer", "pointer"],
      result: "pointer",
    },
  }).symbols;
} catch(e) { /* ignore */ }

try {
  var libcertpoleng = Deno.dlopen("certpoleng", {
    PstGetTrustAnchors: {
      parameters: ["pointer", "u32", "pointer", "pointer"],
      result: "pointer",
    },
    PstGetTrustAnchorsEx: {
      parameters: ["pointer", "u32", "pointer", "pointer", "pointer"],
      result: "pointer",
    },
    PstGetCertificateChain: {
      parameters: ["pointer", "pointer", "pointer"],
      result: "pointer",
    },
    PstGetCertificates: {
      parameters: ["pointer", "u32", "pointer", "i32", "pointer", "pointer"],
      result: "pointer",
    },
    PstAcquirePrivateKey: {
      parameters: ["pointer"],
      result: "pointer",
    },
    PstValidate: {
      parameters: ["pointer", "i32", "pointer", "pointer", "pointer", "pointer"],
      result: "pointer",
    },
    PstMapCertificate: {
      parameters: ["pointer", "pointer", "pointer"],
      result: "pointer",
    },
    PstGetUserNameForCertificate: {
      parameters: ["pointer", "pointer"],
      result: "pointer",
    },
  }).symbols;
} catch(e) { /* ignore */ }

// Symbols

export function CertSrvIsServerOnlineW(
  pwszServerName: string | null /* Windows.Win32.Foundation.PWSTR */,
  pfServerOnline: Deno.PointerValue | Uint8Array | null /* ptr */,
): Deno.PointerValue | null /* Windows.Win32.Foundation.HRESULT */ {
  return util.pointerFromFfi(libcertadm.CertSrvIsServerOnlineW(util.pwstrToFfi(pwszServerName), util.toPointer(pfServerOnline)));
}

export function CertSrvBackupGetDynamicFileListW(
  hbc: Deno.PointerValue | Uint8Array | null /* ptr */,
  ppwszzFileList: Deno.PointerValue | Uint8Array | null /* ptr */,
  pcbSize: Deno.PointerValue | Uint8Array | null /* ptr */,
): Deno.PointerValue | null /* Windows.Win32.Foundation.HRESULT */ {
  return util.pointerFromFfi(libcertadm.CertSrvBackupGetDynamicFileListW(util.toPointer(hbc), util.toPointer(ppwszzFileList), util.toPointer(pcbSize)));
}

export function CertSrvBackupPrepareW(
  pwszServerName: string | null /* Windows.Win32.Foundation.PWSTR */,
  grbitJet: number /* u32 */,
  dwBackupFlags: CSBACKUP_TYPE /* Windows.Win32.Security.Cryptography.Certificates.CSBACKUP_TYPE */,
  phbc: Deno.PointerValue | Uint8Array | null /* ptr */,
): Deno.PointerValue | null /* Windows.Win32.Foundation.HRESULT */ {
  return util.pointerFromFfi(libcertadm.CertSrvBackupPrepareW(util.pwstrToFfi(pwszServerName), grbitJet, dwBackupFlags, util.toPointer(phbc)));
}

export function CertSrvBackupGetDatabaseNamesW(
  hbc: Deno.PointerValue | Uint8Array | null /* ptr */,
  ppwszzAttachmentInformation: Deno.PointerValue | Uint8Array | null /* ptr */,
  pcbSize: Deno.PointerValue | Uint8Array | null /* ptr */,
): Deno.PointerValue | null /* Windows.Win32.Foundation.HRESULT */ {
  return util.pointerFromFfi(libcertadm.CertSrvBackupGetDatabaseNamesW(util.toPointer(hbc), util.toPointer(ppwszzAttachmentInformation), util.toPointer(pcbSize)));
}

export function CertSrvBackupOpenFileW(
  hbc: Deno.PointerValue | Uint8Array | null /* ptr */,
  pwszAttachmentName: string | null /* Windows.Win32.Foundation.PWSTR */,
  cbReadHintSize: number /* u32 */,
  pliFileSize: Deno.PointerValue | Uint8Array | null /* ptr */,
): Deno.PointerValue | null /* Windows.Win32.Foundation.HRESULT */ {
  return util.pointerFromFfi(libcertadm.CertSrvBackupOpenFileW(util.toPointer(hbc), util.pwstrToFfi(pwszAttachmentName), cbReadHintSize, util.toPointer(pliFileSize)));
}

export function CertSrvBackupRead(
  hbc: Deno.PointerValue | Uint8Array | null /* ptr */,
  pvBuffer: Deno.PointerValue | Uint8Array | null /* ptr */,
  cbBuffer: number /* u32 */,
  pcbRead: Deno.PointerValue | Uint8Array | null /* ptr */,
): Deno.PointerValue | null /* Windows.Win32.Foundation.HRESULT */ {
  return util.pointerFromFfi(libcertadm.CertSrvBackupRead(util.toPointer(hbc), util.toPointer(pvBuffer), cbBuffer, util.toPointer(pcbRead)));
}

export function CertSrvBackupClose(
  hbc: Deno.PointerValue | Uint8Array | null /* ptr */,
): Deno.PointerValue | null /* Windows.Win32.Foundation.HRESULT */ {
  return util.pointerFromFfi(libcertadm.CertSrvBackupClose(util.toPointer(hbc)));
}

export function CertSrvBackupGetBackupLogsW(
  hbc: Deno.PointerValue | Uint8Array | null /* ptr */,
  ppwszzBackupLogFiles: Deno.PointerValue | Uint8Array | null /* ptr */,
  pcbSize: Deno.PointerValue | Uint8Array | null /* ptr */,
): Deno.PointerValue | null /* Windows.Win32.Foundation.HRESULT */ {
  return util.pointerFromFfi(libcertadm.CertSrvBackupGetBackupLogsW(util.toPointer(hbc), util.toPointer(ppwszzBackupLogFiles), util.toPointer(pcbSize)));
}

export function CertSrvBackupTruncateLogs(
  hbc: Deno.PointerValue | Uint8Array | null /* ptr */,
): Deno.PointerValue | null /* Windows.Win32.Foundation.HRESULT */ {
  return util.pointerFromFfi(libcertadm.CertSrvBackupTruncateLogs(util.toPointer(hbc)));
}

export function CertSrvBackupEnd(
  hbc: Deno.PointerValue | Uint8Array | null /* ptr */,
): Deno.PointerValue | null /* Windows.Win32.Foundation.HRESULT */ {
  return util.pointerFromFfi(libcertadm.CertSrvBackupEnd(util.toPointer(hbc)));
}

export function CertSrvBackupFree(
  pv: Deno.PointerValue | Uint8Array | null /* ptr */,
): void /* void */ {
  return libcertadm.CertSrvBackupFree(util.toPointer(pv));
}

export function CertSrvRestoreGetDatabaseLocationsW(
  hbc: Deno.PointerValue | Uint8Array | null /* ptr */,
  ppwszzDatabaseLocationList: Deno.PointerValue | Uint8Array | null /* ptr */,
  pcbSize: Deno.PointerValue | Uint8Array | null /* ptr */,
): Deno.PointerValue | null /* Windows.Win32.Foundation.HRESULT */ {
  return util.pointerFromFfi(libcertadm.CertSrvRestoreGetDatabaseLocationsW(util.toPointer(hbc), util.toPointer(ppwszzDatabaseLocationList), util.toPointer(pcbSize)));
}

export function CertSrvRestorePrepareW(
  pwszServerName: string | null /* Windows.Win32.Foundation.PWSTR */,
  dwRestoreFlags: number /* u32 */,
  phbc: Deno.PointerValue | Uint8Array | null /* ptr */,
): Deno.PointerValue | null /* Windows.Win32.Foundation.HRESULT */ {
  return util.pointerFromFfi(libcertadm.CertSrvRestorePrepareW(util.pwstrToFfi(pwszServerName), dwRestoreFlags, util.toPointer(phbc)));
}

export function CertSrvRestoreRegisterW(
  hbc: Deno.PointerValue | Uint8Array | null /* ptr */,
  pwszCheckPointFilePath: string | null /* Windows.Win32.Foundation.PWSTR */,
  pwszLogPath: string | null /* Windows.Win32.Foundation.PWSTR */,
  rgrstmap: Deno.PointerValue | Uint8Array | null /* ptr */,
  crstmap: number /* i32 */,
  pwszBackupLogPath: string | null /* Windows.Win32.Foundation.PWSTR */,
  genLow: number /* u32 */,
  genHigh: number /* u32 */,
): Deno.PointerValue | null /* Windows.Win32.Foundation.HRESULT */ {
  return util.pointerFromFfi(libcertadm.CertSrvRestoreRegisterW(util.toPointer(hbc), util.pwstrToFfi(pwszCheckPointFilePath), util.pwstrToFfi(pwszLogPath), util.toPointer(rgrstmap), crstmap, util.pwstrToFfi(pwszBackupLogPath), genLow, genHigh));
}

export function CertSrvRestoreRegisterThroughFile(
  hbc: Deno.PointerValue | Uint8Array | null /* ptr */,
  pwszCheckPointFilePath: string | null /* Windows.Win32.Foundation.PWSTR */,
  pwszLogPath: string | null /* Windows.Win32.Foundation.PWSTR */,
  rgrstmap: Deno.PointerValue | Uint8Array | null /* ptr */,
  crstmap: number /* i32 */,
  pwszBackupLogPath: string | null /* Windows.Win32.Foundation.PWSTR */,
  genLow: number /* u32 */,
  genHigh: number /* u32 */,
): Deno.PointerValue | null /* Windows.Win32.Foundation.HRESULT */ {
  return util.pointerFromFfi(libcertadm.CertSrvRestoreRegisterThroughFile(util.toPointer(hbc), util.pwstrToFfi(pwszCheckPointFilePath), util.pwstrToFfi(pwszLogPath), util.toPointer(rgrstmap), crstmap, util.pwstrToFfi(pwszBackupLogPath), genLow, genHigh));
}

export function CertSrvRestoreRegisterComplete(
  hbc: Deno.PointerValue | Uint8Array | null /* ptr */,
  hrRestoreState: Uint8Array | Deno.PointerValue | null /* Windows.Win32.Foundation.HRESULT */,
): Deno.PointerValue | null /* Windows.Win32.Foundation.HRESULT */ {
  return util.pointerFromFfi(libcertadm.CertSrvRestoreRegisterComplete(util.toPointer(hbc), util.toPointer(hrRestoreState)));
}

export function CertSrvRestoreEnd(
  hbc: Deno.PointerValue | Uint8Array | null /* ptr */,
): Deno.PointerValue | null /* Windows.Win32.Foundation.HRESULT */ {
  return util.pointerFromFfi(libcertadm.CertSrvRestoreEnd(util.toPointer(hbc)));
}

export function CertSrvServerControlW(
  pwszServerName: string | null /* Windows.Win32.Foundation.PWSTR */,
  dwControlFlags: number /* u32 */,
  pcbOut: Deno.PointerValue | Uint8Array | null /* ptr */,
  ppbOut: Deno.PointerValue | Uint8Array | null /* ptr */,
): Deno.PointerValue | null /* Windows.Win32.Foundation.HRESULT */ {
  return util.pointerFromFfi(libcertadm.CertSrvServerControlW(util.pwstrToFfi(pwszServerName), dwControlFlags, util.toPointer(pcbOut), util.toPointer(ppbOut)));
}

export function PstGetTrustAnchors(
  pTargetName: Deno.PointerValue | Uint8Array | null /* ptr */,
  cCriteria: number /* u32 */,
  rgpCriteria: Deno.PointerValue | Uint8Array | null /* ptr */,
  ppTrustedIssuers: Deno.PointerValue | Uint8Array | null /* ptr */,
): Deno.PointerValue | null /* Windows.Win32.Foundation.NTSTATUS */ {
  return util.pointerFromFfi(libcertpoleng.PstGetTrustAnchors(util.toPointer(pTargetName), cCriteria, util.toPointer(rgpCriteria), util.toPointer(ppTrustedIssuers)));
}

export function PstGetTrustAnchorsEx(
  pTargetName: Deno.PointerValue | Uint8Array | null /* ptr */,
  cCriteria: number /* u32 */,
  rgpCriteria: Deno.PointerValue | Uint8Array | null /* ptr */,
  pCertContext: Deno.PointerValue | Uint8Array | null /* ptr */,
  ppTrustedIssuers: Deno.PointerValue | Uint8Array | null /* ptr */,
): Deno.PointerValue | null /* Windows.Win32.Foundation.NTSTATUS */ {
  return util.pointerFromFfi(libcertpoleng.PstGetTrustAnchorsEx(util.toPointer(pTargetName), cCriteria, util.toPointer(rgpCriteria), util.toPointer(pCertContext), util.toPointer(ppTrustedIssuers)));
}

export function PstGetCertificateChain(
  pCert: Deno.PointerValue | Uint8Array | null /* ptr */,
  pTrustedIssuers: Deno.PointerValue | Uint8Array | null /* ptr */,
  ppCertChainContext: Deno.PointerValue | Uint8Array | null /* ptr */,
): Deno.PointerValue | null /* Windows.Win32.Foundation.NTSTATUS */ {
  return util.pointerFromFfi(libcertpoleng.PstGetCertificateChain(util.toPointer(pCert), util.toPointer(pTrustedIssuers), util.toPointer(ppCertChainContext)));
}

export function PstGetCertificates(
  pTargetName: Deno.PointerValue | Uint8Array | null /* ptr */,
  cCriteria: number /* u32 */,
  rgpCriteria: Deno.PointerValue | Uint8Array | null /* ptr */,
  bIsClient: boolean /* Windows.Win32.Foundation.BOOL */,
  pdwCertChainContextCount: Deno.PointerValue | Uint8Array | null /* ptr */,
  ppCertChainContexts: Deno.PointerValue | Uint8Array | null /* ptr */,
): Deno.PointerValue | null /* Windows.Win32.Foundation.NTSTATUS */ {
  return util.pointerFromFfi(libcertpoleng.PstGetCertificates(util.toPointer(pTargetName), cCriteria, util.toPointer(rgpCriteria), util.boolToFfi(bIsClient), util.toPointer(pdwCertChainContextCount), util.toPointer(ppCertChainContexts)));
}

export function PstAcquirePrivateKey(
  pCert: Deno.PointerValue | Uint8Array | null /* ptr */,
): Deno.PointerValue | null /* Windows.Win32.Foundation.NTSTATUS */ {
  return util.pointerFromFfi(libcertpoleng.PstAcquirePrivateKey(util.toPointer(pCert)));
}

export function PstValidate(
  pTargetName: Deno.PointerValue | Uint8Array | null /* ptr */,
  bIsClient: boolean /* Windows.Win32.Foundation.BOOL */,
  pRequestedIssuancePolicy: Deno.PointerValue | Uint8Array | null /* ptr */,
  phAdditionalCertStore: Deno.PointerValue | Uint8Array | null /* ptr */,
  pCert: Deno.PointerValue | Uint8Array | null /* ptr */,
  pProvGUID: Deno.PointerValue | Uint8Array | null /* ptr */,
): Deno.PointerValue | null /* Windows.Win32.Foundation.NTSTATUS */ {
  return util.pointerFromFfi(libcertpoleng.PstValidate(util.toPointer(pTargetName), util.boolToFfi(bIsClient), util.toPointer(pRequestedIssuancePolicy), util.toPointer(phAdditionalCertStore), util.toPointer(pCert), util.toPointer(pProvGUID)));
}

export function PstMapCertificate(
  pCert: Deno.PointerValue | Uint8Array | null /* ptr */,
  pTokenInformationType: Deno.PointerValue | Uint8Array | null /* ptr */,
  ppTokenInformation: Deno.PointerValue | Uint8Array | null /* ptr */,
): Deno.PointerValue | null /* Windows.Win32.Foundation.NTSTATUS */ {
  return util.pointerFromFfi(libcertpoleng.PstMapCertificate(util.toPointer(pCert), util.toPointer(pTokenInformationType), util.toPointer(ppTokenInformation)));
}

export function PstGetUserNameForCertificate(
  pCertContext: Deno.PointerValue | Uint8Array | null /* ptr */,
  UserName: Deno.PointerValue | Uint8Array | null /* ptr */,
): Deno.PointerValue | null /* Windows.Win32.Foundation.NTSTATUS */ {
  return util.pointerFromFfi(libcertpoleng.PstGetUserNameForCertificate(util.toPointer(pCertContext), util.toPointer(UserName)));
}

