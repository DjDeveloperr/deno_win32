/// Auto-generated by Deno Win32: Windows.Win32.Security.WinWlx.Apis

import * as util from "../../util.ts";

// Enums
export type WLX_SHUTDOWN_TYPE = number;

// Constants
export const WLX_SAS_ACTION_SHUTDOWN = 5;
export const WLX_SAS_ACTION_SHUTDOWN_REBOOT = 11;
export const WLX_SAS_ACTION_SHUTDOWN_POWER_OFF = 10;
export const WLX_VERSION_1_0 = 65536;
export const WLX_VERSION_1_1 = 65537;
export const WLX_VERSION_1_2 = 65538;
export const WLX_VERSION_1_3 = 65539;
export const WLX_VERSION_1_4 = 65540;
export const WLX_CURRENT_VERSION = 65540;
export const WLX_SAS_TYPE_TIMEOUT = 0;
export const WLX_SAS_TYPE_CTRL_ALT_DEL = 1;
export const WLX_SAS_TYPE_SCRNSVR_TIMEOUT = 2;
export const WLX_SAS_TYPE_SCRNSVR_ACTIVITY = 3;
export const WLX_SAS_TYPE_USER_LOGOFF = 4;
export const WLX_SAS_TYPE_SC_INSERT = 5;
export const WLX_SAS_TYPE_SC_REMOVE = 6;
export const WLX_SAS_TYPE_AUTHENTICATED = 7;
export const WLX_SAS_TYPE_SC_FIRST_READER_ARRIVED = 8;
export const WLX_SAS_TYPE_SC_LAST_READER_REMOVED = 9;
export const WLX_SAS_TYPE_SWITCHUSER = 10;
export const WLX_SAS_TYPE_MAX_MSFT_VALUE = 127;
export const WLX_LOGON_OPT_NO_PROFILE = 1;
export const WLX_PROFILE_TYPE_V1_0 = 1;
export const WLX_PROFILE_TYPE_V2_0 = 2;
export const WLX_SAS_ACTION_LOGON = 1;
export const WLX_SAS_ACTION_NONE = 2;
export const WLX_SAS_ACTION_LOCK_WKSTA = 3;
export const WLX_SAS_ACTION_LOGOFF = 4;
export const WLX_SAS_ACTION_PWD_CHANGED = 6;
export const WLX_SAS_ACTION_TASKLIST = 7;
export const WLX_SAS_ACTION_UNLOCK_WKSTA = 8;
export const WLX_SAS_ACTION_FORCE_LOGOFF = 9;
export const WLX_SAS_ACTION_SHUTDOWN_SLEEP = 12;
export const WLX_SAS_ACTION_SHUTDOWN_SLEEP2 = 13;
export const WLX_SAS_ACTION_SHUTDOWN_HIBERNATE = 14;
export const WLX_SAS_ACTION_RECONNECTED = 15;
export const WLX_SAS_ACTION_DELAYED_FORCE_LOGOFF = 16;
export const WLX_SAS_ACTION_SWITCH_CONSOLE = 17;
export const WLX_WM_SAS = 1625;
export const WLX_DLG_SAS = 101;
export const WLX_DLG_INPUT_TIMEOUT = 102;
export const WLX_DLG_SCREEN_SAVER_TIMEOUT = 103;
export const WLX_DLG_USER_LOGOFF = 104;
export const WLX_DIRECTORY_LENGTH = 256;
export const WLX_CREDENTIAL_TYPE_V1_0 = 1;
export const WLX_CREDENTIAL_TYPE_V2_0 = 2;
export const WLX_CONSOLESWITCHCREDENTIAL_TYPE_V1_0 = 1;
export const STATUSMSG_OPTION_NOANIMATION = 1;
export const STATUSMSG_OPTION_SETFOREGROUND = 2;
export const WLX_DESKTOP_NAME = 1;
export const WLX_DESKTOP_HANDLE = 2;
export const WLX_CREATE_INSTANCE_ONLY = 1;
export const WLX_CREATE_USER = 2;
export const WLX_OPTION_USE_CTRL_ALT_DEL = 1;
export const WLX_OPTION_CONTEXT_POINTER = 2;
export const WLX_OPTION_USE_SMART_CARD = 3;
export const WLX_OPTION_FORCE_LOGOFF_TIME = 4;
export const WLX_OPTION_IGNORE_AUTO_LOGON = 8;
export const WLX_OPTION_NO_SWITCH_ON_SAS = 9;
export const WLX_OPTION_SMART_CARD_PRESENT = 65537;
export const WLX_OPTION_SMART_CARD_INFO = 65538;
export const WLX_OPTION_DISPATCH_TABLE_SIZE = 65539;

// Structs

export type PWSTR = Deno.PointerValue | Uint8Array;

/**
 * Windows.Win32.Security.WinWlx.WLX_SC_NOTIFICATION_INFO (size: 32)
 */
export interface WLX_SC_NOTIFICATION_INFO {
  /** Windows.Win32.Foundation.PWSTR */
  pszCard: string | null | Uint8Array | Uint16Array;
  /** Windows.Win32.Foundation.PWSTR */
  pszReader: string | null | Uint8Array | Uint16Array;
  /** Windows.Win32.Foundation.PWSTR */
  pszContainer: string | null | Uint8Array | Uint16Array;
  /** Windows.Win32.Foundation.PWSTR */
  pszCryptoProvider: string | null | Uint8Array | Uint16Array;
}

export const sizeofWLX_SC_NOTIFICATION_INFO = 32;

export function allocWLX_SC_NOTIFICATION_INFO(data?: Partial<WLX_SC_NOTIFICATION_INFO>): Uint8Array {
  const buf = new Uint8Array(sizeofWLX_SC_NOTIFICATION_INFO);
  const view = new DataView(buf.buffer);
  // 0x00: buffer
  if (data?.pszCard !== undefined) {
    (buf as any)._f0 = util.pwstrToFfi(data.pszCard);
    view.setBigUint64(0, (buf as any)._f0 === null ? 0n : BigInt(Deno.UnsafePointer.value(Deno.UnsafePointer.of((buf as any)._f0))), true);
  }
  // 0x08: buffer
  if (data?.pszReader !== undefined) {
    (buf as any)._f8 = util.pwstrToFfi(data.pszReader);
    view.setBigUint64(8, (buf as any)._f8 === null ? 0n : BigInt(Deno.UnsafePointer.value(Deno.UnsafePointer.of((buf as any)._f8))), true);
  }
  // 0x10: buffer
  if (data?.pszContainer !== undefined) {
    (buf as any)._f16 = util.pwstrToFfi(data.pszContainer);
    view.setBigUint64(16, (buf as any)._f16 === null ? 0n : BigInt(Deno.UnsafePointer.value(Deno.UnsafePointer.of((buf as any)._f16))), true);
  }
  // 0x18: buffer
  if (data?.pszCryptoProvider !== undefined) {
    (buf as any)._f24 = util.pwstrToFfi(data.pszCryptoProvider);
    view.setBigUint64(24, (buf as any)._f24 === null ? 0n : BigInt(Deno.UnsafePointer.value(Deno.UnsafePointer.of((buf as any)._f24))), true);
  }
  return buf;
}

export class WLX_SC_NOTIFICATION_INFOView {
  private readonly view: DataView;
  constructor(private readonly buf: Uint8Array) {
    this.view = new DataView(buf.buffer);
  }

  get buffer(): Uint8Array {
    return this.buf;
  }

  // 0x00: buffer
  get pszCard(): Uint8Array | Deno.PointerValue {
    const ptr = this.view.getBigUint64(0, true);
    return Deno.UnsafePointer.create(ptr);
  }

  // 0x08: buffer
  get pszReader(): Uint8Array | Deno.PointerValue {
    const ptr = this.view.getBigUint64(8, true);
    return Deno.UnsafePointer.create(ptr);
  }

  // 0x10: buffer
  get pszContainer(): Uint8Array | Deno.PointerValue {
    const ptr = this.view.getBigUint64(16, true);
    return Deno.UnsafePointer.create(ptr);
  }

  // 0x18: buffer
  get pszCryptoProvider(): Uint8Array | Deno.PointerValue {
    const ptr = this.view.getBigUint64(24, true);
    return Deno.UnsafePointer.create(ptr);
  }

  // 0x00: buffer
  set pszCard(value: Uint8Array | Deno.PointerValue) {
    (this.buf as any)._f0 = value;
    this.view.setBigUint64(0, BigInt(Deno.UnsafePointer.value(util.toPointer((this.buf as any)._f0))), true);
  }

  // 0x08: buffer
  set pszReader(value: Uint8Array | Deno.PointerValue) {
    (this.buf as any)._f8 = value;
    this.view.setBigUint64(8, BigInt(Deno.UnsafePointer.value(util.toPointer((this.buf as any)._f8))), true);
  }

  // 0x10: buffer
  set pszContainer(value: Uint8Array | Deno.PointerValue) {
    (this.buf as any)._f16 = value;
    this.view.setBigUint64(16, BigInt(Deno.UnsafePointer.value(util.toPointer((this.buf as any)._f16))), true);
  }

  // 0x18: buffer
  set pszCryptoProvider(value: Uint8Array | Deno.PointerValue) {
    (this.buf as any)._f24 = value;
    this.view.setBigUint64(24, BigInt(Deno.UnsafePointer.value(util.toPointer((this.buf as any)._f24))), true);
  }
}

/**
 * Windows.Win32.Security.WinWlx.WLX_PROFILE_V1_0 (size: 16)
 */
export interface WLX_PROFILE_V1_0 {
  /** u32 */
  dwType: number;
  /** Windows.Win32.Foundation.PWSTR */
  pszProfile: string | null | Uint8Array | Uint16Array;
}

export const sizeofWLX_PROFILE_V1_0 = 16;

export function allocWLX_PROFILE_V1_0(data?: Partial<WLX_PROFILE_V1_0>): Uint8Array {
  const buf = new Uint8Array(sizeofWLX_PROFILE_V1_0);
  const view = new DataView(buf.buffer);
  // 0x00: u32
  if (data?.dwType !== undefined) view.setUint32(0, Number(data.dwType), true);
  // 0x04: pad4
  // 0x08: buffer
  if (data?.pszProfile !== undefined) {
    (buf as any)._f8 = util.pwstrToFfi(data.pszProfile);
    view.setBigUint64(8, (buf as any)._f8 === null ? 0n : BigInt(Deno.UnsafePointer.value(Deno.UnsafePointer.of((buf as any)._f8))), true);
  }
  return buf;
}

export class WLX_PROFILE_V1_0View {
  private readonly view: DataView;
  constructor(private readonly buf: Uint8Array) {
    this.view = new DataView(buf.buffer);
  }

  get buffer(): Uint8Array {
    return this.buf;
  }

  // 0x00: u32
  get dwType(): number {
    return this.view.getUint32(0, true);
  }

  // 0x04: pad4

  // 0x08: buffer
  get pszProfile(): Uint8Array | Deno.PointerValue {
    const ptr = this.view.getBigUint64(8, true);
    return Deno.UnsafePointer.create(ptr);
  }

  // 0x00: u32
  set dwType(value: number) {
    this.view.setUint32(0, value, true);
  }

  // 0x04: pad4

  // 0x08: buffer
  set pszProfile(value: Uint8Array | Deno.PointerValue) {
    (this.buf as any)._f8 = value;
    this.view.setBigUint64(8, BigInt(Deno.UnsafePointer.value(util.toPointer((this.buf as any)._f8))), true);
  }
}

/**
 * Windows.Win32.Security.WinWlx.WLX_PROFILE_V2_0 (size: 48)
 */
export interface WLX_PROFILE_V2_0 {
  /** u32 */
  dwType: number;
  /** Windows.Win32.Foundation.PWSTR */
  pszProfile: string | null | Uint8Array | Uint16Array;
  /** Windows.Win32.Foundation.PWSTR */
  pszPolicy: string | null | Uint8Array | Uint16Array;
  /** Windows.Win32.Foundation.PWSTR */
  pszNetworkDefaultUserProfile: string | null | Uint8Array | Uint16Array;
  /** Windows.Win32.Foundation.PWSTR */
  pszServerName: string | null | Uint8Array | Uint16Array;
  /** Windows.Win32.Foundation.PWSTR */
  pszEnvironment: string | null | Uint8Array | Uint16Array;
}

export const sizeofWLX_PROFILE_V2_0 = 48;

export function allocWLX_PROFILE_V2_0(data?: Partial<WLX_PROFILE_V2_0>): Uint8Array {
  const buf = new Uint8Array(sizeofWLX_PROFILE_V2_0);
  const view = new DataView(buf.buffer);
  // 0x00: u32
  if (data?.dwType !== undefined) view.setUint32(0, Number(data.dwType), true);
  // 0x04: pad4
  // 0x08: buffer
  if (data?.pszProfile !== undefined) {
    (buf as any)._f8 = util.pwstrToFfi(data.pszProfile);
    view.setBigUint64(8, (buf as any)._f8 === null ? 0n : BigInt(Deno.UnsafePointer.value(Deno.UnsafePointer.of((buf as any)._f8))), true);
  }
  // 0x10: buffer
  if (data?.pszPolicy !== undefined) {
    (buf as any)._f16 = util.pwstrToFfi(data.pszPolicy);
    view.setBigUint64(16, (buf as any)._f16 === null ? 0n : BigInt(Deno.UnsafePointer.value(Deno.UnsafePointer.of((buf as any)._f16))), true);
  }
  // 0x18: buffer
  if (data?.pszNetworkDefaultUserProfile !== undefined) {
    (buf as any)._f24 = util.pwstrToFfi(data.pszNetworkDefaultUserProfile);
    view.setBigUint64(24, (buf as any)._f24 === null ? 0n : BigInt(Deno.UnsafePointer.value(Deno.UnsafePointer.of((buf as any)._f24))), true);
  }
  // 0x20: buffer
  if (data?.pszServerName !== undefined) {
    (buf as any)._f32 = util.pwstrToFfi(data.pszServerName);
    view.setBigUint64(32, (buf as any)._f32 === null ? 0n : BigInt(Deno.UnsafePointer.value(Deno.UnsafePointer.of((buf as any)._f32))), true);
  }
  // 0x28: buffer
  if (data?.pszEnvironment !== undefined) {
    (buf as any)._f40 = util.pwstrToFfi(data.pszEnvironment);
    view.setBigUint64(40, (buf as any)._f40 === null ? 0n : BigInt(Deno.UnsafePointer.value(Deno.UnsafePointer.of((buf as any)._f40))), true);
  }
  return buf;
}

export class WLX_PROFILE_V2_0View {
  private readonly view: DataView;
  constructor(private readonly buf: Uint8Array) {
    this.view = new DataView(buf.buffer);
  }

  get buffer(): Uint8Array {
    return this.buf;
  }

  // 0x00: u32
  get dwType(): number {
    return this.view.getUint32(0, true);
  }

  // 0x04: pad4

  // 0x08: buffer
  get pszProfile(): Uint8Array | Deno.PointerValue {
    const ptr = this.view.getBigUint64(8, true);
    return Deno.UnsafePointer.create(ptr);
  }

  // 0x10: buffer
  get pszPolicy(): Uint8Array | Deno.PointerValue {
    const ptr = this.view.getBigUint64(16, true);
    return Deno.UnsafePointer.create(ptr);
  }

  // 0x18: buffer
  get pszNetworkDefaultUserProfile(): Uint8Array | Deno.PointerValue {
    const ptr = this.view.getBigUint64(24, true);
    return Deno.UnsafePointer.create(ptr);
  }

  // 0x20: buffer
  get pszServerName(): Uint8Array | Deno.PointerValue {
    const ptr = this.view.getBigUint64(32, true);
    return Deno.UnsafePointer.create(ptr);
  }

  // 0x28: buffer
  get pszEnvironment(): Uint8Array | Deno.PointerValue {
    const ptr = this.view.getBigUint64(40, true);
    return Deno.UnsafePointer.create(ptr);
  }

  // 0x00: u32
  set dwType(value: number) {
    this.view.setUint32(0, value, true);
  }

  // 0x04: pad4

  // 0x08: buffer
  set pszProfile(value: Uint8Array | Deno.PointerValue) {
    (this.buf as any)._f8 = value;
    this.view.setBigUint64(8, BigInt(Deno.UnsafePointer.value(util.toPointer((this.buf as any)._f8))), true);
  }

  // 0x10: buffer
  set pszPolicy(value: Uint8Array | Deno.PointerValue) {
    (this.buf as any)._f16 = value;
    this.view.setBigUint64(16, BigInt(Deno.UnsafePointer.value(util.toPointer((this.buf as any)._f16))), true);
  }

  // 0x18: buffer
  set pszNetworkDefaultUserProfile(value: Uint8Array | Deno.PointerValue) {
    (this.buf as any)._f24 = value;
    this.view.setBigUint64(24, BigInt(Deno.UnsafePointer.value(util.toPointer((this.buf as any)._f24))), true);
  }

  // 0x20: buffer
  set pszServerName(value: Uint8Array | Deno.PointerValue) {
    (this.buf as any)._f32 = value;
    this.view.setBigUint64(32, BigInt(Deno.UnsafePointer.value(util.toPointer((this.buf as any)._f32))), true);
  }

  // 0x28: buffer
  set pszEnvironment(value: Uint8Array | Deno.PointerValue) {
    (this.buf as any)._f40 = value;
    this.view.setBigUint64(40, BigInt(Deno.UnsafePointer.value(util.toPointer((this.buf as any)._f40))), true);
  }
}

/**
 * Windows.Win32.Security.WinWlx.WLX_MPR_NOTIFY_INFO (size: 32)
 */
export interface WLX_MPR_NOTIFY_INFO {
  /** Windows.Win32.Foundation.PWSTR */
  pszUserName: string | null | Uint8Array | Uint16Array;
  /** Windows.Win32.Foundation.PWSTR */
  pszDomain: string | null | Uint8Array | Uint16Array;
  /** Windows.Win32.Foundation.PWSTR */
  pszPassword: string | null | Uint8Array | Uint16Array;
  /** Windows.Win32.Foundation.PWSTR */
  pszOldPassword: string | null | Uint8Array | Uint16Array;
}

export const sizeofWLX_MPR_NOTIFY_INFO = 32;

export function allocWLX_MPR_NOTIFY_INFO(data?: Partial<WLX_MPR_NOTIFY_INFO>): Uint8Array {
  const buf = new Uint8Array(sizeofWLX_MPR_NOTIFY_INFO);
  const view = new DataView(buf.buffer);
  // 0x00: buffer
  if (data?.pszUserName !== undefined) {
    (buf as any)._f0 = util.pwstrToFfi(data.pszUserName);
    view.setBigUint64(0, (buf as any)._f0 === null ? 0n : BigInt(Deno.UnsafePointer.value(Deno.UnsafePointer.of((buf as any)._f0))), true);
  }
  // 0x08: buffer
  if (data?.pszDomain !== undefined) {
    (buf as any)._f8 = util.pwstrToFfi(data.pszDomain);
    view.setBigUint64(8, (buf as any)._f8 === null ? 0n : BigInt(Deno.UnsafePointer.value(Deno.UnsafePointer.of((buf as any)._f8))), true);
  }
  // 0x10: buffer
  if (data?.pszPassword !== undefined) {
    (buf as any)._f16 = util.pwstrToFfi(data.pszPassword);
    view.setBigUint64(16, (buf as any)._f16 === null ? 0n : BigInt(Deno.UnsafePointer.value(Deno.UnsafePointer.of((buf as any)._f16))), true);
  }
  // 0x18: buffer
  if (data?.pszOldPassword !== undefined) {
    (buf as any)._f24 = util.pwstrToFfi(data.pszOldPassword);
    view.setBigUint64(24, (buf as any)._f24 === null ? 0n : BigInt(Deno.UnsafePointer.value(Deno.UnsafePointer.of((buf as any)._f24))), true);
  }
  return buf;
}

export class WLX_MPR_NOTIFY_INFOView {
  private readonly view: DataView;
  constructor(private readonly buf: Uint8Array) {
    this.view = new DataView(buf.buffer);
  }

  get buffer(): Uint8Array {
    return this.buf;
  }

  // 0x00: buffer
  get pszUserName(): Uint8Array | Deno.PointerValue {
    const ptr = this.view.getBigUint64(0, true);
    return Deno.UnsafePointer.create(ptr);
  }

  // 0x08: buffer
  get pszDomain(): Uint8Array | Deno.PointerValue {
    const ptr = this.view.getBigUint64(8, true);
    return Deno.UnsafePointer.create(ptr);
  }

  // 0x10: buffer
  get pszPassword(): Uint8Array | Deno.PointerValue {
    const ptr = this.view.getBigUint64(16, true);
    return Deno.UnsafePointer.create(ptr);
  }

  // 0x18: buffer
  get pszOldPassword(): Uint8Array | Deno.PointerValue {
    const ptr = this.view.getBigUint64(24, true);
    return Deno.UnsafePointer.create(ptr);
  }

  // 0x00: buffer
  set pszUserName(value: Uint8Array | Deno.PointerValue) {
    (this.buf as any)._f0 = value;
    this.view.setBigUint64(0, BigInt(Deno.UnsafePointer.value(util.toPointer((this.buf as any)._f0))), true);
  }

  // 0x08: buffer
  set pszDomain(value: Uint8Array | Deno.PointerValue) {
    (this.buf as any)._f8 = value;
    this.view.setBigUint64(8, BigInt(Deno.UnsafePointer.value(util.toPointer((this.buf as any)._f8))), true);
  }

  // 0x10: buffer
  set pszPassword(value: Uint8Array | Deno.PointerValue) {
    (this.buf as any)._f16 = value;
    this.view.setBigUint64(16, BigInt(Deno.UnsafePointer.value(util.toPointer((this.buf as any)._f16))), true);
  }

  // 0x18: buffer
  set pszOldPassword(value: Uint8Array | Deno.PointerValue) {
    (this.buf as any)._f24 = value;
    this.view.setBigUint64(24, BigInt(Deno.UnsafePointer.value(util.toPointer((this.buf as any)._f24))), true);
  }
}

/**
 * Windows.Win32.Security.WinWlx.WLX_TERMINAL_SERVICES_DATA (size: 24)
 */
export interface WLX_TERMINAL_SERVICES_DATA {
  /** array */
  ProfilePath: Deno.PointerValue;
  /** array */
  HomeDir: Deno.PointerValue;
  /** array */
  HomeDirDrive: Deno.PointerValue;
}

export const sizeofWLX_TERMINAL_SERVICES_DATA = 24;

export function allocWLX_TERMINAL_SERVICES_DATA(data?: Partial<WLX_TERMINAL_SERVICES_DATA>): Uint8Array {
  const buf = new Uint8Array(sizeofWLX_TERMINAL_SERVICES_DATA);
  const view = new DataView(buf.buffer);
  // 0x00: pointer
  if (data?.ProfilePath !== undefined) view.setBigUint64(0, data.ProfilePath === null ? 0n : BigInt(Deno.UnsafePointer.value(util.toPointer(data.ProfilePath))), true);
  // 0x08: pointer
  if (data?.HomeDir !== undefined) view.setBigUint64(8, data.HomeDir === null ? 0n : BigInt(Deno.UnsafePointer.value(util.toPointer(data.HomeDir))), true);
  // 0x10: pointer
  if (data?.HomeDirDrive !== undefined) view.setBigUint64(16, data.HomeDirDrive === null ? 0n : BigInt(Deno.UnsafePointer.value(util.toPointer(data.HomeDirDrive))), true);
  return buf;
}

export class WLX_TERMINAL_SERVICES_DATAView {
  private readonly view: DataView;
  constructor(private readonly buf: Uint8Array) {
    this.view = new DataView(buf.buffer);
  }

  get buffer(): Uint8Array {
    return this.buf;
  }

  // 0x00: pointer
  get ProfilePath(): Uint8Array | Deno.PointerValue {
    const ptr = this.view.getBigUint64(0, true);
    return Deno.UnsafePointer.create(ptr);
  }

  // 0x08: pointer
  get HomeDir(): Uint8Array | Deno.PointerValue {
    const ptr = this.view.getBigUint64(8, true);
    return Deno.UnsafePointer.create(ptr);
  }

  // 0x10: pointer
  get HomeDirDrive(): Uint8Array | Deno.PointerValue {
    const ptr = this.view.getBigUint64(16, true);
    return Deno.UnsafePointer.create(ptr);
  }

  // 0x00: pointer
  set ProfilePath(value: Uint8Array | Deno.PointerValue) {
    this.view.setBigUint64(0, BigInt(Deno.UnsafePointer.value(util.toPointer(value))), true);
  }

  // 0x08: pointer
  set HomeDir(value: Uint8Array | Deno.PointerValue) {
    this.view.setBigUint64(8, BigInt(Deno.UnsafePointer.value(util.toPointer(value))), true);
  }

  // 0x10: pointer
  set HomeDirDrive(value: Uint8Array | Deno.PointerValue) {
    this.view.setBigUint64(16, BigInt(Deno.UnsafePointer.value(util.toPointer(value))), true);
  }
}

export type BOOL = number;

/**
 * Windows.Win32.Security.WinWlx.WLX_CLIENT_CREDENTIALS_INFO_V1_0 (size: 40)
 */
export interface WLX_CLIENT_CREDENTIALS_INFO_V1_0 {
  /** u32 */
  dwType: number;
  /** Windows.Win32.Foundation.PWSTR */
  pszUserName: string | null | Uint8Array | Uint16Array;
  /** Windows.Win32.Foundation.PWSTR */
  pszDomain: string | null | Uint8Array | Uint16Array;
  /** Windows.Win32.Foundation.PWSTR */
  pszPassword: string | null | Uint8Array | Uint16Array;
  /** Windows.Win32.Foundation.BOOL */
  fPromptForPassword: boolean;
}

export const sizeofWLX_CLIENT_CREDENTIALS_INFO_V1_0 = 40;

export function allocWLX_CLIENT_CREDENTIALS_INFO_V1_0(data?: Partial<WLX_CLIENT_CREDENTIALS_INFO_V1_0>): Uint8Array {
  const buf = new Uint8Array(sizeofWLX_CLIENT_CREDENTIALS_INFO_V1_0);
  const view = new DataView(buf.buffer);
  // 0x00: u32
  if (data?.dwType !== undefined) view.setUint32(0, Number(data.dwType), true);
  // 0x04: pad4
  // 0x08: buffer
  if (data?.pszUserName !== undefined) {
    (buf as any)._f8 = util.pwstrToFfi(data.pszUserName);
    view.setBigUint64(8, (buf as any)._f8 === null ? 0n : BigInt(Deno.UnsafePointer.value(Deno.UnsafePointer.of((buf as any)._f8))), true);
  }
  // 0x10: buffer
  if (data?.pszDomain !== undefined) {
    (buf as any)._f16 = util.pwstrToFfi(data.pszDomain);
    view.setBigUint64(16, (buf as any)._f16 === null ? 0n : BigInt(Deno.UnsafePointer.value(Deno.UnsafePointer.of((buf as any)._f16))), true);
  }
  // 0x18: buffer
  if (data?.pszPassword !== undefined) {
    (buf as any)._f24 = util.pwstrToFfi(data.pszPassword);
    view.setBigUint64(24, (buf as any)._f24 === null ? 0n : BigInt(Deno.UnsafePointer.value(Deno.UnsafePointer.of((buf as any)._f24))), true);
  }
  // 0x20: i32
  if (data?.fPromptForPassword !== undefined) view.setInt32(32, Number(data.fPromptForPassword), true);
  // 0x24: pad4
  return buf;
}

export class WLX_CLIENT_CREDENTIALS_INFO_V1_0View {
  private readonly view: DataView;
  constructor(private readonly buf: Uint8Array) {
    this.view = new DataView(buf.buffer);
  }

  get buffer(): Uint8Array {
    return this.buf;
  }

  // 0x00: u32
  get dwType(): number {
    return this.view.getUint32(0, true);
  }

  // 0x04: pad4

  // 0x08: buffer
  get pszUserName(): Uint8Array | Deno.PointerValue {
    const ptr = this.view.getBigUint64(8, true);
    return Deno.UnsafePointer.create(ptr);
  }

  // 0x10: buffer
  get pszDomain(): Uint8Array | Deno.PointerValue {
    const ptr = this.view.getBigUint64(16, true);
    return Deno.UnsafePointer.create(ptr);
  }

  // 0x18: buffer
  get pszPassword(): Uint8Array | Deno.PointerValue {
    const ptr = this.view.getBigUint64(24, true);
    return Deno.UnsafePointer.create(ptr);
  }

  // 0x20: i32
  get fPromptForPassword(): number {
    return this.view.getInt32(32, true);
  }

  // 0x24: pad4

  // 0x00: u32
  set dwType(value: number) {
    this.view.setUint32(0, value, true);
  }

  // 0x04: pad4

  // 0x08: buffer
  set pszUserName(value: Uint8Array | Deno.PointerValue) {
    (this.buf as any)._f8 = value;
    this.view.setBigUint64(8, BigInt(Deno.UnsafePointer.value(util.toPointer((this.buf as any)._f8))), true);
  }

  // 0x10: buffer
  set pszDomain(value: Uint8Array | Deno.PointerValue) {
    (this.buf as any)._f16 = value;
    this.view.setBigUint64(16, BigInt(Deno.UnsafePointer.value(util.toPointer((this.buf as any)._f16))), true);
  }

  // 0x18: buffer
  set pszPassword(value: Uint8Array | Deno.PointerValue) {
    (this.buf as any)._f24 = value;
    this.view.setBigUint64(24, BigInt(Deno.UnsafePointer.value(util.toPointer((this.buf as any)._f24))), true);
  }

  // 0x20: i32
  set fPromptForPassword(value: number) {
    this.view.setInt32(32, value, true);
  }

  // 0x24: pad4
}

/**
 * Windows.Win32.Security.WinWlx.WLX_CLIENT_CREDENTIALS_INFO_V2_0 (size: 40)
 */
export interface WLX_CLIENT_CREDENTIALS_INFO_V2_0 {
  /** u32 */
  dwType: number;
  /** Windows.Win32.Foundation.PWSTR */
  pszUserName: string | null | Uint8Array | Uint16Array;
  /** Windows.Win32.Foundation.PWSTR */
  pszDomain: string | null | Uint8Array | Uint16Array;
  /** Windows.Win32.Foundation.PWSTR */
  pszPassword: string | null | Uint8Array | Uint16Array;
  /** Windows.Win32.Foundation.BOOL */
  fPromptForPassword: boolean;
  /** Windows.Win32.Foundation.BOOL */
  fDisconnectOnLogonFailure: boolean;
}

export const sizeofWLX_CLIENT_CREDENTIALS_INFO_V2_0 = 40;

export function allocWLX_CLIENT_CREDENTIALS_INFO_V2_0(data?: Partial<WLX_CLIENT_CREDENTIALS_INFO_V2_0>): Uint8Array {
  const buf = new Uint8Array(sizeofWLX_CLIENT_CREDENTIALS_INFO_V2_0);
  const view = new DataView(buf.buffer);
  // 0x00: u32
  if (data?.dwType !== undefined) view.setUint32(0, Number(data.dwType), true);
  // 0x04: pad4
  // 0x08: buffer
  if (data?.pszUserName !== undefined) {
    (buf as any)._f8 = util.pwstrToFfi(data.pszUserName);
    view.setBigUint64(8, (buf as any)._f8 === null ? 0n : BigInt(Deno.UnsafePointer.value(Deno.UnsafePointer.of((buf as any)._f8))), true);
  }
  // 0x10: buffer
  if (data?.pszDomain !== undefined) {
    (buf as any)._f16 = util.pwstrToFfi(data.pszDomain);
    view.setBigUint64(16, (buf as any)._f16 === null ? 0n : BigInt(Deno.UnsafePointer.value(Deno.UnsafePointer.of((buf as any)._f16))), true);
  }
  // 0x18: buffer
  if (data?.pszPassword !== undefined) {
    (buf as any)._f24 = util.pwstrToFfi(data.pszPassword);
    view.setBigUint64(24, (buf as any)._f24 === null ? 0n : BigInt(Deno.UnsafePointer.value(Deno.UnsafePointer.of((buf as any)._f24))), true);
  }
  // 0x20: i32
  if (data?.fPromptForPassword !== undefined) view.setInt32(32, Number(data.fPromptForPassword), true);
  // 0x24: i32
  if (data?.fDisconnectOnLogonFailure !== undefined) view.setInt32(36, Number(data.fDisconnectOnLogonFailure), true);
  return buf;
}

export class WLX_CLIENT_CREDENTIALS_INFO_V2_0View {
  private readonly view: DataView;
  constructor(private readonly buf: Uint8Array) {
    this.view = new DataView(buf.buffer);
  }

  get buffer(): Uint8Array {
    return this.buf;
  }

  // 0x00: u32
  get dwType(): number {
    return this.view.getUint32(0, true);
  }

  // 0x04: pad4

  // 0x08: buffer
  get pszUserName(): Uint8Array | Deno.PointerValue {
    const ptr = this.view.getBigUint64(8, true);
    return Deno.UnsafePointer.create(ptr);
  }

  // 0x10: buffer
  get pszDomain(): Uint8Array | Deno.PointerValue {
    const ptr = this.view.getBigUint64(16, true);
    return Deno.UnsafePointer.create(ptr);
  }

  // 0x18: buffer
  get pszPassword(): Uint8Array | Deno.PointerValue {
    const ptr = this.view.getBigUint64(24, true);
    return Deno.UnsafePointer.create(ptr);
  }

  // 0x20: i32
  get fPromptForPassword(): number {
    return this.view.getInt32(32, true);
  }

  // 0x24: i32
  get fDisconnectOnLogonFailure(): number {
    return this.view.getInt32(36, true);
  }

  // 0x00: u32
  set dwType(value: number) {
    this.view.setUint32(0, value, true);
  }

  // 0x04: pad4

  // 0x08: buffer
  set pszUserName(value: Uint8Array | Deno.PointerValue) {
    (this.buf as any)._f8 = value;
    this.view.setBigUint64(8, BigInt(Deno.UnsafePointer.value(util.toPointer((this.buf as any)._f8))), true);
  }

  // 0x10: buffer
  set pszDomain(value: Uint8Array | Deno.PointerValue) {
    (this.buf as any)._f16 = value;
    this.view.setBigUint64(16, BigInt(Deno.UnsafePointer.value(util.toPointer((this.buf as any)._f16))), true);
  }

  // 0x18: buffer
  set pszPassword(value: Uint8Array | Deno.PointerValue) {
    (this.buf as any)._f24 = value;
    this.view.setBigUint64(24, BigInt(Deno.UnsafePointer.value(util.toPointer((this.buf as any)._f24))), true);
  }

  // 0x20: i32
  set fPromptForPassword(value: number) {
    this.view.setInt32(32, value, true);
  }

  // 0x24: i32
  set fDisconnectOnLogonFailure(value: number) {
    this.view.setInt32(36, value, true);
  }
}

export type HANDLE = Deno.PointerValue;

/**
 * Windows.Win32.Foundation.LUID (size: 8)
 */
export interface LUID {
  /** u32 */
  LowPart: number;
  /** i32 */
  HighPart: number;
}

export const sizeofLUID = 8;

export function allocLUID(data?: Partial<LUID>): Uint8Array {
  const buf = new Uint8Array(sizeofLUID);
  const view = new DataView(buf.buffer);
  // 0x00: u32
  if (data?.LowPart !== undefined) view.setUint32(0, Number(data.LowPart), true);
  // 0x04: i32
  if (data?.HighPart !== undefined) view.setInt32(4, Number(data.HighPart), true);
  return buf;
}

export class LUIDView {
  private readonly view: DataView;
  constructor(private readonly buf: Uint8Array) {
    this.view = new DataView(buf.buffer);
  }

  get buffer(): Uint8Array {
    return this.buf;
  }

  // 0x00: u32
  get LowPart(): number {
    return this.view.getUint32(0, true);
  }

  // 0x04: i32
  get HighPart(): number {
    return this.view.getInt32(4, true);
  }

  // 0x00: u32
  set LowPart(value: number) {
    this.view.setUint32(0, value, true);
  }

  // 0x04: i32
  set HighPart(value: number) {
    this.view.setInt32(4, value, true);
  }
}

/**
 * _Anonymous_e__Struct (size: 16)
 */
export interface _Anonymous_e__Struct {
  /** u64 */
  Alignment: Deno.PointerValue;
  /** u64 */
  Region: Deno.PointerValue;
}

export const sizeof_Anonymous_e__Struct = 16;

export function alloc_Anonymous_e__Struct(data?: Partial<_Anonymous_e__Struct>): Uint8Array {
  const buf = new Uint8Array(sizeof_Anonymous_e__Struct);
  const view = new DataView(buf.buffer);
  // 0x00: u64
  if (data?.Alignment !== undefined) view.setBigUint64(0, BigInt(data.Alignment), true);
  // 0x08: u64
  if (data?.Region !== undefined) view.setBigUint64(8, BigInt(data.Region), true);
  return buf;
}

export class _Anonymous_e__StructView {
  private readonly view: DataView;
  constructor(private readonly buf: Uint8Array) {
    this.view = new DataView(buf.buffer);
  }

  get buffer(): Uint8Array {
    return this.buf;
  }

  // 0x00: u64
  get Alignment(): Deno.PointerValue {
    return Number(this.view.getBigUint64(0, true));
  }

  // 0x08: u64
  get Region(): Deno.PointerValue {
    return Number(this.view.getBigUint64(8, true));
  }

  // 0x00: u64
  set Alignment(value: Deno.PointerValue) {
    this.view.setBigUint64(0, BigInt(value), true);
  }

  // 0x08: u64
  set Region(value: Deno.PointerValue) {
    this.view.setBigUint64(8, BigInt(value), true);
  }
}

/**
 * _u_e__Struct (size: 16)
 */
export interface _u_e__Struct {
  /** u32 */
  dwValue: number;
  /** Windows.Win32.Foundation.PWSTR */
  pwszName: string | null | Uint8Array | Uint16Array;
}

export const sizeof_u_e__Struct = 16;

export function alloc_u_e__Struct(data?: Partial<_u_e__Struct>): Uint8Array {
  const buf = new Uint8Array(sizeof_u_e__Struct);
  const view = new DataView(buf.buffer);
  // 0x00: u32
  if (data?.dwValue !== undefined) view.setUint32(0, Number(data.dwValue), true);
  // 0x04: pad4
  // 0x08: buffer
  if (data?.pwszName !== undefined) {
    (buf as any)._f8 = util.pwstrToFfi(data.pwszName);
    view.setBigUint64(8, (buf as any)._f8 === null ? 0n : BigInt(Deno.UnsafePointer.value(Deno.UnsafePointer.of((buf as any)._f8))), true);
  }
  return buf;
}

export class _u_e__StructView {
  private readonly view: DataView;
  constructor(private readonly buf: Uint8Array) {
    this.view = new DataView(buf.buffer);
  }

  get buffer(): Uint8Array {
    return this.buf;
  }

  // 0x00: u32
  get dwValue(): number {
    return this.view.getUint32(0, true);
  }

  // 0x04: pad4

  // 0x08: buffer
  get pwszName(): Uint8Array | Deno.PointerValue {
    const ptr = this.view.getBigUint64(8, true);
    return Deno.UnsafePointer.create(ptr);
  }

  // 0x00: u32
  set dwValue(value: number) {
    this.view.setUint32(0, value, true);
  }

  // 0x04: pad4

  // 0x08: buffer
  set pwszName(value: Uint8Array | Deno.PointerValue) {
    (this.buf as any)._f8 = value;
    this.view.setBigUint64(8, BigInt(Deno.UnsafePointer.value(util.toPointer((this.buf as any)._f8))), true);
  }
}

/**
 * Windows.Win32.Foundation.LARGE_INTEGER (size: 24)
 */
export interface LARGE_INTEGER {
  /** _Anonymous_e__Struct */
  Anonymous: Uint8Array | Deno.PointerValue;
  /** _u_e__Struct */
  u: Uint8Array | Deno.PointerValue;
  /** i64 */
  QuadPart: Deno.PointerValue;
}

export const sizeofLARGE_INTEGER = 24;

export function allocLARGE_INTEGER(data?: Partial<LARGE_INTEGER>): Uint8Array {
  const buf = new Uint8Array(sizeofLARGE_INTEGER);
  const view = new DataView(buf.buffer);
  // 0x00: pointer
  if (data?.Anonymous !== undefined) view.setBigUint64(0, data.Anonymous === null ? 0n : BigInt(Deno.UnsafePointer.value(util.toPointer(data.Anonymous))), true);
  // 0x08: pointer
  if (data?.u !== undefined) view.setBigUint64(8, data.u === null ? 0n : BigInt(Deno.UnsafePointer.value(util.toPointer(data.u))), true);
  // 0x10: i64
  if (data?.QuadPart !== undefined) view.setBigInt64(16, BigInt(data.QuadPart), true);
  return buf;
}

export class LARGE_INTEGERView {
  private readonly view: DataView;
  constructor(private readonly buf: Uint8Array) {
    this.view = new DataView(buf.buffer);
  }

  get buffer(): Uint8Array {
    return this.buf;
  }

  // 0x00: pointer
  get Anonymous(): Uint8Array | Deno.PointerValue {
    const ptr = this.view.getBigUint64(0, true);
    return Deno.UnsafePointer.create(ptr);
  }

  // 0x08: pointer
  get u(): Uint8Array | Deno.PointerValue {
    const ptr = this.view.getBigUint64(8, true);
    return Deno.UnsafePointer.create(ptr);
  }

  // 0x10: i64
  get QuadPart(): Deno.PointerValue {
    return Number(this.view.getBigInt64(16, true));
  }

  // 0x00: pointer
  set Anonymous(value: Uint8Array | Deno.PointerValue) {
    this.view.setBigUint64(0, BigInt(Deno.UnsafePointer.value(util.toPointer(value))), true);
  }

  // 0x08: pointer
  set u(value: Uint8Array | Deno.PointerValue) {
    this.view.setBigUint64(8, BigInt(Deno.UnsafePointer.value(util.toPointer(value))), true);
  }

  // 0x10: i64
  set QuadPart(value: Deno.PointerValue) {
    this.view.setBigInt64(16, BigInt(value), true);
  }
}

/**
 * Windows.Win32.Security.QUOTA_LIMITS (size: 48)
 */
export interface QUOTA_LIMITS {
  /** usize */
  PagedPoolLimit: Deno.PointerValue;
  /** usize */
  NonPagedPoolLimit: Deno.PointerValue;
  /** usize */
  MinimumWorkingSetSize: Deno.PointerValue;
  /** usize */
  MaximumWorkingSetSize: Deno.PointerValue;
  /** usize */
  PagefileLimit: Deno.PointerValue;
  /** Windows.Win32.Foundation.LARGE_INTEGER */
  TimeLimit: Uint8Array | Deno.PointerValue;
}

export const sizeofQUOTA_LIMITS = 48;

export function allocQUOTA_LIMITS(data?: Partial<QUOTA_LIMITS>): Uint8Array {
  const buf = new Uint8Array(sizeofQUOTA_LIMITS);
  const view = new DataView(buf.buffer);
  // 0x00: usize
  if (data?.PagedPoolLimit !== undefined) view.setBigUint64(0, BigInt(data.PagedPoolLimit), true);
  // 0x08: usize
  if (data?.NonPagedPoolLimit !== undefined) view.setBigUint64(8, BigInt(data.NonPagedPoolLimit), true);
  // 0x10: usize
  if (data?.MinimumWorkingSetSize !== undefined) view.setBigUint64(16, BigInt(data.MinimumWorkingSetSize), true);
  // 0x18: usize
  if (data?.MaximumWorkingSetSize !== undefined) view.setBigUint64(24, BigInt(data.MaximumWorkingSetSize), true);
  // 0x20: usize
  if (data?.PagefileLimit !== undefined) view.setBigUint64(32, BigInt(data.PagefileLimit), true);
  // 0x28: pointer
  if (data?.TimeLimit !== undefined) view.setBigUint64(40, data.TimeLimit === null ? 0n : BigInt(Deno.UnsafePointer.value(util.toPointer(data.TimeLimit))), true);
  return buf;
}

export class QUOTA_LIMITSView {
  private readonly view: DataView;
  constructor(private readonly buf: Uint8Array) {
    this.view = new DataView(buf.buffer);
  }

  get buffer(): Uint8Array {
    return this.buf;
  }

  // 0x00: usize
  get PagedPoolLimit(): Deno.PointerValue {
    return Number(this.view.getBigUint64(0, true));
  }

  // 0x08: usize
  get NonPagedPoolLimit(): Deno.PointerValue {
    return Number(this.view.getBigUint64(8, true));
  }

  // 0x10: usize
  get MinimumWorkingSetSize(): Deno.PointerValue {
    return Number(this.view.getBigUint64(16, true));
  }

  // 0x18: usize
  get MaximumWorkingSetSize(): Deno.PointerValue {
    return Number(this.view.getBigUint64(24, true));
  }

  // 0x20: usize
  get PagefileLimit(): Deno.PointerValue {
    return Number(this.view.getBigUint64(32, true));
  }

  // 0x28: pointer
  get TimeLimit(): Uint8Array | Deno.PointerValue {
    const ptr = this.view.getBigUint64(40, true);
    return Deno.UnsafePointer.create(ptr);
  }

  // 0x00: usize
  set PagedPoolLimit(value: Deno.PointerValue) {
    this.view.setBigUint64(0, BigInt(value), true);
  }

  // 0x08: usize
  set NonPagedPoolLimit(value: Deno.PointerValue) {
    this.view.setBigUint64(8, BigInt(value), true);
  }

  // 0x10: usize
  set MinimumWorkingSetSize(value: Deno.PointerValue) {
    this.view.setBigUint64(16, BigInt(value), true);
  }

  // 0x18: usize
  set MaximumWorkingSetSize(value: Deno.PointerValue) {
    this.view.setBigUint64(24, BigInt(value), true);
  }

  // 0x20: usize
  set PagefileLimit(value: Deno.PointerValue) {
    this.view.setBigUint64(32, BigInt(value), true);
  }

  // 0x28: pointer
  set TimeLimit(value: Uint8Array | Deno.PointerValue) {
    this.view.setBigUint64(40, BigInt(Deno.UnsafePointer.value(util.toPointer(value))), true);
  }
}

/**
 * Windows.Win32.Security.WinWlx.WLX_CONSOLESWITCH_CREDENTIALS_INFO_V1_0 (size: 184)
 */
export interface WLX_CONSOLESWITCH_CREDENTIALS_INFO_V1_0 {
  /** u32 */
  dwType: number;
  /** Windows.Win32.Foundation.HANDLE */
  UserToken: Uint8Array | Deno.PointerValue;
  /** Windows.Win32.Foundation.LUID */
  LogonId: Uint8Array | Deno.PointerValue;
  /** Windows.Win32.Security.QUOTA_LIMITS */
  Quotas: Uint8Array | Deno.PointerValue;
  /** Windows.Win32.Foundation.PWSTR */
  UserName: string | null | Uint8Array | Uint16Array;
  /** Windows.Win32.Foundation.PWSTR */
  Domain: string | null | Uint8Array | Uint16Array;
  /** Windows.Win32.Foundation.LARGE_INTEGER */
  LogonTime: Uint8Array | Deno.PointerValue;
  /** Windows.Win32.Foundation.BOOL */
  SmartCardLogon: boolean;
  /** u32 */
  ProfileLength: number;
  /** u32 */
  MessageType: number;
  /** u16 */
  LogonCount: number;
  /** u16 */
  BadPasswordCount: number;
  /** Windows.Win32.Foundation.LARGE_INTEGER */
  ProfileLogonTime: Uint8Array | Deno.PointerValue;
  /** Windows.Win32.Foundation.LARGE_INTEGER */
  LogoffTime: Uint8Array | Deno.PointerValue;
  /** Windows.Win32.Foundation.LARGE_INTEGER */
  KickOffTime: Uint8Array | Deno.PointerValue;
  /** Windows.Win32.Foundation.LARGE_INTEGER */
  PasswordLastSet: Uint8Array | Deno.PointerValue;
  /** Windows.Win32.Foundation.LARGE_INTEGER */
  PasswordCanChange: Uint8Array | Deno.PointerValue;
  /** Windows.Win32.Foundation.LARGE_INTEGER */
  PasswordMustChange: Uint8Array | Deno.PointerValue;
  /** Windows.Win32.Foundation.PWSTR */
  LogonScript: string | null | Uint8Array | Uint16Array;
  /** Windows.Win32.Foundation.PWSTR */
  HomeDirectory: string | null | Uint8Array | Uint16Array;
  /** Windows.Win32.Foundation.PWSTR */
  FullName: string | null | Uint8Array | Uint16Array;
  /** Windows.Win32.Foundation.PWSTR */
  ProfilePath: string | null | Uint8Array | Uint16Array;
  /** Windows.Win32.Foundation.PWSTR */
  HomeDirectoryDrive: string | null | Uint8Array | Uint16Array;
  /** Windows.Win32.Foundation.PWSTR */
  LogonServer: string | null | Uint8Array | Uint16Array;
  /** u32 */
  UserFlags: number;
  /** u32 */
  PrivateDataLen: number;
  /** ptr */
  PrivateData: Deno.PointerValue | Uint8Array;
}

export const sizeofWLX_CONSOLESWITCH_CREDENTIALS_INFO_V1_0 = 184;

export function allocWLX_CONSOLESWITCH_CREDENTIALS_INFO_V1_0(data?: Partial<WLX_CONSOLESWITCH_CREDENTIALS_INFO_V1_0>): Uint8Array {
  const buf = new Uint8Array(sizeofWLX_CONSOLESWITCH_CREDENTIALS_INFO_V1_0);
  const view = new DataView(buf.buffer);
  // 0x00: u32
  if (data?.dwType !== undefined) view.setUint32(0, Number(data.dwType), true);
  // 0x04: pad4
  // 0x08: pointer
  if (data?.UserToken !== undefined) view.setBigUint64(8, data.UserToken === null ? 0n : BigInt(Deno.UnsafePointer.value(util.toPointer(data.UserToken))), true);
  // 0x10: pointer
  if (data?.LogonId !== undefined) view.setBigUint64(16, data.LogonId === null ? 0n : BigInt(Deno.UnsafePointer.value(util.toPointer(data.LogonId))), true);
  // 0x18: pointer
  if (data?.Quotas !== undefined) view.setBigUint64(24, data.Quotas === null ? 0n : BigInt(Deno.UnsafePointer.value(util.toPointer(data.Quotas))), true);
  // 0x20: buffer
  if (data?.UserName !== undefined) {
    (buf as any)._f32 = util.pwstrToFfi(data.UserName);
    view.setBigUint64(32, (buf as any)._f32 === null ? 0n : BigInt(Deno.UnsafePointer.value(Deno.UnsafePointer.of((buf as any)._f32))), true);
  }
  // 0x28: buffer
  if (data?.Domain !== undefined) {
    (buf as any)._f40 = util.pwstrToFfi(data.Domain);
    view.setBigUint64(40, (buf as any)._f40 === null ? 0n : BigInt(Deno.UnsafePointer.value(Deno.UnsafePointer.of((buf as any)._f40))), true);
  }
  // 0x30: pointer
  if (data?.LogonTime !== undefined) view.setBigUint64(48, data.LogonTime === null ? 0n : BigInt(Deno.UnsafePointer.value(util.toPointer(data.LogonTime))), true);
  // 0x38: i32
  if (data?.SmartCardLogon !== undefined) view.setInt32(56, Number(data.SmartCardLogon), true);
  // 0x3c: u32
  if (data?.ProfileLength !== undefined) view.setUint32(60, Number(data.ProfileLength), true);
  // 0x40: u32
  if (data?.MessageType !== undefined) view.setUint32(64, Number(data.MessageType), true);
  // 0x44: u16
  if (data?.LogonCount !== undefined) view.setUint16(68, Number(data.LogonCount), true);
  // 0x46: u16
  if (data?.BadPasswordCount !== undefined) view.setUint16(70, Number(data.BadPasswordCount), true);
  // 0x48: pointer
  if (data?.ProfileLogonTime !== undefined) view.setBigUint64(72, data.ProfileLogonTime === null ? 0n : BigInt(Deno.UnsafePointer.value(util.toPointer(data.ProfileLogonTime))), true);
  // 0x50: pointer
  if (data?.LogoffTime !== undefined) view.setBigUint64(80, data.LogoffTime === null ? 0n : BigInt(Deno.UnsafePointer.value(util.toPointer(data.LogoffTime))), true);
  // 0x58: pointer
  if (data?.KickOffTime !== undefined) view.setBigUint64(88, data.KickOffTime === null ? 0n : BigInt(Deno.UnsafePointer.value(util.toPointer(data.KickOffTime))), true);
  // 0x60: pointer
  if (data?.PasswordLastSet !== undefined) view.setBigUint64(96, data.PasswordLastSet === null ? 0n : BigInt(Deno.UnsafePointer.value(util.toPointer(data.PasswordLastSet))), true);
  // 0x68: pointer
  if (data?.PasswordCanChange !== undefined) view.setBigUint64(104, data.PasswordCanChange === null ? 0n : BigInt(Deno.UnsafePointer.value(util.toPointer(data.PasswordCanChange))), true);
  // 0x70: pointer
  if (data?.PasswordMustChange !== undefined) view.setBigUint64(112, data.PasswordMustChange === null ? 0n : BigInt(Deno.UnsafePointer.value(util.toPointer(data.PasswordMustChange))), true);
  // 0x78: buffer
  if (data?.LogonScript !== undefined) {
    (buf as any)._f120 = util.pwstrToFfi(data.LogonScript);
    view.setBigUint64(120, (buf as any)._f120 === null ? 0n : BigInt(Deno.UnsafePointer.value(Deno.UnsafePointer.of((buf as any)._f120))), true);
  }
  // 0x80: buffer
  if (data?.HomeDirectory !== undefined) {
    (buf as any)._f128 = util.pwstrToFfi(data.HomeDirectory);
    view.setBigUint64(128, (buf as any)._f128 === null ? 0n : BigInt(Deno.UnsafePointer.value(Deno.UnsafePointer.of((buf as any)._f128))), true);
  }
  // 0x88: buffer
  if (data?.FullName !== undefined) {
    (buf as any)._f136 = util.pwstrToFfi(data.FullName);
    view.setBigUint64(136, (buf as any)._f136 === null ? 0n : BigInt(Deno.UnsafePointer.value(Deno.UnsafePointer.of((buf as any)._f136))), true);
  }
  // 0x90: buffer
  if (data?.ProfilePath !== undefined) {
    (buf as any)._f144 = util.pwstrToFfi(data.ProfilePath);
    view.setBigUint64(144, (buf as any)._f144 === null ? 0n : BigInt(Deno.UnsafePointer.value(Deno.UnsafePointer.of((buf as any)._f144))), true);
  }
  // 0x98: buffer
  if (data?.HomeDirectoryDrive !== undefined) {
    (buf as any)._f152 = util.pwstrToFfi(data.HomeDirectoryDrive);
    view.setBigUint64(152, (buf as any)._f152 === null ? 0n : BigInt(Deno.UnsafePointer.value(Deno.UnsafePointer.of((buf as any)._f152))), true);
  }
  // 0xa0: buffer
  if (data?.LogonServer !== undefined) {
    (buf as any)._f160 = util.pwstrToFfi(data.LogonServer);
    view.setBigUint64(160, (buf as any)._f160 === null ? 0n : BigInt(Deno.UnsafePointer.value(Deno.UnsafePointer.of((buf as any)._f160))), true);
  }
  // 0xa8: u32
  if (data?.UserFlags !== undefined) view.setUint32(168, Number(data.UserFlags), true);
  // 0xac: u32
  if (data?.PrivateDataLen !== undefined) view.setUint32(172, Number(data.PrivateDataLen), true);
  // 0xb0: pointer
  if (data?.PrivateData !== undefined) view.setBigUint64(176, data.PrivateData === null ? 0n : BigInt(Deno.UnsafePointer.value(util.toPointer(data.PrivateData))), true);
  return buf;
}

export class WLX_CONSOLESWITCH_CREDENTIALS_INFO_V1_0View {
  private readonly view: DataView;
  constructor(private readonly buf: Uint8Array) {
    this.view = new DataView(buf.buffer);
  }

  get buffer(): Uint8Array {
    return this.buf;
  }

  // 0x00: u32
  get dwType(): number {
    return this.view.getUint32(0, true);
  }

  // 0x04: pad4

  // 0x08: pointer
  get UserToken(): Uint8Array | Deno.PointerValue {
    const ptr = this.view.getBigUint64(8, true);
    return Deno.UnsafePointer.create(ptr);
  }

  // 0x10: pointer
  get LogonId(): Uint8Array | Deno.PointerValue {
    const ptr = this.view.getBigUint64(16, true);
    return Deno.UnsafePointer.create(ptr);
  }

  // 0x18: pointer
  get Quotas(): Uint8Array | Deno.PointerValue {
    const ptr = this.view.getBigUint64(24, true);
    return Deno.UnsafePointer.create(ptr);
  }

  // 0x20: buffer
  get UserName(): Uint8Array | Deno.PointerValue {
    const ptr = this.view.getBigUint64(32, true);
    return Deno.UnsafePointer.create(ptr);
  }

  // 0x28: buffer
  get Domain(): Uint8Array | Deno.PointerValue {
    const ptr = this.view.getBigUint64(40, true);
    return Deno.UnsafePointer.create(ptr);
  }

  // 0x30: pointer
  get LogonTime(): Uint8Array | Deno.PointerValue {
    const ptr = this.view.getBigUint64(48, true);
    return Deno.UnsafePointer.create(ptr);
  }

  // 0x38: i32
  get SmartCardLogon(): number {
    return this.view.getInt32(56, true);
  }

  // 0x3c: u32
  get ProfileLength(): number {
    return this.view.getUint32(60, true);
  }

  // 0x40: u32
  get MessageType(): number {
    return this.view.getUint32(64, true);
  }

  // 0x44: u16
  get LogonCount(): number {
    return this.view.getUint16(68, true);
  }

  // 0x46: u16
  get BadPasswordCount(): number {
    return this.view.getUint16(70, true);
  }

  // 0x48: pointer
  get ProfileLogonTime(): Uint8Array | Deno.PointerValue {
    const ptr = this.view.getBigUint64(72, true);
    return Deno.UnsafePointer.create(ptr);
  }

  // 0x50: pointer
  get LogoffTime(): Uint8Array | Deno.PointerValue {
    const ptr = this.view.getBigUint64(80, true);
    return Deno.UnsafePointer.create(ptr);
  }

  // 0x58: pointer
  get KickOffTime(): Uint8Array | Deno.PointerValue {
    const ptr = this.view.getBigUint64(88, true);
    return Deno.UnsafePointer.create(ptr);
  }

  // 0x60: pointer
  get PasswordLastSet(): Uint8Array | Deno.PointerValue {
    const ptr = this.view.getBigUint64(96, true);
    return Deno.UnsafePointer.create(ptr);
  }

  // 0x68: pointer
  get PasswordCanChange(): Uint8Array | Deno.PointerValue {
    const ptr = this.view.getBigUint64(104, true);
    return Deno.UnsafePointer.create(ptr);
  }

  // 0x70: pointer
  get PasswordMustChange(): Uint8Array | Deno.PointerValue {
    const ptr = this.view.getBigUint64(112, true);
    return Deno.UnsafePointer.create(ptr);
  }

  // 0x78: buffer
  get LogonScript(): Uint8Array | Deno.PointerValue {
    const ptr = this.view.getBigUint64(120, true);
    return Deno.UnsafePointer.create(ptr);
  }

  // 0x80: buffer
  get HomeDirectory(): Uint8Array | Deno.PointerValue {
    const ptr = this.view.getBigUint64(128, true);
    return Deno.UnsafePointer.create(ptr);
  }

  // 0x88: buffer
  get FullName(): Uint8Array | Deno.PointerValue {
    const ptr = this.view.getBigUint64(136, true);
    return Deno.UnsafePointer.create(ptr);
  }

  // 0x90: buffer
  get ProfilePath(): Uint8Array | Deno.PointerValue {
    const ptr = this.view.getBigUint64(144, true);
    return Deno.UnsafePointer.create(ptr);
  }

  // 0x98: buffer
  get HomeDirectoryDrive(): Uint8Array | Deno.PointerValue {
    const ptr = this.view.getBigUint64(152, true);
    return Deno.UnsafePointer.create(ptr);
  }

  // 0xa0: buffer
  get LogonServer(): Uint8Array | Deno.PointerValue {
    const ptr = this.view.getBigUint64(160, true);
    return Deno.UnsafePointer.create(ptr);
  }

  // 0xa8: u32
  get UserFlags(): number {
    return this.view.getUint32(168, true);
  }

  // 0xac: u32
  get PrivateDataLen(): number {
    return this.view.getUint32(172, true);
  }

  // 0xb0: pointer
  get PrivateData(): Uint8Array | Deno.PointerValue {
    const ptr = this.view.getBigUint64(176, true);
    return Deno.UnsafePointer.create(ptr);
  }

  // 0x00: u32
  set dwType(value: number) {
    this.view.setUint32(0, value, true);
  }

  // 0x04: pad4

  // 0x08: pointer
  set UserToken(value: Uint8Array | Deno.PointerValue) {
    this.view.setBigUint64(8, BigInt(Deno.UnsafePointer.value(util.toPointer(value))), true);
  }

  // 0x10: pointer
  set LogonId(value: Uint8Array | Deno.PointerValue) {
    this.view.setBigUint64(16, BigInt(Deno.UnsafePointer.value(util.toPointer(value))), true);
  }

  // 0x18: pointer
  set Quotas(value: Uint8Array | Deno.PointerValue) {
    this.view.setBigUint64(24, BigInt(Deno.UnsafePointer.value(util.toPointer(value))), true);
  }

  // 0x20: buffer
  set UserName(value: Uint8Array | Deno.PointerValue) {
    (this.buf as any)._f32 = value;
    this.view.setBigUint64(32, BigInt(Deno.UnsafePointer.value(util.toPointer((this.buf as any)._f32))), true);
  }

  // 0x28: buffer
  set Domain(value: Uint8Array | Deno.PointerValue) {
    (this.buf as any)._f40 = value;
    this.view.setBigUint64(40, BigInt(Deno.UnsafePointer.value(util.toPointer((this.buf as any)._f40))), true);
  }

  // 0x30: pointer
  set LogonTime(value: Uint8Array | Deno.PointerValue) {
    this.view.setBigUint64(48, BigInt(Deno.UnsafePointer.value(util.toPointer(value))), true);
  }

  // 0x38: i32
  set SmartCardLogon(value: number) {
    this.view.setInt32(56, value, true);
  }

  // 0x3c: u32
  set ProfileLength(value: number) {
    this.view.setUint32(60, value, true);
  }

  // 0x40: u32
  set MessageType(value: number) {
    this.view.setUint32(64, value, true);
  }

  // 0x44: u16
  set LogonCount(value: number) {
    this.view.setUint16(68, value, true);
  }

  // 0x46: u16
  set BadPasswordCount(value: number) {
    this.view.setUint16(70, value, true);
  }

  // 0x48: pointer
  set ProfileLogonTime(value: Uint8Array | Deno.PointerValue) {
    this.view.setBigUint64(72, BigInt(Deno.UnsafePointer.value(util.toPointer(value))), true);
  }

  // 0x50: pointer
  set LogoffTime(value: Uint8Array | Deno.PointerValue) {
    this.view.setBigUint64(80, BigInt(Deno.UnsafePointer.value(util.toPointer(value))), true);
  }

  // 0x58: pointer
  set KickOffTime(value: Uint8Array | Deno.PointerValue) {
    this.view.setBigUint64(88, BigInt(Deno.UnsafePointer.value(util.toPointer(value))), true);
  }

  // 0x60: pointer
  set PasswordLastSet(value: Uint8Array | Deno.PointerValue) {
    this.view.setBigUint64(96, BigInt(Deno.UnsafePointer.value(util.toPointer(value))), true);
  }

  // 0x68: pointer
  set PasswordCanChange(value: Uint8Array | Deno.PointerValue) {
    this.view.setBigUint64(104, BigInt(Deno.UnsafePointer.value(util.toPointer(value))), true);
  }

  // 0x70: pointer
  set PasswordMustChange(value: Uint8Array | Deno.PointerValue) {
    this.view.setBigUint64(112, BigInt(Deno.UnsafePointer.value(util.toPointer(value))), true);
  }

  // 0x78: buffer
  set LogonScript(value: Uint8Array | Deno.PointerValue) {
    (this.buf as any)._f120 = value;
    this.view.setBigUint64(120, BigInt(Deno.UnsafePointer.value(util.toPointer((this.buf as any)._f120))), true);
  }

  // 0x80: buffer
  set HomeDirectory(value: Uint8Array | Deno.PointerValue) {
    (this.buf as any)._f128 = value;
    this.view.setBigUint64(128, BigInt(Deno.UnsafePointer.value(util.toPointer((this.buf as any)._f128))), true);
  }

  // 0x88: buffer
  set FullName(value: Uint8Array | Deno.PointerValue) {
    (this.buf as any)._f136 = value;
    this.view.setBigUint64(136, BigInt(Deno.UnsafePointer.value(util.toPointer((this.buf as any)._f136))), true);
  }

  // 0x90: buffer
  set ProfilePath(value: Uint8Array | Deno.PointerValue) {
    (this.buf as any)._f144 = value;
    this.view.setBigUint64(144, BigInt(Deno.UnsafePointer.value(util.toPointer((this.buf as any)._f144))), true);
  }

  // 0x98: buffer
  set HomeDirectoryDrive(value: Uint8Array | Deno.PointerValue) {
    (this.buf as any)._f152 = value;
    this.view.setBigUint64(152, BigInt(Deno.UnsafePointer.value(util.toPointer((this.buf as any)._f152))), true);
  }

  // 0xa0: buffer
  set LogonServer(value: Uint8Array | Deno.PointerValue) {
    (this.buf as any)._f160 = value;
    this.view.setBigUint64(160, BigInt(Deno.UnsafePointer.value(util.toPointer((this.buf as any)._f160))), true);
  }

  // 0xa8: u32
  set UserFlags(value: number) {
    this.view.setUint32(168, value, true);
  }

  // 0xac: u32
  set PrivateDataLen(value: number) {
    this.view.setUint32(172, value, true);
  }

  // 0xb0: pointer
  set PrivateData(value: Uint8Array | Deno.PointerValue) {
    this.view.setBigUint64(176, BigInt(Deno.UnsafePointer.value(util.toPointer(value))), true);
  }
}

export type HDESK = Deno.PointerValue;

/**
 * Windows.Win32.Security.WinWlx.WLX_DESKTOP (size: 24)
 */
export interface WLX_DESKTOP {
  /** u32 */
  Size: number;
  /** u32 */
  Flags: number;
  /** Windows.Win32.System.StationsAndDesktops.HDESK */
  hDesktop: Uint8Array | Deno.PointerValue;
  /** Windows.Win32.Foundation.PWSTR */
  pszDesktopName: string | null | Uint8Array | Uint16Array;
}

export const sizeofWLX_DESKTOP = 24;

export function allocWLX_DESKTOP(data?: Partial<WLX_DESKTOP>): Uint8Array {
  const buf = new Uint8Array(sizeofWLX_DESKTOP);
  const view = new DataView(buf.buffer);
  // 0x00: u32
  if (data?.Size !== undefined) view.setUint32(0, Number(data.Size), true);
  // 0x04: u32
  if (data?.Flags !== undefined) view.setUint32(4, Number(data.Flags), true);
  // 0x08: pointer
  if (data?.hDesktop !== undefined) view.setBigUint64(8, data.hDesktop === null ? 0n : BigInt(Deno.UnsafePointer.value(util.toPointer(data.hDesktop))), true);
  // 0x10: buffer
  if (data?.pszDesktopName !== undefined) {
    (buf as any)._f16 = util.pwstrToFfi(data.pszDesktopName);
    view.setBigUint64(16, (buf as any)._f16 === null ? 0n : BigInt(Deno.UnsafePointer.value(Deno.UnsafePointer.of((buf as any)._f16))), true);
  }
  return buf;
}

export class WLX_DESKTOPView {
  private readonly view: DataView;
  constructor(private readonly buf: Uint8Array) {
    this.view = new DataView(buf.buffer);
  }

  get buffer(): Uint8Array {
    return this.buf;
  }

  // 0x00: u32
  get Size(): number {
    return this.view.getUint32(0, true);
  }

  // 0x04: u32
  get Flags(): number {
    return this.view.getUint32(4, true);
  }

  // 0x08: pointer
  get hDesktop(): Uint8Array | Deno.PointerValue {
    const ptr = this.view.getBigUint64(8, true);
    return Deno.UnsafePointer.create(ptr);
  }

  // 0x10: buffer
  get pszDesktopName(): Uint8Array | Deno.PointerValue {
    const ptr = this.view.getBigUint64(16, true);
    return Deno.UnsafePointer.create(ptr);
  }

  // 0x00: u32
  set Size(value: number) {
    this.view.setUint32(0, value, true);
  }

  // 0x04: u32
  set Flags(value: number) {
    this.view.setUint32(4, value, true);
  }

  // 0x08: pointer
  set hDesktop(value: Uint8Array | Deno.PointerValue) {
    this.view.setBigUint64(8, BigInt(Deno.UnsafePointer.value(util.toPointer(value))), true);
  }

  // 0x10: buffer
  set pszDesktopName(value: Uint8Array | Deno.PointerValue) {
    (this.buf as any)._f16 = value;
    this.view.setBigUint64(16, BigInt(Deno.UnsafePointer.value(util.toPointer((this.buf as any)._f16))), true);
  }
}

/**
 * Windows.Win32.Security.WinWlx.WLX_DISPATCH_VERSION_1_0 (size: 104)
 */
export interface WLX_DISPATCH_VERSION_1_0 {
  /** Windows.Win32.Security.WinWlx.PWLX_USE_CTRL_ALT_DEL */
  WlxUseCtrlAltDel: Uint8Array | Deno.PointerValue;
  /** Windows.Win32.Security.WinWlx.PWLX_SET_CONTEXT_POINTER */
  WlxSetContextPointer: Uint8Array | Deno.PointerValue;
  /** Windows.Win32.Security.WinWlx.PWLX_SAS_NOTIFY */
  WlxSasNotify: Uint8Array | Deno.PointerValue;
  /** Windows.Win32.Security.WinWlx.PWLX_SET_TIMEOUT */
  WlxSetTimeout: Uint8Array | Deno.PointerValue;
  /** Windows.Win32.Security.WinWlx.PWLX_ASSIGN_SHELL_PROTECTION */
  WlxAssignShellProtection: Uint8Array | Deno.PointerValue;
  /** Windows.Win32.Security.WinWlx.PWLX_MESSAGE_BOX */
  WlxMessageBox: Uint8Array | Deno.PointerValue;
  /** Windows.Win32.Security.WinWlx.PWLX_DIALOG_BOX */
  WlxDialogBox: Uint8Array | Deno.PointerValue;
  /** Windows.Win32.Security.WinWlx.PWLX_DIALOG_BOX_PARAM */
  WlxDialogBoxParam: Uint8Array | Deno.PointerValue;
  /** Windows.Win32.Security.WinWlx.PWLX_DIALOG_BOX_INDIRECT */
  WlxDialogBoxIndirect: Uint8Array | Deno.PointerValue;
  /** Windows.Win32.Security.WinWlx.PWLX_DIALOG_BOX_INDIRECT_PARAM */
  WlxDialogBoxIndirectParam: Uint8Array | Deno.PointerValue;
  /** Windows.Win32.Security.WinWlx.PWLX_SWITCH_DESKTOP_TO_USER */
  WlxSwitchDesktopToUser: Uint8Array | Deno.PointerValue;
  /** Windows.Win32.Security.WinWlx.PWLX_SWITCH_DESKTOP_TO_WINLOGON */
  WlxSwitchDesktopToWinlogon: Uint8Array | Deno.PointerValue;
  /** Windows.Win32.Security.WinWlx.PWLX_CHANGE_PASSWORD_NOTIFY */
  WlxChangePasswordNotify: Uint8Array | Deno.PointerValue;
}

export const sizeofWLX_DISPATCH_VERSION_1_0 = 104;

export function allocWLX_DISPATCH_VERSION_1_0(data?: Partial<WLX_DISPATCH_VERSION_1_0>): Uint8Array {
  const buf = new Uint8Array(sizeofWLX_DISPATCH_VERSION_1_0);
  const view = new DataView(buf.buffer);
  // 0x00: pointer
  if (data?.WlxUseCtrlAltDel !== undefined) view.setBigUint64(0, data.WlxUseCtrlAltDel === null ? 0n : BigInt(Deno.UnsafePointer.value(util.toPointer(data.WlxUseCtrlAltDel))), true);
  // 0x08: pointer
  if (data?.WlxSetContextPointer !== undefined) view.setBigUint64(8, data.WlxSetContextPointer === null ? 0n : BigInt(Deno.UnsafePointer.value(util.toPointer(data.WlxSetContextPointer))), true);
  // 0x10: pointer
  if (data?.WlxSasNotify !== undefined) view.setBigUint64(16, data.WlxSasNotify === null ? 0n : BigInt(Deno.UnsafePointer.value(util.toPointer(data.WlxSasNotify))), true);
  // 0x18: pointer
  if (data?.WlxSetTimeout !== undefined) view.setBigUint64(24, data.WlxSetTimeout === null ? 0n : BigInt(Deno.UnsafePointer.value(util.toPointer(data.WlxSetTimeout))), true);
  // 0x20: pointer
  if (data?.WlxAssignShellProtection !== undefined) view.setBigUint64(32, data.WlxAssignShellProtection === null ? 0n : BigInt(Deno.UnsafePointer.value(util.toPointer(data.WlxAssignShellProtection))), true);
  // 0x28: pointer
  if (data?.WlxMessageBox !== undefined) view.setBigUint64(40, data.WlxMessageBox === null ? 0n : BigInt(Deno.UnsafePointer.value(util.toPointer(data.WlxMessageBox))), true);
  // 0x30: pointer
  if (data?.WlxDialogBox !== undefined) view.setBigUint64(48, data.WlxDialogBox === null ? 0n : BigInt(Deno.UnsafePointer.value(util.toPointer(data.WlxDialogBox))), true);
  // 0x38: pointer
  if (data?.WlxDialogBoxParam !== undefined) view.setBigUint64(56, data.WlxDialogBoxParam === null ? 0n : BigInt(Deno.UnsafePointer.value(util.toPointer(data.WlxDialogBoxParam))), true);
  // 0x40: pointer
  if (data?.WlxDialogBoxIndirect !== undefined) view.setBigUint64(64, data.WlxDialogBoxIndirect === null ? 0n : BigInt(Deno.UnsafePointer.value(util.toPointer(data.WlxDialogBoxIndirect))), true);
  // 0x48: pointer
  if (data?.WlxDialogBoxIndirectParam !== undefined) view.setBigUint64(72, data.WlxDialogBoxIndirectParam === null ? 0n : BigInt(Deno.UnsafePointer.value(util.toPointer(data.WlxDialogBoxIndirectParam))), true);
  // 0x50: pointer
  if (data?.WlxSwitchDesktopToUser !== undefined) view.setBigUint64(80, data.WlxSwitchDesktopToUser === null ? 0n : BigInt(Deno.UnsafePointer.value(util.toPointer(data.WlxSwitchDesktopToUser))), true);
  // 0x58: pointer
  if (data?.WlxSwitchDesktopToWinlogon !== undefined) view.setBigUint64(88, data.WlxSwitchDesktopToWinlogon === null ? 0n : BigInt(Deno.UnsafePointer.value(util.toPointer(data.WlxSwitchDesktopToWinlogon))), true);
  // 0x60: pointer
  if (data?.WlxChangePasswordNotify !== undefined) view.setBigUint64(96, data.WlxChangePasswordNotify === null ? 0n : BigInt(Deno.UnsafePointer.value(util.toPointer(data.WlxChangePasswordNotify))), true);
  return buf;
}

export class WLX_DISPATCH_VERSION_1_0View {
  private readonly view: DataView;
  constructor(private readonly buf: Uint8Array) {
    this.view = new DataView(buf.buffer);
  }

  get buffer(): Uint8Array {
    return this.buf;
  }

  // 0x00: pointer
  get WlxUseCtrlAltDel(): Uint8Array | Deno.PointerValue {
    const ptr = this.view.getBigUint64(0, true);
    return Deno.UnsafePointer.create(ptr);
  }

  // 0x08: pointer
  get WlxSetContextPointer(): Uint8Array | Deno.PointerValue {
    const ptr = this.view.getBigUint64(8, true);
    return Deno.UnsafePointer.create(ptr);
  }

  // 0x10: pointer
  get WlxSasNotify(): Uint8Array | Deno.PointerValue {
    const ptr = this.view.getBigUint64(16, true);
    return Deno.UnsafePointer.create(ptr);
  }

  // 0x18: pointer
  get WlxSetTimeout(): Uint8Array | Deno.PointerValue {
    const ptr = this.view.getBigUint64(24, true);
    return Deno.UnsafePointer.create(ptr);
  }

  // 0x20: pointer
  get WlxAssignShellProtection(): Uint8Array | Deno.PointerValue {
    const ptr = this.view.getBigUint64(32, true);
    return Deno.UnsafePointer.create(ptr);
  }

  // 0x28: pointer
  get WlxMessageBox(): Uint8Array | Deno.PointerValue {
    const ptr = this.view.getBigUint64(40, true);
    return Deno.UnsafePointer.create(ptr);
  }

  // 0x30: pointer
  get WlxDialogBox(): Uint8Array | Deno.PointerValue {
    const ptr = this.view.getBigUint64(48, true);
    return Deno.UnsafePointer.create(ptr);
  }

  // 0x38: pointer
  get WlxDialogBoxParam(): Uint8Array | Deno.PointerValue {
    const ptr = this.view.getBigUint64(56, true);
    return Deno.UnsafePointer.create(ptr);
  }

  // 0x40: pointer
  get WlxDialogBoxIndirect(): Uint8Array | Deno.PointerValue {
    const ptr = this.view.getBigUint64(64, true);
    return Deno.UnsafePointer.create(ptr);
  }

  // 0x48: pointer
  get WlxDialogBoxIndirectParam(): Uint8Array | Deno.PointerValue {
    const ptr = this.view.getBigUint64(72, true);
    return Deno.UnsafePointer.create(ptr);
  }

  // 0x50: pointer
  get WlxSwitchDesktopToUser(): Uint8Array | Deno.PointerValue {
    const ptr = this.view.getBigUint64(80, true);
    return Deno.UnsafePointer.create(ptr);
  }

  // 0x58: pointer
  get WlxSwitchDesktopToWinlogon(): Uint8Array | Deno.PointerValue {
    const ptr = this.view.getBigUint64(88, true);
    return Deno.UnsafePointer.create(ptr);
  }

  // 0x60: pointer
  get WlxChangePasswordNotify(): Uint8Array | Deno.PointerValue {
    const ptr = this.view.getBigUint64(96, true);
    return Deno.UnsafePointer.create(ptr);
  }

  // 0x00: pointer
  set WlxUseCtrlAltDel(value: Uint8Array | Deno.PointerValue) {
    this.view.setBigUint64(0, BigInt(Deno.UnsafePointer.value(util.toPointer(value))), true);
  }

  // 0x08: pointer
  set WlxSetContextPointer(value: Uint8Array | Deno.PointerValue) {
    this.view.setBigUint64(8, BigInt(Deno.UnsafePointer.value(util.toPointer(value))), true);
  }

  // 0x10: pointer
  set WlxSasNotify(value: Uint8Array | Deno.PointerValue) {
    this.view.setBigUint64(16, BigInt(Deno.UnsafePointer.value(util.toPointer(value))), true);
  }

  // 0x18: pointer
  set WlxSetTimeout(value: Uint8Array | Deno.PointerValue) {
    this.view.setBigUint64(24, BigInt(Deno.UnsafePointer.value(util.toPointer(value))), true);
  }

  // 0x20: pointer
  set WlxAssignShellProtection(value: Uint8Array | Deno.PointerValue) {
    this.view.setBigUint64(32, BigInt(Deno.UnsafePointer.value(util.toPointer(value))), true);
  }

  // 0x28: pointer
  set WlxMessageBox(value: Uint8Array | Deno.PointerValue) {
    this.view.setBigUint64(40, BigInt(Deno.UnsafePointer.value(util.toPointer(value))), true);
  }

  // 0x30: pointer
  set WlxDialogBox(value: Uint8Array | Deno.PointerValue) {
    this.view.setBigUint64(48, BigInt(Deno.UnsafePointer.value(util.toPointer(value))), true);
  }

  // 0x38: pointer
  set WlxDialogBoxParam(value: Uint8Array | Deno.PointerValue) {
    this.view.setBigUint64(56, BigInt(Deno.UnsafePointer.value(util.toPointer(value))), true);
  }

  // 0x40: pointer
  set WlxDialogBoxIndirect(value: Uint8Array | Deno.PointerValue) {
    this.view.setBigUint64(64, BigInt(Deno.UnsafePointer.value(util.toPointer(value))), true);
  }

  // 0x48: pointer
  set WlxDialogBoxIndirectParam(value: Uint8Array | Deno.PointerValue) {
    this.view.setBigUint64(72, BigInt(Deno.UnsafePointer.value(util.toPointer(value))), true);
  }

  // 0x50: pointer
  set WlxSwitchDesktopToUser(value: Uint8Array | Deno.PointerValue) {
    this.view.setBigUint64(80, BigInt(Deno.UnsafePointer.value(util.toPointer(value))), true);
  }

  // 0x58: pointer
  set WlxSwitchDesktopToWinlogon(value: Uint8Array | Deno.PointerValue) {
    this.view.setBigUint64(88, BigInt(Deno.UnsafePointer.value(util.toPointer(value))), true);
  }

  // 0x60: pointer
  set WlxChangePasswordNotify(value: Uint8Array | Deno.PointerValue) {
    this.view.setBigUint64(96, BigInt(Deno.UnsafePointer.value(util.toPointer(value))), true);
  }
}

/**
 * Windows.Win32.Security.WinWlx.WLX_DISPATCH_VERSION_1_1 (size: 136)
 */
export interface WLX_DISPATCH_VERSION_1_1 {
  /** Windows.Win32.Security.WinWlx.PWLX_USE_CTRL_ALT_DEL */
  WlxUseCtrlAltDel: Uint8Array | Deno.PointerValue;
  /** Windows.Win32.Security.WinWlx.PWLX_SET_CONTEXT_POINTER */
  WlxSetContextPointer: Uint8Array | Deno.PointerValue;
  /** Windows.Win32.Security.WinWlx.PWLX_SAS_NOTIFY */
  WlxSasNotify: Uint8Array | Deno.PointerValue;
  /** Windows.Win32.Security.WinWlx.PWLX_SET_TIMEOUT */
  WlxSetTimeout: Uint8Array | Deno.PointerValue;
  /** Windows.Win32.Security.WinWlx.PWLX_ASSIGN_SHELL_PROTECTION */
  WlxAssignShellProtection: Uint8Array | Deno.PointerValue;
  /** Windows.Win32.Security.WinWlx.PWLX_MESSAGE_BOX */
  WlxMessageBox: Uint8Array | Deno.PointerValue;
  /** Windows.Win32.Security.WinWlx.PWLX_DIALOG_BOX */
  WlxDialogBox: Uint8Array | Deno.PointerValue;
  /** Windows.Win32.Security.WinWlx.PWLX_DIALOG_BOX_PARAM */
  WlxDialogBoxParam: Uint8Array | Deno.PointerValue;
  /** Windows.Win32.Security.WinWlx.PWLX_DIALOG_BOX_INDIRECT */
  WlxDialogBoxIndirect: Uint8Array | Deno.PointerValue;
  /** Windows.Win32.Security.WinWlx.PWLX_DIALOG_BOX_INDIRECT_PARAM */
  WlxDialogBoxIndirectParam: Uint8Array | Deno.PointerValue;
  /** Windows.Win32.Security.WinWlx.PWLX_SWITCH_DESKTOP_TO_USER */
  WlxSwitchDesktopToUser: Uint8Array | Deno.PointerValue;
  /** Windows.Win32.Security.WinWlx.PWLX_SWITCH_DESKTOP_TO_WINLOGON */
  WlxSwitchDesktopToWinlogon: Uint8Array | Deno.PointerValue;
  /** Windows.Win32.Security.WinWlx.PWLX_CHANGE_PASSWORD_NOTIFY */
  WlxChangePasswordNotify: Uint8Array | Deno.PointerValue;
  /** Windows.Win32.Security.WinWlx.PWLX_GET_SOURCE_DESKTOP */
  WlxGetSourceDesktop: Uint8Array | Deno.PointerValue;
  /** Windows.Win32.Security.WinWlx.PWLX_SET_RETURN_DESKTOP */
  WlxSetReturnDesktop: Uint8Array | Deno.PointerValue;
  /** Windows.Win32.Security.WinWlx.PWLX_CREATE_USER_DESKTOP */
  WlxCreateUserDesktop: Uint8Array | Deno.PointerValue;
  /** Windows.Win32.Security.WinWlx.PWLX_CHANGE_PASSWORD_NOTIFY_EX */
  WlxChangePasswordNotifyEx: Uint8Array | Deno.PointerValue;
}

export const sizeofWLX_DISPATCH_VERSION_1_1 = 136;

export function allocWLX_DISPATCH_VERSION_1_1(data?: Partial<WLX_DISPATCH_VERSION_1_1>): Uint8Array {
  const buf = new Uint8Array(sizeofWLX_DISPATCH_VERSION_1_1);
  const view = new DataView(buf.buffer);
  // 0x00: pointer
  if (data?.WlxUseCtrlAltDel !== undefined) view.setBigUint64(0, data.WlxUseCtrlAltDel === null ? 0n : BigInt(Deno.UnsafePointer.value(util.toPointer(data.WlxUseCtrlAltDel))), true);
  // 0x08: pointer
  if (data?.WlxSetContextPointer !== undefined) view.setBigUint64(8, data.WlxSetContextPointer === null ? 0n : BigInt(Deno.UnsafePointer.value(util.toPointer(data.WlxSetContextPointer))), true);
  // 0x10: pointer
  if (data?.WlxSasNotify !== undefined) view.setBigUint64(16, data.WlxSasNotify === null ? 0n : BigInt(Deno.UnsafePointer.value(util.toPointer(data.WlxSasNotify))), true);
  // 0x18: pointer
  if (data?.WlxSetTimeout !== undefined) view.setBigUint64(24, data.WlxSetTimeout === null ? 0n : BigInt(Deno.UnsafePointer.value(util.toPointer(data.WlxSetTimeout))), true);
  // 0x20: pointer
  if (data?.WlxAssignShellProtection !== undefined) view.setBigUint64(32, data.WlxAssignShellProtection === null ? 0n : BigInt(Deno.UnsafePointer.value(util.toPointer(data.WlxAssignShellProtection))), true);
  // 0x28: pointer
  if (data?.WlxMessageBox !== undefined) view.setBigUint64(40, data.WlxMessageBox === null ? 0n : BigInt(Deno.UnsafePointer.value(util.toPointer(data.WlxMessageBox))), true);
  // 0x30: pointer
  if (data?.WlxDialogBox !== undefined) view.setBigUint64(48, data.WlxDialogBox === null ? 0n : BigInt(Deno.UnsafePointer.value(util.toPointer(data.WlxDialogBox))), true);
  // 0x38: pointer
  if (data?.WlxDialogBoxParam !== undefined) view.setBigUint64(56, data.WlxDialogBoxParam === null ? 0n : BigInt(Deno.UnsafePointer.value(util.toPointer(data.WlxDialogBoxParam))), true);
  // 0x40: pointer
  if (data?.WlxDialogBoxIndirect !== undefined) view.setBigUint64(64, data.WlxDialogBoxIndirect === null ? 0n : BigInt(Deno.UnsafePointer.value(util.toPointer(data.WlxDialogBoxIndirect))), true);
  // 0x48: pointer
  if (data?.WlxDialogBoxIndirectParam !== undefined) view.setBigUint64(72, data.WlxDialogBoxIndirectParam === null ? 0n : BigInt(Deno.UnsafePointer.value(util.toPointer(data.WlxDialogBoxIndirectParam))), true);
  // 0x50: pointer
  if (data?.WlxSwitchDesktopToUser !== undefined) view.setBigUint64(80, data.WlxSwitchDesktopToUser === null ? 0n : BigInt(Deno.UnsafePointer.value(util.toPointer(data.WlxSwitchDesktopToUser))), true);
  // 0x58: pointer
  if (data?.WlxSwitchDesktopToWinlogon !== undefined) view.setBigUint64(88, data.WlxSwitchDesktopToWinlogon === null ? 0n : BigInt(Deno.UnsafePointer.value(util.toPointer(data.WlxSwitchDesktopToWinlogon))), true);
  // 0x60: pointer
  if (data?.WlxChangePasswordNotify !== undefined) view.setBigUint64(96, data.WlxChangePasswordNotify === null ? 0n : BigInt(Deno.UnsafePointer.value(util.toPointer(data.WlxChangePasswordNotify))), true);
  // 0x68: pointer
  if (data?.WlxGetSourceDesktop !== undefined) view.setBigUint64(104, data.WlxGetSourceDesktop === null ? 0n : BigInt(Deno.UnsafePointer.value(util.toPointer(data.WlxGetSourceDesktop))), true);
  // 0x70: pointer
  if (data?.WlxSetReturnDesktop !== undefined) view.setBigUint64(112, data.WlxSetReturnDesktop === null ? 0n : BigInt(Deno.UnsafePointer.value(util.toPointer(data.WlxSetReturnDesktop))), true);
  // 0x78: pointer
  if (data?.WlxCreateUserDesktop !== undefined) view.setBigUint64(120, data.WlxCreateUserDesktop === null ? 0n : BigInt(Deno.UnsafePointer.value(util.toPointer(data.WlxCreateUserDesktop))), true);
  // 0x80: pointer
  if (data?.WlxChangePasswordNotifyEx !== undefined) view.setBigUint64(128, data.WlxChangePasswordNotifyEx === null ? 0n : BigInt(Deno.UnsafePointer.value(util.toPointer(data.WlxChangePasswordNotifyEx))), true);
  return buf;
}

export class WLX_DISPATCH_VERSION_1_1View {
  private readonly view: DataView;
  constructor(private readonly buf: Uint8Array) {
    this.view = new DataView(buf.buffer);
  }

  get buffer(): Uint8Array {
    return this.buf;
  }

  // 0x00: pointer
  get WlxUseCtrlAltDel(): Uint8Array | Deno.PointerValue {
    const ptr = this.view.getBigUint64(0, true);
    return Deno.UnsafePointer.create(ptr);
  }

  // 0x08: pointer
  get WlxSetContextPointer(): Uint8Array | Deno.PointerValue {
    const ptr = this.view.getBigUint64(8, true);
    return Deno.UnsafePointer.create(ptr);
  }

  // 0x10: pointer
  get WlxSasNotify(): Uint8Array | Deno.PointerValue {
    const ptr = this.view.getBigUint64(16, true);
    return Deno.UnsafePointer.create(ptr);
  }

  // 0x18: pointer
  get WlxSetTimeout(): Uint8Array | Deno.PointerValue {
    const ptr = this.view.getBigUint64(24, true);
    return Deno.UnsafePointer.create(ptr);
  }

  // 0x20: pointer
  get WlxAssignShellProtection(): Uint8Array | Deno.PointerValue {
    const ptr = this.view.getBigUint64(32, true);
    return Deno.UnsafePointer.create(ptr);
  }

  // 0x28: pointer
  get WlxMessageBox(): Uint8Array | Deno.PointerValue {
    const ptr = this.view.getBigUint64(40, true);
    return Deno.UnsafePointer.create(ptr);
  }

  // 0x30: pointer
  get WlxDialogBox(): Uint8Array | Deno.PointerValue {
    const ptr = this.view.getBigUint64(48, true);
    return Deno.UnsafePointer.create(ptr);
  }

  // 0x38: pointer
  get WlxDialogBoxParam(): Uint8Array | Deno.PointerValue {
    const ptr = this.view.getBigUint64(56, true);
    return Deno.UnsafePointer.create(ptr);
  }

  // 0x40: pointer
  get WlxDialogBoxIndirect(): Uint8Array | Deno.PointerValue {
    const ptr = this.view.getBigUint64(64, true);
    return Deno.UnsafePointer.create(ptr);
  }

  // 0x48: pointer
  get WlxDialogBoxIndirectParam(): Uint8Array | Deno.PointerValue {
    const ptr = this.view.getBigUint64(72, true);
    return Deno.UnsafePointer.create(ptr);
  }

  // 0x50: pointer
  get WlxSwitchDesktopToUser(): Uint8Array | Deno.PointerValue {
    const ptr = this.view.getBigUint64(80, true);
    return Deno.UnsafePointer.create(ptr);
  }

  // 0x58: pointer
  get WlxSwitchDesktopToWinlogon(): Uint8Array | Deno.PointerValue {
    const ptr = this.view.getBigUint64(88, true);
    return Deno.UnsafePointer.create(ptr);
  }

  // 0x60: pointer
  get WlxChangePasswordNotify(): Uint8Array | Deno.PointerValue {
    const ptr = this.view.getBigUint64(96, true);
    return Deno.UnsafePointer.create(ptr);
  }

  // 0x68: pointer
  get WlxGetSourceDesktop(): Uint8Array | Deno.PointerValue {
    const ptr = this.view.getBigUint64(104, true);
    return Deno.UnsafePointer.create(ptr);
  }

  // 0x70: pointer
  get WlxSetReturnDesktop(): Uint8Array | Deno.PointerValue {
    const ptr = this.view.getBigUint64(112, true);
    return Deno.UnsafePointer.create(ptr);
  }

  // 0x78: pointer
  get WlxCreateUserDesktop(): Uint8Array | Deno.PointerValue {
    const ptr = this.view.getBigUint64(120, true);
    return Deno.UnsafePointer.create(ptr);
  }

  // 0x80: pointer
  get WlxChangePasswordNotifyEx(): Uint8Array | Deno.PointerValue {
    const ptr = this.view.getBigUint64(128, true);
    return Deno.UnsafePointer.create(ptr);
  }

  // 0x00: pointer
  set WlxUseCtrlAltDel(value: Uint8Array | Deno.PointerValue) {
    this.view.setBigUint64(0, BigInt(Deno.UnsafePointer.value(util.toPointer(value))), true);
  }

  // 0x08: pointer
  set WlxSetContextPointer(value: Uint8Array | Deno.PointerValue) {
    this.view.setBigUint64(8, BigInt(Deno.UnsafePointer.value(util.toPointer(value))), true);
  }

  // 0x10: pointer
  set WlxSasNotify(value: Uint8Array | Deno.PointerValue) {
    this.view.setBigUint64(16, BigInt(Deno.UnsafePointer.value(util.toPointer(value))), true);
  }

  // 0x18: pointer
  set WlxSetTimeout(value: Uint8Array | Deno.PointerValue) {
    this.view.setBigUint64(24, BigInt(Deno.UnsafePointer.value(util.toPointer(value))), true);
  }

  // 0x20: pointer
  set WlxAssignShellProtection(value: Uint8Array | Deno.PointerValue) {
    this.view.setBigUint64(32, BigInt(Deno.UnsafePointer.value(util.toPointer(value))), true);
  }

  // 0x28: pointer
  set WlxMessageBox(value: Uint8Array | Deno.PointerValue) {
    this.view.setBigUint64(40, BigInt(Deno.UnsafePointer.value(util.toPointer(value))), true);
  }

  // 0x30: pointer
  set WlxDialogBox(value: Uint8Array | Deno.PointerValue) {
    this.view.setBigUint64(48, BigInt(Deno.UnsafePointer.value(util.toPointer(value))), true);
  }

  // 0x38: pointer
  set WlxDialogBoxParam(value: Uint8Array | Deno.PointerValue) {
    this.view.setBigUint64(56, BigInt(Deno.UnsafePointer.value(util.toPointer(value))), true);
  }

  // 0x40: pointer
  set WlxDialogBoxIndirect(value: Uint8Array | Deno.PointerValue) {
    this.view.setBigUint64(64, BigInt(Deno.UnsafePointer.value(util.toPointer(value))), true);
  }

  // 0x48: pointer
  set WlxDialogBoxIndirectParam(value: Uint8Array | Deno.PointerValue) {
    this.view.setBigUint64(72, BigInt(Deno.UnsafePointer.value(util.toPointer(value))), true);
  }

  // 0x50: pointer
  set WlxSwitchDesktopToUser(value: Uint8Array | Deno.PointerValue) {
    this.view.setBigUint64(80, BigInt(Deno.UnsafePointer.value(util.toPointer(value))), true);
  }

  // 0x58: pointer
  set WlxSwitchDesktopToWinlogon(value: Uint8Array | Deno.PointerValue) {
    this.view.setBigUint64(88, BigInt(Deno.UnsafePointer.value(util.toPointer(value))), true);
  }

  // 0x60: pointer
  set WlxChangePasswordNotify(value: Uint8Array | Deno.PointerValue) {
    this.view.setBigUint64(96, BigInt(Deno.UnsafePointer.value(util.toPointer(value))), true);
  }

  // 0x68: pointer
  set WlxGetSourceDesktop(value: Uint8Array | Deno.PointerValue) {
    this.view.setBigUint64(104, BigInt(Deno.UnsafePointer.value(util.toPointer(value))), true);
  }

  // 0x70: pointer
  set WlxSetReturnDesktop(value: Uint8Array | Deno.PointerValue) {
    this.view.setBigUint64(112, BigInt(Deno.UnsafePointer.value(util.toPointer(value))), true);
  }

  // 0x78: pointer
  set WlxCreateUserDesktop(value: Uint8Array | Deno.PointerValue) {
    this.view.setBigUint64(120, BigInt(Deno.UnsafePointer.value(util.toPointer(value))), true);
  }

  // 0x80: pointer
  set WlxChangePasswordNotifyEx(value: Uint8Array | Deno.PointerValue) {
    this.view.setBigUint64(128, BigInt(Deno.UnsafePointer.value(util.toPointer(value))), true);
  }
}

/**
 * Windows.Win32.Security.WinWlx.WLX_DISPATCH_VERSION_1_2 (size: 144)
 */
export interface WLX_DISPATCH_VERSION_1_2 {
  /** Windows.Win32.Security.WinWlx.PWLX_USE_CTRL_ALT_DEL */
  WlxUseCtrlAltDel: Uint8Array | Deno.PointerValue;
  /** Windows.Win32.Security.WinWlx.PWLX_SET_CONTEXT_POINTER */
  WlxSetContextPointer: Uint8Array | Deno.PointerValue;
  /** Windows.Win32.Security.WinWlx.PWLX_SAS_NOTIFY */
  WlxSasNotify: Uint8Array | Deno.PointerValue;
  /** Windows.Win32.Security.WinWlx.PWLX_SET_TIMEOUT */
  WlxSetTimeout: Uint8Array | Deno.PointerValue;
  /** Windows.Win32.Security.WinWlx.PWLX_ASSIGN_SHELL_PROTECTION */
  WlxAssignShellProtection: Uint8Array | Deno.PointerValue;
  /** Windows.Win32.Security.WinWlx.PWLX_MESSAGE_BOX */
  WlxMessageBox: Uint8Array | Deno.PointerValue;
  /** Windows.Win32.Security.WinWlx.PWLX_DIALOG_BOX */
  WlxDialogBox: Uint8Array | Deno.PointerValue;
  /** Windows.Win32.Security.WinWlx.PWLX_DIALOG_BOX_PARAM */
  WlxDialogBoxParam: Uint8Array | Deno.PointerValue;
  /** Windows.Win32.Security.WinWlx.PWLX_DIALOG_BOX_INDIRECT */
  WlxDialogBoxIndirect: Uint8Array | Deno.PointerValue;
  /** Windows.Win32.Security.WinWlx.PWLX_DIALOG_BOX_INDIRECT_PARAM */
  WlxDialogBoxIndirectParam: Uint8Array | Deno.PointerValue;
  /** Windows.Win32.Security.WinWlx.PWLX_SWITCH_DESKTOP_TO_USER */
  WlxSwitchDesktopToUser: Uint8Array | Deno.PointerValue;
  /** Windows.Win32.Security.WinWlx.PWLX_SWITCH_DESKTOP_TO_WINLOGON */
  WlxSwitchDesktopToWinlogon: Uint8Array | Deno.PointerValue;
  /** Windows.Win32.Security.WinWlx.PWLX_CHANGE_PASSWORD_NOTIFY */
  WlxChangePasswordNotify: Uint8Array | Deno.PointerValue;
  /** Windows.Win32.Security.WinWlx.PWLX_GET_SOURCE_DESKTOP */
  WlxGetSourceDesktop: Uint8Array | Deno.PointerValue;
  /** Windows.Win32.Security.WinWlx.PWLX_SET_RETURN_DESKTOP */
  WlxSetReturnDesktop: Uint8Array | Deno.PointerValue;
  /** Windows.Win32.Security.WinWlx.PWLX_CREATE_USER_DESKTOP */
  WlxCreateUserDesktop: Uint8Array | Deno.PointerValue;
  /** Windows.Win32.Security.WinWlx.PWLX_CHANGE_PASSWORD_NOTIFY_EX */
  WlxChangePasswordNotifyEx: Uint8Array | Deno.PointerValue;
  /** Windows.Win32.Security.WinWlx.PWLX_CLOSE_USER_DESKTOP */
  WlxCloseUserDesktop: Uint8Array | Deno.PointerValue;
}

export const sizeofWLX_DISPATCH_VERSION_1_2 = 144;

export function allocWLX_DISPATCH_VERSION_1_2(data?: Partial<WLX_DISPATCH_VERSION_1_2>): Uint8Array {
  const buf = new Uint8Array(sizeofWLX_DISPATCH_VERSION_1_2);
  const view = new DataView(buf.buffer);
  // 0x00: pointer
  if (data?.WlxUseCtrlAltDel !== undefined) view.setBigUint64(0, data.WlxUseCtrlAltDel === null ? 0n : BigInt(Deno.UnsafePointer.value(util.toPointer(data.WlxUseCtrlAltDel))), true);
  // 0x08: pointer
  if (data?.WlxSetContextPointer !== undefined) view.setBigUint64(8, data.WlxSetContextPointer === null ? 0n : BigInt(Deno.UnsafePointer.value(util.toPointer(data.WlxSetContextPointer))), true);
  // 0x10: pointer
  if (data?.WlxSasNotify !== undefined) view.setBigUint64(16, data.WlxSasNotify === null ? 0n : BigInt(Deno.UnsafePointer.value(util.toPointer(data.WlxSasNotify))), true);
  // 0x18: pointer
  if (data?.WlxSetTimeout !== undefined) view.setBigUint64(24, data.WlxSetTimeout === null ? 0n : BigInt(Deno.UnsafePointer.value(util.toPointer(data.WlxSetTimeout))), true);
  // 0x20: pointer
  if (data?.WlxAssignShellProtection !== undefined) view.setBigUint64(32, data.WlxAssignShellProtection === null ? 0n : BigInt(Deno.UnsafePointer.value(util.toPointer(data.WlxAssignShellProtection))), true);
  // 0x28: pointer
  if (data?.WlxMessageBox !== undefined) view.setBigUint64(40, data.WlxMessageBox === null ? 0n : BigInt(Deno.UnsafePointer.value(util.toPointer(data.WlxMessageBox))), true);
  // 0x30: pointer
  if (data?.WlxDialogBox !== undefined) view.setBigUint64(48, data.WlxDialogBox === null ? 0n : BigInt(Deno.UnsafePointer.value(util.toPointer(data.WlxDialogBox))), true);
  // 0x38: pointer
  if (data?.WlxDialogBoxParam !== undefined) view.setBigUint64(56, data.WlxDialogBoxParam === null ? 0n : BigInt(Deno.UnsafePointer.value(util.toPointer(data.WlxDialogBoxParam))), true);
  // 0x40: pointer
  if (data?.WlxDialogBoxIndirect !== undefined) view.setBigUint64(64, data.WlxDialogBoxIndirect === null ? 0n : BigInt(Deno.UnsafePointer.value(util.toPointer(data.WlxDialogBoxIndirect))), true);
  // 0x48: pointer
  if (data?.WlxDialogBoxIndirectParam !== undefined) view.setBigUint64(72, data.WlxDialogBoxIndirectParam === null ? 0n : BigInt(Deno.UnsafePointer.value(util.toPointer(data.WlxDialogBoxIndirectParam))), true);
  // 0x50: pointer
  if (data?.WlxSwitchDesktopToUser !== undefined) view.setBigUint64(80, data.WlxSwitchDesktopToUser === null ? 0n : BigInt(Deno.UnsafePointer.value(util.toPointer(data.WlxSwitchDesktopToUser))), true);
  // 0x58: pointer
  if (data?.WlxSwitchDesktopToWinlogon !== undefined) view.setBigUint64(88, data.WlxSwitchDesktopToWinlogon === null ? 0n : BigInt(Deno.UnsafePointer.value(util.toPointer(data.WlxSwitchDesktopToWinlogon))), true);
  // 0x60: pointer
  if (data?.WlxChangePasswordNotify !== undefined) view.setBigUint64(96, data.WlxChangePasswordNotify === null ? 0n : BigInt(Deno.UnsafePointer.value(util.toPointer(data.WlxChangePasswordNotify))), true);
  // 0x68: pointer
  if (data?.WlxGetSourceDesktop !== undefined) view.setBigUint64(104, data.WlxGetSourceDesktop === null ? 0n : BigInt(Deno.UnsafePointer.value(util.toPointer(data.WlxGetSourceDesktop))), true);
  // 0x70: pointer
  if (data?.WlxSetReturnDesktop !== undefined) view.setBigUint64(112, data.WlxSetReturnDesktop === null ? 0n : BigInt(Deno.UnsafePointer.value(util.toPointer(data.WlxSetReturnDesktop))), true);
  // 0x78: pointer
  if (data?.WlxCreateUserDesktop !== undefined) view.setBigUint64(120, data.WlxCreateUserDesktop === null ? 0n : BigInt(Deno.UnsafePointer.value(util.toPointer(data.WlxCreateUserDesktop))), true);
  // 0x80: pointer
  if (data?.WlxChangePasswordNotifyEx !== undefined) view.setBigUint64(128, data.WlxChangePasswordNotifyEx === null ? 0n : BigInt(Deno.UnsafePointer.value(util.toPointer(data.WlxChangePasswordNotifyEx))), true);
  // 0x88: pointer
  if (data?.WlxCloseUserDesktop !== undefined) view.setBigUint64(136, data.WlxCloseUserDesktop === null ? 0n : BigInt(Deno.UnsafePointer.value(util.toPointer(data.WlxCloseUserDesktop))), true);
  return buf;
}

export class WLX_DISPATCH_VERSION_1_2View {
  private readonly view: DataView;
  constructor(private readonly buf: Uint8Array) {
    this.view = new DataView(buf.buffer);
  }

  get buffer(): Uint8Array {
    return this.buf;
  }

  // 0x00: pointer
  get WlxUseCtrlAltDel(): Uint8Array | Deno.PointerValue {
    const ptr = this.view.getBigUint64(0, true);
    return Deno.UnsafePointer.create(ptr);
  }

  // 0x08: pointer
  get WlxSetContextPointer(): Uint8Array | Deno.PointerValue {
    const ptr = this.view.getBigUint64(8, true);
    return Deno.UnsafePointer.create(ptr);
  }

  // 0x10: pointer
  get WlxSasNotify(): Uint8Array | Deno.PointerValue {
    const ptr = this.view.getBigUint64(16, true);
    return Deno.UnsafePointer.create(ptr);
  }

  // 0x18: pointer
  get WlxSetTimeout(): Uint8Array | Deno.PointerValue {
    const ptr = this.view.getBigUint64(24, true);
    return Deno.UnsafePointer.create(ptr);
  }

  // 0x20: pointer
  get WlxAssignShellProtection(): Uint8Array | Deno.PointerValue {
    const ptr = this.view.getBigUint64(32, true);
    return Deno.UnsafePointer.create(ptr);
  }

  // 0x28: pointer
  get WlxMessageBox(): Uint8Array | Deno.PointerValue {
    const ptr = this.view.getBigUint64(40, true);
    return Deno.UnsafePointer.create(ptr);
  }

  // 0x30: pointer
  get WlxDialogBox(): Uint8Array | Deno.PointerValue {
    const ptr = this.view.getBigUint64(48, true);
    return Deno.UnsafePointer.create(ptr);
  }

  // 0x38: pointer
  get WlxDialogBoxParam(): Uint8Array | Deno.PointerValue {
    const ptr = this.view.getBigUint64(56, true);
    return Deno.UnsafePointer.create(ptr);
  }

  // 0x40: pointer
  get WlxDialogBoxIndirect(): Uint8Array | Deno.PointerValue {
    const ptr = this.view.getBigUint64(64, true);
    return Deno.UnsafePointer.create(ptr);
  }

  // 0x48: pointer
  get WlxDialogBoxIndirectParam(): Uint8Array | Deno.PointerValue {
    const ptr = this.view.getBigUint64(72, true);
    return Deno.UnsafePointer.create(ptr);
  }

  // 0x50: pointer
  get WlxSwitchDesktopToUser(): Uint8Array | Deno.PointerValue {
    const ptr = this.view.getBigUint64(80, true);
    return Deno.UnsafePointer.create(ptr);
  }

  // 0x58: pointer
  get WlxSwitchDesktopToWinlogon(): Uint8Array | Deno.PointerValue {
    const ptr = this.view.getBigUint64(88, true);
    return Deno.UnsafePointer.create(ptr);
  }

  // 0x60: pointer
  get WlxChangePasswordNotify(): Uint8Array | Deno.PointerValue {
    const ptr = this.view.getBigUint64(96, true);
    return Deno.UnsafePointer.create(ptr);
  }

  // 0x68: pointer
  get WlxGetSourceDesktop(): Uint8Array | Deno.PointerValue {
    const ptr = this.view.getBigUint64(104, true);
    return Deno.UnsafePointer.create(ptr);
  }

  // 0x70: pointer
  get WlxSetReturnDesktop(): Uint8Array | Deno.PointerValue {
    const ptr = this.view.getBigUint64(112, true);
    return Deno.UnsafePointer.create(ptr);
  }

  // 0x78: pointer
  get WlxCreateUserDesktop(): Uint8Array | Deno.PointerValue {
    const ptr = this.view.getBigUint64(120, true);
    return Deno.UnsafePointer.create(ptr);
  }

  // 0x80: pointer
  get WlxChangePasswordNotifyEx(): Uint8Array | Deno.PointerValue {
    const ptr = this.view.getBigUint64(128, true);
    return Deno.UnsafePointer.create(ptr);
  }

  // 0x88: pointer
  get WlxCloseUserDesktop(): Uint8Array | Deno.PointerValue {
    const ptr = this.view.getBigUint64(136, true);
    return Deno.UnsafePointer.create(ptr);
  }

  // 0x00: pointer
  set WlxUseCtrlAltDel(value: Uint8Array | Deno.PointerValue) {
    this.view.setBigUint64(0, BigInt(Deno.UnsafePointer.value(util.toPointer(value))), true);
  }

  // 0x08: pointer
  set WlxSetContextPointer(value: Uint8Array | Deno.PointerValue) {
    this.view.setBigUint64(8, BigInt(Deno.UnsafePointer.value(util.toPointer(value))), true);
  }

  // 0x10: pointer
  set WlxSasNotify(value: Uint8Array | Deno.PointerValue) {
    this.view.setBigUint64(16, BigInt(Deno.UnsafePointer.value(util.toPointer(value))), true);
  }

  // 0x18: pointer
  set WlxSetTimeout(value: Uint8Array | Deno.PointerValue) {
    this.view.setBigUint64(24, BigInt(Deno.UnsafePointer.value(util.toPointer(value))), true);
  }

  // 0x20: pointer
  set WlxAssignShellProtection(value: Uint8Array | Deno.PointerValue) {
    this.view.setBigUint64(32, BigInt(Deno.UnsafePointer.value(util.toPointer(value))), true);
  }

  // 0x28: pointer
  set WlxMessageBox(value: Uint8Array | Deno.PointerValue) {
    this.view.setBigUint64(40, BigInt(Deno.UnsafePointer.value(util.toPointer(value))), true);
  }

  // 0x30: pointer
  set WlxDialogBox(value: Uint8Array | Deno.PointerValue) {
    this.view.setBigUint64(48, BigInt(Deno.UnsafePointer.value(util.toPointer(value))), true);
  }

  // 0x38: pointer
  set WlxDialogBoxParam(value: Uint8Array | Deno.PointerValue) {
    this.view.setBigUint64(56, BigInt(Deno.UnsafePointer.value(util.toPointer(value))), true);
  }

  // 0x40: pointer
  set WlxDialogBoxIndirect(value: Uint8Array | Deno.PointerValue) {
    this.view.setBigUint64(64, BigInt(Deno.UnsafePointer.value(util.toPointer(value))), true);
  }

  // 0x48: pointer
  set WlxDialogBoxIndirectParam(value: Uint8Array | Deno.PointerValue) {
    this.view.setBigUint64(72, BigInt(Deno.UnsafePointer.value(util.toPointer(value))), true);
  }

  // 0x50: pointer
  set WlxSwitchDesktopToUser(value: Uint8Array | Deno.PointerValue) {
    this.view.setBigUint64(80, BigInt(Deno.UnsafePointer.value(util.toPointer(value))), true);
  }

  // 0x58: pointer
  set WlxSwitchDesktopToWinlogon(value: Uint8Array | Deno.PointerValue) {
    this.view.setBigUint64(88, BigInt(Deno.UnsafePointer.value(util.toPointer(value))), true);
  }

  // 0x60: pointer
  set WlxChangePasswordNotify(value: Uint8Array | Deno.PointerValue) {
    this.view.setBigUint64(96, BigInt(Deno.UnsafePointer.value(util.toPointer(value))), true);
  }

  // 0x68: pointer
  set WlxGetSourceDesktop(value: Uint8Array | Deno.PointerValue) {
    this.view.setBigUint64(104, BigInt(Deno.UnsafePointer.value(util.toPointer(value))), true);
  }

  // 0x70: pointer
  set WlxSetReturnDesktop(value: Uint8Array | Deno.PointerValue) {
    this.view.setBigUint64(112, BigInt(Deno.UnsafePointer.value(util.toPointer(value))), true);
  }

  // 0x78: pointer
  set WlxCreateUserDesktop(value: Uint8Array | Deno.PointerValue) {
    this.view.setBigUint64(120, BigInt(Deno.UnsafePointer.value(util.toPointer(value))), true);
  }

  // 0x80: pointer
  set WlxChangePasswordNotifyEx(value: Uint8Array | Deno.PointerValue) {
    this.view.setBigUint64(128, BigInt(Deno.UnsafePointer.value(util.toPointer(value))), true);
  }

  // 0x88: pointer
  set WlxCloseUserDesktop(value: Uint8Array | Deno.PointerValue) {
    this.view.setBigUint64(136, BigInt(Deno.UnsafePointer.value(util.toPointer(value))), true);
  }
}

/**
 * Windows.Win32.Security.WinWlx.WLX_DISPATCH_VERSION_1_3 (size: 200)
 */
export interface WLX_DISPATCH_VERSION_1_3 {
  /** Windows.Win32.Security.WinWlx.PWLX_USE_CTRL_ALT_DEL */
  WlxUseCtrlAltDel: Uint8Array | Deno.PointerValue;
  /** Windows.Win32.Security.WinWlx.PWLX_SET_CONTEXT_POINTER */
  WlxSetContextPointer: Uint8Array | Deno.PointerValue;
  /** Windows.Win32.Security.WinWlx.PWLX_SAS_NOTIFY */
  WlxSasNotify: Uint8Array | Deno.PointerValue;
  /** Windows.Win32.Security.WinWlx.PWLX_SET_TIMEOUT */
  WlxSetTimeout: Uint8Array | Deno.PointerValue;
  /** Windows.Win32.Security.WinWlx.PWLX_ASSIGN_SHELL_PROTECTION */
  WlxAssignShellProtection: Uint8Array | Deno.PointerValue;
  /** Windows.Win32.Security.WinWlx.PWLX_MESSAGE_BOX */
  WlxMessageBox: Uint8Array | Deno.PointerValue;
  /** Windows.Win32.Security.WinWlx.PWLX_DIALOG_BOX */
  WlxDialogBox: Uint8Array | Deno.PointerValue;
  /** Windows.Win32.Security.WinWlx.PWLX_DIALOG_BOX_PARAM */
  WlxDialogBoxParam: Uint8Array | Deno.PointerValue;
  /** Windows.Win32.Security.WinWlx.PWLX_DIALOG_BOX_INDIRECT */
  WlxDialogBoxIndirect: Uint8Array | Deno.PointerValue;
  /** Windows.Win32.Security.WinWlx.PWLX_DIALOG_BOX_INDIRECT_PARAM */
  WlxDialogBoxIndirectParam: Uint8Array | Deno.PointerValue;
  /** Windows.Win32.Security.WinWlx.PWLX_SWITCH_DESKTOP_TO_USER */
  WlxSwitchDesktopToUser: Uint8Array | Deno.PointerValue;
  /** Windows.Win32.Security.WinWlx.PWLX_SWITCH_DESKTOP_TO_WINLOGON */
  WlxSwitchDesktopToWinlogon: Uint8Array | Deno.PointerValue;
  /** Windows.Win32.Security.WinWlx.PWLX_CHANGE_PASSWORD_NOTIFY */
  WlxChangePasswordNotify: Uint8Array | Deno.PointerValue;
  /** Windows.Win32.Security.WinWlx.PWLX_GET_SOURCE_DESKTOP */
  WlxGetSourceDesktop: Uint8Array | Deno.PointerValue;
  /** Windows.Win32.Security.WinWlx.PWLX_SET_RETURN_DESKTOP */
  WlxSetReturnDesktop: Uint8Array | Deno.PointerValue;
  /** Windows.Win32.Security.WinWlx.PWLX_CREATE_USER_DESKTOP */
  WlxCreateUserDesktop: Uint8Array | Deno.PointerValue;
  /** Windows.Win32.Security.WinWlx.PWLX_CHANGE_PASSWORD_NOTIFY_EX */
  WlxChangePasswordNotifyEx: Uint8Array | Deno.PointerValue;
  /** Windows.Win32.Security.WinWlx.PWLX_CLOSE_USER_DESKTOP */
  WlxCloseUserDesktop: Uint8Array | Deno.PointerValue;
  /** Windows.Win32.Security.WinWlx.PWLX_SET_OPTION */
  WlxSetOption: Uint8Array | Deno.PointerValue;
  /** Windows.Win32.Security.WinWlx.PWLX_GET_OPTION */
  WlxGetOption: Uint8Array | Deno.PointerValue;
  /** Windows.Win32.Security.WinWlx.PWLX_WIN31_MIGRATE */
  WlxWin31Migrate: Uint8Array | Deno.PointerValue;
  /** Windows.Win32.Security.WinWlx.PWLX_QUERY_CLIENT_CREDENTIALS */
  WlxQueryClientCredentials: Uint8Array | Deno.PointerValue;
  /** Windows.Win32.Security.WinWlx.PWLX_QUERY_IC_CREDENTIALS */
  WlxQueryInetConnectorCredentials: Uint8Array | Deno.PointerValue;
  /** Windows.Win32.Security.WinWlx.PWLX_DISCONNECT */
  WlxDisconnect: Uint8Array | Deno.PointerValue;
  /** Windows.Win32.Security.WinWlx.PWLX_QUERY_TERMINAL_SERVICES_DATA */
  WlxQueryTerminalServicesData: Uint8Array | Deno.PointerValue;
}

export const sizeofWLX_DISPATCH_VERSION_1_3 = 200;

export function allocWLX_DISPATCH_VERSION_1_3(data?: Partial<WLX_DISPATCH_VERSION_1_3>): Uint8Array {
  const buf = new Uint8Array(sizeofWLX_DISPATCH_VERSION_1_3);
  const view = new DataView(buf.buffer);
  // 0x00: pointer
  if (data?.WlxUseCtrlAltDel !== undefined) view.setBigUint64(0, data.WlxUseCtrlAltDel === null ? 0n : BigInt(Deno.UnsafePointer.value(util.toPointer(data.WlxUseCtrlAltDel))), true);
  // 0x08: pointer
  if (data?.WlxSetContextPointer !== undefined) view.setBigUint64(8, data.WlxSetContextPointer === null ? 0n : BigInt(Deno.UnsafePointer.value(util.toPointer(data.WlxSetContextPointer))), true);
  // 0x10: pointer
  if (data?.WlxSasNotify !== undefined) view.setBigUint64(16, data.WlxSasNotify === null ? 0n : BigInt(Deno.UnsafePointer.value(util.toPointer(data.WlxSasNotify))), true);
  // 0x18: pointer
  if (data?.WlxSetTimeout !== undefined) view.setBigUint64(24, data.WlxSetTimeout === null ? 0n : BigInt(Deno.UnsafePointer.value(util.toPointer(data.WlxSetTimeout))), true);
  // 0x20: pointer
  if (data?.WlxAssignShellProtection !== undefined) view.setBigUint64(32, data.WlxAssignShellProtection === null ? 0n : BigInt(Deno.UnsafePointer.value(util.toPointer(data.WlxAssignShellProtection))), true);
  // 0x28: pointer
  if (data?.WlxMessageBox !== undefined) view.setBigUint64(40, data.WlxMessageBox === null ? 0n : BigInt(Deno.UnsafePointer.value(util.toPointer(data.WlxMessageBox))), true);
  // 0x30: pointer
  if (data?.WlxDialogBox !== undefined) view.setBigUint64(48, data.WlxDialogBox === null ? 0n : BigInt(Deno.UnsafePointer.value(util.toPointer(data.WlxDialogBox))), true);
  // 0x38: pointer
  if (data?.WlxDialogBoxParam !== undefined) view.setBigUint64(56, data.WlxDialogBoxParam === null ? 0n : BigInt(Deno.UnsafePointer.value(util.toPointer(data.WlxDialogBoxParam))), true);
  // 0x40: pointer
  if (data?.WlxDialogBoxIndirect !== undefined) view.setBigUint64(64, data.WlxDialogBoxIndirect === null ? 0n : BigInt(Deno.UnsafePointer.value(util.toPointer(data.WlxDialogBoxIndirect))), true);
  // 0x48: pointer
  if (data?.WlxDialogBoxIndirectParam !== undefined) view.setBigUint64(72, data.WlxDialogBoxIndirectParam === null ? 0n : BigInt(Deno.UnsafePointer.value(util.toPointer(data.WlxDialogBoxIndirectParam))), true);
  // 0x50: pointer
  if (data?.WlxSwitchDesktopToUser !== undefined) view.setBigUint64(80, data.WlxSwitchDesktopToUser === null ? 0n : BigInt(Deno.UnsafePointer.value(util.toPointer(data.WlxSwitchDesktopToUser))), true);
  // 0x58: pointer
  if (data?.WlxSwitchDesktopToWinlogon !== undefined) view.setBigUint64(88, data.WlxSwitchDesktopToWinlogon === null ? 0n : BigInt(Deno.UnsafePointer.value(util.toPointer(data.WlxSwitchDesktopToWinlogon))), true);
  // 0x60: pointer
  if (data?.WlxChangePasswordNotify !== undefined) view.setBigUint64(96, data.WlxChangePasswordNotify === null ? 0n : BigInt(Deno.UnsafePointer.value(util.toPointer(data.WlxChangePasswordNotify))), true);
  // 0x68: pointer
  if (data?.WlxGetSourceDesktop !== undefined) view.setBigUint64(104, data.WlxGetSourceDesktop === null ? 0n : BigInt(Deno.UnsafePointer.value(util.toPointer(data.WlxGetSourceDesktop))), true);
  // 0x70: pointer
  if (data?.WlxSetReturnDesktop !== undefined) view.setBigUint64(112, data.WlxSetReturnDesktop === null ? 0n : BigInt(Deno.UnsafePointer.value(util.toPointer(data.WlxSetReturnDesktop))), true);
  // 0x78: pointer
  if (data?.WlxCreateUserDesktop !== undefined) view.setBigUint64(120, data.WlxCreateUserDesktop === null ? 0n : BigInt(Deno.UnsafePointer.value(util.toPointer(data.WlxCreateUserDesktop))), true);
  // 0x80: pointer
  if (data?.WlxChangePasswordNotifyEx !== undefined) view.setBigUint64(128, data.WlxChangePasswordNotifyEx === null ? 0n : BigInt(Deno.UnsafePointer.value(util.toPointer(data.WlxChangePasswordNotifyEx))), true);
  // 0x88: pointer
  if (data?.WlxCloseUserDesktop !== undefined) view.setBigUint64(136, data.WlxCloseUserDesktop === null ? 0n : BigInt(Deno.UnsafePointer.value(util.toPointer(data.WlxCloseUserDesktop))), true);
  // 0x90: pointer
  if (data?.WlxSetOption !== undefined) view.setBigUint64(144, data.WlxSetOption === null ? 0n : BigInt(Deno.UnsafePointer.value(util.toPointer(data.WlxSetOption))), true);
  // 0x98: pointer
  if (data?.WlxGetOption !== undefined) view.setBigUint64(152, data.WlxGetOption === null ? 0n : BigInt(Deno.UnsafePointer.value(util.toPointer(data.WlxGetOption))), true);
  // 0xa0: pointer
  if (data?.WlxWin31Migrate !== undefined) view.setBigUint64(160, data.WlxWin31Migrate === null ? 0n : BigInt(Deno.UnsafePointer.value(util.toPointer(data.WlxWin31Migrate))), true);
  // 0xa8: pointer
  if (data?.WlxQueryClientCredentials !== undefined) view.setBigUint64(168, data.WlxQueryClientCredentials === null ? 0n : BigInt(Deno.UnsafePointer.value(util.toPointer(data.WlxQueryClientCredentials))), true);
  // 0xb0: pointer
  if (data?.WlxQueryInetConnectorCredentials !== undefined) view.setBigUint64(176, data.WlxQueryInetConnectorCredentials === null ? 0n : BigInt(Deno.UnsafePointer.value(util.toPointer(data.WlxQueryInetConnectorCredentials))), true);
  // 0xb8: pointer
  if (data?.WlxDisconnect !== undefined) view.setBigUint64(184, data.WlxDisconnect === null ? 0n : BigInt(Deno.UnsafePointer.value(util.toPointer(data.WlxDisconnect))), true);
  // 0xc0: pointer
  if (data?.WlxQueryTerminalServicesData !== undefined) view.setBigUint64(192, data.WlxQueryTerminalServicesData === null ? 0n : BigInt(Deno.UnsafePointer.value(util.toPointer(data.WlxQueryTerminalServicesData))), true);
  return buf;
}

export class WLX_DISPATCH_VERSION_1_3View {
  private readonly view: DataView;
  constructor(private readonly buf: Uint8Array) {
    this.view = new DataView(buf.buffer);
  }

  get buffer(): Uint8Array {
    return this.buf;
  }

  // 0x00: pointer
  get WlxUseCtrlAltDel(): Uint8Array | Deno.PointerValue {
    const ptr = this.view.getBigUint64(0, true);
    return Deno.UnsafePointer.create(ptr);
  }

  // 0x08: pointer
  get WlxSetContextPointer(): Uint8Array | Deno.PointerValue {
    const ptr = this.view.getBigUint64(8, true);
    return Deno.UnsafePointer.create(ptr);
  }

  // 0x10: pointer
  get WlxSasNotify(): Uint8Array | Deno.PointerValue {
    const ptr = this.view.getBigUint64(16, true);
    return Deno.UnsafePointer.create(ptr);
  }

  // 0x18: pointer
  get WlxSetTimeout(): Uint8Array | Deno.PointerValue {
    const ptr = this.view.getBigUint64(24, true);
    return Deno.UnsafePointer.create(ptr);
  }

  // 0x20: pointer
  get WlxAssignShellProtection(): Uint8Array | Deno.PointerValue {
    const ptr = this.view.getBigUint64(32, true);
    return Deno.UnsafePointer.create(ptr);
  }

  // 0x28: pointer
  get WlxMessageBox(): Uint8Array | Deno.PointerValue {
    const ptr = this.view.getBigUint64(40, true);
    return Deno.UnsafePointer.create(ptr);
  }

  // 0x30: pointer
  get WlxDialogBox(): Uint8Array | Deno.PointerValue {
    const ptr = this.view.getBigUint64(48, true);
    return Deno.UnsafePointer.create(ptr);
  }

  // 0x38: pointer
  get WlxDialogBoxParam(): Uint8Array | Deno.PointerValue {
    const ptr = this.view.getBigUint64(56, true);
    return Deno.UnsafePointer.create(ptr);
  }

  // 0x40: pointer
  get WlxDialogBoxIndirect(): Uint8Array | Deno.PointerValue {
    const ptr = this.view.getBigUint64(64, true);
    return Deno.UnsafePointer.create(ptr);
  }

  // 0x48: pointer
  get WlxDialogBoxIndirectParam(): Uint8Array | Deno.PointerValue {
    const ptr = this.view.getBigUint64(72, true);
    return Deno.UnsafePointer.create(ptr);
  }

  // 0x50: pointer
  get WlxSwitchDesktopToUser(): Uint8Array | Deno.PointerValue {
    const ptr = this.view.getBigUint64(80, true);
    return Deno.UnsafePointer.create(ptr);
  }

  // 0x58: pointer
  get WlxSwitchDesktopToWinlogon(): Uint8Array | Deno.PointerValue {
    const ptr = this.view.getBigUint64(88, true);
    return Deno.UnsafePointer.create(ptr);
  }

  // 0x60: pointer
  get WlxChangePasswordNotify(): Uint8Array | Deno.PointerValue {
    const ptr = this.view.getBigUint64(96, true);
    return Deno.UnsafePointer.create(ptr);
  }

  // 0x68: pointer
  get WlxGetSourceDesktop(): Uint8Array | Deno.PointerValue {
    const ptr = this.view.getBigUint64(104, true);
    return Deno.UnsafePointer.create(ptr);
  }

  // 0x70: pointer
  get WlxSetReturnDesktop(): Uint8Array | Deno.PointerValue {
    const ptr = this.view.getBigUint64(112, true);
    return Deno.UnsafePointer.create(ptr);
  }

  // 0x78: pointer
  get WlxCreateUserDesktop(): Uint8Array | Deno.PointerValue {
    const ptr = this.view.getBigUint64(120, true);
    return Deno.UnsafePointer.create(ptr);
  }

  // 0x80: pointer
  get WlxChangePasswordNotifyEx(): Uint8Array | Deno.PointerValue {
    const ptr = this.view.getBigUint64(128, true);
    return Deno.UnsafePointer.create(ptr);
  }

  // 0x88: pointer
  get WlxCloseUserDesktop(): Uint8Array | Deno.PointerValue {
    const ptr = this.view.getBigUint64(136, true);
    return Deno.UnsafePointer.create(ptr);
  }

  // 0x90: pointer
  get WlxSetOption(): Uint8Array | Deno.PointerValue {
    const ptr = this.view.getBigUint64(144, true);
    return Deno.UnsafePointer.create(ptr);
  }

  // 0x98: pointer
  get WlxGetOption(): Uint8Array | Deno.PointerValue {
    const ptr = this.view.getBigUint64(152, true);
    return Deno.UnsafePointer.create(ptr);
  }

  // 0xa0: pointer
  get WlxWin31Migrate(): Uint8Array | Deno.PointerValue {
    const ptr = this.view.getBigUint64(160, true);
    return Deno.UnsafePointer.create(ptr);
  }

  // 0xa8: pointer
  get WlxQueryClientCredentials(): Uint8Array | Deno.PointerValue {
    const ptr = this.view.getBigUint64(168, true);
    return Deno.UnsafePointer.create(ptr);
  }

  // 0xb0: pointer
  get WlxQueryInetConnectorCredentials(): Uint8Array | Deno.PointerValue {
    const ptr = this.view.getBigUint64(176, true);
    return Deno.UnsafePointer.create(ptr);
  }

  // 0xb8: pointer
  get WlxDisconnect(): Uint8Array | Deno.PointerValue {
    const ptr = this.view.getBigUint64(184, true);
    return Deno.UnsafePointer.create(ptr);
  }

  // 0xc0: pointer
  get WlxQueryTerminalServicesData(): Uint8Array | Deno.PointerValue {
    const ptr = this.view.getBigUint64(192, true);
    return Deno.UnsafePointer.create(ptr);
  }

  // 0x00: pointer
  set WlxUseCtrlAltDel(value: Uint8Array | Deno.PointerValue) {
    this.view.setBigUint64(0, BigInt(Deno.UnsafePointer.value(util.toPointer(value))), true);
  }

  // 0x08: pointer
  set WlxSetContextPointer(value: Uint8Array | Deno.PointerValue) {
    this.view.setBigUint64(8, BigInt(Deno.UnsafePointer.value(util.toPointer(value))), true);
  }

  // 0x10: pointer
  set WlxSasNotify(value: Uint8Array | Deno.PointerValue) {
    this.view.setBigUint64(16, BigInt(Deno.UnsafePointer.value(util.toPointer(value))), true);
  }

  // 0x18: pointer
  set WlxSetTimeout(value: Uint8Array | Deno.PointerValue) {
    this.view.setBigUint64(24, BigInt(Deno.UnsafePointer.value(util.toPointer(value))), true);
  }

  // 0x20: pointer
  set WlxAssignShellProtection(value: Uint8Array | Deno.PointerValue) {
    this.view.setBigUint64(32, BigInt(Deno.UnsafePointer.value(util.toPointer(value))), true);
  }

  // 0x28: pointer
  set WlxMessageBox(value: Uint8Array | Deno.PointerValue) {
    this.view.setBigUint64(40, BigInt(Deno.UnsafePointer.value(util.toPointer(value))), true);
  }

  // 0x30: pointer
  set WlxDialogBox(value: Uint8Array | Deno.PointerValue) {
    this.view.setBigUint64(48, BigInt(Deno.UnsafePointer.value(util.toPointer(value))), true);
  }

  // 0x38: pointer
  set WlxDialogBoxParam(value: Uint8Array | Deno.PointerValue) {
    this.view.setBigUint64(56, BigInt(Deno.UnsafePointer.value(util.toPointer(value))), true);
  }

  // 0x40: pointer
  set WlxDialogBoxIndirect(value: Uint8Array | Deno.PointerValue) {
    this.view.setBigUint64(64, BigInt(Deno.UnsafePointer.value(util.toPointer(value))), true);
  }

  // 0x48: pointer
  set WlxDialogBoxIndirectParam(value: Uint8Array | Deno.PointerValue) {
    this.view.setBigUint64(72, BigInt(Deno.UnsafePointer.value(util.toPointer(value))), true);
  }

  // 0x50: pointer
  set WlxSwitchDesktopToUser(value: Uint8Array | Deno.PointerValue) {
    this.view.setBigUint64(80, BigInt(Deno.UnsafePointer.value(util.toPointer(value))), true);
  }

  // 0x58: pointer
  set WlxSwitchDesktopToWinlogon(value: Uint8Array | Deno.PointerValue) {
    this.view.setBigUint64(88, BigInt(Deno.UnsafePointer.value(util.toPointer(value))), true);
  }

  // 0x60: pointer
  set WlxChangePasswordNotify(value: Uint8Array | Deno.PointerValue) {
    this.view.setBigUint64(96, BigInt(Deno.UnsafePointer.value(util.toPointer(value))), true);
  }

  // 0x68: pointer
  set WlxGetSourceDesktop(value: Uint8Array | Deno.PointerValue) {
    this.view.setBigUint64(104, BigInt(Deno.UnsafePointer.value(util.toPointer(value))), true);
  }

  // 0x70: pointer
  set WlxSetReturnDesktop(value: Uint8Array | Deno.PointerValue) {
    this.view.setBigUint64(112, BigInt(Deno.UnsafePointer.value(util.toPointer(value))), true);
  }

  // 0x78: pointer
  set WlxCreateUserDesktop(value: Uint8Array | Deno.PointerValue) {
    this.view.setBigUint64(120, BigInt(Deno.UnsafePointer.value(util.toPointer(value))), true);
  }

  // 0x80: pointer
  set WlxChangePasswordNotifyEx(value: Uint8Array | Deno.PointerValue) {
    this.view.setBigUint64(128, BigInt(Deno.UnsafePointer.value(util.toPointer(value))), true);
  }

  // 0x88: pointer
  set WlxCloseUserDesktop(value: Uint8Array | Deno.PointerValue) {
    this.view.setBigUint64(136, BigInt(Deno.UnsafePointer.value(util.toPointer(value))), true);
  }

  // 0x90: pointer
  set WlxSetOption(value: Uint8Array | Deno.PointerValue) {
    this.view.setBigUint64(144, BigInt(Deno.UnsafePointer.value(util.toPointer(value))), true);
  }

  // 0x98: pointer
  set WlxGetOption(value: Uint8Array | Deno.PointerValue) {
    this.view.setBigUint64(152, BigInt(Deno.UnsafePointer.value(util.toPointer(value))), true);
  }

  // 0xa0: pointer
  set WlxWin31Migrate(value: Uint8Array | Deno.PointerValue) {
    this.view.setBigUint64(160, BigInt(Deno.UnsafePointer.value(util.toPointer(value))), true);
  }

  // 0xa8: pointer
  set WlxQueryClientCredentials(value: Uint8Array | Deno.PointerValue) {
    this.view.setBigUint64(168, BigInt(Deno.UnsafePointer.value(util.toPointer(value))), true);
  }

  // 0xb0: pointer
  set WlxQueryInetConnectorCredentials(value: Uint8Array | Deno.PointerValue) {
    this.view.setBigUint64(176, BigInt(Deno.UnsafePointer.value(util.toPointer(value))), true);
  }

  // 0xb8: pointer
  set WlxDisconnect(value: Uint8Array | Deno.PointerValue) {
    this.view.setBigUint64(184, BigInt(Deno.UnsafePointer.value(util.toPointer(value))), true);
  }

  // 0xc0: pointer
  set WlxQueryTerminalServicesData(value: Uint8Array | Deno.PointerValue) {
    this.view.setBigUint64(192, BigInt(Deno.UnsafePointer.value(util.toPointer(value))), true);
  }
}

/**
 * Windows.Win32.Security.WinWlx.WLX_DISPATCH_VERSION_1_4 (size: 216)
 */
export interface WLX_DISPATCH_VERSION_1_4 {
  /** Windows.Win32.Security.WinWlx.PWLX_USE_CTRL_ALT_DEL */
  WlxUseCtrlAltDel: Uint8Array | Deno.PointerValue;
  /** Windows.Win32.Security.WinWlx.PWLX_SET_CONTEXT_POINTER */
  WlxSetContextPointer: Uint8Array | Deno.PointerValue;
  /** Windows.Win32.Security.WinWlx.PWLX_SAS_NOTIFY */
  WlxSasNotify: Uint8Array | Deno.PointerValue;
  /** Windows.Win32.Security.WinWlx.PWLX_SET_TIMEOUT */
  WlxSetTimeout: Uint8Array | Deno.PointerValue;
  /** Windows.Win32.Security.WinWlx.PWLX_ASSIGN_SHELL_PROTECTION */
  WlxAssignShellProtection: Uint8Array | Deno.PointerValue;
  /** Windows.Win32.Security.WinWlx.PWLX_MESSAGE_BOX */
  WlxMessageBox: Uint8Array | Deno.PointerValue;
  /** Windows.Win32.Security.WinWlx.PWLX_DIALOG_BOX */
  WlxDialogBox: Uint8Array | Deno.PointerValue;
  /** Windows.Win32.Security.WinWlx.PWLX_DIALOG_BOX_PARAM */
  WlxDialogBoxParam: Uint8Array | Deno.PointerValue;
  /** Windows.Win32.Security.WinWlx.PWLX_DIALOG_BOX_INDIRECT */
  WlxDialogBoxIndirect: Uint8Array | Deno.PointerValue;
  /** Windows.Win32.Security.WinWlx.PWLX_DIALOG_BOX_INDIRECT_PARAM */
  WlxDialogBoxIndirectParam: Uint8Array | Deno.PointerValue;
  /** Windows.Win32.Security.WinWlx.PWLX_SWITCH_DESKTOP_TO_USER */
  WlxSwitchDesktopToUser: Uint8Array | Deno.PointerValue;
  /** Windows.Win32.Security.WinWlx.PWLX_SWITCH_DESKTOP_TO_WINLOGON */
  WlxSwitchDesktopToWinlogon: Uint8Array | Deno.PointerValue;
  /** Windows.Win32.Security.WinWlx.PWLX_CHANGE_PASSWORD_NOTIFY */
  WlxChangePasswordNotify: Uint8Array | Deno.PointerValue;
  /** Windows.Win32.Security.WinWlx.PWLX_GET_SOURCE_DESKTOP */
  WlxGetSourceDesktop: Uint8Array | Deno.PointerValue;
  /** Windows.Win32.Security.WinWlx.PWLX_SET_RETURN_DESKTOP */
  WlxSetReturnDesktop: Uint8Array | Deno.PointerValue;
  /** Windows.Win32.Security.WinWlx.PWLX_CREATE_USER_DESKTOP */
  WlxCreateUserDesktop: Uint8Array | Deno.PointerValue;
  /** Windows.Win32.Security.WinWlx.PWLX_CHANGE_PASSWORD_NOTIFY_EX */
  WlxChangePasswordNotifyEx: Uint8Array | Deno.PointerValue;
  /** Windows.Win32.Security.WinWlx.PWLX_CLOSE_USER_DESKTOP */
  WlxCloseUserDesktop: Uint8Array | Deno.PointerValue;
  /** Windows.Win32.Security.WinWlx.PWLX_SET_OPTION */
  WlxSetOption: Uint8Array | Deno.PointerValue;
  /** Windows.Win32.Security.WinWlx.PWLX_GET_OPTION */
  WlxGetOption: Uint8Array | Deno.PointerValue;
  /** Windows.Win32.Security.WinWlx.PWLX_WIN31_MIGRATE */
  WlxWin31Migrate: Uint8Array | Deno.PointerValue;
  /** Windows.Win32.Security.WinWlx.PWLX_QUERY_CLIENT_CREDENTIALS */
  WlxQueryClientCredentials: Uint8Array | Deno.PointerValue;
  /** Windows.Win32.Security.WinWlx.PWLX_QUERY_IC_CREDENTIALS */
  WlxQueryInetConnectorCredentials: Uint8Array | Deno.PointerValue;
  /** Windows.Win32.Security.WinWlx.PWLX_DISCONNECT */
  WlxDisconnect: Uint8Array | Deno.PointerValue;
  /** Windows.Win32.Security.WinWlx.PWLX_QUERY_TERMINAL_SERVICES_DATA */
  WlxQueryTerminalServicesData: Uint8Array | Deno.PointerValue;
  /** Windows.Win32.Security.WinWlx.PWLX_QUERY_CONSOLESWITCH_CREDENTIALS */
  WlxQueryConsoleSwitchCredentials: Uint8Array | Deno.PointerValue;
  /** Windows.Win32.Security.WinWlx.PWLX_QUERY_TS_LOGON_CREDENTIALS */
  WlxQueryTsLogonCredentials: Uint8Array | Deno.PointerValue;
}

export const sizeofWLX_DISPATCH_VERSION_1_4 = 216;

export function allocWLX_DISPATCH_VERSION_1_4(data?: Partial<WLX_DISPATCH_VERSION_1_4>): Uint8Array {
  const buf = new Uint8Array(sizeofWLX_DISPATCH_VERSION_1_4);
  const view = new DataView(buf.buffer);
  // 0x00: pointer
  if (data?.WlxUseCtrlAltDel !== undefined) view.setBigUint64(0, data.WlxUseCtrlAltDel === null ? 0n : BigInt(Deno.UnsafePointer.value(util.toPointer(data.WlxUseCtrlAltDel))), true);
  // 0x08: pointer
  if (data?.WlxSetContextPointer !== undefined) view.setBigUint64(8, data.WlxSetContextPointer === null ? 0n : BigInt(Deno.UnsafePointer.value(util.toPointer(data.WlxSetContextPointer))), true);
  // 0x10: pointer
  if (data?.WlxSasNotify !== undefined) view.setBigUint64(16, data.WlxSasNotify === null ? 0n : BigInt(Deno.UnsafePointer.value(util.toPointer(data.WlxSasNotify))), true);
  // 0x18: pointer
  if (data?.WlxSetTimeout !== undefined) view.setBigUint64(24, data.WlxSetTimeout === null ? 0n : BigInt(Deno.UnsafePointer.value(util.toPointer(data.WlxSetTimeout))), true);
  // 0x20: pointer
  if (data?.WlxAssignShellProtection !== undefined) view.setBigUint64(32, data.WlxAssignShellProtection === null ? 0n : BigInt(Deno.UnsafePointer.value(util.toPointer(data.WlxAssignShellProtection))), true);
  // 0x28: pointer
  if (data?.WlxMessageBox !== undefined) view.setBigUint64(40, data.WlxMessageBox === null ? 0n : BigInt(Deno.UnsafePointer.value(util.toPointer(data.WlxMessageBox))), true);
  // 0x30: pointer
  if (data?.WlxDialogBox !== undefined) view.setBigUint64(48, data.WlxDialogBox === null ? 0n : BigInt(Deno.UnsafePointer.value(util.toPointer(data.WlxDialogBox))), true);
  // 0x38: pointer
  if (data?.WlxDialogBoxParam !== undefined) view.setBigUint64(56, data.WlxDialogBoxParam === null ? 0n : BigInt(Deno.UnsafePointer.value(util.toPointer(data.WlxDialogBoxParam))), true);
  // 0x40: pointer
  if (data?.WlxDialogBoxIndirect !== undefined) view.setBigUint64(64, data.WlxDialogBoxIndirect === null ? 0n : BigInt(Deno.UnsafePointer.value(util.toPointer(data.WlxDialogBoxIndirect))), true);
  // 0x48: pointer
  if (data?.WlxDialogBoxIndirectParam !== undefined) view.setBigUint64(72, data.WlxDialogBoxIndirectParam === null ? 0n : BigInt(Deno.UnsafePointer.value(util.toPointer(data.WlxDialogBoxIndirectParam))), true);
  // 0x50: pointer
  if (data?.WlxSwitchDesktopToUser !== undefined) view.setBigUint64(80, data.WlxSwitchDesktopToUser === null ? 0n : BigInt(Deno.UnsafePointer.value(util.toPointer(data.WlxSwitchDesktopToUser))), true);
  // 0x58: pointer
  if (data?.WlxSwitchDesktopToWinlogon !== undefined) view.setBigUint64(88, data.WlxSwitchDesktopToWinlogon === null ? 0n : BigInt(Deno.UnsafePointer.value(util.toPointer(data.WlxSwitchDesktopToWinlogon))), true);
  // 0x60: pointer
  if (data?.WlxChangePasswordNotify !== undefined) view.setBigUint64(96, data.WlxChangePasswordNotify === null ? 0n : BigInt(Deno.UnsafePointer.value(util.toPointer(data.WlxChangePasswordNotify))), true);
  // 0x68: pointer
  if (data?.WlxGetSourceDesktop !== undefined) view.setBigUint64(104, data.WlxGetSourceDesktop === null ? 0n : BigInt(Deno.UnsafePointer.value(util.toPointer(data.WlxGetSourceDesktop))), true);
  // 0x70: pointer
  if (data?.WlxSetReturnDesktop !== undefined) view.setBigUint64(112, data.WlxSetReturnDesktop === null ? 0n : BigInt(Deno.UnsafePointer.value(util.toPointer(data.WlxSetReturnDesktop))), true);
  // 0x78: pointer
  if (data?.WlxCreateUserDesktop !== undefined) view.setBigUint64(120, data.WlxCreateUserDesktop === null ? 0n : BigInt(Deno.UnsafePointer.value(util.toPointer(data.WlxCreateUserDesktop))), true);
  // 0x80: pointer
  if (data?.WlxChangePasswordNotifyEx !== undefined) view.setBigUint64(128, data.WlxChangePasswordNotifyEx === null ? 0n : BigInt(Deno.UnsafePointer.value(util.toPointer(data.WlxChangePasswordNotifyEx))), true);
  // 0x88: pointer
  if (data?.WlxCloseUserDesktop !== undefined) view.setBigUint64(136, data.WlxCloseUserDesktop === null ? 0n : BigInt(Deno.UnsafePointer.value(util.toPointer(data.WlxCloseUserDesktop))), true);
  // 0x90: pointer
  if (data?.WlxSetOption !== undefined) view.setBigUint64(144, data.WlxSetOption === null ? 0n : BigInt(Deno.UnsafePointer.value(util.toPointer(data.WlxSetOption))), true);
  // 0x98: pointer
  if (data?.WlxGetOption !== undefined) view.setBigUint64(152, data.WlxGetOption === null ? 0n : BigInt(Deno.UnsafePointer.value(util.toPointer(data.WlxGetOption))), true);
  // 0xa0: pointer
  if (data?.WlxWin31Migrate !== undefined) view.setBigUint64(160, data.WlxWin31Migrate === null ? 0n : BigInt(Deno.UnsafePointer.value(util.toPointer(data.WlxWin31Migrate))), true);
  // 0xa8: pointer
  if (data?.WlxQueryClientCredentials !== undefined) view.setBigUint64(168, data.WlxQueryClientCredentials === null ? 0n : BigInt(Deno.UnsafePointer.value(util.toPointer(data.WlxQueryClientCredentials))), true);
  // 0xb0: pointer
  if (data?.WlxQueryInetConnectorCredentials !== undefined) view.setBigUint64(176, data.WlxQueryInetConnectorCredentials === null ? 0n : BigInt(Deno.UnsafePointer.value(util.toPointer(data.WlxQueryInetConnectorCredentials))), true);
  // 0xb8: pointer
  if (data?.WlxDisconnect !== undefined) view.setBigUint64(184, data.WlxDisconnect === null ? 0n : BigInt(Deno.UnsafePointer.value(util.toPointer(data.WlxDisconnect))), true);
  // 0xc0: pointer
  if (data?.WlxQueryTerminalServicesData !== undefined) view.setBigUint64(192, data.WlxQueryTerminalServicesData === null ? 0n : BigInt(Deno.UnsafePointer.value(util.toPointer(data.WlxQueryTerminalServicesData))), true);
  // 0xc8: pointer
  if (data?.WlxQueryConsoleSwitchCredentials !== undefined) view.setBigUint64(200, data.WlxQueryConsoleSwitchCredentials === null ? 0n : BigInt(Deno.UnsafePointer.value(util.toPointer(data.WlxQueryConsoleSwitchCredentials))), true);
  // 0xd0: pointer
  if (data?.WlxQueryTsLogonCredentials !== undefined) view.setBigUint64(208, data.WlxQueryTsLogonCredentials === null ? 0n : BigInt(Deno.UnsafePointer.value(util.toPointer(data.WlxQueryTsLogonCredentials))), true);
  return buf;
}

export class WLX_DISPATCH_VERSION_1_4View {
  private readonly view: DataView;
  constructor(private readonly buf: Uint8Array) {
    this.view = new DataView(buf.buffer);
  }

  get buffer(): Uint8Array {
    return this.buf;
  }

  // 0x00: pointer
  get WlxUseCtrlAltDel(): Uint8Array | Deno.PointerValue {
    const ptr = this.view.getBigUint64(0, true);
    return Deno.UnsafePointer.create(ptr);
  }

  // 0x08: pointer
  get WlxSetContextPointer(): Uint8Array | Deno.PointerValue {
    const ptr = this.view.getBigUint64(8, true);
    return Deno.UnsafePointer.create(ptr);
  }

  // 0x10: pointer
  get WlxSasNotify(): Uint8Array | Deno.PointerValue {
    const ptr = this.view.getBigUint64(16, true);
    return Deno.UnsafePointer.create(ptr);
  }

  // 0x18: pointer
  get WlxSetTimeout(): Uint8Array | Deno.PointerValue {
    const ptr = this.view.getBigUint64(24, true);
    return Deno.UnsafePointer.create(ptr);
  }

  // 0x20: pointer
  get WlxAssignShellProtection(): Uint8Array | Deno.PointerValue {
    const ptr = this.view.getBigUint64(32, true);
    return Deno.UnsafePointer.create(ptr);
  }

  // 0x28: pointer
  get WlxMessageBox(): Uint8Array | Deno.PointerValue {
    const ptr = this.view.getBigUint64(40, true);
    return Deno.UnsafePointer.create(ptr);
  }

  // 0x30: pointer
  get WlxDialogBox(): Uint8Array | Deno.PointerValue {
    const ptr = this.view.getBigUint64(48, true);
    return Deno.UnsafePointer.create(ptr);
  }

  // 0x38: pointer
  get WlxDialogBoxParam(): Uint8Array | Deno.PointerValue {
    const ptr = this.view.getBigUint64(56, true);
    return Deno.UnsafePointer.create(ptr);
  }

  // 0x40: pointer
  get WlxDialogBoxIndirect(): Uint8Array | Deno.PointerValue {
    const ptr = this.view.getBigUint64(64, true);
    return Deno.UnsafePointer.create(ptr);
  }

  // 0x48: pointer
  get WlxDialogBoxIndirectParam(): Uint8Array | Deno.PointerValue {
    const ptr = this.view.getBigUint64(72, true);
    return Deno.UnsafePointer.create(ptr);
  }

  // 0x50: pointer
  get WlxSwitchDesktopToUser(): Uint8Array | Deno.PointerValue {
    const ptr = this.view.getBigUint64(80, true);
    return Deno.UnsafePointer.create(ptr);
  }

  // 0x58: pointer
  get WlxSwitchDesktopToWinlogon(): Uint8Array | Deno.PointerValue {
    const ptr = this.view.getBigUint64(88, true);
    return Deno.UnsafePointer.create(ptr);
  }

  // 0x60: pointer
  get WlxChangePasswordNotify(): Uint8Array | Deno.PointerValue {
    const ptr = this.view.getBigUint64(96, true);
    return Deno.UnsafePointer.create(ptr);
  }

  // 0x68: pointer
  get WlxGetSourceDesktop(): Uint8Array | Deno.PointerValue {
    const ptr = this.view.getBigUint64(104, true);
    return Deno.UnsafePointer.create(ptr);
  }

  // 0x70: pointer
  get WlxSetReturnDesktop(): Uint8Array | Deno.PointerValue {
    const ptr = this.view.getBigUint64(112, true);
    return Deno.UnsafePointer.create(ptr);
  }

  // 0x78: pointer
  get WlxCreateUserDesktop(): Uint8Array | Deno.PointerValue {
    const ptr = this.view.getBigUint64(120, true);
    return Deno.UnsafePointer.create(ptr);
  }

  // 0x80: pointer
  get WlxChangePasswordNotifyEx(): Uint8Array | Deno.PointerValue {
    const ptr = this.view.getBigUint64(128, true);
    return Deno.UnsafePointer.create(ptr);
  }

  // 0x88: pointer
  get WlxCloseUserDesktop(): Uint8Array | Deno.PointerValue {
    const ptr = this.view.getBigUint64(136, true);
    return Deno.UnsafePointer.create(ptr);
  }

  // 0x90: pointer
  get WlxSetOption(): Uint8Array | Deno.PointerValue {
    const ptr = this.view.getBigUint64(144, true);
    return Deno.UnsafePointer.create(ptr);
  }

  // 0x98: pointer
  get WlxGetOption(): Uint8Array | Deno.PointerValue {
    const ptr = this.view.getBigUint64(152, true);
    return Deno.UnsafePointer.create(ptr);
  }

  // 0xa0: pointer
  get WlxWin31Migrate(): Uint8Array | Deno.PointerValue {
    const ptr = this.view.getBigUint64(160, true);
    return Deno.UnsafePointer.create(ptr);
  }

  // 0xa8: pointer
  get WlxQueryClientCredentials(): Uint8Array | Deno.PointerValue {
    const ptr = this.view.getBigUint64(168, true);
    return Deno.UnsafePointer.create(ptr);
  }

  // 0xb0: pointer
  get WlxQueryInetConnectorCredentials(): Uint8Array | Deno.PointerValue {
    const ptr = this.view.getBigUint64(176, true);
    return Deno.UnsafePointer.create(ptr);
  }

  // 0xb8: pointer
  get WlxDisconnect(): Uint8Array | Deno.PointerValue {
    const ptr = this.view.getBigUint64(184, true);
    return Deno.UnsafePointer.create(ptr);
  }

  // 0xc0: pointer
  get WlxQueryTerminalServicesData(): Uint8Array | Deno.PointerValue {
    const ptr = this.view.getBigUint64(192, true);
    return Deno.UnsafePointer.create(ptr);
  }

  // 0xc8: pointer
  get WlxQueryConsoleSwitchCredentials(): Uint8Array | Deno.PointerValue {
    const ptr = this.view.getBigUint64(200, true);
    return Deno.UnsafePointer.create(ptr);
  }

  // 0xd0: pointer
  get WlxQueryTsLogonCredentials(): Uint8Array | Deno.PointerValue {
    const ptr = this.view.getBigUint64(208, true);
    return Deno.UnsafePointer.create(ptr);
  }

  // 0x00: pointer
  set WlxUseCtrlAltDel(value: Uint8Array | Deno.PointerValue) {
    this.view.setBigUint64(0, BigInt(Deno.UnsafePointer.value(util.toPointer(value))), true);
  }

  // 0x08: pointer
  set WlxSetContextPointer(value: Uint8Array | Deno.PointerValue) {
    this.view.setBigUint64(8, BigInt(Deno.UnsafePointer.value(util.toPointer(value))), true);
  }

  // 0x10: pointer
  set WlxSasNotify(value: Uint8Array | Deno.PointerValue) {
    this.view.setBigUint64(16, BigInt(Deno.UnsafePointer.value(util.toPointer(value))), true);
  }

  // 0x18: pointer
  set WlxSetTimeout(value: Uint8Array | Deno.PointerValue) {
    this.view.setBigUint64(24, BigInt(Deno.UnsafePointer.value(util.toPointer(value))), true);
  }

  // 0x20: pointer
  set WlxAssignShellProtection(value: Uint8Array | Deno.PointerValue) {
    this.view.setBigUint64(32, BigInt(Deno.UnsafePointer.value(util.toPointer(value))), true);
  }

  // 0x28: pointer
  set WlxMessageBox(value: Uint8Array | Deno.PointerValue) {
    this.view.setBigUint64(40, BigInt(Deno.UnsafePointer.value(util.toPointer(value))), true);
  }

  // 0x30: pointer
  set WlxDialogBox(value: Uint8Array | Deno.PointerValue) {
    this.view.setBigUint64(48, BigInt(Deno.UnsafePointer.value(util.toPointer(value))), true);
  }

  // 0x38: pointer
  set WlxDialogBoxParam(value: Uint8Array | Deno.PointerValue) {
    this.view.setBigUint64(56, BigInt(Deno.UnsafePointer.value(util.toPointer(value))), true);
  }

  // 0x40: pointer
  set WlxDialogBoxIndirect(value: Uint8Array | Deno.PointerValue) {
    this.view.setBigUint64(64, BigInt(Deno.UnsafePointer.value(util.toPointer(value))), true);
  }

  // 0x48: pointer
  set WlxDialogBoxIndirectParam(value: Uint8Array | Deno.PointerValue) {
    this.view.setBigUint64(72, BigInt(Deno.UnsafePointer.value(util.toPointer(value))), true);
  }

  // 0x50: pointer
  set WlxSwitchDesktopToUser(value: Uint8Array | Deno.PointerValue) {
    this.view.setBigUint64(80, BigInt(Deno.UnsafePointer.value(util.toPointer(value))), true);
  }

  // 0x58: pointer
  set WlxSwitchDesktopToWinlogon(value: Uint8Array | Deno.PointerValue) {
    this.view.setBigUint64(88, BigInt(Deno.UnsafePointer.value(util.toPointer(value))), true);
  }

  // 0x60: pointer
  set WlxChangePasswordNotify(value: Uint8Array | Deno.PointerValue) {
    this.view.setBigUint64(96, BigInt(Deno.UnsafePointer.value(util.toPointer(value))), true);
  }

  // 0x68: pointer
  set WlxGetSourceDesktop(value: Uint8Array | Deno.PointerValue) {
    this.view.setBigUint64(104, BigInt(Deno.UnsafePointer.value(util.toPointer(value))), true);
  }

  // 0x70: pointer
  set WlxSetReturnDesktop(value: Uint8Array | Deno.PointerValue) {
    this.view.setBigUint64(112, BigInt(Deno.UnsafePointer.value(util.toPointer(value))), true);
  }

  // 0x78: pointer
  set WlxCreateUserDesktop(value: Uint8Array | Deno.PointerValue) {
    this.view.setBigUint64(120, BigInt(Deno.UnsafePointer.value(util.toPointer(value))), true);
  }

  // 0x80: pointer
  set WlxChangePasswordNotifyEx(value: Uint8Array | Deno.PointerValue) {
    this.view.setBigUint64(128, BigInt(Deno.UnsafePointer.value(util.toPointer(value))), true);
  }

  // 0x88: pointer
  set WlxCloseUserDesktop(value: Uint8Array | Deno.PointerValue) {
    this.view.setBigUint64(136, BigInt(Deno.UnsafePointer.value(util.toPointer(value))), true);
  }

  // 0x90: pointer
  set WlxSetOption(value: Uint8Array | Deno.PointerValue) {
    this.view.setBigUint64(144, BigInt(Deno.UnsafePointer.value(util.toPointer(value))), true);
  }

  // 0x98: pointer
  set WlxGetOption(value: Uint8Array | Deno.PointerValue) {
    this.view.setBigUint64(152, BigInt(Deno.UnsafePointer.value(util.toPointer(value))), true);
  }

  // 0xa0: pointer
  set WlxWin31Migrate(value: Uint8Array | Deno.PointerValue) {
    this.view.setBigUint64(160, BigInt(Deno.UnsafePointer.value(util.toPointer(value))), true);
  }

  // 0xa8: pointer
  set WlxQueryClientCredentials(value: Uint8Array | Deno.PointerValue) {
    this.view.setBigUint64(168, BigInt(Deno.UnsafePointer.value(util.toPointer(value))), true);
  }

  // 0xb0: pointer
  set WlxQueryInetConnectorCredentials(value: Uint8Array | Deno.PointerValue) {
    this.view.setBigUint64(176, BigInt(Deno.UnsafePointer.value(util.toPointer(value))), true);
  }

  // 0xb8: pointer
  set WlxDisconnect(value: Uint8Array | Deno.PointerValue) {
    this.view.setBigUint64(184, BigInt(Deno.UnsafePointer.value(util.toPointer(value))), true);
  }

  // 0xc0: pointer
  set WlxQueryTerminalServicesData(value: Uint8Array | Deno.PointerValue) {
    this.view.setBigUint64(192, BigInt(Deno.UnsafePointer.value(util.toPointer(value))), true);
  }

  // 0xc8: pointer
  set WlxQueryConsoleSwitchCredentials(value: Uint8Array | Deno.PointerValue) {
    this.view.setBigUint64(200, BigInt(Deno.UnsafePointer.value(util.toPointer(value))), true);
  }

  // 0xd0: pointer
  set WlxQueryTsLogonCredentials(value: Uint8Array | Deno.PointerValue) {
    this.view.setBigUint64(208, BigInt(Deno.UnsafePointer.value(util.toPointer(value))), true);
  }
}

/**
 * Windows.Win32.Security.WinWlx.WLX_NOTIFICATION_INFO (size: 56)
 */
export interface WLX_NOTIFICATION_INFO {
  /** u32 */
  Size: number;
  /** u32 */
  Flags: number;
  /** Windows.Win32.Foundation.PWSTR */
  UserName: string | null | Uint8Array | Uint16Array;
  /** Windows.Win32.Foundation.PWSTR */
  Domain: string | null | Uint8Array | Uint16Array;
  /** Windows.Win32.Foundation.PWSTR */
  WindowStation: string | null | Uint8Array | Uint16Array;
  /** Windows.Win32.Foundation.HANDLE */
  hToken: Uint8Array | Deno.PointerValue;
  /** Windows.Win32.System.StationsAndDesktops.HDESK */
  hDesktop: Uint8Array | Deno.PointerValue;
  /** Windows.Win32.Security.WinWlx.PFNMSGECALLBACK */
  pStatusCallback: Uint8Array | Deno.PointerValue;
}

export const sizeofWLX_NOTIFICATION_INFO = 56;

export function allocWLX_NOTIFICATION_INFO(data?: Partial<WLX_NOTIFICATION_INFO>): Uint8Array {
  const buf = new Uint8Array(sizeofWLX_NOTIFICATION_INFO);
  const view = new DataView(buf.buffer);
  // 0x00: u32
  if (data?.Size !== undefined) view.setUint32(0, Number(data.Size), true);
  // 0x04: u32
  if (data?.Flags !== undefined) view.setUint32(4, Number(data.Flags), true);
  // 0x08: buffer
  if (data?.UserName !== undefined) {
    (buf as any)._f8 = util.pwstrToFfi(data.UserName);
    view.setBigUint64(8, (buf as any)._f8 === null ? 0n : BigInt(Deno.UnsafePointer.value(Deno.UnsafePointer.of((buf as any)._f8))), true);
  }
  // 0x10: buffer
  if (data?.Domain !== undefined) {
    (buf as any)._f16 = util.pwstrToFfi(data.Domain);
    view.setBigUint64(16, (buf as any)._f16 === null ? 0n : BigInt(Deno.UnsafePointer.value(Deno.UnsafePointer.of((buf as any)._f16))), true);
  }
  // 0x18: buffer
  if (data?.WindowStation !== undefined) {
    (buf as any)._f24 = util.pwstrToFfi(data.WindowStation);
    view.setBigUint64(24, (buf as any)._f24 === null ? 0n : BigInt(Deno.UnsafePointer.value(Deno.UnsafePointer.of((buf as any)._f24))), true);
  }
  // 0x20: pointer
  if (data?.hToken !== undefined) view.setBigUint64(32, data.hToken === null ? 0n : BigInt(Deno.UnsafePointer.value(util.toPointer(data.hToken))), true);
  // 0x28: pointer
  if (data?.hDesktop !== undefined) view.setBigUint64(40, data.hDesktop === null ? 0n : BigInt(Deno.UnsafePointer.value(util.toPointer(data.hDesktop))), true);
  // 0x30: pointer
  if (data?.pStatusCallback !== undefined) view.setBigUint64(48, data.pStatusCallback === null ? 0n : BigInt(Deno.UnsafePointer.value(util.toPointer(data.pStatusCallback))), true);
  return buf;
}

export class WLX_NOTIFICATION_INFOView {
  private readonly view: DataView;
  constructor(private readonly buf: Uint8Array) {
    this.view = new DataView(buf.buffer);
  }

  get buffer(): Uint8Array {
    return this.buf;
  }

  // 0x00: u32
  get Size(): number {
    return this.view.getUint32(0, true);
  }

  // 0x04: u32
  get Flags(): number {
    return this.view.getUint32(4, true);
  }

  // 0x08: buffer
  get UserName(): Uint8Array | Deno.PointerValue {
    const ptr = this.view.getBigUint64(8, true);
    return Deno.UnsafePointer.create(ptr);
  }

  // 0x10: buffer
  get Domain(): Uint8Array | Deno.PointerValue {
    const ptr = this.view.getBigUint64(16, true);
    return Deno.UnsafePointer.create(ptr);
  }

  // 0x18: buffer
  get WindowStation(): Uint8Array | Deno.PointerValue {
    const ptr = this.view.getBigUint64(24, true);
    return Deno.UnsafePointer.create(ptr);
  }

  // 0x20: pointer
  get hToken(): Uint8Array | Deno.PointerValue {
    const ptr = this.view.getBigUint64(32, true);
    return Deno.UnsafePointer.create(ptr);
  }

  // 0x28: pointer
  get hDesktop(): Uint8Array | Deno.PointerValue {
    const ptr = this.view.getBigUint64(40, true);
    return Deno.UnsafePointer.create(ptr);
  }

  // 0x30: pointer
  get pStatusCallback(): Uint8Array | Deno.PointerValue {
    const ptr = this.view.getBigUint64(48, true);
    return Deno.UnsafePointer.create(ptr);
  }

  // 0x00: u32
  set Size(value: number) {
    this.view.setUint32(0, value, true);
  }

  // 0x04: u32
  set Flags(value: number) {
    this.view.setUint32(4, value, true);
  }

  // 0x08: buffer
  set UserName(value: Uint8Array | Deno.PointerValue) {
    (this.buf as any)._f8 = value;
    this.view.setBigUint64(8, BigInt(Deno.UnsafePointer.value(util.toPointer((this.buf as any)._f8))), true);
  }

  // 0x10: buffer
  set Domain(value: Uint8Array | Deno.PointerValue) {
    (this.buf as any)._f16 = value;
    this.view.setBigUint64(16, BigInt(Deno.UnsafePointer.value(util.toPointer((this.buf as any)._f16))), true);
  }

  // 0x18: buffer
  set WindowStation(value: Uint8Array | Deno.PointerValue) {
    (this.buf as any)._f24 = value;
    this.view.setBigUint64(24, BigInt(Deno.UnsafePointer.value(util.toPointer((this.buf as any)._f24))), true);
  }

  // 0x20: pointer
  set hToken(value: Uint8Array | Deno.PointerValue) {
    this.view.setBigUint64(32, BigInt(Deno.UnsafePointer.value(util.toPointer(value))), true);
  }

  // 0x28: pointer
  set hDesktop(value: Uint8Array | Deno.PointerValue) {
    this.view.setBigUint64(40, BigInt(Deno.UnsafePointer.value(util.toPointer(value))), true);
  }

  // 0x30: pointer
  set pStatusCallback(value: Uint8Array | Deno.PointerValue) {
    this.view.setBigUint64(48, BigInt(Deno.UnsafePointer.value(util.toPointer(value))), true);
  }
}

// Native Libraries

// Symbols

