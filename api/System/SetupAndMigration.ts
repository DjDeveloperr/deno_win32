/// Auto-generated by Deno Win32: Windows.Win32.System.SetupAndMigration.Apis

import * as util from "../../util.ts";

// Structs

export type BOOL = number;

// Native Libraries

try {
  var libKERNEL32 = Deno.dlopen("KERNEL32", {
    OOBEComplete: {
      parameters: ["pointer"],
      result: "i32",
    },
    RegisterWaitUntilOOBECompleted: {
      parameters: ["pointer", "pointer", "pointer"],
      result: "i32",
    },
    UnregisterWaitUntilOOBECompleted: {
      parameters: ["pointer"],
      result: "i32",
    },
  }).symbols;
} catch(e) { /* ignore */ }

// Symbols

export function OOBEComplete(
  isOOBEComplete: Deno.PointerValue | Uint8Array | null /* ptr */,
): boolean /* Windows.Win32.Foundation.BOOL */ {
  return util.boolFromFfi(libKERNEL32.OOBEComplete(util.toPointer(isOOBEComplete)));
}

export function RegisterWaitUntilOOBECompleted(
  OOBECompletedCallback: Uint8Array | Deno.PointerValue | null /* Windows.Win32.System.SetupAndMigration.OOBE_COMPLETED_CALLBACK */,
  CallbackContext: Deno.PointerValue | Uint8Array | null /* ptr */,
  WaitHandle: Deno.PointerValue | Uint8Array | null /* ptr */,
): boolean /* Windows.Win32.Foundation.BOOL */ {
  return util.boolFromFfi(libKERNEL32.RegisterWaitUntilOOBECompleted(util.toPointer(OOBECompletedCallback), util.toPointer(CallbackContext), util.toPointer(WaitHandle)));
}

export function UnregisterWaitUntilOOBECompleted(
  WaitHandle: Deno.PointerValue | Uint8Array | null /* ptr */,
): boolean /* Windows.Win32.Foundation.BOOL */ {
  return util.boolFromFfi(libKERNEL32.UnregisterWaitUntilOOBECompleted(util.toPointer(WaitHandle)));
}

