/// Auto-generated by Deno Win32: Windows.Win32.System.SetupAndMigration.Apis

import * as util from "../../util.ts";

// Structs

export type BOOL = number;

// Native Libraries

try {
  var libKERNEL32_dll = Deno.dlopen("KERNEL32.dll", {
    OOBEComplete: {
      parameters: ["pointer"],
      result: "i32",
      optional: true,
    },
    RegisterWaitUntilOOBECompleted: {
      parameters: ["pointer", "pointer", "pointer"],
      result: "i32",
      optional: true,
    },
    UnregisterWaitUntilOOBECompleted: {
      parameters: ["pointer"],
      result: "i32",
      optional: true,
    },
  }).symbols;
} catch(e) { /* ignore */ }

// Symbols

export function OOBEComplete(
  isOOBEComplete: Deno.PointerValue | Uint8Array /* ptr */,
): boolean /* Windows.Win32.Foundation.BOOL */ {
  return util.boolFromFfi(libKERNEL32_dll.OOBEComplete!(util.toPointer(isOOBEComplete)));
}

export function RegisterWaitUntilOOBECompleted(
  OOBECompletedCallback: Uint8Array | Deno.PointerValue /* Windows.Win32.System.SetupAndMigration.OOBE_COMPLETED_CALLBACK */,
  CallbackContext: Deno.PointerValue | Uint8Array /* ptr */,
  WaitHandle: Deno.PointerValue | Uint8Array /* ptr */,
): boolean /* Windows.Win32.Foundation.BOOL */ {
  return util.boolFromFfi(libKERNEL32_dll.RegisterWaitUntilOOBECompleted!(util.toPointer(OOBECompletedCallback), util.toPointer(CallbackContext), util.toPointer(WaitHandle)));
}

export function UnregisterWaitUntilOOBECompleted(
  WaitHandle: Deno.PointerValue | Uint8Array /* ptr */,
): boolean /* Windows.Win32.Foundation.BOOL */ {
  return util.boolFromFfi(libKERNEL32_dll.UnregisterWaitUntilOOBECompleted!(util.toPointer(WaitHandle)));
}

