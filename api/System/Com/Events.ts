/// Auto-generated by Deno Win32: Windows.Win32.System.Com.Events.Apis

import * as util from "../../../util.ts";

// Enums
export type EOC_ChangeType = number;

// Constants
export const EOC_NewObject = 0;
export const EOC_ModifiedObject = 1;
export const EOC_DeletedObject = 2;

// Structs

export type BSTR = Deno.PointerValue | Uint8Array;

/**
 * Windows.Win32.System.Com.Events.COMEVENTSYSCHANGEINFO (size: 40)
 */
export interface COMEVENTSYSCHANGEINFO {
  /** u32 */
  cbSize: number;
  /** Windows.Win32.System.Com.Events.EOC_ChangeType */
  changeType: EOC_ChangeType;
  /** Windows.Win32.Foundation.BSTR */
  objectId: Uint8Array | Deno.PointerValue;
  /** Windows.Win32.Foundation.BSTR */
  partitionId: Uint8Array | Deno.PointerValue;
  /** Windows.Win32.Foundation.BSTR */
  applicationId: Uint8Array | Deno.PointerValue;
  /** array */
  reserved: Deno.PointerValue;
}

export const sizeofCOMEVENTSYSCHANGEINFO = 40;

export function allocCOMEVENTSYSCHANGEINFO(data?: Partial<COMEVENTSYSCHANGEINFO>): Uint8Array {
  const buf = new Uint8Array(sizeofCOMEVENTSYSCHANGEINFO);
  const view = new DataView(buf.buffer);
  // 0x00: u32
  if (data?.cbSize !== undefined) view.setUint32(0, Number(data.cbSize), true);
  // 0x04: i32
  if (data?.changeType !== undefined) view.setInt32(4, Number(data.changeType), true);
  // 0x08: pointer
  if (data?.objectId !== undefined) view.setBigUint64(8, data.objectId === null ? 0n : BigInt(Deno.UnsafePointer.value(util.toPointer(data.objectId))), true);
  // 0x10: pointer
  if (data?.partitionId !== undefined) view.setBigUint64(16, data.partitionId === null ? 0n : BigInt(Deno.UnsafePointer.value(util.toPointer(data.partitionId))), true);
  // 0x18: pointer
  if (data?.applicationId !== undefined) view.setBigUint64(24, data.applicationId === null ? 0n : BigInt(Deno.UnsafePointer.value(util.toPointer(data.applicationId))), true);
  // 0x20: pointer
  if (data?.reserved !== undefined) view.setBigUint64(32, data.reserved === null ? 0n : BigInt(Deno.UnsafePointer.value(util.toPointer(data.reserved))), true);
  return buf;
}

export class COMEVENTSYSCHANGEINFOView {
  private readonly view: DataView;
  constructor(private readonly buf: Uint8Array) {
    this.view = new DataView(buf.buffer);
  }

  get buffer(): Uint8Array {
    return this.buf;
  }

  // 0x00: u32
  get cbSize(): number {
    return this.view.getUint32(0, true);
  }

  // 0x04: i32
  get changeType(): number {
    return this.view.getInt32(4, true);
  }

  // 0x08: pointer
  get objectId(): Uint8Array | Deno.PointerValue {
    const ptr = this.view.getBigUint64(8, true);
    return Deno.UnsafePointer.create(ptr);
  }

  // 0x10: pointer
  get partitionId(): Uint8Array | Deno.PointerValue {
    const ptr = this.view.getBigUint64(16, true);
    return Deno.UnsafePointer.create(ptr);
  }

  // 0x18: pointer
  get applicationId(): Uint8Array | Deno.PointerValue {
    const ptr = this.view.getBigUint64(24, true);
    return Deno.UnsafePointer.create(ptr);
  }

  // 0x20: pointer
  get reserved(): Uint8Array | Deno.PointerValue {
    const ptr = this.view.getBigUint64(32, true);
    return Deno.UnsafePointer.create(ptr);
  }

  // 0x00: u32
  set cbSize(value: number) {
    this.view.setUint32(0, value, true);
  }

  // 0x04: i32
  set changeType(value: number) {
    this.view.setInt32(4, value, true);
  }

  // 0x08: pointer
  set objectId(value: Uint8Array | Deno.PointerValue) {
    this.view.setBigUint64(8, BigInt(Deno.UnsafePointer.value(util.toPointer(value))), true);
  }

  // 0x10: pointer
  set partitionId(value: Uint8Array | Deno.PointerValue) {
    this.view.setBigUint64(16, BigInt(Deno.UnsafePointer.value(util.toPointer(value))), true);
  }

  // 0x18: pointer
  set applicationId(value: Uint8Array | Deno.PointerValue) {
    this.view.setBigUint64(24, BigInt(Deno.UnsafePointer.value(util.toPointer(value))), true);
  }

  // 0x20: pointer
  set reserved(value: Uint8Array | Deno.PointerValue) {
    this.view.setBigUint64(32, BigInt(Deno.UnsafePointer.value(util.toPointer(value))), true);
  }
}

// Native Libraries

// Symbols

