/// Auto-generated by Deno Win32: Windows.Win32.System.Js.Apis

import * as util from "../../util.ts";

// Enums
export type JsRuntimeVersion = number;
export type JsErrorCode = number;
export type JsRuntimeAttributes = number;
export type JsMemoryEventType = number;
export type JsValueType = number;
export type PROFILER_EVENT_MASK = number;

// Constants
export const JsRuntimeVersion10 = 0;
export const JsRuntimeVersion11 = 1;
export const JsRuntimeVersionEdge = "-1";
export const JS_SOURCE_CONTEXT_NONE = 18446744073709551615n;
export const JsNoError = 0;
export const JsErrorCategoryUsage = 65536;
export const JsErrorInvalidArgument = 65537;
export const JsErrorNullArgument = 65538;
export const JsErrorNoCurrentContext = 65539;
export const JsErrorInExceptionState = 65540;
export const JsErrorNotImplemented = 65541;
export const JsErrorWrongThread = 65542;
export const JsErrorRuntimeInUse = 65543;
export const JsErrorBadSerializedScript = 65544;
export const JsErrorInDisabledState = 65545;
export const JsErrorCannotDisableExecution = 65546;
export const JsErrorHeapEnumInProgress = 65547;
export const JsErrorArgumentNotObject = 65548;
export const JsErrorInProfileCallback = 65549;
export const JsErrorInThreadServiceCallback = 65550;
export const JsErrorCannotSerializeDebugScript = 65551;
export const JsErrorAlreadyDebuggingContext = 65552;
export const JsErrorAlreadyProfilingContext = 65553;
export const JsErrorIdleNotEnabled = 65554;
export const JsErrorCategoryEngine = 131072;
export const JsErrorOutOfMemory = 131073;
export const JsErrorCategoryScript = 196608;
export const JsErrorScriptException = 196609;
export const JsErrorScriptCompile = 196610;
export const JsErrorScriptTerminated = 196611;
export const JsErrorScriptEvalDisabled = 196612;
export const JsErrorCategoryFatal = 262144;
export const JsErrorFatal = 262145;
export const JsRuntimeAttributeNone = 0;
export const JsRuntimeAttributeDisableBackgroundWork = 1;
export const JsRuntimeAttributeAllowScriptInterrupt = 2;
export const JsRuntimeAttributeEnableIdleProcessing = 4;
export const JsRuntimeAttributeDisableNativeCodeGeneration = 8;
export const JsRuntimeAttributeDisableEval = 16;
export const JsMemoryAllocate = 0;
export const JsMemoryFree = 1;
export const JsMemoryFailure = 2;
export const JsUndefined = 0;
export const JsNull = 1;
export const JsNumber = 2;
export const JsString = 3;
export const JsBoolean = 4;
export const JsObject = 5;
export const JsFunction = 6;
export const JsError = 7;
export const JsArray = 8;
export const PROFILER_EVENT_MASK_TRACE_SCRIPT_FUNCTION_CALL = 1;
export const PROFILER_EVENT_MASK_TRACE_NATIVE_FUNCTION_CALL = 2;
export const PROFILER_EVENT_MASK_TRACE_DOM_FUNCTION_CALL = 4;
export const PROFILER_EVENT_MASK_TRACE_ALL = 3;
export const PROFILER_EVENT_MASK_TRACE_ALL_WITH_DOM = 7;

// Structs

export type PWSTR = Deno.PointerValue | Uint8Array | null;

export type HRESULT = number;

// Native Libraries

try {
  var libchakra = Deno.dlopen("chakra", {
    JsCreateRuntime: {
      parameters: ["i32", "i32", "pointer", "pointer"],
      result: "u32",
    },
    JsCollectGarbage: {
      parameters: ["pointer"],
      result: "u32",
    },
    JsDisposeRuntime: {
      parameters: ["pointer"],
      result: "u32",
    },
    JsGetRuntimeMemoryUsage: {
      parameters: ["pointer", "pointer"],
      result: "u32",
    },
    JsGetRuntimeMemoryLimit: {
      parameters: ["pointer", "pointer"],
      result: "u32",
    },
    JsSetRuntimeMemoryLimit: {
      parameters: ["pointer", "usize"],
      result: "u32",
    },
    JsSetRuntimeMemoryAllocationCallback: {
      parameters: ["pointer", "pointer", "pointer"],
      result: "u32",
    },
    JsSetRuntimeBeforeCollectCallback: {
      parameters: ["pointer", "pointer", "pointer"],
      result: "u32",
    },
    JsAddRef: {
      parameters: ["pointer", "pointer"],
      result: "u32",
    },
    JsRelease: {
      parameters: ["pointer", "pointer"],
      result: "u32",
    },
    JsCreateContext: {
      parameters: ["pointer", "pointer", "pointer"],
      result: "u32",
    },
    JsGetCurrentContext: {
      parameters: ["pointer"],
      result: "u32",
    },
    JsSetCurrentContext: {
      parameters: ["pointer"],
      result: "u32",
    },
    JsGetRuntime: {
      parameters: ["pointer", "pointer"],
      result: "u32",
    },
    JsStartDebugging: {
      parameters: ["pointer"],
      result: "u32",
    },
    JsIdle: {
      parameters: ["pointer"],
      result: "u32",
    },
    JsParseScript: {
      parameters: ["buffer", "usize", "buffer", "pointer"],
      result: "u32",
    },
    JsRunScript: {
      parameters: ["buffer", "usize", "buffer", "pointer"],
      result: "u32",
    },
    JsSerializeScript: {
      parameters: ["buffer", "pointer", "pointer"],
      result: "u32",
    },
    JsParseSerializedScript: {
      parameters: ["buffer", "pointer", "usize", "buffer", "pointer"],
      result: "u32",
    },
    JsRunSerializedScript: {
      parameters: ["buffer", "pointer", "usize", "buffer", "pointer"],
      result: "u32",
    },
    JsGetPropertyIdFromName: {
      parameters: ["buffer", "pointer"],
      result: "u32",
    },
    JsGetPropertyNameFromId: {
      parameters: ["pointer", "pointer"],
      result: "u32",
    },
    JsGetUndefinedValue: {
      parameters: ["pointer"],
      result: "u32",
    },
    JsGetNullValue: {
      parameters: ["pointer"],
      result: "u32",
    },
    JsGetTrueValue: {
      parameters: ["pointer"],
      result: "u32",
    },
    JsGetFalseValue: {
      parameters: ["pointer"],
      result: "u32",
    },
    JsBoolToBoolean: {
      parameters: ["u8", "pointer"],
      result: "u32",
    },
    JsBooleanToBool: {
      parameters: ["pointer", "pointer"],
      result: "u32",
    },
    JsConvertValueToBoolean: {
      parameters: ["pointer", "pointer"],
      result: "u32",
    },
    JsGetValueType: {
      parameters: ["pointer", "pointer"],
      result: "u32",
    },
    JsDoubleToNumber: {
      parameters: ["f64", "pointer"],
      result: "u32",
    },
    JsIntToNumber: {
      parameters: ["i32", "pointer"],
      result: "u32",
    },
    JsNumberToDouble: {
      parameters: ["pointer", "pointer"],
      result: "u32",
    },
    JsConvertValueToNumber: {
      parameters: ["pointer", "pointer"],
      result: "u32",
    },
    JsGetStringLength: {
      parameters: ["pointer", "pointer"],
      result: "u32",
    },
    JsPointerToString: {
      parameters: ["buffer", "usize", "pointer"],
      result: "u32",
    },
    JsStringToPointer: {
      parameters: ["pointer", "pointer", "pointer"],
      result: "u32",
    },
    JsConvertValueToString: {
      parameters: ["pointer", "pointer"],
      result: "u32",
    },
    JsVariantToValue: {
      parameters: ["pointer", "pointer"],
      result: "u32",
    },
    JsValueToVariant: {
      parameters: ["pointer", "pointer"],
      result: "u32",
    },
    JsGetGlobalObject: {
      parameters: ["pointer"],
      result: "u32",
    },
    JsCreateObject: {
      parameters: ["pointer"],
      result: "u32",
    },
    JsCreateExternalObject: {
      parameters: ["pointer", "pointer", "pointer"],
      result: "u32",
    },
    JsConvertValueToObject: {
      parameters: ["pointer", "pointer"],
      result: "u32",
    },
    JsGetPrototype: {
      parameters: ["pointer", "pointer"],
      result: "u32",
    },
    JsSetPrototype: {
      parameters: ["pointer", "pointer"],
      result: "u32",
    },
    JsGetExtensionAllowed: {
      parameters: ["pointer", "pointer"],
      result: "u32",
    },
    JsPreventExtension: {
      parameters: ["pointer"],
      result: "u32",
    },
    JsGetProperty: {
      parameters: ["pointer", "pointer", "pointer"],
      result: "u32",
    },
    JsGetOwnPropertyDescriptor: {
      parameters: ["pointer", "pointer", "pointer"],
      result: "u32",
    },
    JsGetOwnPropertyNames: {
      parameters: ["pointer", "pointer"],
      result: "u32",
    },
    JsSetProperty: {
      parameters: ["pointer", "pointer", "pointer", "u8"],
      result: "u32",
    },
    JsHasProperty: {
      parameters: ["pointer", "pointer", "pointer"],
      result: "u32",
    },
    JsDeleteProperty: {
      parameters: ["pointer", "pointer", "u8", "pointer"],
      result: "u32",
    },
    JsDefineProperty: {
      parameters: ["pointer", "pointer", "pointer", "pointer"],
      result: "u32",
    },
    JsHasIndexedProperty: {
      parameters: ["pointer", "pointer", "pointer"],
      result: "u32",
    },
    JsGetIndexedProperty: {
      parameters: ["pointer", "pointer", "pointer"],
      result: "u32",
    },
    JsSetIndexedProperty: {
      parameters: ["pointer", "pointer", "pointer"],
      result: "u32",
    },
    JsDeleteIndexedProperty: {
      parameters: ["pointer", "pointer"],
      result: "u32",
    },
    JsEquals: {
      parameters: ["pointer", "pointer", "pointer"],
      result: "u32",
    },
    JsStrictEquals: {
      parameters: ["pointer", "pointer", "pointer"],
      result: "u32",
    },
    JsHasExternalData: {
      parameters: ["pointer", "pointer"],
      result: "u32",
    },
    JsGetExternalData: {
      parameters: ["pointer", "pointer"],
      result: "u32",
    },
    JsSetExternalData: {
      parameters: ["pointer", "pointer"],
      result: "u32",
    },
    JsCreateArray: {
      parameters: ["u32", "pointer"],
      result: "u32",
    },
    JsCallFunction: {
      parameters: ["pointer", "pointer", "u16", "pointer"],
      result: "u32",
    },
    JsConstructObject: {
      parameters: ["pointer", "pointer", "u16", "pointer"],
      result: "u32",
    },
    JsCreateFunction: {
      parameters: ["pointer", "pointer", "pointer"],
      result: "u32",
    },
    JsCreateError: {
      parameters: ["pointer", "pointer"],
      result: "u32",
    },
    JsCreateRangeError: {
      parameters: ["pointer", "pointer"],
      result: "u32",
    },
    JsCreateReferenceError: {
      parameters: ["pointer", "pointer"],
      result: "u32",
    },
    JsCreateSyntaxError: {
      parameters: ["pointer", "pointer"],
      result: "u32",
    },
    JsCreateTypeError: {
      parameters: ["pointer", "pointer"],
      result: "u32",
    },
    JsCreateURIError: {
      parameters: ["pointer", "pointer"],
      result: "u32",
    },
    JsHasException: {
      parameters: ["pointer"],
      result: "u32",
    },
    JsGetAndClearException: {
      parameters: ["pointer"],
      result: "u32",
    },
    JsSetException: {
      parameters: ["pointer"],
      result: "u32",
    },
    JsDisableRuntimeExecution: {
      parameters: ["pointer"],
      result: "u32",
    },
    JsEnableRuntimeExecution: {
      parameters: ["pointer"],
      result: "u32",
    },
    JsIsRuntimeExecutionDisabled: {
      parameters: ["pointer", "pointer"],
      result: "u32",
    },
    JsStartProfiling: {
      parameters: ["pointer", "u32", "u32"],
      result: "u32",
    },
    JsStopProfiling: {
      parameters: ["pointer"],
      result: "u32",
    },
    JsEnumerateHeap: {
      parameters: ["pointer"],
      result: "u32",
    },
    JsIsEnumeratingHeap: {
      parameters: ["pointer"],
      result: "u32",
    },
  }).symbols;
} catch(e) { /* ignore */ }

// Symbols

export function JsCreateRuntime(
  attributes: JsRuntimeAttributes /* Windows.Win32.System.Js.JsRuntimeAttributes */,
  runtimeVersion: JsRuntimeVersion /* Windows.Win32.System.Js.JsRuntimeVersion */,
  threadService: Uint8Array | Deno.PointerValue | null /* Windows.Win32.System.Js.JsThreadServiceCallback */,
  runtime: Deno.PointerValue | Uint8Array | null /* ptr */,
): JsErrorCode /* Windows.Win32.System.Js.JsErrorCode */ {
  return libchakra.JsCreateRuntime(attributes, runtimeVersion, util.toPointer(threadService), util.toPointer(runtime));
}

export function JsCollectGarbage(
  runtime: Deno.PointerValue | Uint8Array | null /* ptr */,
): JsErrorCode /* Windows.Win32.System.Js.JsErrorCode */ {
  return libchakra.JsCollectGarbage(util.toPointer(runtime));
}

export function JsDisposeRuntime(
  runtime: Deno.PointerValue | Uint8Array | null /* ptr */,
): JsErrorCode /* Windows.Win32.System.Js.JsErrorCode */ {
  return libchakra.JsDisposeRuntime(util.toPointer(runtime));
}

export function JsGetRuntimeMemoryUsage(
  runtime: Deno.PointerValue | Uint8Array | null /* ptr */,
  memoryUsage: Deno.PointerValue | Uint8Array | null /* ptr */,
): JsErrorCode /* Windows.Win32.System.Js.JsErrorCode */ {
  return libchakra.JsGetRuntimeMemoryUsage(util.toPointer(runtime), util.toPointer(memoryUsage));
}

export function JsGetRuntimeMemoryLimit(
  runtime: Deno.PointerValue | Uint8Array | null /* ptr */,
  memoryLimit: Deno.PointerValue | Uint8Array | null /* ptr */,
): JsErrorCode /* Windows.Win32.System.Js.JsErrorCode */ {
  return libchakra.JsGetRuntimeMemoryLimit(util.toPointer(runtime), util.toPointer(memoryLimit));
}

export function JsSetRuntimeMemoryLimit(
  runtime: Deno.PointerValue | Uint8Array | null /* ptr */,
  memoryLimit: Deno.PointerValue /* usize */,
): JsErrorCode /* Windows.Win32.System.Js.JsErrorCode */ {
  return libchakra.JsSetRuntimeMemoryLimit(util.toPointer(runtime), memoryLimit);
}

export function JsSetRuntimeMemoryAllocationCallback(
  runtime: Deno.PointerValue | Uint8Array | null /* ptr */,
  callbackState: Deno.PointerValue | Uint8Array | null /* ptr */,
  allocationCallback: Uint8Array | Deno.PointerValue | null /* Windows.Win32.System.Js.JsMemoryAllocationCallback */,
): JsErrorCode /* Windows.Win32.System.Js.JsErrorCode */ {
  return libchakra.JsSetRuntimeMemoryAllocationCallback(util.toPointer(runtime), util.toPointer(callbackState), util.toPointer(allocationCallback));
}

export function JsSetRuntimeBeforeCollectCallback(
  runtime: Deno.PointerValue | Uint8Array | null /* ptr */,
  callbackState: Deno.PointerValue | Uint8Array | null /* ptr */,
  beforeCollectCallback: Uint8Array | Deno.PointerValue | null /* Windows.Win32.System.Js.JsBeforeCollectCallback */,
): JsErrorCode /* Windows.Win32.System.Js.JsErrorCode */ {
  return libchakra.JsSetRuntimeBeforeCollectCallback(util.toPointer(runtime), util.toPointer(callbackState), util.toPointer(beforeCollectCallback));
}

export function JsAddRef(
  ref: Deno.PointerValue | Uint8Array | null /* ptr */,
  count: Deno.PointerValue | Uint8Array | null /* ptr */,
): JsErrorCode /* Windows.Win32.System.Js.JsErrorCode */ {
  return libchakra.JsAddRef(util.toPointer(ref), util.toPointer(count));
}

export function JsRelease(
  ref: Deno.PointerValue | Uint8Array | null /* ptr */,
  count: Deno.PointerValue | Uint8Array | null /* ptr */,
): JsErrorCode /* Windows.Win32.System.Js.JsErrorCode */ {
  return libchakra.JsRelease(util.toPointer(ref), util.toPointer(count));
}

export function JsCreateContext(
  runtime: Deno.PointerValue | Uint8Array | null /* ptr */,
  debugApplication: Uint8Array | Deno.PointerValue | null /* Windows.Win32.System.Diagnostics.Debug.IDebugApplication32 */,
  newContext: Deno.PointerValue | Uint8Array | null /* ptr */,
): JsErrorCode /* Windows.Win32.System.Js.JsErrorCode */ {
  return libchakra.JsCreateContext(util.toPointer(runtime), util.toPointer(debugApplication), util.toPointer(newContext));
}

export function JsGetCurrentContext(
  currentContext: Deno.PointerValue | Uint8Array | null /* ptr */,
): JsErrorCode /* Windows.Win32.System.Js.JsErrorCode */ {
  return libchakra.JsGetCurrentContext(util.toPointer(currentContext));
}

export function JsSetCurrentContext(
  context: Deno.PointerValue | Uint8Array | null /* ptr */,
): JsErrorCode /* Windows.Win32.System.Js.JsErrorCode */ {
  return libchakra.JsSetCurrentContext(util.toPointer(context));
}

export function JsGetRuntime(
  context: Deno.PointerValue | Uint8Array | null /* ptr */,
  runtime: Deno.PointerValue | Uint8Array | null /* ptr */,
): JsErrorCode /* Windows.Win32.System.Js.JsErrorCode */ {
  return libchakra.JsGetRuntime(util.toPointer(context), util.toPointer(runtime));
}

export function JsStartDebugging(
  debugApplication: Uint8Array | Deno.PointerValue | null /* Windows.Win32.System.Diagnostics.Debug.IDebugApplication32 */,
): JsErrorCode /* Windows.Win32.System.Js.JsErrorCode */ {
  return libchakra.JsStartDebugging(util.toPointer(debugApplication));
}

export function JsIdle(
  nextIdleTick: Deno.PointerValue | Uint8Array | null /* ptr */,
): JsErrorCode /* Windows.Win32.System.Js.JsErrorCode */ {
  return libchakra.JsIdle(util.toPointer(nextIdleTick));
}

export function JsParseScript(
  script: string | null /* Windows.Win32.Foundation.PWSTR */,
  sourceContext: Deno.PointerValue /* usize */,
  sourceUrl: string | null /* Windows.Win32.Foundation.PWSTR */,
  result: Deno.PointerValue | Uint8Array | null /* ptr */,
): JsErrorCode /* Windows.Win32.System.Js.JsErrorCode */ {
  return libchakra.JsParseScript(util.pwstrToFfi(script), sourceContext, util.pwstrToFfi(sourceUrl), util.toPointer(result));
}

export function JsRunScript(
  script: string | null /* Windows.Win32.Foundation.PWSTR */,
  sourceContext: Deno.PointerValue /* usize */,
  sourceUrl: string | null /* Windows.Win32.Foundation.PWSTR */,
  result: Deno.PointerValue | Uint8Array | null /* ptr */,
): JsErrorCode /* Windows.Win32.System.Js.JsErrorCode */ {
  return libchakra.JsRunScript(util.pwstrToFfi(script), sourceContext, util.pwstrToFfi(sourceUrl), util.toPointer(result));
}

export function JsSerializeScript(
  script: string | null /* Windows.Win32.Foundation.PWSTR */,
  buffer: Deno.PointerValue | Uint8Array | null /* ptr */,
  bufferSize: Deno.PointerValue | Uint8Array | null /* ptr */,
): JsErrorCode /* Windows.Win32.System.Js.JsErrorCode */ {
  return libchakra.JsSerializeScript(util.pwstrToFfi(script), util.toPointer(buffer), util.toPointer(bufferSize));
}

export function JsParseSerializedScript(
  script: string | null /* Windows.Win32.Foundation.PWSTR */,
  buffer: Deno.PointerValue | Uint8Array | null /* ptr */,
  sourceContext: Deno.PointerValue /* usize */,
  sourceUrl: string | null /* Windows.Win32.Foundation.PWSTR */,
  result: Deno.PointerValue | Uint8Array | null /* ptr */,
): JsErrorCode /* Windows.Win32.System.Js.JsErrorCode */ {
  return libchakra.JsParseSerializedScript(util.pwstrToFfi(script), util.toPointer(buffer), sourceContext, util.pwstrToFfi(sourceUrl), util.toPointer(result));
}

export function JsRunSerializedScript(
  script: string | null /* Windows.Win32.Foundation.PWSTR */,
  buffer: Deno.PointerValue | Uint8Array | null /* ptr */,
  sourceContext: Deno.PointerValue /* usize */,
  sourceUrl: string | null /* Windows.Win32.Foundation.PWSTR */,
  result: Deno.PointerValue | Uint8Array | null /* ptr */,
): JsErrorCode /* Windows.Win32.System.Js.JsErrorCode */ {
  return libchakra.JsRunSerializedScript(util.pwstrToFfi(script), util.toPointer(buffer), sourceContext, util.pwstrToFfi(sourceUrl), util.toPointer(result));
}

export function JsGetPropertyIdFromName(
  name: string | null /* Windows.Win32.Foundation.PWSTR */,
  propertyId: Deno.PointerValue | Uint8Array | null /* ptr */,
): JsErrorCode /* Windows.Win32.System.Js.JsErrorCode */ {
  return libchakra.JsGetPropertyIdFromName(util.pwstrToFfi(name), util.toPointer(propertyId));
}

export function JsGetPropertyNameFromId(
  propertyId: Deno.PointerValue | Uint8Array | null /* ptr */,
  name: Deno.PointerValue | Uint8Array | null /* ptr */,
): JsErrorCode /* Windows.Win32.System.Js.JsErrorCode */ {
  return libchakra.JsGetPropertyNameFromId(util.toPointer(propertyId), util.toPointer(name));
}

export function JsGetUndefinedValue(
  undefinedValue: Deno.PointerValue | Uint8Array | null /* ptr */,
): JsErrorCode /* Windows.Win32.System.Js.JsErrorCode */ {
  return libchakra.JsGetUndefinedValue(util.toPointer(undefinedValue));
}

export function JsGetNullValue(
  nullValue: Deno.PointerValue | Uint8Array | null /* ptr */,
): JsErrorCode /* Windows.Win32.System.Js.JsErrorCode */ {
  return libchakra.JsGetNullValue(util.toPointer(nullValue));
}

export function JsGetTrueValue(
  trueValue: Deno.PointerValue | Uint8Array | null /* ptr */,
): JsErrorCode /* Windows.Win32.System.Js.JsErrorCode */ {
  return libchakra.JsGetTrueValue(util.toPointer(trueValue));
}

export function JsGetFalseValue(
  falseValue: Deno.PointerValue | Uint8Array | null /* ptr */,
): JsErrorCode /* Windows.Win32.System.Js.JsErrorCode */ {
  return libchakra.JsGetFalseValue(util.toPointer(falseValue));
}

export function JsBoolToBoolean(
  value: number /* u8 */,
  booleanValue: Deno.PointerValue | Uint8Array | null /* ptr */,
): JsErrorCode /* Windows.Win32.System.Js.JsErrorCode */ {
  return libchakra.JsBoolToBoolean(value, util.toPointer(booleanValue));
}

export function JsBooleanToBool(
  value: Deno.PointerValue | Uint8Array | null /* ptr */,
  boolValue: Deno.PointerValue | Uint8Array | null /* ptr */,
): JsErrorCode /* Windows.Win32.System.Js.JsErrorCode */ {
  return libchakra.JsBooleanToBool(util.toPointer(value), util.toPointer(boolValue));
}

export function JsConvertValueToBoolean(
  value: Deno.PointerValue | Uint8Array | null /* ptr */,
  booleanValue: Deno.PointerValue | Uint8Array | null /* ptr */,
): JsErrorCode /* Windows.Win32.System.Js.JsErrorCode */ {
  return libchakra.JsConvertValueToBoolean(util.toPointer(value), util.toPointer(booleanValue));
}

export function JsGetValueType(
  value: Deno.PointerValue | Uint8Array | null /* ptr */,
  type: Deno.PointerValue | Uint8Array | null /* ptr */,
): JsErrorCode /* Windows.Win32.System.Js.JsErrorCode */ {
  return libchakra.JsGetValueType(util.toPointer(value), util.toPointer(type));
}

export function JsDoubleToNumber(
  doubleValue: number /* f64 */,
  value: Deno.PointerValue | Uint8Array | null /* ptr */,
): JsErrorCode /* Windows.Win32.System.Js.JsErrorCode */ {
  return libchakra.JsDoubleToNumber(doubleValue, util.toPointer(value));
}

export function JsIntToNumber(
  intValue: number /* i32 */,
  value: Deno.PointerValue | Uint8Array | null /* ptr */,
): JsErrorCode /* Windows.Win32.System.Js.JsErrorCode */ {
  return libchakra.JsIntToNumber(intValue, util.toPointer(value));
}

export function JsNumberToDouble(
  value: Deno.PointerValue | Uint8Array | null /* ptr */,
  doubleValue: Deno.PointerValue | Uint8Array | null /* ptr */,
): JsErrorCode /* Windows.Win32.System.Js.JsErrorCode */ {
  return libchakra.JsNumberToDouble(util.toPointer(value), util.toPointer(doubleValue));
}

export function JsConvertValueToNumber(
  value: Deno.PointerValue | Uint8Array | null /* ptr */,
  numberValue: Deno.PointerValue | Uint8Array | null /* ptr */,
): JsErrorCode /* Windows.Win32.System.Js.JsErrorCode */ {
  return libchakra.JsConvertValueToNumber(util.toPointer(value), util.toPointer(numberValue));
}

export function JsGetStringLength(
  stringValue: Deno.PointerValue | Uint8Array | null /* ptr */,
  length: Deno.PointerValue | Uint8Array | null /* ptr */,
): JsErrorCode /* Windows.Win32.System.Js.JsErrorCode */ {
  return libchakra.JsGetStringLength(util.toPointer(stringValue), util.toPointer(length));
}

export function JsPointerToString(
  stringValue: string | null /* Windows.Win32.Foundation.PWSTR */,
  stringLength: Deno.PointerValue /* usize */,
  value: Deno.PointerValue | Uint8Array | null /* ptr */,
): JsErrorCode /* Windows.Win32.System.Js.JsErrorCode */ {
  return libchakra.JsPointerToString(util.pwstrToFfi(stringValue), stringLength, util.toPointer(value));
}

export function JsStringToPointer(
  value: Deno.PointerValue | Uint8Array | null /* ptr */,
  stringValue: Deno.PointerValue | Uint8Array | null /* ptr */,
  stringLength: Deno.PointerValue | Uint8Array | null /* ptr */,
): JsErrorCode /* Windows.Win32.System.Js.JsErrorCode */ {
  return libchakra.JsStringToPointer(util.toPointer(value), util.toPointer(stringValue), util.toPointer(stringLength));
}

export function JsConvertValueToString(
  value: Deno.PointerValue | Uint8Array | null /* ptr */,
  stringValue: Deno.PointerValue | Uint8Array | null /* ptr */,
): JsErrorCode /* Windows.Win32.System.Js.JsErrorCode */ {
  return libchakra.JsConvertValueToString(util.toPointer(value), util.toPointer(stringValue));
}

export function JsVariantToValue(
  variant: Deno.PointerValue | Uint8Array | null /* ptr */,
  value: Deno.PointerValue | Uint8Array | null /* ptr */,
): JsErrorCode /* Windows.Win32.System.Js.JsErrorCode */ {
  return libchakra.JsVariantToValue(util.toPointer(variant), util.toPointer(value));
}

export function JsValueToVariant(
  object: Deno.PointerValue | Uint8Array | null /* ptr */,
  variant: Deno.PointerValue | Uint8Array | null /* ptr */,
): JsErrorCode /* Windows.Win32.System.Js.JsErrorCode */ {
  return libchakra.JsValueToVariant(util.toPointer(object), util.toPointer(variant));
}

export function JsGetGlobalObject(
  globalObject: Deno.PointerValue | Uint8Array | null /* ptr */,
): JsErrorCode /* Windows.Win32.System.Js.JsErrorCode */ {
  return libchakra.JsGetGlobalObject(util.toPointer(globalObject));
}

export function JsCreateObject(
  object: Deno.PointerValue | Uint8Array | null /* ptr */,
): JsErrorCode /* Windows.Win32.System.Js.JsErrorCode */ {
  return libchakra.JsCreateObject(util.toPointer(object));
}

export function JsCreateExternalObject(
  data: Deno.PointerValue | Uint8Array | null /* ptr */,
  finalizeCallback: Uint8Array | Deno.PointerValue | null /* Windows.Win32.System.Js.JsFinalizeCallback */,
  object: Deno.PointerValue | Uint8Array | null /* ptr */,
): JsErrorCode /* Windows.Win32.System.Js.JsErrorCode */ {
  return libchakra.JsCreateExternalObject(util.toPointer(data), util.toPointer(finalizeCallback), util.toPointer(object));
}

export function JsConvertValueToObject(
  value: Deno.PointerValue | Uint8Array | null /* ptr */,
  object: Deno.PointerValue | Uint8Array | null /* ptr */,
): JsErrorCode /* Windows.Win32.System.Js.JsErrorCode */ {
  return libchakra.JsConvertValueToObject(util.toPointer(value), util.toPointer(object));
}

export function JsGetPrototype(
  object: Deno.PointerValue | Uint8Array | null /* ptr */,
  prototypeObject: Deno.PointerValue | Uint8Array | null /* ptr */,
): JsErrorCode /* Windows.Win32.System.Js.JsErrorCode */ {
  return libchakra.JsGetPrototype(util.toPointer(object), util.toPointer(prototypeObject));
}

export function JsSetPrototype(
  object: Deno.PointerValue | Uint8Array | null /* ptr */,
  prototypeObject: Deno.PointerValue | Uint8Array | null /* ptr */,
): JsErrorCode /* Windows.Win32.System.Js.JsErrorCode */ {
  return libchakra.JsSetPrototype(util.toPointer(object), util.toPointer(prototypeObject));
}

export function JsGetExtensionAllowed(
  object: Deno.PointerValue | Uint8Array | null /* ptr */,
  value: Deno.PointerValue | Uint8Array | null /* ptr */,
): JsErrorCode /* Windows.Win32.System.Js.JsErrorCode */ {
  return libchakra.JsGetExtensionAllowed(util.toPointer(object), util.toPointer(value));
}

export function JsPreventExtension(
  object: Deno.PointerValue | Uint8Array | null /* ptr */,
): JsErrorCode /* Windows.Win32.System.Js.JsErrorCode */ {
  return libchakra.JsPreventExtension(util.toPointer(object));
}

export function JsGetProperty(
  object: Deno.PointerValue | Uint8Array | null /* ptr */,
  propertyId: Deno.PointerValue | Uint8Array | null /* ptr */,
  value: Deno.PointerValue | Uint8Array | null /* ptr */,
): JsErrorCode /* Windows.Win32.System.Js.JsErrorCode */ {
  return libchakra.JsGetProperty(util.toPointer(object), util.toPointer(propertyId), util.toPointer(value));
}

export function JsGetOwnPropertyDescriptor(
  object: Deno.PointerValue | Uint8Array | null /* ptr */,
  propertyId: Deno.PointerValue | Uint8Array | null /* ptr */,
  propertyDescriptor: Deno.PointerValue | Uint8Array | null /* ptr */,
): JsErrorCode /* Windows.Win32.System.Js.JsErrorCode */ {
  return libchakra.JsGetOwnPropertyDescriptor(util.toPointer(object), util.toPointer(propertyId), util.toPointer(propertyDescriptor));
}

export function JsGetOwnPropertyNames(
  object: Deno.PointerValue | Uint8Array | null /* ptr */,
  propertyNames: Deno.PointerValue | Uint8Array | null /* ptr */,
): JsErrorCode /* Windows.Win32.System.Js.JsErrorCode */ {
  return libchakra.JsGetOwnPropertyNames(util.toPointer(object), util.toPointer(propertyNames));
}

export function JsSetProperty(
  object: Deno.PointerValue | Uint8Array | null /* ptr */,
  propertyId: Deno.PointerValue | Uint8Array | null /* ptr */,
  value: Deno.PointerValue | Uint8Array | null /* ptr */,
  useStrictRules: number /* u8 */,
): JsErrorCode /* Windows.Win32.System.Js.JsErrorCode */ {
  return libchakra.JsSetProperty(util.toPointer(object), util.toPointer(propertyId), util.toPointer(value), useStrictRules);
}

export function JsHasProperty(
  object: Deno.PointerValue | Uint8Array | null /* ptr */,
  propertyId: Deno.PointerValue | Uint8Array | null /* ptr */,
  hasProperty: Deno.PointerValue | Uint8Array | null /* ptr */,
): JsErrorCode /* Windows.Win32.System.Js.JsErrorCode */ {
  return libchakra.JsHasProperty(util.toPointer(object), util.toPointer(propertyId), util.toPointer(hasProperty));
}

export function JsDeleteProperty(
  object: Deno.PointerValue | Uint8Array | null /* ptr */,
  propertyId: Deno.PointerValue | Uint8Array | null /* ptr */,
  useStrictRules: number /* u8 */,
  result: Deno.PointerValue | Uint8Array | null /* ptr */,
): JsErrorCode /* Windows.Win32.System.Js.JsErrorCode */ {
  return libchakra.JsDeleteProperty(util.toPointer(object), util.toPointer(propertyId), useStrictRules, util.toPointer(result));
}

export function JsDefineProperty(
  object: Deno.PointerValue | Uint8Array | null /* ptr */,
  propertyId: Deno.PointerValue | Uint8Array | null /* ptr */,
  propertyDescriptor: Deno.PointerValue | Uint8Array | null /* ptr */,
  result: Deno.PointerValue | Uint8Array | null /* ptr */,
): JsErrorCode /* Windows.Win32.System.Js.JsErrorCode */ {
  return libchakra.JsDefineProperty(util.toPointer(object), util.toPointer(propertyId), util.toPointer(propertyDescriptor), util.toPointer(result));
}

export function JsHasIndexedProperty(
  object: Deno.PointerValue | Uint8Array | null /* ptr */,
  index: Deno.PointerValue | Uint8Array | null /* ptr */,
  result: Deno.PointerValue | Uint8Array | null /* ptr */,
): JsErrorCode /* Windows.Win32.System.Js.JsErrorCode */ {
  return libchakra.JsHasIndexedProperty(util.toPointer(object), util.toPointer(index), util.toPointer(result));
}

export function JsGetIndexedProperty(
  object: Deno.PointerValue | Uint8Array | null /* ptr */,
  index: Deno.PointerValue | Uint8Array | null /* ptr */,
  result: Deno.PointerValue | Uint8Array | null /* ptr */,
): JsErrorCode /* Windows.Win32.System.Js.JsErrorCode */ {
  return libchakra.JsGetIndexedProperty(util.toPointer(object), util.toPointer(index), util.toPointer(result));
}

export function JsSetIndexedProperty(
  object: Deno.PointerValue | Uint8Array | null /* ptr */,
  index: Deno.PointerValue | Uint8Array | null /* ptr */,
  value: Deno.PointerValue | Uint8Array | null /* ptr */,
): JsErrorCode /* Windows.Win32.System.Js.JsErrorCode */ {
  return libchakra.JsSetIndexedProperty(util.toPointer(object), util.toPointer(index), util.toPointer(value));
}

export function JsDeleteIndexedProperty(
  object: Deno.PointerValue | Uint8Array | null /* ptr */,
  index: Deno.PointerValue | Uint8Array | null /* ptr */,
): JsErrorCode /* Windows.Win32.System.Js.JsErrorCode */ {
  return libchakra.JsDeleteIndexedProperty(util.toPointer(object), util.toPointer(index));
}

export function JsEquals(
  object1: Deno.PointerValue | Uint8Array | null /* ptr */,
  object2: Deno.PointerValue | Uint8Array | null /* ptr */,
  result: Deno.PointerValue | Uint8Array | null /* ptr */,
): JsErrorCode /* Windows.Win32.System.Js.JsErrorCode */ {
  return libchakra.JsEquals(util.toPointer(object1), util.toPointer(object2), util.toPointer(result));
}

export function JsStrictEquals(
  object1: Deno.PointerValue | Uint8Array | null /* ptr */,
  object2: Deno.PointerValue | Uint8Array | null /* ptr */,
  result: Deno.PointerValue | Uint8Array | null /* ptr */,
): JsErrorCode /* Windows.Win32.System.Js.JsErrorCode */ {
  return libchakra.JsStrictEquals(util.toPointer(object1), util.toPointer(object2), util.toPointer(result));
}

export function JsHasExternalData(
  object: Deno.PointerValue | Uint8Array | null /* ptr */,
  value: Deno.PointerValue | Uint8Array | null /* ptr */,
): JsErrorCode /* Windows.Win32.System.Js.JsErrorCode */ {
  return libchakra.JsHasExternalData(util.toPointer(object), util.toPointer(value));
}

export function JsGetExternalData(
  object: Deno.PointerValue | Uint8Array | null /* ptr */,
  externalData: Deno.PointerValue | Uint8Array | null /* ptr */,
): JsErrorCode /* Windows.Win32.System.Js.JsErrorCode */ {
  return libchakra.JsGetExternalData(util.toPointer(object), util.toPointer(externalData));
}

export function JsSetExternalData(
  object: Deno.PointerValue | Uint8Array | null /* ptr */,
  externalData: Deno.PointerValue | Uint8Array | null /* ptr */,
): JsErrorCode /* Windows.Win32.System.Js.JsErrorCode */ {
  return libchakra.JsSetExternalData(util.toPointer(object), util.toPointer(externalData));
}

export function JsCreateArray(
  length: number /* u32 */,
  result: Deno.PointerValue | Uint8Array | null /* ptr */,
): JsErrorCode /* Windows.Win32.System.Js.JsErrorCode */ {
  return libchakra.JsCreateArray(length, util.toPointer(result));
}

export function JsCallFunction(
  function__: Deno.PointerValue | Uint8Array | null /* ptr */,
  arguments: Deno.PointerValue | Uint8Array | null /* ptr */,
  argumentCount: number /* u16 */,
  result: Deno.PointerValue | Uint8Array | null /* ptr */,
): JsErrorCode /* Windows.Win32.System.Js.JsErrorCode */ {
  return libchakra.JsCallFunction(util.toPointer(function__), util.toPointer(arguments), argumentCount, util.toPointer(result));
}

export function JsConstructObject(
  function__: Deno.PointerValue | Uint8Array | null /* ptr */,
  arguments: Deno.PointerValue | Uint8Array | null /* ptr */,
  argumentCount: number /* u16 */,
  result: Deno.PointerValue | Uint8Array | null /* ptr */,
): JsErrorCode /* Windows.Win32.System.Js.JsErrorCode */ {
  return libchakra.JsConstructObject(util.toPointer(function__), util.toPointer(arguments), argumentCount, util.toPointer(result));
}

export function JsCreateFunction(
  nativeFunction: Uint8Array | Deno.PointerValue | null /* Windows.Win32.System.Js.JsNativeFunction */,
  callbackState: Deno.PointerValue | Uint8Array | null /* ptr */,
  function__: Deno.PointerValue | Uint8Array | null /* ptr */,
): JsErrorCode /* Windows.Win32.System.Js.JsErrorCode */ {
  return libchakra.JsCreateFunction(util.toPointer(nativeFunction), util.toPointer(callbackState), util.toPointer(function__));
}

export function JsCreateError(
  message: Deno.PointerValue | Uint8Array | null /* ptr */,
  error: Deno.PointerValue | Uint8Array | null /* ptr */,
): JsErrorCode /* Windows.Win32.System.Js.JsErrorCode */ {
  return libchakra.JsCreateError(util.toPointer(message), util.toPointer(error));
}

export function JsCreateRangeError(
  message: Deno.PointerValue | Uint8Array | null /* ptr */,
  error: Deno.PointerValue | Uint8Array | null /* ptr */,
): JsErrorCode /* Windows.Win32.System.Js.JsErrorCode */ {
  return libchakra.JsCreateRangeError(util.toPointer(message), util.toPointer(error));
}

export function JsCreateReferenceError(
  message: Deno.PointerValue | Uint8Array | null /* ptr */,
  error: Deno.PointerValue | Uint8Array | null /* ptr */,
): JsErrorCode /* Windows.Win32.System.Js.JsErrorCode */ {
  return libchakra.JsCreateReferenceError(util.toPointer(message), util.toPointer(error));
}

export function JsCreateSyntaxError(
  message: Deno.PointerValue | Uint8Array | null /* ptr */,
  error: Deno.PointerValue | Uint8Array | null /* ptr */,
): JsErrorCode /* Windows.Win32.System.Js.JsErrorCode */ {
  return libchakra.JsCreateSyntaxError(util.toPointer(message), util.toPointer(error));
}

export function JsCreateTypeError(
  message: Deno.PointerValue | Uint8Array | null /* ptr */,
  error: Deno.PointerValue | Uint8Array | null /* ptr */,
): JsErrorCode /* Windows.Win32.System.Js.JsErrorCode */ {
  return libchakra.JsCreateTypeError(util.toPointer(message), util.toPointer(error));
}

export function JsCreateURIError(
  message: Deno.PointerValue | Uint8Array | null /* ptr */,
  error: Deno.PointerValue | Uint8Array | null /* ptr */,
): JsErrorCode /* Windows.Win32.System.Js.JsErrorCode */ {
  return libchakra.JsCreateURIError(util.toPointer(message), util.toPointer(error));
}

export function JsHasException(
  hasException: Deno.PointerValue | Uint8Array | null /* ptr */,
): JsErrorCode /* Windows.Win32.System.Js.JsErrorCode */ {
  return libchakra.JsHasException(util.toPointer(hasException));
}

export function JsGetAndClearException(
  exception: Deno.PointerValue | Uint8Array | null /* ptr */,
): JsErrorCode /* Windows.Win32.System.Js.JsErrorCode */ {
  return libchakra.JsGetAndClearException(util.toPointer(exception));
}

export function JsSetException(
  exception: Deno.PointerValue | Uint8Array | null /* ptr */,
): JsErrorCode /* Windows.Win32.System.Js.JsErrorCode */ {
  return libchakra.JsSetException(util.toPointer(exception));
}

export function JsDisableRuntimeExecution(
  runtime: Deno.PointerValue | Uint8Array | null /* ptr */,
): JsErrorCode /* Windows.Win32.System.Js.JsErrorCode */ {
  return libchakra.JsDisableRuntimeExecution(util.toPointer(runtime));
}

export function JsEnableRuntimeExecution(
  runtime: Deno.PointerValue | Uint8Array | null /* ptr */,
): JsErrorCode /* Windows.Win32.System.Js.JsErrorCode */ {
  return libchakra.JsEnableRuntimeExecution(util.toPointer(runtime));
}

export function JsIsRuntimeExecutionDisabled(
  runtime: Deno.PointerValue | Uint8Array | null /* ptr */,
  isDisabled: Deno.PointerValue | Uint8Array | null /* ptr */,
): JsErrorCode /* Windows.Win32.System.Js.JsErrorCode */ {
  return libchakra.JsIsRuntimeExecutionDisabled(util.toPointer(runtime), util.toPointer(isDisabled));
}

export function JsStartProfiling(
  callback: Uint8Array | Deno.PointerValue | null /* Windows.Win32.System.Diagnostics.Debug.IActiveScriptProfilerCallback */,
  eventMask: PROFILER_EVENT_MASK /* Windows.Win32.System.Diagnostics.Debug.PROFILER_EVENT_MASK */,
  context: number /* u32 */,
): JsErrorCode /* Windows.Win32.System.Js.JsErrorCode */ {
  return libchakra.JsStartProfiling(util.toPointer(callback), eventMask, context);
}

export function JsStopProfiling(
  reason: Uint8Array | Deno.PointerValue | null /* Windows.Win32.Foundation.HRESULT */,
): JsErrorCode /* Windows.Win32.System.Js.JsErrorCode */ {
  return libchakra.JsStopProfiling(util.toPointer(reason));
}

export function JsEnumerateHeap(
  enumerator: Deno.PointerValue | Uint8Array | null /* ptr */,
): JsErrorCode /* Windows.Win32.System.Js.JsErrorCode */ {
  return libchakra.JsEnumerateHeap(util.toPointer(enumerator));
}

export function JsIsEnumeratingHeap(
  isEnumeratingHeap: Deno.PointerValue | Uint8Array | null /* ptr */,
): JsErrorCode /* Windows.Win32.System.Js.JsErrorCode */ {
  return libchakra.JsIsEnumeratingHeap(util.toPointer(isEnumeratingHeap));
}

