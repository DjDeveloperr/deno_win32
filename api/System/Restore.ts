/// Auto-generated by Deno Win32: Windows.Win32.System.Restore.Apis

import * as util from "../../util.ts";

// Enums
export type RESTOREPOINTINFO_TYPE = number;
export type RESTOREPOINTINFO_EVENT_TYPE = number;

// Constants
export const APPLICATION_INSTALL = 0;
export const APPLICATION_UNINSTALL = 1;
export const DEVICE_DRIVER_INSTALL = 10;
export const MODIFY_SETTINGS = 12;
export const CANCELLED_OPERATION = 13;
export const BEGIN_NESTED_SYSTEM_CHANGE = 102;
export const BEGIN_SYSTEM_CHANGE = 100;
export const END_NESTED_SYSTEM_CHANGE = 103;
export const END_SYSTEM_CHANGE = 101;
export const MIN_EVENT = 100;
export const BEGIN_NESTED_SYSTEM_CHANGE_NORP = 104;
export const MAX_EVENT = 104;
export const MIN_RPT = 0;
export const DESKTOP_SETTING = 2;
export const ACCESSIBILITY_SETTING = 3;
export const OE_SETTING = 4;
export const APPLICATION_RUN = 5;
export const RESTORE = 6;
export const CHECKPOINT = 7;
export const WINDOWS_SHUTDOWN = 8;
export const WINDOWS_BOOT = 9;
export const FIRSTRUN = 11;
export const BACKUP_RECOVERY = 14;
export const BACKUP = 15;
export const MANUAL_CHECKPOINT = 16;
export const WINDOWS_UPDATE = 17;
export const CRITICAL_UPDATE = 18;
export const MAX_RPT = 18;
export const MAX_DESC = 64;
export const MAX_DESC_W = 256;

// Structs

/**
 * Windows.Win32.System.Restore.RESTOREPOINTINFOA (size: 24)
 */
export interface RESTOREPOINTINFOA {
  /** Windows.Win32.System.Restore.RESTOREPOINTINFO_EVENT_TYPE */
  dwEventType: RESTOREPOINTINFO_EVENT_TYPE;
  /** Windows.Win32.System.Restore.RESTOREPOINTINFO_TYPE */
  dwRestorePtType: RESTOREPOINTINFO_TYPE;
  /** i64 */
  llSequenceNumber: Deno.PointerValue;
  /** array */
  szDescription: Deno.PointerValue | null;
}

export const sizeofRESTOREPOINTINFOA = 24;

export function allocRESTOREPOINTINFOA(data?: Partial<RESTOREPOINTINFOA>): Uint8Array {
  const buf = new Uint8Array(sizeofRESTOREPOINTINFOA);
  const view = new DataView(buf.buffer);
  // 0x00: u32
  if (data?.dwEventType !== undefined) view.setUint32(0, Number(data.dwEventType), true);
  // 0x04: u32
  if (data?.dwRestorePtType !== undefined) view.setUint32(4, Number(data.dwRestorePtType), true);
  // 0x08: i64
  if (data?.llSequenceNumber !== undefined) view.setBigInt64(8, BigInt(data.llSequenceNumber), true);
  // 0x10: pointer
  if (data?.szDescription !== undefined) view.setBigUint64(16, data.szDescription === null ? 0n : BigInt(util.toPointer(data.szDescription)), true);
  return buf;
}

/**
 * Windows.Win32.System.Restore.RESTOREPOINTINFOW (size: 24)
 */
export interface RESTOREPOINTINFOW {
  /** Windows.Win32.System.Restore.RESTOREPOINTINFO_EVENT_TYPE */
  dwEventType: RESTOREPOINTINFO_EVENT_TYPE;
  /** Windows.Win32.System.Restore.RESTOREPOINTINFO_TYPE */
  dwRestorePtType: RESTOREPOINTINFO_TYPE;
  /** i64 */
  llSequenceNumber: Deno.PointerValue;
  /** array */
  szDescription: Deno.PointerValue | null;
}

export const sizeofRESTOREPOINTINFOW = 24;

export function allocRESTOREPOINTINFOW(data?: Partial<RESTOREPOINTINFOW>): Uint8Array {
  const buf = new Uint8Array(sizeofRESTOREPOINTINFOW);
  const view = new DataView(buf.buffer);
  // 0x00: u32
  if (data?.dwEventType !== undefined) view.setUint32(0, Number(data.dwEventType), true);
  // 0x04: u32
  if (data?.dwRestorePtType !== undefined) view.setUint32(4, Number(data.dwRestorePtType), true);
  // 0x08: i64
  if (data?.llSequenceNumber !== undefined) view.setBigInt64(8, BigInt(data.llSequenceNumber), true);
  // 0x10: pointer
  if (data?.szDescription !== undefined) view.setBigUint64(16, data.szDescription === null ? 0n : BigInt(util.toPointer(data.szDescription)), true);
  return buf;
}

/**
 * Windows.Win32.Foundation.FILETIME (size: 8)
 */
export interface FILETIME {
  /** u32 */
  dwLowDateTime: number;
  /** u32 */
  dwHighDateTime: number;
}

export const sizeofFILETIME = 8;

export function allocFILETIME(data?: Partial<FILETIME>): Uint8Array {
  const buf = new Uint8Array(sizeofFILETIME);
  const view = new DataView(buf.buffer);
  // 0x00: u32
  if (data?.dwLowDateTime !== undefined) view.setUint32(0, Number(data.dwLowDateTime), true);
  // 0x04: u32
  if (data?.dwHighDateTime !== undefined) view.setUint32(4, Number(data.dwHighDateTime), true);
  return buf;
}

/**
 * Windows.Win32.System.Restore._RESTOREPTINFOEX (size: 32)
 */
export interface _RESTOREPTINFOEX {
  /** Windows.Win32.Foundation.FILETIME */
  ftCreation: Uint8Array | Deno.PointerValue | null;
  /** u32 */
  dwEventType: number;
  /** u32 */
  dwRestorePtType: number;
  /** u32 */
  dwRPNum: number;
  /** array */
  szDescription: Deno.PointerValue | null;
}

export const sizeof_RESTOREPTINFOEX = 32;

export function alloc_RESTOREPTINFOEX(data?: Partial<_RESTOREPTINFOEX>): Uint8Array {
  const buf = new Uint8Array(sizeof_RESTOREPTINFOEX);
  const view = new DataView(buf.buffer);
  // 0x00: pointer
  if (data?.ftCreation !== undefined) view.setBigUint64(0, data.ftCreation === null ? 0n : BigInt(util.toPointer(data.ftCreation)), true);
  // 0x08: u32
  if (data?.dwEventType !== undefined) view.setUint32(8, Number(data.dwEventType), true);
  // 0x0c: u32
  if (data?.dwRestorePtType !== undefined) view.setUint32(12, Number(data.dwRestorePtType), true);
  // 0x10: u32
  if (data?.dwRPNum !== undefined) view.setUint32(16, Number(data.dwRPNum), true);
  // 0x14: pad4
  // 0x18: pointer
  if (data?.szDescription !== undefined) view.setBigUint64(24, data.szDescription === null ? 0n : BigInt(util.toPointer(data.szDescription)), true);
  return buf;
}

/**
 * Windows.Win32.System.Restore.STATEMGRSTATUS (size: 16)
 */
export interface STATEMGRSTATUS {
  /** u32 */
  nStatus: number;
  /** i64 */
  llSequenceNumber: Deno.PointerValue;
}

export const sizeofSTATEMGRSTATUS = 16;

export function allocSTATEMGRSTATUS(data?: Partial<STATEMGRSTATUS>): Uint8Array {
  const buf = new Uint8Array(sizeofSTATEMGRSTATUS);
  const view = new DataView(buf.buffer);
  // 0x00: u32
  if (data?.nStatus !== undefined) view.setUint32(0, Number(data.nStatus), true);
  // 0x04: pad4
  // 0x08: i64
  if (data?.llSequenceNumber !== undefined) view.setBigInt64(8, BigInt(data.llSequenceNumber), true);
  return buf;
}

export type BOOL = number;

// Native Libraries

try {
  var libsfc = Deno.dlopen("sfc", {
    SRSetRestorePointA: {
      parameters: ["pointer", "pointer"],
      result: "i32",
    },
    SRSetRestorePointW: {
      parameters: ["pointer", "pointer"],
      result: "i32",
    },
  }).symbols;
} catch(e) { /* ignore */ }

// Symbols

export function SRSetRestorePointA(
  pRestorePtSpec: Deno.PointerValue | Uint8Array | null /* ptr */,
  pSMgrStatus: Deno.PointerValue | Uint8Array | null /* ptr */,
): boolean /* Windows.Win32.Foundation.BOOL */ {
  return util.boolFromFfi(libsfc.SRSetRestorePointA(util.toPointer(pRestorePtSpec), util.toPointer(pSMgrStatus)));
}

export function SRSetRestorePointW(
  pRestorePtSpec: Deno.PointerValue | Uint8Array | null /* ptr */,
  pSMgrStatus: Deno.PointerValue | Uint8Array | null /* ptr */,
): boolean /* Windows.Win32.Foundation.BOOL */ {
  return util.boolFromFfi(libsfc.SRSetRestorePointW(util.toPointer(pRestorePtSpec), util.toPointer(pSMgrStatus)));
}

