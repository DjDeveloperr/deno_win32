/// Auto-generated by Deno Win32: Windows.Win32.System.ApplicationInstallationAndServicing.Apis

import * as util from "../../util.ts";

// Enums
export type MSIASSEMBLYINFO = number;
export type IASSEMBLYCACHE_UNINSTALL_DISPOSITION = number;
export type QUERYASMINFO_FLAGS = number;
export type RESULTTYPES = number;
export type STATUSTYPES = number;
export type msmErrorType = number;
export type INSTALLMESSAGE = number;
export type INSTALLUILEVEL = number;
export type INSTALLSTATE = number;
export type USERINFOSTATE = number;
export type INSTALLLEVEL = number;
export type REINSTALLMODE = number;
export type INSTALLLOGMODE = number;
export type INSTALLLOGATTRIBUTES = number;
export type INSTALLFEATUREATTRIBUTE = number;
export type INSTALLMODE = number;
export type MSIPATCHSTATE = number;
export type MSIINSTALLCONTEXT = number;
export type MSIPATCHDATATYPE = number;
export type SCRIPTFLAGS = number;
export type ADVERTISEFLAGS = number;
export type INSTALLTYPE = number;
export type MSIARCHITECTUREFLAGS = number;
export type MSIOPENPACKAGEFLAGS = number;
export type MSIADVERTISEOPTIONFLAGS = number;
export type MSISOURCETYPE = number;
export type MSICODE = number;
export type MSITRANSACTION = number;
export type MSITRANSACTIONSTATE = number;
export type MSIDBSTATE = number;
export type MSIMODIFY = number;
export type MSICOLINFO = number;
export type MSICONDITION = number;
export type MSICOSTTREE = number;
export type MSIDBERROR = number;
export type MSIRUNMODE = number;
export type MSITRANSFORM_ERROR = number;
export type MSITRANSFORM_VALIDATE = number;
export type ASM_NAME = number;
export type ASM_BIND_FLAGS = number;
export type ASM_DISPLAY_FLAGS = number;
export type ASM_CMP_FLAGS = number;
export type CREATE_ASM_NAME_OBJ_FLAGS = number;
export type msidbControlAttributes = number;
export type msidbLocatorType = number;
export type msidbComponentAttributes = number;
export type msidbAssemblyAttributes = number;
export type msidbCustomActionType = number;
export type msidbDialogAttributes = number;
export type msidbFeatureAttributes = number;
export type msidbFileAttributes = number;
export type msidbIniFileAction = number;
export type msidbMoveFileOptions = number;
export type msidbODBCDataSourceRegistration = number;
export type msidbClassAttributes = number;
export type msidbPatchAttributes = number;
export type msidbRegistryRoot = number;
export type msidbRemoveFileInstallMode = number;
export type msidbServiceControlEvent = number;
export type msidbServiceConfigEvent = number;
export type msidbServiceInstallErrorControl = number;
export type msidbTextStyleStyleBits = number;
export type msidbUpgradeAttributes = number;
export type msidbEmbeddedUIAttributes = number;
export type msidbSumInfoSourceType = number;
export type msirbRebootType = number;
export type msirbRebootReason = number;
export type msifiFastInstallBits = number;
export type TILE_TEMPLATE_TYPE = number;
export type PM_APP_GENRE = number;
export type PM_APPLICATION_INSTALL_TYPE = number;
export type PM_APPLICATION_STATE = number;
export type PM_APPLICATION_HUBTYPE = number;
export type PM_TILE_HUBTYPE = number;
export type PM_STARTTILE_TYPE = number;
export type PM_TASK_TYPE = number;
export type PACKMAN_RUNTIME = number;
export type PM_ACTIVATION_POLICY = number;
export type PM_TASK_TRANSITION = number;
export type PM_ENUM_APP_FILTER = number;
export type PM_ENUM_TILE_FILTER = number;
export type PM_ENUM_TASK_FILTER = number;
export type PM_ENUM_EXTENSION_FILTER = number;
export type PM_ENUM_BSA_FILTER = number;
export type PM_ENUM_BW_FILTER = number;
export type PM_LIVETILE_RECURRENCE_TYPE = number;
export type PM_TILE_SIZE = number;
export type PM_LOGO_SIZE = number;
export type ACTCTX_REQUESTED_RUN_LEVEL = number;
export type ACTCTX_COMPATIBILITY_ELEMENT_TYPE = number;

// Constants
export const UIALL = 32768;
export const LOGTOKEN_TYPE_MASK = 3;
export const LOGTOKEN_UNSPECIFIED = 0;
export const LOGTOKEN_NO_LOG = 1;
export const LOGTOKEN_SETUPAPI_APPLOG = 2;
export const LOGTOKEN_SETUPAPI_DEVLOG = 3;
export const TXTLOG_SETUPAPI_DEVLOG = 1;
export const TXTLOG_SETUPAPI_CMDLINE = 2;
export const TXTLOG_SETUPAPI_BITS = 3;
export const TXTLOG_ERROR = 1;
export const TXTLOG_WARNING = 2;
export const TXTLOG_SYSTEM_STATE_CHANGE = 3;
export const TXTLOG_SUMMARY = 4;
export const TXTLOG_DETAILS = 5;
export const TXTLOG_VERBOSE = 6;
export const TXTLOG_VERY_VERBOSE = 7;
export const TXTLOG_RESERVED_FLAGS = 65520;
export const TXTLOG_TIMESTAMP = 65536;
export const TXTLOG_DEPTH_INCR = 131072;
export const TXTLOG_DEPTH_DECR = 262144;
export const TXTLOG_TAB_1 = 524288;
export const TXTLOG_FLUSH_FILE = 1048576;
export const TXTLOG_DEVINST = 1;
export const TXTLOG_INF = 2;
export const TXTLOG_FILEQ = 4;
export const TXTLOG_COPYFILES = 8;
export const TXTLOG_SIGVERIF = 32;
export const TXTLOG_BACKUP = 128;
export const TXTLOG_UI = 256;
export const TXTLOG_UTIL = 512;
export const TXTLOG_INFDB = 1024;
export const TXTLOG_DRVSETUP = 4194304;
export const TXTLOG_POLICY = 8388608;
export const TXTLOG_NEWDEV = 16777216;
export const TXTLOG_UMPNPMGR = 33554432;
export const TXTLOG_DRIVER_STORE = 67108864;
export const TXTLOG_SETUP = 134217728;
export const TXTLOG_CMI = 268435456;
export const TXTLOG_DEVMGR = 536870912;
export const TXTLOG_INSTALLER = 1073741824;
export const TXTLOG_VENDOR = 2147483648;
export const _WIN32_MSM = 100;
export const _WIN32_MSI = 500;
export const MAX_GUID_CHARS = 38;
export const MAX_FEATURE_CHARS = 38;
export const INSTALLPROPERTY_PACKAGENAME = "PackageName";
export const INSTALLPROPERTY_TRANSFORMS = "Transforms";
export const INSTALLPROPERTY_LANGUAGE = "Language";
export const INSTALLPROPERTY_PRODUCTNAME = "ProductName";
export const INSTALLPROPERTY_ASSIGNMENTTYPE = "AssignmentType";
export const INSTALLPROPERTY_INSTANCETYPE = "InstanceType";
export const INSTALLPROPERTY_AUTHORIZED_LUA_APP = "AuthorizedLUAApp";
export const INSTALLPROPERTY_PACKAGECODE = "PackageCode";
export const INSTALLPROPERTY_VERSION = "Version";
export const INSTALLPROPERTY_PRODUCTICON = "ProductIcon";
export const INSTALLPROPERTY_INSTALLEDPRODUCTNAME = "InstalledProductName";
export const INSTALLPROPERTY_VERSIONSTRING = "VersionString";
export const INSTALLPROPERTY_HELPLINK = "HelpLink";
export const INSTALLPROPERTY_HELPTELEPHONE = "HelpTelephone";
export const INSTALLPROPERTY_INSTALLLOCATION = "InstallLocation";
export const INSTALLPROPERTY_INSTALLSOURCE = "InstallSource";
export const INSTALLPROPERTY_INSTALLDATE = "InstallDate";
export const INSTALLPROPERTY_PUBLISHER = "Publisher";
export const INSTALLPROPERTY_LOCALPACKAGE = "LocalPackage";
export const INSTALLPROPERTY_URLINFOABOUT = "URLInfoAbout";
export const INSTALLPROPERTY_URLUPDATEINFO = "URLUpdateInfo";
export const INSTALLPROPERTY_VERSIONMINOR = "VersionMinor";
export const INSTALLPROPERTY_VERSIONMAJOR = "VersionMajor";
export const INSTALLPROPERTY_PRODUCTID = "ProductID";
export const INSTALLPROPERTY_REGCOMPANY = "RegCompany";
export const INSTALLPROPERTY_REGOWNER = "RegOwner";
export const INSTALLPROPERTY_INSTALLEDLANGUAGE = "InstalledLanguage";
export const INSTALLPROPERTY_UNINSTALLABLE = "Uninstallable";
export const INSTALLPROPERTY_PRODUCTSTATE = "State";
export const INSTALLPROPERTY_PATCHSTATE = "State";
export const INSTALLPROPERTY_PATCHTYPE = "PatchType";
export const INSTALLPROPERTY_LUAENABLED = "LUAEnabled";
export const INSTALLPROPERTY_DISPLAYNAME = "DisplayName";
export const INSTALLPROPERTY_MOREINFOURL = "MoreInfoURL";
export const INSTALLPROPERTY_LASTUSEDSOURCE = "LastUsedSource";
export const INSTALLPROPERTY_LASTUSEDTYPE = "LastUsedType";
export const INSTALLPROPERTY_MEDIAPACKAGEPATH = "MediaPackagePath";
export const INSTALLPROPERTY_DISKPROMPT = "DiskPrompt";
export const MSI_INVALID_HASH_IS_FATAL = 1;
export const ERROR_ROLLBACK_DISABLED = 1653;
export const MSI_NULL_INTEGER = 2147483648;
export const INSTALLMESSAGE_TYPEMASK = "-16777216";
export const STREAM_FORMAT_COMPLIB_MODULE = 0;
export const STREAM_FORMAT_COMPLIB_MANIFEST = 1;
export const STREAM_FORMAT_WIN32_MODULE = 2;
export const STREAM_FORMAT_WIN32_MANIFEST = 4;
export const IASSEMBLYCACHEITEM_COMMIT_FLAG_REFRESH = 1;
export const ASSEMBLYINFO_FLAG_INSTALLED = 1;
export const ASSEMBLYINFO_FLAG_PAYLOADRESIDENT = 2;
export const IASSEMBLYCACHEITEM_COMMIT_DISPOSITION_INSTALLED = 1;
export const IASSEMBLYCACHEITEM_COMMIT_DISPOSITION_REFRESHED = 2;
export const IASSEMBLYCACHEITEM_COMMIT_DISPOSITION_ALREADY_INSTALLED = 3;
export const SFC_DISABLE_NORMAL = 0;
export const SFC_DISABLE_ASK = 1;
export const SFC_DISABLE_ONCE = 2;
export const SFC_DISABLE_SETUP = 3;
export const SFC_DISABLE_NOPOPUPS = 4;
export const SFC_SCAN_NORMAL = 0;
export const SFC_SCAN_ALWAYS = 1;
export const SFC_SCAN_ONCE = 2;
export const SFC_SCAN_IMMEDIATE = 3;
export const SFC_QUOTA_DEFAULT = 50;
export const SFC_IDLE_TRIGGER = "WFP_IDLE_TRIGGER";
export const IPROPNAME_PRODUCTNAME = "ProductName";
export const IPROPNAME_PRODUCTCODE = "ProductCode";
export const IPROPNAME_PRODUCTVERSION = "ProductVersion";
export const IPROPNAME_INSTALLLANGUAGE = "ProductLanguage";
export const IPROPNAME_MANUFACTURER = "Manufacturer";
export const IPROPNAME_UPGRADECODE = "UpgradeCode";
export const IPROPNAME_PIDTEMPLATE = "PIDTemplate";
export const IPROPNAME_DISKPROMPT = "DiskPrompt";
export const IPROPNAME_LEFTUNIT = "LeftUnit";
export const IPROPNAME_ADMIN_PROPERTIES = "AdminProperties";
export const IPROPNAME_DEFAULTUIFONT = "DefaultUIFont";
export const IPROPNAME_ALLOWEDPROPERTIES = "SecureCustomProperties";
export const IPROPNAME_ENABLEUSERCONTROL = "EnableUserControl";
export const IPROPNAME_HIDDEN_PROPERTIES = "MsiHiddenProperties";
export const IPROPNAME_USERNAME = "USERNAME";
export const IPROPNAME_COMPANYNAME = "COMPANYNAME";
export const IPROPNAME_PIDKEY = "PIDKEY";
export const IPROPNAME_PATCH = "PATCH";
export const IPROPNAME_MSIPATCHREMOVE = "MSIPATCHREMOVE";
export const IPROPNAME_TARGETDIR = "TARGETDIR";
export const IPROPNAME_ACTION = "ACTION";
export const IPROPNAME_LIMITUI = "LIMITUI";
export const IPROPNAME_LOGACTION = "LOGACTION";
export const IPROPNAME_ALLUSERS = "ALLUSERS";
export const IPROPNAME_INSTALLLEVEL = "INSTALLLEVEL";
export const IPROPNAME_REBOOT = "REBOOT";
export const IPROPNAME_REBOOTPROMPT = "REBOOTPROMPT";
export const IPROPNAME_EXECUTEMODE = "EXECUTEMODE";
export const IPROPVALUE_EXECUTEMODE_NONE = "NONE";
export const IPROPVALUE_EXECUTEMODE_SCRIPT = "SCRIPT";
export const IPROPNAME_EXECUTEACTION = "EXECUTEACTION";
export const IPROPNAME_SOURCELIST = "SOURCELIST";
export const IPROPNAME_ROOTDRIVE = "ROOTDRIVE";
export const IPROPNAME_TRANSFORMS = "TRANSFORMS";
export const IPROPNAME_TRANSFORMSATSOURCE = "TRANSFORMSATSOURCE";
export const IPROPNAME_TRANSFORMSSECURE = "TRANSFORMSSECURE";
export const IPROPNAME_SEQUENCE = "SEQUENCE";
export const IPROPNAME_SHORTFILENAMES = "SHORTFILENAMES";
export const IPROPNAME_PRIMARYFOLDER = "PRIMARYFOLDER";
export const IPROPNAME_AFTERREBOOT = "AFTERREBOOT";
export const IPROPNAME_NOCOMPANYNAME = "NOCOMPANYNAME";
export const IPROPNAME_NOUSERNAME = "NOUSERNAME";
export const IPROPNAME_DISABLEROLLBACK = "DISABLEROLLBACK";
export const IPROPNAME_AVAILABLEFREEREG = "AVAILABLEFREEREG";
export const IPROPNAME_DISABLEADVTSHORTCUTS = "DISABLEADVTSHORTCUTS";
export const IPROPNAME_PATCHNEWPACKAGECODE = "PATCHNEWPACKAGECODE";
export const IPROPNAME_PATCHNEWSUMMARYSUBJECT = "PATCHNEWSUMMARYSUBJECT";
export const IPROPNAME_PATCHNEWSUMMARYCOMMENTS = "PATCHNEWSUMMARYCOMMENTS";
export const IPROPNAME_PRODUCTLANGUAGE = "PRODUCTLANGUAGE";
export const IPROPNAME_CHECKCRCS = "MSICHECKCRCS";
export const IPROPNAME_MSINODISABLEMEDIA = "MSINODISABLEMEDIA";
export const IPROPNAME_CARRYINGNDP = "CARRYINGNDP";
export const IPROPVALUE__CARRYINGNDP_URTREINSTALL = "URTREINSTALL";
export const IPROPVALUE__CARRYINGNDP_URTUPGRADE = "URTUPGRADE";
export const IPROPNAME_ENFORCE_UPGRADE_COMPONENT_RULES = "MSIENFORCEUPGRADECOMPONENTRULES";
export const IPROPNAME_MSINEWINSTANCE = "MSINEWINSTANCE";
export const IPROPNAME_MSIINSTANCEGUID = "MSIINSTANCEGUID";
export const IPROPNAME_MSIPACKAGEDOWNLOADLOCALCOPY = "MSIPACKAGEDOWNLOADLOCALCOPY";
export const IPROPNAME_MSIPATCHDOWNLOADLOCALCOPY = "MSIPATCHDOWNLOADLOCALCOPY";
export const IPROPNAME_MSIDISABLELUAPATCHING = "MSIDISABLELUAPATCHING";
export const IPROPNAME_MSILOGGINGMODE = "MsiLogging";
export const IPROPNAME_MSILOGFILELOCATION = "MsiLogFileLocation";
export const IPROPNAME_MSI_RM_CONTROL = "MSIRESTARTMANAGERCONTROL";
export const IPROPVALUE_MSI_RM_CONTROL_DISABLE = "Disable";
export const IPROPVALUE_MSI_RM_CONTROL_DISABLESHUTDOWN = "DisableShutdown";
export const IPROPNAME_MSI_RM_SESSION_KEY = "MsiRestartManagerSessionKey";
export const IPROPNAME_MSI_REBOOT_PENDING = "MsiSystemRebootPending";
export const IPROPNAME_MSI_RM_SHUTDOWN = "MSIRMSHUTDOWN";
export const IPROPNAME_MSI_RM_DISABLE_RESTART = "MSIDISABLERMRESTART";
export const IPROPNAME_MSI_UAC_DEPLOYMENT_COMPLIANT = "MSIDEPLOYMENTCOMPLIANT";
export const IPROPNAME_MSI_USE_REAL_ADMIN_DETECTION = "MSIUSEREALADMINDETECTION";
export const IPROPNAME_MSI_UNINSTALL_SUPERSEDED_COMPONENTS = "MSIUNINSTALLSUPERSEDEDCOMPONENTS";
export const IPROPNAME_MSIDISABLEEEUI = "MSIDISABLEEEUI";
export const IPROPNAME_MSI_FASTINSTALL = "MSIFASTINSTALL";
export const IPROPNAME_INSTALLPERUSER = "MSIINSTALLPERUSER";
export const IPROPNAME_INTERNALINSTALLEDPERUSER = "MSIINTERNALINSTALLEDPERUSER";
export const IPROPNAME_ARPAUTHORIZEDCDFPREFIX = "ARPAUTHORIZEDCDFPREFIX";
export const IPROPNAME_ARPCOMMENTS = "ARPCOMMENTS";
export const IPROPNAME_ARPCONTACT = "ARPCONTACT";
export const IPROPNAME_ARPHELPLINK = "ARPHELPLINK";
export const IPROPNAME_ARPHELPTELEPHONE = "ARPHELPTELEPHONE";
export const IPROPNAME_ARPINSTALLLOCATION = "ARPINSTALLLOCATION";
export const IPROPNAME_ARPNOMODIFY = "ARPNOMODIFY";
export const IPROPNAME_ARPNOREMOVE = "ARPNOREMOVE";
export const IPROPNAME_ARPNOREPAIR = "ARPNOREPAIR";
export const IPROPNAME_ARPREADME = "ARPREADME";
export const IPROPNAME_ARPSIZE = "ARPSIZE";
export const IPROPNAME_ARPSYSTEMCOMPONENT = "ARPSYSTEMCOMPONENT";
export const IPROPNAME_ARPURLINFOABOUT = "ARPURLINFOABOUT";
export const IPROPNAME_ARPURLUPDATEINFO = "ARPURLUPDATEINFO";
export const IPROPNAME_ARPPRODUCTICON = "ARPPRODUCTICON";
export const IPROPNAME_ARPSETTINGSIDENTIFIER = "MSIARPSETTINGSIDENTIFIER";
export const IPROPNAME_ARPSHIMFLAGS = "SHIMFLAGS";
export const IPROPNAME_ARPSHIMVERSIONNT = "SHIMVERSIONNT";
export const IPROPNAME_ARPSHIMSERVICEPACKLEVEL = "SHIMSERVICEPACKLEVEL";
export const IPROPNAME_INSTALLED = "Installed";
export const IPROPNAME_PRODUCTSTATE = "ProductState";
export const IPROPNAME_PRESELECTED = "Preselected";
export const IPROPNAME_RESUME = "RESUME";
export const IPROPNAME_UPDATESTARTED = "UpdateStarted";
export const IPROPNAME_PRODUCTID = "ProductID";
export const IPROPNAME_OUTOFDISKSPACE = "OutOfDiskSpace";
export const IPROPNAME_OUTOFNORBDISKSPACE = "OutOfNoRbDiskSpace";
export const IPROPNAME_COSTINGCOMPLETE = "CostingComplete";
export const IPROPNAME_SOURCEDIR = "SourceDir";
export const IPROPNAME_REPLACEDINUSEFILES = "ReplacedInUseFiles";
export const IPROPNAME_PRIMARYFOLDER_PATH = "PrimaryVolumePath";
export const IPROPNAME_PRIMARYFOLDER_SPACEAVAILABLE = "PrimaryVolumeSpaceAvailable";
export const IPROPNAME_PRIMARYFOLDER_SPACEREQUIRED = "PrimaryVolumeSpaceRequired";
export const IPROPNAME_PRIMARYFOLDER_SPACEREMAINING = "PrimaryVolumeSpaceRemaining";
export const IPROPNAME_ISADMINPACKAGE = "IsAdminPackage";
export const IPROPNAME_ROLLBACKDISABLED = "RollbackDisabled";
export const IPROPNAME_RESTRICTEDUSERCONTROL = "RestrictedUserControl";
export const IPROPNAME_SOURCERESONLY = "MsiUISourceResOnly";
export const IPROPNAME_HIDECANCEL = "MsiUIHideCancel";
export const IPROPNAME_PROGRESSONLY = "MsiUIProgressOnly";
export const IPROPNAME_UACONLY = "MsiUIUACOnly";
export const IPROPNAME_TIME = "Time";
export const IPROPNAME_DATE = "Date";
export const IPROPNAME_DATETIME = "DateTime";
export const IPROPNAME_ARM = "Arm";
export const IPROPNAME_ARM64 = "Arm64";
export const IPROPNAME_INTEL = "Intel";
export const IPROPNAME_TEMPLATE_AMD64 = "AMD64";
export const IPROPNAME_TEMPLATE_X64 = "x64";
export const IPROPNAME_MSIAMD64 = "MsiAMD64";
export const IPROPNAME_MSIX64 = "Msix64";
export const IPROPNAME_INTEL64 = "Intel64";
export const IPROPNAME_IA64 = "IA64";
export const IPROPNAME_TEXTHEIGHT = "TextHeight";
export const IPROPNAME_TEXTINTERNALLEADING = "TextInternalLeading";
export const IPROPNAME_SCREENX = "ScreenX";
export const IPROPNAME_SCREENY = "ScreenY";
export const IPROPNAME_CAPTIONHEIGHT = "CaptionHeight";
export const IPROPNAME_BORDERTOP = "BorderTop";
export const IPROPNAME_BORDERSIDE = "BorderSide";
export const IPROPNAME_COLORBITS = "ColorBits";
export const IPROPNAME_PHYSICALMEMORY = "PhysicalMemory";
export const IPROPNAME_VIRTUALMEMORY = "VirtualMemory";
export const IPROPNAME_TEXTHEIGHT_CORRECTION = "TextHeightCorrection";
export const IPROPNAME_MSITABLETPC = "MsiTabletPC";
export const IPROPNAME_VERSIONNT = "VersionNT";
export const IPROPNAME_VERSION9X = "Version9X";
export const IPROPNAME_VERSIONNT64 = "VersionNT64";
export const IPROPNAME_WINDOWSBUILD = "WindowsBuild";
export const IPROPNAME_SERVICEPACKLEVEL = "ServicePackLevel";
export const IPROPNAME_SERVICEPACKLEVELMINOR = "ServicePackLevelMinor";
export const IPROPNAME_SHAREDWINDOWS = "SharedWindows";
export const IPROPNAME_COMPUTERNAME = "ComputerName";
export const IPROPNAME_SHELLADVTSUPPORT = "ShellAdvtSupport";
export const IPROPNAME_OLEADVTSUPPORT = "OLEAdvtSupport";
export const IPROPNAME_SYSTEMLANGUAGEID = "SystemLanguageID";
export const IPROPNAME_TTCSUPPORT = "TTCSupport";
export const IPROPNAME_TERMSERVER = "TerminalServer";
export const IPROPNAME_REMOTEADMINTS = "RemoteAdminTS";
export const IPROPNAME_REDIRECTEDDLLSUPPORT = "RedirectedDllSupport";
export const IPROPNAME_NTPRODUCTTYPE = "MsiNTProductType";
export const IPROPNAME_NTSUITEBACKOFFICE = "MsiNTSuiteBackOffice";
export const IPROPNAME_NTSUITEDATACENTER = "MsiNTSuiteDataCenter";
export const IPROPNAME_NTSUITEENTERPRISE = "MsiNTSuiteEnterprise";
export const IPROPNAME_NTSUITESMALLBUSINESS = "MsiNTSuiteSmallBusiness";
export const IPROPNAME_NTSUITESMALLBUSINESSRESTRICTED = "MsiNTSuiteSmallBusinessRestricted";
export const IPROPNAME_NTSUITEPERSONAL = "MsiNTSuitePersonal";
export const IPROPNAME_NTSUITEWEBSERVER = "MsiNTSuiteWebServer";
export const IPROPNAME_NETASSEMBLYSUPPORT = "MsiNetAssemblySupport";
export const IPROPNAME_WIN32ASSEMBLYSUPPORT = "MsiWin32AssemblySupport";
export const IPROPNAME_LOGONUSER = "LogonUser";
export const IPROPNAME_USERSID = "UserSID";
export const IPROPNAME_ADMINUSER = "AdminUser";
export const IPROPNAME_USERLANGUAGEID = "UserLanguageID";
export const IPROPNAME_PRIVILEGED = "Privileged";
export const IPROPNAME_RUNNINGELEVATED = "MsiRunningElevated";
export const IPROPNAME_TRUEADMINUSER = "MsiTrueAdminUser";
export const IPROPNAME_WINDOWS_FOLDER = "WindowsFolder";
export const IPROPNAME_SYSTEM_FOLDER = "SystemFolder";
export const IPROPNAME_SYSTEM16_FOLDER = "System16Folder";
export const IPROPNAME_WINDOWS_VOLUME = "WindowsVolume";
export const IPROPNAME_TEMP_FOLDER = "TempFolder";
export const IPROPNAME_PROGRAMFILES_FOLDER = "ProgramFilesFolder";
export const IPROPNAME_COMMONFILES_FOLDER = "CommonFilesFolder";
export const IPROPNAME_SYSTEM64_FOLDER = "System64Folder";
export const IPROPNAME_PROGRAMFILES64_FOLDER = "ProgramFiles64Folder";
export const IPROPNAME_COMMONFILES64_FOLDER = "CommonFiles64Folder";
export const IPROPNAME_STARTMENU_FOLDER = "StartMenuFolder";
export const IPROPNAME_PROGRAMMENU_FOLDER = "ProgramMenuFolder";
export const IPROPNAME_STARTUP_FOLDER = "StartupFolder";
export const IPROPNAME_NETHOOD_FOLDER = "NetHoodFolder";
export const IPROPNAME_PERSONAL_FOLDER = "PersonalFolder";
export const IPROPNAME_SENDTO_FOLDER = "SendToFolder";
export const IPROPNAME_DESKTOP_FOLDER = "DesktopFolder";
export const IPROPNAME_TEMPLATE_FOLDER = "TemplateFolder";
export const IPROPNAME_FONTS_FOLDER = "FontsFolder";
export const IPROPNAME_FAVORITES_FOLDER = "FavoritesFolder";
export const IPROPNAME_RECENT_FOLDER = "RecentFolder";
export const IPROPNAME_APPDATA_FOLDER = "AppDataFolder";
export const IPROPNAME_PRINTHOOD_FOLDER = "PrintHoodFolder";
export const IPROPNAME_ADMINTOOLS_FOLDER = "AdminToolsFolder";
export const IPROPNAME_COMMONAPPDATA_FOLDER = "CommonAppDataFolder";
export const IPROPNAME_LOCALAPPDATA_FOLDER = "LocalAppDataFolder";
export const IPROPNAME_MYPICTURES_FOLDER = "MyPicturesFolder";
export const IPROPNAME_FEATUREADDLOCAL = "ADDLOCAL";
export const IPROPNAME_FEATUREADDSOURCE = "ADDSOURCE";
export const IPROPNAME_FEATUREADDDEFAULT = "ADDDEFAULT";
export const IPROPNAME_FEATUREREMOVE = "REMOVE";
export const IPROPNAME_FEATUREADVERTISE = "ADVERTISE";
export const IPROPVALUE_FEATURE_ALL = "ALL";
export const IPROPNAME_COMPONENTADDLOCAL = "COMPADDLOCAL";
export const IPROPNAME_COMPONENTADDSOURCE = "COMPADDSOURCE";
export const IPROPNAME_COMPONENTADDDEFAULT = "COMPADDDEFAULT";
export const IPROPNAME_FILEADDLOCAL = "FILEADDLOCAL";
export const IPROPNAME_FILEADDSOURCE = "FILEADDSOURCE";
export const IPROPNAME_FILEADDDEFAULT = "FILEADDDEFAULT";
export const IPROPNAME_REINSTALL = "REINSTALL";
export const IPROPNAME_REINSTALLMODE = "REINSTALLMODE";
export const IPROPNAME_PROMPTROLLBACKCOST = "PROMPTROLLBACKCOST";
export const IPROPVALUE_RBCOST_PROMPT = "P";
export const IPROPVALUE_RBCOST_SILENT = "D";
export const IPROPVALUE_RBCOST_FAIL = "F";
export const IPROPNAME_CUSTOMACTIONDATA = "CustomActionData";
export const IACTIONNAME_INSTALL = "INSTALL";
export const IACTIONNAME_ADVERTISE = "ADVERTISE";
export const IACTIONNAME_ADMIN = "ADMIN";
export const IACTIONNAME_SEQUENCE = "SEQUENCE";
export const IACTIONNAME_COLLECTUSERINFO = "CollectUserInfo";
export const IACTIONNAME_FIRSTRUN = "FirstRun";
export const PID_TITLE = 2;
export const PID_SUBJECT = 3;
export const PID_AUTHOR = 4;
export const PID_KEYWORDS = 5;
export const PID_COMMENTS = 6;
export const PID_TEMPLATE = 7;
export const PID_LASTAUTHOR = 8;
export const PID_REVNUMBER = 9;
export const PID_EDITTIME = 10;
export const PID_LASTPRINTED = 11;
export const PID_CREATE_DTM = 12;
export const PID_LASTSAVE_DTM = 13;
export const PID_PAGECOUNT = 14;
export const PID_WORDCOUNT = 15;
export const PID_CHARCOUNT = 16;
export const PID_THUMBNAIL = 17;
export const PID_APPNAME = 18;
export const PID_MSIVERSION = 14;
export const PID_MSISOURCE = 15;
export const PID_MSIRESTRICT = 16;
export const PATCH_OPTION_USE_BEST = 0;
export const PATCH_OPTION_USE_LZX_BEST = 3;
export const PATCH_OPTION_USE_LZX_A = 1;
export const PATCH_OPTION_USE_LZX_B = 2;
export const PATCH_OPTION_USE_LZX_LARGE = 4;
export const PATCH_OPTION_NO_BINDFIX = 65536;
export const PATCH_OPTION_NO_LOCKFIX = 131072;
export const PATCH_OPTION_NO_REBASE = 262144;
export const PATCH_OPTION_FAIL_IF_SAME_FILE = 524288;
export const PATCH_OPTION_FAIL_IF_BIGGER = 1048576;
export const PATCH_OPTION_NO_CHECKSUM = 2097152;
export const PATCH_OPTION_NO_RESTIMEFIX = 4194304;
export const PATCH_OPTION_NO_TIMESTAMP = 8388608;
export const PATCH_OPTION_SIGNATURE_MD5 = 16777216;
export const PATCH_OPTION_INTERLEAVE_FILES = 1073741824;
export const PATCH_OPTION_RESERVED1 = 2147483648;
export const PATCH_OPTION_VALID_FLAGS = 3237937159;
export const PATCH_SYMBOL_NO_IMAGEHLP = 1;
export const PATCH_SYMBOL_NO_FAILURES = 2;
export const PATCH_SYMBOL_UNDECORATED_TOO = 4;
export const PATCH_SYMBOL_RESERVED1 = 2147483648;
export const PATCH_TRANSFORM_PE_RESOURCE_2 = 256;
export const PATCH_TRANSFORM_PE_IRELOC_2 = 512;
export const APPLY_OPTION_FAIL_IF_EXACT = 1;
export const APPLY_OPTION_FAIL_IF_CLOSE = 2;
export const APPLY_OPTION_TEST_ONLY = 4;
export const APPLY_OPTION_VALID_FLAGS = 7;
export const ERROR_PATCH_ENCODE_FAILURE = 3222155521;
export const ERROR_PATCH_INVALID_OPTIONS = 3222155522;
export const ERROR_PATCH_SAME_FILE = 3222155523;
export const ERROR_PATCH_RETAIN_RANGES_DIFFER = 3222155524;
export const ERROR_PATCH_BIGGER_THAN_COMPRESSED = 3222155525;
export const ERROR_PATCH_IMAGEHLP_FAILURE = 3222155526;
export const ERROR_PATCH_DECODE_FAILURE = 3222159617;
export const ERROR_PATCH_CORRUPT = 3222159618;
export const ERROR_PATCH_NEWER_FORMAT = 3222159619;
export const ERROR_PATCH_WRONG_FILE = 3222159620;
export const ERROR_PATCH_NOT_NECESSARY = 3222159621;
export const ERROR_PATCH_NOT_AVAILABLE = 3222159622;
export const ERROR_PCW_BASE = 3222163713;
export const ERROR_PCW_PCP_DOESNT_EXIST = 3222163713;
export const ERROR_PCW_PCP_BAD_FORMAT = 3222163714;
export const ERROR_PCW_CANT_CREATE_TEMP_FOLDER = 3222163715;
export const ERROR_PCW_MISSING_PATCH_PATH = 3222163716;
export const ERROR_PCW_CANT_OVERWRITE_PATCH = 3222163717;
export const ERROR_PCW_CANT_CREATE_PATCH_FILE = 3222163718;
export const ERROR_PCW_MISSING_PATCH_GUID = 3222163719;
export const ERROR_PCW_BAD_PATCH_GUID = 3222163720;
export const ERROR_PCW_BAD_GUIDS_TO_REPLACE = 3222163721;
export const ERROR_PCW_BAD_TARGET_PRODUCT_CODE_LIST = 3222163722;
export const ERROR_PCW_NO_UPGRADED_IMAGES_TO_PATCH = 3222163723;
export const ERROR_PCW_BAD_API_PATCHING_SYMBOL_FLAGS = 3222163725;
export const ERROR_PCW_OODS_COPYING_MSI = 3222163726;
export const ERROR_PCW_UPGRADED_IMAGE_NAME_TOO_LONG = 3222163727;
export const ERROR_PCW_BAD_UPGRADED_IMAGE_NAME = 3222163728;
export const ERROR_PCW_DUP_UPGRADED_IMAGE_NAME = 3222163729;
export const ERROR_PCW_UPGRADED_IMAGE_PATH_TOO_LONG = 3222163730;
export const ERROR_PCW_UPGRADED_IMAGE_PATH_EMPTY = 3222163731;
export const ERROR_PCW_UPGRADED_IMAGE_PATH_NOT_EXIST = 3222163732;
export const ERROR_PCW_UPGRADED_IMAGE_PATH_NOT_MSI = 3222163733;
export const ERROR_PCW_UPGRADED_IMAGE_COMPRESSED = 3222163734;
export const ERROR_PCW_TARGET_IMAGE_NAME_TOO_LONG = 3222163735;
export const ERROR_PCW_BAD_TARGET_IMAGE_NAME = 3222163736;
export const ERROR_PCW_DUP_TARGET_IMAGE_NAME = 3222163737;
export const ERROR_PCW_TARGET_IMAGE_PATH_TOO_LONG = 3222163738;
export const ERROR_PCW_TARGET_IMAGE_PATH_EMPTY = 3222163739;
export const ERROR_PCW_TARGET_IMAGE_PATH_NOT_EXIST = 3222163740;
export const ERROR_PCW_TARGET_IMAGE_PATH_NOT_MSI = 3222163741;
export const ERROR_PCW_TARGET_IMAGE_COMPRESSED = 3222163742;
export const ERROR_PCW_TARGET_BAD_PROD_VALIDATE = 3222163743;
export const ERROR_PCW_TARGET_BAD_PROD_CODE_VAL = 3222163744;
export const ERROR_PCW_UPGRADED_MISSING_SRC_FILES = 3222163745;
export const ERROR_PCW_TARGET_MISSING_SRC_FILES = 3222163746;
export const ERROR_PCW_IMAGE_FAMILY_NAME_TOO_LONG = 3222163747;
export const ERROR_PCW_BAD_IMAGE_FAMILY_NAME = 3222163748;
export const ERROR_PCW_DUP_IMAGE_FAMILY_NAME = 3222163749;
export const ERROR_PCW_BAD_IMAGE_FAMILY_SRC_PROP = 3222163750;
export const ERROR_PCW_UFILEDATA_LONG_FILE_TABLE_KEY = 3222163751;
export const ERROR_PCW_UFILEDATA_BLANK_FILE_TABLE_KEY = 3222163752;
export const ERROR_PCW_UFILEDATA_MISSING_FILE_TABLE_KEY = 3222163753;
export const ERROR_PCW_EXTFILE_LONG_FILE_TABLE_KEY = 3222163754;
export const ERROR_PCW_EXTFILE_BLANK_FILE_TABLE_KEY = 3222163755;
export const ERROR_PCW_EXTFILE_BAD_FAMILY_FIELD = 3222163756;
export const ERROR_PCW_EXTFILE_LONG_PATH_TO_FILE = 3222163757;
export const ERROR_PCW_EXTFILE_BLANK_PATH_TO_FILE = 3222163758;
export const ERROR_PCW_EXTFILE_MISSING_FILE = 3222163759;
export const ERROR_PCW_BAD_FILE_SEQUENCE_START = 3222163770;
export const ERROR_PCW_CANT_COPY_FILE_TO_TEMP_FOLDER = 3222163771;
export const ERROR_PCW_CANT_CREATE_ONE_PATCH_FILE = 3222163772;
export const ERROR_PCW_BAD_IMAGE_FAMILY_DISKID = 3222163773;
export const ERROR_PCW_BAD_IMAGE_FAMILY_FILESEQSTART = 3222163774;
export const ERROR_PCW_BAD_UPGRADED_IMAGE_FAMILY = 3222163775;
export const ERROR_PCW_BAD_TARGET_IMAGE_UPGRADED = 3222163776;
export const ERROR_PCW_DUP_TARGET_IMAGE_PACKCODE = 3222163777;
export const ERROR_PCW_UFILEDATA_BAD_UPGRADED_FIELD = 3222163778;
export const ERROR_PCW_MISMATCHED_PRODUCT_CODES = 3222163779;
export const ERROR_PCW_MISMATCHED_PRODUCT_VERSIONS = 3222163780;
export const ERROR_PCW_CANNOT_WRITE_DDF = 3222163781;
export const ERROR_PCW_CANNOT_RUN_MAKECAB = 3222163782;
export const ERROR_PCW_WRITE_SUMMARY_PROPERTIES = 3222163787;
export const ERROR_PCW_TFILEDATA_LONG_FILE_TABLE_KEY = 3222163788;
export const ERROR_PCW_TFILEDATA_BLANK_FILE_TABLE_KEY = 3222163789;
export const ERROR_PCW_TFILEDATA_MISSING_FILE_TABLE_KEY = 3222163790;
export const ERROR_PCW_TFILEDATA_BAD_TARGET_FIELD = 3222163791;
export const ERROR_PCW_UPGRADED_IMAGE_PATCH_PATH_TOO_LONG = 3222163792;
export const ERROR_PCW_UPGRADED_IMAGE_PATCH_PATH_NOT_EXIST = 3222163793;
export const ERROR_PCW_UPGRADED_IMAGE_PATCH_PATH_NOT_MSI = 3222163794;
export const ERROR_PCW_DUP_UPGRADED_IMAGE_PACKCODE = 3222163795;
export const ERROR_PCW_UFILEIGNORE_BAD_UPGRADED_FIELD = 3222163796;
export const ERROR_PCW_UFILEIGNORE_LONG_FILE_TABLE_KEY = 3222163797;
export const ERROR_PCW_UFILEIGNORE_BLANK_FILE_TABLE_KEY = 3222163798;
export const ERROR_PCW_UFILEIGNORE_BAD_FILE_TABLE_KEY = 3222163799;
export const ERROR_PCW_FAMILY_RANGE_NAME_TOO_LONG = 3222163800;
export const ERROR_PCW_BAD_FAMILY_RANGE_NAME = 3222163801;
export const ERROR_PCW_FAMILY_RANGE_LONG_FILE_TABLE_KEY = 3222163802;
export const ERROR_PCW_FAMILY_RANGE_BLANK_FILE_TABLE_KEY = 3222163803;
export const ERROR_PCW_FAMILY_RANGE_LONG_RETAIN_OFFSETS = 3222163804;
export const ERROR_PCW_FAMILY_RANGE_BLANK_RETAIN_OFFSETS = 3222163805;
export const ERROR_PCW_FAMILY_RANGE_BAD_RETAIN_OFFSETS = 3222163806;
export const ERROR_PCW_FAMILY_RANGE_LONG_RETAIN_LENGTHS = 3222163807;
export const ERROR_PCW_FAMILY_RANGE_BLANK_RETAIN_LENGTHS = 3222163808;
export const ERROR_PCW_FAMILY_RANGE_BAD_RETAIN_LENGTHS = 3222163809;
export const ERROR_PCW_FAMILY_RANGE_COUNT_MISMATCH = 3222163810;
export const ERROR_PCW_EXTFILE_LONG_IGNORE_OFFSETS = 3222163811;
export const ERROR_PCW_EXTFILE_BAD_IGNORE_OFFSETS = 3222163812;
export const ERROR_PCW_EXTFILE_LONG_IGNORE_LENGTHS = 3222163813;
export const ERROR_PCW_EXTFILE_BAD_IGNORE_LENGTHS = 3222163814;
export const ERROR_PCW_EXTFILE_IGNORE_COUNT_MISMATCH = 3222163815;
export const ERROR_PCW_EXTFILE_LONG_RETAIN_OFFSETS = 3222163816;
export const ERROR_PCW_EXTFILE_BAD_RETAIN_OFFSETS = 3222163817;
export const ERROR_PCW_TFILEDATA_LONG_IGNORE_OFFSETS = 3222163819;
export const ERROR_PCW_TFILEDATA_BAD_IGNORE_OFFSETS = 3222163820;
export const ERROR_PCW_TFILEDATA_LONG_IGNORE_LENGTHS = 3222163821;
export const ERROR_PCW_TFILEDATA_BAD_IGNORE_LENGTHS = 3222163822;
export const ERROR_PCW_TFILEDATA_IGNORE_COUNT_MISMATCH = 3222163823;
export const ERROR_PCW_TFILEDATA_LONG_RETAIN_OFFSETS = 3222163824;
export const ERROR_PCW_TFILEDATA_BAD_RETAIN_OFFSETS = 3222163825;
export const ERROR_PCW_CANT_GENERATE_TRANSFORM = 3222163827;
export const ERROR_PCW_CANT_CREATE_SUMMARY_INFO = 3222163828;
export const ERROR_PCW_CANT_GENERATE_TRANSFORM_POUND = 3222163829;
export const ERROR_PCW_CANT_CREATE_SUMMARY_INFO_POUND = 3222163830;
export const ERROR_PCW_BAD_UPGRADED_IMAGE_PRODUCT_CODE = 3222163831;
export const ERROR_PCW_BAD_UPGRADED_IMAGE_PRODUCT_VERSION = 3222163832;
export const ERROR_PCW_BAD_UPGRADED_IMAGE_UPGRADE_CODE = 3222163833;
export const ERROR_PCW_BAD_TARGET_IMAGE_PRODUCT_CODE = 3222163834;
export const ERROR_PCW_BAD_TARGET_IMAGE_PRODUCT_VERSION = 3222163835;
export const ERROR_PCW_BAD_TARGET_IMAGE_UPGRADE_CODE = 3222163836;
export const ERROR_PCW_MATCHED_PRODUCT_VERSIONS = 3222163837;
export const ERROR_PCW_OBSOLETION_WITH_SEQUENCE_DATA = 3222163838;
export const ERROR_PCW_OBSOLETION_WITH_MSI30 = 3222163839;
export const ERROR_PCW_OBSOLETION_WITH_PATCHSEQUENCE = 3222163840;
export const ERROR_PCW_CANNOT_CREATE_TABLE = 3222163841;
export const ERROR_PCW_CANT_GENERATE_SEQUENCEINFO_MAJORUPGD = 3222163842;
export const ERROR_PCW_MAJOR_UPGD_WITHOUT_SEQUENCING = 3222163843;
export const ERROR_PCW_BAD_PRODUCTVERSION_VALIDATION = 3222163844;
export const ERROR_PCW_BAD_TRANSFORMSET = 3222163845;
export const ERROR_PCW_BAD_TGT_UPD_IMAGES = 3222163846;
export const ERROR_PCW_BAD_SUPERCEDENCE = 3222163847;
export const ERROR_PCW_BAD_SEQUENCE = 3222163848;
export const ERROR_PCW_BAD_TARGET = 3222163849;
export const ERROR_PCW_NULL_PATCHFAMILY = 3222163850;
export const ERROR_PCW_NULL_SEQUENCE_NUMBER = 3222163851;
export const ERROR_PCW_BAD_VERSION_STRING = 3222163852;
export const ERROR_PCW_BAD_MAJOR_VERSION = 3222163853;
export const ERROR_PCW_SEQUENCING_BAD_TARGET = 3222163854;
export const ERROR_PCW_PATCHMETADATA_PROP_NOT_SET = 3222163855;
export const ERROR_PCW_INVALID_PATCHMETADATA_PROP = 3222163856;
export const ERROR_PCW_INVALID_SUPERCEDENCE = 3222163857;
export const ERROR_PCW_DUPLICATE_SEQUENCE_RECORD = 3222163858;
export const ERROR_PCW_WRONG_PATCHMETADATA_STRD_PROP = 3222163859;
export const ERROR_PCW_INVALID_PARAMETER = 3222163860;
export const ERROR_PCW_CREATEFILE_LOG_FAILED = 3222163861;
export const ERROR_PCW_INVALID_LOG_LEVEL = 3222163862;
export const ERROR_PCW_INVALID_UI_LEVEL = 3222163863;
export const ERROR_PCW_ERROR_WRITING_TO_LOG = 3222163864;
export const ERROR_PCW_OUT_OF_MEMORY = 3222163865;
export const ERROR_PCW_UNKNOWN_ERROR = 3222163866;
export const ERROR_PCW_UNKNOWN_INFO = 3222163867;
export const ERROR_PCW_UNKNOWN_WARN = 3222163868;
export const ERROR_PCW_OPEN_VIEW = 3222163869;
export const ERROR_PCW_EXECUTE_VIEW = 3222163870;
export const ERROR_PCW_VIEW_FETCH = 3222163871;
export const ERROR_PCW_FAILED_EXPAND_PATH = 3222163872;
export const ERROR_PCW_INTERNAL_ERROR = 3222163969;
export const ERROR_PCW_INVALID_PCP_PROPERTY = 3222163970;
export const ERROR_PCW_INVALID_PCP_TARGETIMAGES = 3222163971;
export const ERROR_PCW_LAX_VALIDATION_FLAGS = 3222163972;
export const ERROR_PCW_FAILED_CREATE_TRANSFORM = 3222163973;
export const ERROR_PCW_CANT_DELETE_TEMP_FOLDER = 3222163974;
export const ERROR_PCW_MISSING_DIRECTORY_TABLE = 3222163975;
export const ERROR_PCW_INVALID_SUPERSEDENCE_VALUE = 3222163976;
export const ERROR_PCW_INVALID_PATCH_TYPE_SEQUENCING = 3222163977;
export const ERROR_PCW_CANT_READ_FILE = 3222163978;
export const ERROR_PCW_TARGET_WRONG_PRODUCT_VERSION_COMP = 3222163979;
export const ERROR_PCW_INVALID_PCP_UPGRADEDFILESTOIGNORE = 3222163980;
export const ERROR_PCW_INVALID_PCP_UPGRADEDIMAGES = 3222163981;
export const ERROR_PCW_INVALID_PCP_EXTERNALFILES = 3222163982;
export const ERROR_PCW_INVALID_PCP_IMAGEFAMILIES = 3222163983;
export const ERROR_PCW_INVALID_PCP_PATCHSEQUENCE = 3222163984;
export const ERROR_PCW_INVALID_PCP_TARGETFILES_OPTIONALDATA = 3222163985;
export const ERROR_PCW_INVALID_PCP_UPGRADEDFILES_OPTIONALDATA = 3222163986;
export const ERROR_PCW_MISSING_PATCHMETADATA = 3222163987;
export const ERROR_PCW_IMAGE_PATH_NOT_EXIST = 3222163988;
export const ERROR_PCW_INVALID_RANGE_ELEMENT = 3222163989;
export const ERROR_PCW_INVALID_MAJOR_VERSION = 3222163990;
export const ERROR_PCW_INVALID_PCP_PROPERTIES = 3222163991;
export const ERROR_PCW_INVALID_PCP_FAMILYFILERANGES = 3222163992;
export const INFO_BASE = 3222229249;
export const INFO_PASSED_MAIN_CONTROL = 3222229249;
export const INFO_ENTERING_PHASE_I_VALIDATION = 3222229250;
export const INFO_ENTERING_PHASE_I = 3222229251;
export const INFO_PCP_PATH = 3222229252;
export const INFO_TEMP_DIR = 3222229253;
export const INFO_SET_OPTIONS = 3222229254;
export const INFO_PROPERTY = 3222229255;
export const INFO_ENTERING_PHASE_II = 3222229256;
export const INFO_ENTERING_PHASE_III = 3222229257;
export const INFO_ENTERING_PHASE_IV = 3222229258;
export const INFO_ENTERING_PHASE_V = 3222229259;
export const INFO_GENERATING_METADATA = 3222229265;
export const INFO_TEMP_DIR_CLEANUP = 3222229266;
export const INFO_PATCHCACHE_FILEINFO_FAILURE = 3222229267;
export const INFO_PATCHCACHE_PCI_READFAILURE = 3222229268;
export const INFO_PATCHCACHE_PCI_WRITEFAILURE = 3222229269;
export const INFO_USING_USER_MSI_FOR_PATCH_TABLES = 3222229270;
export const INFO_SUCCESSFUL_PATCH_CREATION = 3222229271;
export const WARN_BASE = 3222294785;
export const WARN_MAJOR_UPGRADE_PATCH = 3222294785;
export const WARN_SEQUENCE_DATA_GENERATION_DISABLED = 3222294786;
export const WARN_SEQUENCE_DATA_SUPERSEDENCE_IGNORED = 3222294787;
export const WARN_IMPROPER_TRANSFORM_VALIDATION = 3222294788;
export const WARN_PCW_MISMATCHED_PRODUCT_CODES = 3222294789;
export const WARN_PCW_MISMATCHED_PRODUCT_VERSIONS = 3222294790;
export const WARN_INVALID_TRANSFORM_VALIDATION = 3222294791;
export const WARN_BAD_MAJOR_VERSION = 3222294792;
export const WARN_FILE_VERSION_DOWNREV = 3222294793;
export const WARN_EQUAL_FILE_VERSION = 3222294794;
export const WARN_PATCHPROPERTYNOTSET = 3222294795;
export const WARN_OBSOLETION_WITH_SEQUENCE_DATA = 3222294802;
export const WARN_OBSOLETION_WITH_MSI30 = 3222294801;
export const WARN_OBSOLETION_WITH_PATCHSEQUENCE = 3222294803;
export const DELTA_MAX_HASH_SIZE = 32;
export const cchMaxInteger = 12;
export const LOGNONE = 0;
export const LOGINFO = 1;
export const LOGWARN = 2;
export const LOGERR = 4;
export const LOGPERFMESSAGES = 8;
export const LOGALL = 15;
export const UINONE = 0;
export const UILOGBITS = 15;
export const DEFAULT_MINIMUM_REQUIRED_MSI_VERSION = 100;
export const DEFAULT_FILE_SEQUENCE_START = 2;
export const DEFAULT_DISK_ID = 2;
export const MSIASSEMBLYINFO_NETASSEMBLY = 0;
export const MSIASSEMBLYINFO_WIN32ASSEMBLY = 1;
export const IASSEMBLYCACHE_UNINSTALL_DISPOSITION_UNINSTALLED = 1;
export const IASSEMBLYCACHE_UNINSTALL_DISPOSITION_STILL_IN_USE = 2;
export const IASSEMBLYCACHE_UNINSTALL_DISPOSITION_ALREADY_UNINSTALLED = 3;
export const IASSEMBLYCACHE_UNINSTALL_DISPOSITION_DELETE_PENDING = 4;
export const QUERYASMINFO_FLAG_VALIDATE = 1;
export const ieUnknown = 0;
export const ieError = 1;
export const ieWarning = 2;
export const ieInfo = 3;
export const ieStatusGetCUB = 0;
export const ieStatusICECount = 1;
export const ieStatusMerge = 2;
export const ieStatusSummaryInfo = 3;
export const ieStatusCreateEngine = 4;
export const ieStatusStarting = 5;
export const ieStatusRunICE = 6;
export const ieStatusShutdown = 7;
export const ieStatusSuccess = 8;
export const ieStatusFail = 9;
export const ieStatusCancel = 10;
export const msmErrorLanguageUnsupported = 1;
export const msmErrorLanguageFailed = 2;
export const msmErrorExclusion = 3;
export const msmErrorTableMerge = 4;
export const msmErrorResequenceMerge = 5;
export const msmErrorFileCreate = 6;
export const msmErrorDirCreate = 7;
export const msmErrorFeatureRequired = 8;
export const INSTALLMESSAGE_FATALEXIT = 0;
export const INSTALLMESSAGE_ERROR = 16777216;
export const INSTALLMESSAGE_WARNING = 33554432;
export const INSTALLMESSAGE_USER = 50331648;
export const INSTALLMESSAGE_INFO = 67108864;
export const INSTALLMESSAGE_FILESINUSE = 83886080;
export const INSTALLMESSAGE_RESOLVESOURCE = 100663296;
export const INSTALLMESSAGE_OUTOFDISKSPACE = 117440512;
export const INSTALLMESSAGE_ACTIONSTART = 134217728;
export const INSTALLMESSAGE_ACTIONDATA = 150994944;
export const INSTALLMESSAGE_PROGRESS = 167772160;
export const INSTALLMESSAGE_COMMONDATA = 184549376;
export const INSTALLMESSAGE_INITIALIZE = 201326592;
export const INSTALLMESSAGE_TERMINATE = 218103808;
export const INSTALLMESSAGE_SHOWDIALOG = 234881024;
export const INSTALLMESSAGE_PERFORMANCE = 251658240;
export const INSTALLMESSAGE_RMFILESINUSE = 419430400;
export const INSTALLMESSAGE_INSTALLSTART = 436207616;
export const INSTALLMESSAGE_INSTALLEND = 452984832;
export const INSTALLUILEVEL_NOCHANGE = 0;
export const INSTALLUILEVEL_DEFAULT = 1;
export const INSTALLUILEVEL_NONE = 2;
export const INSTALLUILEVEL_BASIC = 3;
export const INSTALLUILEVEL_REDUCED = 4;
export const INSTALLUILEVEL_FULL = 5;
export const INSTALLUILEVEL_ENDDIALOG = 128;
export const INSTALLUILEVEL_PROGRESSONLY = 64;
export const INSTALLUILEVEL_HIDECANCEL = 32;
export const INSTALLUILEVEL_SOURCERESONLY = 256;
export const INSTALLUILEVEL_UACONLY = 512;
export const INSTALLSTATE_NOTUSED = "-7";
export const INSTALLSTATE_BADCONFIG = "-6";
export const INSTALLSTATE_INCOMPLETE = "-5";
export const INSTALLSTATE_SOURCEABSENT = "-4";
export const INSTALLSTATE_MOREDATA = "-3";
export const INSTALLSTATE_INVALIDARG = "-2";
export const INSTALLSTATE_UNKNOWN = "-1";
export const INSTALLSTATE_BROKEN = 0;
export const INSTALLSTATE_ADVERTISED = 1;
export const INSTALLSTATE_REMOVED = 1;
export const INSTALLSTATE_ABSENT = 2;
export const INSTALLSTATE_LOCAL = 3;
export const INSTALLSTATE_SOURCE = 4;
export const INSTALLSTATE_DEFAULT = 5;
export const USERINFOSTATE_MOREDATA = "-3";
export const USERINFOSTATE_INVALIDARG = "-2";
export const USERINFOSTATE_UNKNOWN = "-1";
export const USERINFOSTATE_ABSENT = 0;
export const USERINFOSTATE_PRESENT = 1;
export const INSTALLLEVEL_DEFAULT = 0;
export const INSTALLLEVEL_MINIMUM = 1;
export const INSTALLLEVEL_MAXIMUM = 65535;
export const REINSTALLMODE_REPAIR = 1;
export const REINSTALLMODE_FILEMISSING = 2;
export const REINSTALLMODE_FILEOLDERVERSION = 4;
export const REINSTALLMODE_FILEEQUALVERSION = 8;
export const REINSTALLMODE_FILEEXACT = 16;
export const REINSTALLMODE_FILEVERIFY = 32;
export const REINSTALLMODE_FILEREPLACE = 64;
export const REINSTALLMODE_MACHINEDATA = 128;
export const REINSTALLMODE_USERDATA = 256;
export const REINSTALLMODE_SHORTCUT = 512;
export const REINSTALLMODE_PACKAGE = 1024;
export const INSTALLLOGMODE_FATALEXIT = 1;
export const INSTALLLOGMODE_ERROR = 2;
export const INSTALLLOGMODE_WARNING = 4;
export const INSTALLLOGMODE_USER = 8;
export const INSTALLLOGMODE_INFO = 16;
export const INSTALLLOGMODE_RESOLVESOURCE = 64;
export const INSTALLLOGMODE_OUTOFDISKSPACE = 128;
export const INSTALLLOGMODE_ACTIONSTART = 256;
export const INSTALLLOGMODE_ACTIONDATA = 512;
export const INSTALLLOGMODE_COMMONDATA = 2048;
export const INSTALLLOGMODE_PROPERTYDUMP = 1024;
export const INSTALLLOGMODE_VERBOSE = 4096;
export const INSTALLLOGMODE_EXTRADEBUG = 8192;
export const INSTALLLOGMODE_LOGONLYONERROR = 16384;
export const INSTALLLOGMODE_LOGPERFORMANCE = 32768;
export const INSTALLLOGMODE_PROGRESS = 1024;
export const INSTALLLOGMODE_INITIALIZE = 4096;
export const INSTALLLOGMODE_TERMINATE = 8192;
export const INSTALLLOGMODE_SHOWDIALOG = 16384;
export const INSTALLLOGMODE_FILESINUSE = 32;
export const INSTALLLOGMODE_RMFILESINUSE = 33554432;
export const INSTALLLOGMODE_INSTALLSTART = 67108864;
export const INSTALLLOGMODE_INSTALLEND = 134217728;
export const INSTALLLOGATTRIBUTES_APPEND = 1;
export const INSTALLLOGATTRIBUTES_FLUSHEACHLINE = 2;
export const INSTALLFEATUREATTRIBUTE_FAVORLOCAL = 1;
export const INSTALLFEATUREATTRIBUTE_FAVORSOURCE = 2;
export const INSTALLFEATUREATTRIBUTE_FOLLOWPARENT = 4;
export const INSTALLFEATUREATTRIBUTE_FAVORADVERTISE = 8;
export const INSTALLFEATUREATTRIBUTE_DISALLOWADVERTISE = 16;
export const INSTALLFEATUREATTRIBUTE_NOUNSUPPORTEDADVERTISE = 32;
export const INSTALLMODE_NODETECTION_ANY = "-4";
export const INSTALLMODE_NOSOURCERESOLUTION = "-3";
export const INSTALLMODE_NODETECTION = "-2";
export const INSTALLMODE_EXISTING = "-1";
export const INSTALLMODE_DEFAULT = 0;
export const MSIPATCHSTATE_INVALID = 0;
export const MSIPATCHSTATE_APPLIED = 1;
export const MSIPATCHSTATE_SUPERSEDED = 2;
export const MSIPATCHSTATE_OBSOLETED = 4;
export const MSIPATCHSTATE_REGISTERED = 8;
export const MSIPATCHSTATE_ALL = 15;
export const MSIINSTALLCONTEXT_FIRSTVISIBLE = 0;
export const MSIINSTALLCONTEXT_NONE = 0;
export const MSIINSTALLCONTEXT_USERMANAGED = 1;
export const MSIINSTALLCONTEXT_USERUNMANAGED = 2;
export const MSIINSTALLCONTEXT_MACHINE = 4;
export const MSIINSTALLCONTEXT_ALL = 7;
export const MSIINSTALLCONTEXT_ALLUSERMANAGED = 8;
export const MSIPATCH_DATATYPE_PATCHFILE = 0;
export const MSIPATCH_DATATYPE_XMLPATH = 1;
export const MSIPATCH_DATATYPE_XMLBLOB = 2;
export const SCRIPTFLAGS_CACHEINFO = 1;
export const SCRIPTFLAGS_SHORTCUTS = 4;
export const SCRIPTFLAGS_MACHINEASSIGN = 8;
export const SCRIPTFLAGS_REGDATA_CNFGINFO = 32;
export const SCRIPTFLAGS_VALIDATE_TRANSFORMS_LIST = 64;
export const SCRIPTFLAGS_REGDATA_CLASSINFO = 128;
export const SCRIPTFLAGS_REGDATA_EXTENSIONINFO = 256;
export const SCRIPTFLAGS_REGDATA_APPINFO = 384;
export const SCRIPTFLAGS_REGDATA = 416;
export const ADVERTISEFLAGS_MACHINEASSIGN = 0;
export const ADVERTISEFLAGS_USERASSIGN = 1;
export const INSTALLTYPE_DEFAULT = 0;
export const INSTALLTYPE_NETWORK_IMAGE = 1;
export const INSTALLTYPE_SINGLE_INSTANCE = 2;
export const MSIARCHITECTUREFLAGS_X86 = 1;
export const MSIARCHITECTUREFLAGS_IA64 = 2;
export const MSIARCHITECTUREFLAGS_AMD64 = 4;
export const MSIARCHITECTUREFLAGS_ARM = 8;
export const MSIOPENPACKAGEFLAGS_IGNOREMACHINESTATE = 1;
export const MSIADVERTISEOPTIONFLAGS_INSTANCE = 1;
export const MSISOURCETYPE_UNKNOWN = 0;
export const MSISOURCETYPE_NETWORK = 1;
export const MSISOURCETYPE_URL = 2;
export const MSISOURCETYPE_MEDIA = 4;
export const MSICODE_PRODUCT = 0;
export const MSICODE_PATCH = 1073741824;
export const MSITRANSACTION_CHAIN_EMBEDDEDUI = 1;
export const MSITRANSACTION_JOIN_EXISTING_EMBEDDEDUI = 2;
export const MSITRANSACTIONSTATE_ROLLBACK = 0;
export const MSITRANSACTIONSTATE_COMMIT = 1;
export const MSIDBSTATE_ERROR = "-1";
export const MSIDBSTATE_READ = 0;
export const MSIDBSTATE_WRITE = 1;
export const MSIMODIFY_SEEK = "-1";
export const MSIMODIFY_REFRESH = 0;
export const MSIMODIFY_INSERT = 1;
export const MSIMODIFY_UPDATE = 2;
export const MSIMODIFY_ASSIGN = 3;
export const MSIMODIFY_REPLACE = 4;
export const MSIMODIFY_MERGE = 5;
export const MSIMODIFY_DELETE = 6;
export const MSIMODIFY_INSERT_TEMPORARY = 7;
export const MSIMODIFY_VALIDATE = 8;
export const MSIMODIFY_VALIDATE_NEW = 9;
export const MSIMODIFY_VALIDATE_FIELD = 10;
export const MSIMODIFY_VALIDATE_DELETE = 11;
export const MSICOLINFO_NAMES = 0;
export const MSICOLINFO_TYPES = 1;
export const MSICONDITION_FALSE = 0;
export const MSICONDITION_TRUE = 1;
export const MSICONDITION_NONE = 2;
export const MSICONDITION_ERROR = 3;
export const MSICOSTTREE_SELFONLY = 0;
export const MSICOSTTREE_CHILDREN = 1;
export const MSICOSTTREE_PARENTS = 2;
export const MSICOSTTREE_RESERVED = 3;
export const MSIDBERROR_INVALIDARG = "-3";
export const MSIDBERROR_MOREDATA = "-2";
export const MSIDBERROR_FUNCTIONERROR = "-1";
export const MSIDBERROR_NOERROR = 0;
export const MSIDBERROR_DUPLICATEKEY = 1;
export const MSIDBERROR_REQUIRED = 2;
export const MSIDBERROR_BADLINK = 3;
export const MSIDBERROR_OVERFLOW = 4;
export const MSIDBERROR_UNDERFLOW = 5;
export const MSIDBERROR_NOTINSET = 6;
export const MSIDBERROR_BADVERSION = 7;
export const MSIDBERROR_BADCASE = 8;
export const MSIDBERROR_BADGUID = 9;
export const MSIDBERROR_BADWILDCARD = 10;
export const MSIDBERROR_BADIDENTIFIER = 11;
export const MSIDBERROR_BADLANGUAGE = 12;
export const MSIDBERROR_BADFILENAME = 13;
export const MSIDBERROR_BADPATH = 14;
export const MSIDBERROR_BADCONDITION = 15;
export const MSIDBERROR_BADFORMATTED = 16;
export const MSIDBERROR_BADTEMPLATE = 17;
export const MSIDBERROR_BADDEFAULTDIR = 18;
export const MSIDBERROR_BADREGPATH = 19;
export const MSIDBERROR_BADCUSTOMSOURCE = 20;
export const MSIDBERROR_BADPROPERTY = 21;
export const MSIDBERROR_MISSINGDATA = 22;
export const MSIDBERROR_BADCATEGORY = 23;
export const MSIDBERROR_BADKEYTABLE = 24;
export const MSIDBERROR_BADMAXMINVALUES = 25;
export const MSIDBERROR_BADCABINET = 26;
export const MSIDBERROR_BADSHORTCUT = 27;
export const MSIDBERROR_STRINGOVERFLOW = 28;
export const MSIDBERROR_BADLOCALIZEATTRIB = 29;
export const MSIRUNMODE_ADMIN = 0;
export const MSIRUNMODE_ADVERTISE = 1;
export const MSIRUNMODE_MAINTENANCE = 2;
export const MSIRUNMODE_ROLLBACKENABLED = 3;
export const MSIRUNMODE_LOGENABLED = 4;
export const MSIRUNMODE_OPERATIONS = 5;
export const MSIRUNMODE_REBOOTATEND = 6;
export const MSIRUNMODE_REBOOTNOW = 7;
export const MSIRUNMODE_CABINET = 8;
export const MSIRUNMODE_SOURCESHORTNAMES = 9;
export const MSIRUNMODE_TARGETSHORTNAMES = 10;
export const MSIRUNMODE_RESERVED11 = 11;
export const MSIRUNMODE_WINDOWS9X = 12;
export const MSIRUNMODE_ZAWENABLED = 13;
export const MSIRUNMODE_RESERVED14 = 14;
export const MSIRUNMODE_RESERVED15 = 15;
export const MSIRUNMODE_SCHEDULED = 16;
export const MSIRUNMODE_ROLLBACK = 17;
export const MSIRUNMODE_COMMIT = 18;
export const MSITRANSFORM_ERROR_ADDEXISTINGROW = 1;
export const MSITRANSFORM_ERROR_DELMISSINGROW = 2;
export const MSITRANSFORM_ERROR_ADDEXISTINGTABLE = 4;
export const MSITRANSFORM_ERROR_DELMISSINGTABLE = 8;
export const MSITRANSFORM_ERROR_UPDATEMISSINGROW = 16;
export const MSITRANSFORM_ERROR_CHANGECODEPAGE = 32;
export const MSITRANSFORM_ERROR_VIEWTRANSFORM = 256;
export const MSITRANSFORM_ERROR_NONE = 0;
export const MSITRANSFORM_VALIDATE_LANGUAGE = 1;
export const MSITRANSFORM_VALIDATE_PRODUCT = 2;
export const MSITRANSFORM_VALIDATE_PLATFORM = 4;
export const MSITRANSFORM_VALIDATE_MAJORVERSION = 8;
export const MSITRANSFORM_VALIDATE_MINORVERSION = 16;
export const MSITRANSFORM_VALIDATE_UPDATEVERSION = 32;
export const MSITRANSFORM_VALIDATE_NEWLESSBASEVERSION = 64;
export const MSITRANSFORM_VALIDATE_NEWLESSEQUALBASEVERSION = 128;
export const MSITRANSFORM_VALIDATE_NEWEQUALBASEVERSION = 256;
export const MSITRANSFORM_VALIDATE_NEWGREATEREQUALBASEVERSION = 512;
export const MSITRANSFORM_VALIDATE_NEWGREATERBASEVERSION = 1024;
export const MSITRANSFORM_VALIDATE_UPGRADECODE = 2048;
export const ASM_NAME_PUBLIC_KEY = 0;
export const ASM_NAME_PUBLIC_KEY_TOKEN = 1;
export const ASM_NAME_HASH_VALUE = 2;
export const ASM_NAME_NAME = 3;
export const ASM_NAME_MAJOR_VERSION = 4;
export const ASM_NAME_MINOR_VERSION = 5;
export const ASM_NAME_BUILD_NUMBER = 6;
export const ASM_NAME_REVISION_NUMBER = 7;
export const ASM_NAME_CULTURE = 8;
export const ASM_NAME_PROCESSOR_ID_ARRAY = 9;
export const ASM_NAME_OSINFO_ARRAY = 10;
export const ASM_NAME_HASH_ALGID = 11;
export const ASM_NAME_ALIAS = 12;
export const ASM_NAME_CODEBASE_URL = 13;
export const ASM_NAME_CODEBASE_LASTMOD = 14;
export const ASM_NAME_NULL_PUBLIC_KEY = 15;
export const ASM_NAME_NULL_PUBLIC_KEY_TOKEN = 16;
export const ASM_NAME_CUSTOM = 17;
export const ASM_NAME_NULL_CUSTOM = 18;
export const ASM_NAME_MVID = 19;
export const ASM_NAME_MAX_PARAMS = 20;
export const ASM_BINDF_FORCE_CACHE_INSTALL = 1;
export const ASM_BINDF_RFS_INTEGRITY_CHECK = 2;
export const ASM_BINDF_RFS_MODULE_CHECK = 4;
export const ASM_BINDF_BINPATH_PROBE_ONLY = 8;
export const ASM_BINDF_SHARED_BINPATH_HINT = 16;
export const ASM_BINDF_PARENT_ASM_HINT = 32;
export const ASM_DISPLAYF_VERSION = 1;
export const ASM_DISPLAYF_CULTURE = 2;
export const ASM_DISPLAYF_PUBLIC_KEY_TOKEN = 4;
export const ASM_DISPLAYF_PUBLIC_KEY = 8;
export const ASM_DISPLAYF_CUSTOM = 16;
export const ASM_DISPLAYF_PROCESSORARCHITECTURE = 32;
export const ASM_DISPLAYF_LANGUAGEID = 64;
export const ASM_CMPF_NAME = 1;
export const ASM_CMPF_MAJOR_VERSION = 2;
export const ASM_CMPF_MINOR_VERSION = 4;
export const ASM_CMPF_BUILD_NUMBER = 8;
export const ASM_CMPF_REVISION_NUMBER = 16;
export const ASM_CMPF_PUBLIC_KEY_TOKEN = 32;
export const ASM_CMPF_CULTURE = 64;
export const ASM_CMPF_CUSTOM = 128;
export const ASM_CMPF_ALL = 255;
export const ASM_CMPF_DEFAULT = 256;
export const CANOF_PARSE_DISPLAY_NAME = 1;
export const CANOF_SET_DEFAULT_VALUES = 2;
export const msidbControlAttributesVisible = 1;
export const msidbControlAttributesEnabled = 2;
export const msidbControlAttributesSunken = 4;
export const msidbControlAttributesIndirect = 8;
export const msidbControlAttributesInteger = 16;
export const msidbControlAttributesRTLRO = 32;
export const msidbControlAttributesRightAligned = 64;
export const msidbControlAttributesLeftScroll = 128;
export const msidbControlAttributesBiDi = 224;
export const msidbControlAttributesTransparent = 65536;
export const msidbControlAttributesNoPrefix = 131072;
export const msidbControlAttributesNoWrap = 262144;
export const msidbControlAttributesFormatSize = 524288;
export const msidbControlAttributesUsersLanguage = 1048576;
export const msidbControlAttributesMultiline = 65536;
export const msidbControlAttributesPasswordInput = 2097152;
export const msidbControlAttributesProgress95 = 65536;
export const msidbControlAttributesRemovableVolume = 65536;
export const msidbControlAttributesFixedVolume = 131072;
export const msidbControlAttributesRemoteVolume = 262144;
export const msidbControlAttributesCDROMVolume = 524288;
export const msidbControlAttributesRAMDiskVolume = 1048576;
export const msidbControlAttributesFloppyVolume = 2097152;
export const msidbControlShowRollbackCost = 4194304;
export const msidbControlAttributesSorted = 65536;
export const msidbControlAttributesComboList = 131072;
export const msidbControlAttributesImageHandle = 65536;
export const msidbControlAttributesPushLike = 131072;
export const msidbControlAttributesBitmap = 262144;
export const msidbControlAttributesIcon = 524288;
export const msidbControlAttributesFixedSize = 1048576;
export const msidbControlAttributesIconSize16 = 2097152;
export const msidbControlAttributesIconSize32 = 4194304;
export const msidbControlAttributesIconSize48 = 6291456;
export const msidbControlAttributesElevationShield = 8388608;
export const msidbControlAttributesHasBorder = 16777216;
export const msidbLocatorTypeDirectory = 0;
export const msidbLocatorTypeFileName = 1;
export const msidbLocatorTypeRawValue = 2;
export const msidbLocatorType64bit = 16;
export const msidbComponentAttributesLocalOnly = 0;
export const msidbComponentAttributesSourceOnly = 1;
export const msidbComponentAttributesOptional = 2;
export const msidbComponentAttributesRegistryKeyPath = 4;
export const msidbComponentAttributesSharedDllRefCount = 8;
export const msidbComponentAttributesPermanent = 16;
export const msidbComponentAttributesODBCDataSource = 32;
export const msidbComponentAttributesTransitive = 64;
export const msidbComponentAttributesNeverOverwrite = 128;
export const msidbComponentAttributes64bit = 256;
export const msidbComponentAttributesDisableRegistryReflection = 512;
export const msidbComponentAttributesUninstallOnSupersedence = 1024;
export const msidbComponentAttributesShared = 2048;
export const msidbAssemblyAttributesURT = 0;
export const msidbAssemblyAttributesWin32 = 1;
export const msidbCustomActionTypeDll = 1;
export const msidbCustomActionTypeExe = 2;
export const msidbCustomActionTypeTextData = 3;
export const msidbCustomActionTypeJScript = 5;
export const msidbCustomActionTypeVBScript = 6;
export const msidbCustomActionTypeInstall = 7;
export const msidbCustomActionTypeBinaryData = 0;
export const msidbCustomActionTypeSourceFile = 16;
export const msidbCustomActionTypeDirectory = 32;
export const msidbCustomActionTypeProperty = 48;
export const msidbCustomActionTypeContinue = 64;
export const msidbCustomActionTypeAsync = 128;
export const msidbCustomActionTypeFirstSequence = 256;
export const msidbCustomActionTypeOncePerProcess = 512;
export const msidbCustomActionTypeClientRepeat = 768;
export const msidbCustomActionTypeInScript = 1024;
export const msidbCustomActionTypeRollback = 256;
export const msidbCustomActionTypeCommit = 512;
export const msidbCustomActionTypeNoImpersonate = 2048;
export const msidbCustomActionTypeTSAware = 16384;
export const msidbCustomActionType64BitScript = 4096;
export const msidbCustomActionTypeHideTarget = 8192;
export const msidbCustomActionTypePatchUninstall = 32768;
export const msidbDialogAttributesVisible = 1;
export const msidbDialogAttributesModal = 2;
export const msidbDialogAttributesMinimize = 4;
export const msidbDialogAttributesSysModal = 8;
export const msidbDialogAttributesKeepModeless = 16;
export const msidbDialogAttributesTrackDiskSpace = 32;
export const msidbDialogAttributesUseCustomPalette = 64;
export const msidbDialogAttributesRTLRO = 128;
export const msidbDialogAttributesRightAligned = 256;
export const msidbDialogAttributesLeftScroll = 512;
export const msidbDialogAttributesBiDi = 896;
export const msidbDialogAttributesError = 65536;
export const msidbFeatureAttributesFavorLocal = 0;
export const msidbFeatureAttributesFavorSource = 1;
export const msidbFeatureAttributesFollowParent = 2;
export const msidbFeatureAttributesFavorAdvertise = 4;
export const msidbFeatureAttributesDisallowAdvertise = 8;
export const msidbFeatureAttributesUIDisallowAbsent = 16;
export const msidbFeatureAttributesNoUnsupportedAdvertise = 32;
export const msidbFileAttributesReadOnly = 1;
export const msidbFileAttributesHidden = 2;
export const msidbFileAttributesSystem = 4;
export const msidbFileAttributesReserved0 = 8;
export const msidbFileAttributesIsolatedComp = 16;
export const msidbFileAttributesReserved1 = 64;
export const msidbFileAttributesReserved2 = 128;
export const msidbFileAttributesReserved3 = 256;
export const msidbFileAttributesVital = 512;
export const msidbFileAttributesChecksum = 1024;
export const msidbFileAttributesPatchAdded = 4096;
export const msidbFileAttributesNoncompressed = 8192;
export const msidbFileAttributesCompressed = 16384;
export const msidbFileAttributesReserved4 = 32768;
export const msidbIniFileActionAddLine = 0;
export const msidbIniFileActionCreateLine = 1;
export const msidbIniFileActionRemoveLine = 2;
export const msidbIniFileActionAddTag = 3;
export const msidbIniFileActionRemoveTag = 4;
export const msidbMoveFileOptionsMove = 1;
export const msidbODBCDataSourceRegistrationPerMachine = 0;
export const msidbODBCDataSourceRegistrationPerUser = 1;
export const msidbClassAttributesRelativePath = 1;
export const msidbPatchAttributesNonVital = 1;
export const msidbRegistryRootClassesRoot = 0;
export const msidbRegistryRootCurrentUser = 1;
export const msidbRegistryRootLocalMachine = 2;
export const msidbRegistryRootUsers = 3;
export const msidbRemoveFileInstallModeOnInstall = 1;
export const msidbRemoveFileInstallModeOnRemove = 2;
export const msidbRemoveFileInstallModeOnBoth = 3;
export const msidbServiceControlEventStart = 1;
export const msidbServiceControlEventStop = 2;
export const msidbServiceControlEventDelete = 8;
export const msidbServiceControlEventUninstallStart = 16;
export const msidbServiceControlEventUninstallStop = 32;
export const msidbServiceControlEventUninstallDelete = 128;
export const msidbServiceConfigEventInstall = 1;
export const msidbServiceConfigEventUninstall = 2;
export const msidbServiceConfigEventReinstall = 4;
export const msidbServiceInstallErrorControlVital = 32768;
export const msidbTextStyleStyleBitsBold = 1;
export const msidbTextStyleStyleBitsItalic = 2;
export const msidbTextStyleStyleBitsUnderline = 4;
export const msidbTextStyleStyleBitsStrike = 8;
export const msidbUpgradeAttributesMigrateFeatures = 1;
export const msidbUpgradeAttributesOnlyDetect = 2;
export const msidbUpgradeAttributesIgnoreRemoveFailure = 4;
export const msidbUpgradeAttributesVersionMinInclusive = 256;
export const msidbUpgradeAttributesVersionMaxInclusive = 512;
export const msidbUpgradeAttributesLanguagesExclusive = 1024;
export const msidbEmbeddedUI = 1;
export const msidbEmbeddedHandlesBasic = 2;
export const msidbSumInfoSourceTypeSFN = 1;
export const msidbSumInfoSourceTypeCompressed = 2;
export const msidbSumInfoSourceTypeAdminImage = 4;
export const msidbSumInfoSourceTypeLUAPackage = 8;
export const msirbRebootImmediate = 1;
export const msirbRebootDeferred = 2;
export const msirbRebootUndeterminedReason = 0;
export const msirbRebootInUseFilesReason = 1;
export const msirbRebootScheduleRebootReason = 2;
export const msirbRebootForceRebootReason = 3;
export const msirbRebootCustomActionReason = 4;
export const msifiFastInstallNoSR = 1;
export const msifiFastInstallQuickCosting = 2;
export const msifiFastInstallLessPrgMsg = 4;
export const TILE_TEMPLATE_INVALID = 0;
export const TILE_TEMPLATE_FLIP = 5;
export const TILE_TEMPLATE_DEEPLINK = 13;
export const TILE_TEMPLATE_CYCLE = 14;
export const TILE_TEMPLATE_METROCOUNT = 1;
export const TILE_TEMPLATE_AGILESTORE = 2;
export const TILE_TEMPLATE_GAMES = 3;
export const TILE_TEMPLATE_CALENDAR = 4;
export const TILE_TEMPLATE_MUSICVIDEO = 7;
export const TILE_TEMPLATE_PEOPLE = 10;
export const TILE_TEMPLATE_CONTACT = 11;
export const TILE_TEMPLATE_GROUP = 12;
export const TILE_TEMPLATE_DEFAULT = 15;
export const TILE_TEMPLATE_BADGE = 16;
export const TILE_TEMPLATE_BLOCK = 17;
export const TILE_TEMPLATE_TEXT01 = 18;
export const TILE_TEMPLATE_TEXT02 = 19;
export const TILE_TEMPLATE_TEXT03 = 20;
export const TILE_TEMPLATE_TEXT04 = 21;
export const TILE_TEMPLATE_TEXT05 = 22;
export const TILE_TEMPLATE_TEXT06 = 23;
export const TILE_TEMPLATE_TEXT07 = 24;
export const TILE_TEMPLATE_TEXT08 = 25;
export const TILE_TEMPLATE_TEXT09 = 26;
export const TILE_TEMPLATE_TEXT10 = 27;
export const TILE_TEMPLATE_TEXT11 = 28;
export const TILE_TEMPLATE_IMAGE = 29;
export const TILE_TEMPLATE_IMAGECOLLECTION = 30;
export const TILE_TEMPLATE_IMAGEANDTEXT01 = 31;
export const TILE_TEMPLATE_IMAGEANDTEXT02 = 32;
export const TILE_TEMPLATE_BLOCKANDTEXT01 = 33;
export const TILE_TEMPLATE_BLOCKANDTEXT02 = 34;
export const TILE_TEMPLATE_PEEKIMAGEANDTEXT01 = 35;
export const TILE_TEMPLATE_PEEKIMAGEANDTEXT02 = 36;
export const TILE_TEMPLATE_PEEKIMAGEANDTEXT03 = 37;
export const TILE_TEMPLATE_PEEKIMAGEANDTEXT04 = 38;
export const TILE_TEMPLATE_PEEKIMAGE01 = 39;
export const TILE_TEMPLATE_PEEKIMAGE02 = 40;
export const TILE_TEMPLATE_PEEKIMAGE03 = 41;
export const TILE_TEMPLATE_PEEKIMAGE04 = 42;
export const TILE_TEMPLATE_PEEKIMAGE05 = 43;
export const TILE_TEMPLATE_PEEKIMAGE06 = 44;
export const TILE_TEMPLATE_PEEKIMAGECOLLECTION01 = 45;
export const TILE_TEMPLATE_PEEKIMAGECOLLECTION02 = 46;
export const TILE_TEMPLATE_PEEKIMAGECOLLECTION03 = 47;
export const TILE_TEMPLATE_PEEKIMAGECOLLECTION04 = 48;
export const TILE_TEMPLATE_PEEKIMAGECOLLECTION05 = 49;
export const TILE_TEMPLATE_PEEKIMAGECOLLECTION06 = 50;
export const TILE_TEMPLATE_SMALLIMAGEANDTEXT01 = 51;
export const TILE_TEMPLATE_SMALLIMAGEANDTEXT02 = 52;
export const TILE_TEMPLATE_SMALLIMAGEANDTEXT03 = 53;
export const TILE_TEMPLATE_SMALLIMAGEANDTEXT04 = 54;
export const TILE_TEMPLATE_SMALLIMAGEANDTEXT05 = 55;
export const TILE_TEMPLATE_METROCOUNTQUEUE = 56;
export const TILE_TEMPLATE_SEARCH = 57;
export const TILE_TEMPLATE_TILEFLYOUT01 = 58;
export const TILE_TEMPLATE_FOLDER = 59;
export const TILE_TEMPLATE_ALL = 100;
export const PM_APP_GENRE_GAMES = 0;
export const PM_APP_GENRE_OTHER = 1;
export const PM_APP_GENRE_INVALID = 2;
export const PM_APPLICATION_INSTALL_NORMAL = 0;
export const PM_APPLICATION_INSTALL_IN_ROM = 1;
export const PM_APPLICATION_INSTALL_PA = 2;
export const PM_APPLICATION_INSTALL_DEBUG = 3;
export const PM_APPLICATION_INSTALL_ENTERPRISE = 4;
export const PM_APPLICATION_INSTALL_INVALID = 5;
export const PM_APPLICATION_STATE_MIN = 0;
export const PM_APPLICATION_STATE_INSTALLED = 1;
export const PM_APPLICATION_STATE_INSTALLING = 2;
export const PM_APPLICATION_STATE_UPDATING = 3;
export const PM_APPLICATION_STATE_UNINSTALLING = 4;
export const PM_APPLICATION_STATE_LICENSE_UPDATING = 5;
export const PM_APPLICATION_STATE_MOVING = 6;
export const PM_APPLICATION_STATE_DISABLED_SD_CARD = 7;
export const PM_APPLICATION_STATE_DISABLED_ENTERPRISE = 8;
export const PM_APPLICATION_STATE_DISABLED_BACKING_UP = 9;
export const PM_APPLICATION_STATE_DISABLED_MDIL_BINDING = 10;
export const PM_APPLICATION_STATE_MAX = 10;
export const PM_APPLICATION_STATE_INVALID = 11;
export const PM_APPLICATION_HUBTYPE_NONMUSIC = 0;
export const PM_APPLICATION_HUBTYPE_MUSIC = 1;
export const PM_APPLICATION_HUBTYPE_INVALID = 2;
export const PM_TILE_HUBTYPE_MUSIC = 1;
export const PM_TILE_HUBTYPE_MOSETTINGS = 268435456;
export const PM_TILE_HUBTYPE_GAMES = 536870912;
export const PM_TILE_HUBTYPE_APPLIST = 1073741824;
export const PM_TILE_HUBTYPE_STARTMENU = "-2147483648";
export const PM_TILE_HUBTYPE_LOCKSCREEN = 16777216;
export const PM_TILE_HUBTYPE_KIDZONE = 33554432;
export const PM_TILE_HUBTYPE_CACHED = 67108864;
export const PM_TILE_HUBTYPE_INVALID = 67108865;
export const PM_STARTTILE_TYPE_PRIMARY = 1;
export const PM_STARTTILE_TYPE_SECONDARY = 2;
export const PM_STARTTILE_TYPE_APPLIST = 3;
export const PM_STARTTILE_TYPE_APPLISTPRIMARY = 4;
export const PM_STARTTILE_TYPE_INVALID = 5;
export const PM_TASK_TYPE_NORMAL = 0;
export const PM_TASK_TYPE_DEFAULT = 1;
export const PM_TASK_TYPE_SETTINGS = 2;
export const PM_TASK_TYPE_BACKGROUNDSERVICEAGENT = 3;
export const PM_TASK_TYPE_BACKGROUNDWORKER = 4;
export const PM_TASK_TYPE_INVALID = 5;
export const PACKMAN_RUNTIME_NATIVE = 1;
export const PACKMAN_RUNTIME_SILVERLIGHTMOBILE = 2;
export const PACKMAN_RUNTIME_XNA = 3;
export const PACKMAN_RUNTIME_MODERN_NATIVE = 4;
export const PACKMAN_RUNTIME_JUPITER = 5;
export const PACKMAN_RUNTIME_INVALID = 6;
export const PM_ACTIVATION_POLICY_RESUME = 0;
export const PM_ACTIVATION_POLICY_RESUMESAMEPARAMS = 1;
export const PM_ACTIVATION_POLICY_REPLACE = 2;
export const PM_ACTIVATION_POLICY_REPLACESAMEPARAMS = 3;
export const PM_ACTIVATION_POLICY_MULTISESSION = 4;
export const PM_ACTIVATION_POLICY_REPLACE_IGNOREFOREGROUND = 5;
export const PM_ACTIVATION_POLICY_UNKNOWN = 6;
export const PM_ACTIVATION_POLICY_INVALID = 7;
export const PM_TASK_TRANSITION_DEFAULT = 0;
export const PM_TASK_TRANSITION_NONE = 1;
export const PM_TASK_TRANSITION_TURNSTILE = 2;
export const PM_TASK_TRANSITION_SLIDE = 3;
export const PM_TASK_TRANSITION_SWIVEL = 4;
export const PM_TASK_TRANSITION_READERBOARD = 5;
export const PM_TASK_TRANSITION_CUSTOM = 6;
export const PM_TASK_TRANSITION_INVALID = 7;
export const PM_APP_FILTER_ALL = 0;
export const PM_APP_FILTER_VISIBLE = 1;
export const PM_APP_FILTER_GENRE = 2;
export const PM_APP_FILTER_NONGAMES = 3;
export const PM_APP_FILTER_HUBTYPE = 4;
export const PM_APP_FILTER_PINABLEONKIDZONE = 5;
export const PM_APP_FILTER_ALL_INCLUDE_MODERN = 6;
export const PM_APP_FILTER_FRAMEWORK = 7;
export const PM_APP_FILTER_MAX = 8;
export const PM_TILE_FILTER_APPLIST = 8;
export const PM_TILE_FILTER_PINNED = 9;
export const PM_TILE_FILTER_HUBTYPE = 10;
export const PM_TILE_FILTER_APP_ALL = 11;
export const PM_TILE_FILTER_MAX = 12;
export const PM_TASK_FILTER_APP_ALL = 12;
export const PM_TASK_FILTER_TASK_TYPE = 13;
export const PM_TASK_FILTER_DEHYD_SUPRESSING = 14;
export const PM_TASK_FILTER_APP_TASK_TYPE = 15;
export const PM_TASK_FILTER_BGEXECUTION = 16;
export const PM_TASK_FILTER_MAX = 17;
export const PM_ENUM_EXTENSION_FILTER_BY_CONSUMER = 17;
export const PM_ENUM_EXTENSION_FILTER_APPCONNECT = 17;
export const PM_ENUM_EXTENSION_FILTER_PROTOCOL_ALL = 18;
export const PM_ENUM_EXTENSION_FILTER_FTASSOC_FILETYPE_ALL = 19;
export const PM_ENUM_EXTENSION_FILTER_FTASSOC_CONTENTTYPE_ALL = 20;
export const PM_ENUM_EXTENSION_FILTER_FTASSOC_APPLICATION_ALL = 21;
export const PM_ENUM_EXTENSION_FILTER_SHARETARGET_ALL = 22;
export const PM_ENUM_EXTENSION_FILTER_FILEOPENPICKER_ALL = 23;
export const PM_ENUM_EXTENSION_FILTER_FILESAVEPICKER_ALL = 24;
export const PM_ENUM_EXTENSION_FILTER_CACHEDFILEUPDATER_ALL = 25;
export const PM_ENUM_EXTENSION_FILTER_MAX = 26;
export const PM_ENUM_BSA_FILTER_ALL = 26;
export const PM_ENUM_BSA_FILTER_BY_TASKID = 27;
export const PM_ENUM_BSA_FILTER_BY_PRODUCTID = 28;
export const PM_ENUM_BSA_FILTER_BY_PERIODIC = 29;
export const PM_ENUM_BSA_FILTER_BY_ALL_LAUNCHONBOOT = 30;
export const PM_ENUM_BSA_FILTER_MAX = 31;
export const PM_ENUM_BW_FILTER_BOOTWORKER_ALL = 31;
export const PM_ENUM_BW_FILTER_BY_TASKID = 32;
export const PM_ENUM_BW_FILTER_MAX = 33;
export const PM_LIVETILE_RECURRENCE_TYPE_INSTANT = 0;
export const PM_LIVETILE_RECURRENCE_TYPE_ONETIME = 1;
export const PM_LIVETILE_RECURRENCE_TYPE_INTERVAL = 2;
export const PM_LIVETILE_RECURRENCE_TYPE_MAX = 2;
export const PM_TILE_SIZE_SMALL = 0;
export const PM_TILE_SIZE_MEDIUM = 1;
export const PM_TILE_SIZE_LARGE = 2;
export const PM_TILE_SIZE_SQUARE310X310 = 3;
export const PM_TILE_SIZE_TALL150X310 = 4;
export const PM_TILE_SIZE_INVALID = 5;
export const PM_LOGO_SIZE_SMALL = 0;
export const PM_LOGO_SIZE_MEDIUM = 1;
export const PM_LOGO_SIZE_LARGE = 2;
export const PM_LOGO_SIZE_INVALID = 3;
export const ACTCTX_RUN_LEVEL_UNSPECIFIED = 0;
export const ACTCTX_RUN_LEVEL_AS_INVOKER = 1;
export const ACTCTX_RUN_LEVEL_HIGHEST_AVAILABLE = 2;
export const ACTCTX_RUN_LEVEL_REQUIRE_ADMIN = 3;
export const ACTCTX_RUN_LEVEL_NUMBERS = 4;
export const ACTCTX_COMPATIBILITY_ELEMENT_TYPE_UNKNOWN = 0;
export const ACTCTX_COMPATIBILITY_ELEMENT_TYPE_OS = 1;
export const ACTCTX_COMPATIBILITY_ELEMENT_TYPE_MITIGATION = 2;
export const ACTCTX_COMPATIBILITY_ELEMENT_TYPE_MAXVERSIONTESTED = 3;

// Structs

/**
 * Windows.Win32.System.ApplicationInstallationAndServicing.ACTIVATION_CONTEXT_COMPATIBILITY_INFORMATION (size: 16)
 */
export interface ACTIVATION_CONTEXT_COMPATIBILITY_INFORMATION {
  /** u32 */
  ElementCount: number;
  /** ptr */
  Elements: Deno.PointerValue | Uint8Array | null;
}

export const sizeofACTIVATION_CONTEXT_COMPATIBILITY_INFORMATION = 16;

export function allocACTIVATION_CONTEXT_COMPATIBILITY_INFORMATION(data?: Partial<ACTIVATION_CONTEXT_COMPATIBILITY_INFORMATION>): Uint8Array {
  const buf = new Uint8Array(sizeofACTIVATION_CONTEXT_COMPATIBILITY_INFORMATION);
  const view = new DataView(buf.buffer);
  // 0x00: u32
  if (data?.ElementCount !== undefined) view.setUint32(0, Number(data.ElementCount), true);
  // 0x04: pad4
  // 0x08: pointer
  if (data?.Elements !== undefined) view.setBigUint64(8, data.Elements === null ? 0n : BigInt(util.toPointer(data.Elements)), true);
  return buf;
}

export type MSIHANDLE = number;

/**
 * Windows.Win32.System.ApplicationInstallationAndServicing.PMSIHANDLE (size: 8)
 */
export interface PMSIHANDLE {
  /** Windows.Win32.System.ApplicationInstallationAndServicing.MSIHANDLE */
  m_h: Uint8Array | Deno.PointerValue | null;
}

export const sizeofPMSIHANDLE = 8;

export function allocPMSIHANDLE(data?: Partial<PMSIHANDLE>): Uint8Array {
  const buf = new Uint8Array(sizeofPMSIHANDLE);
  const view = new DataView(buf.buffer);
  // 0x00: pointer
  if (data?.m_h !== undefined) view.setBigUint64(0, data.m_h === null ? 0n : BigInt(util.toPointer(data.m_h)), true);
  return buf;
}

export type PSTR = Deno.PointerValue | Uint8Array | null;

/**
 * Windows.Win32.System.ApplicationInstallationAndServicing.MSIPATCHSEQUENCEINFOA (size: 24)
 */
export interface MSIPATCHSEQUENCEINFOA {
  /** Windows.Win32.Foundation.PSTR */
  szPatchData: string | null;
  /** Windows.Win32.System.ApplicationInstallationAndServicing.MSIPATCHDATATYPE */
  ePatchDataType: MSIPATCHDATATYPE;
  /** u32 */
  dwOrder: number;
  /** u32 */
  uStatus: number;
}

export const sizeofMSIPATCHSEQUENCEINFOA = 24;

export function allocMSIPATCHSEQUENCEINFOA(data?: Partial<MSIPATCHSEQUENCEINFOA>): Uint8Array {
  const buf = new Uint8Array(sizeofMSIPATCHSEQUENCEINFOA);
  const view = new DataView(buf.buffer);
  // 0x00: buffer
  if (data?.szPatchData !== undefined) {
    (buf as any)._f0 = util.pstrToFfi(data.szPatchData);
    view.setBigUint64(0, (buf as any)._f0 === null ? 0n : BigInt(Deno.UnsafePointer.of((buf as any)._f0)), true);
  }
  // 0x08: i32
  if (data?.ePatchDataType !== undefined) view.setInt32(8, Number(data.ePatchDataType), true);
  // 0x0c: u32
  if (data?.dwOrder !== undefined) view.setUint32(12, Number(data.dwOrder), true);
  // 0x10: u32
  if (data?.uStatus !== undefined) view.setUint32(16, Number(data.uStatus), true);
  // 0x14: pad4
  return buf;
}

export type PWSTR = Deno.PointerValue | Uint8Array | null;

/**
 * Windows.Win32.System.ApplicationInstallationAndServicing.MSIPATCHSEQUENCEINFOW (size: 24)
 */
export interface MSIPATCHSEQUENCEINFOW {
  /** Windows.Win32.Foundation.PWSTR */
  szPatchData: string | null;
  /** Windows.Win32.System.ApplicationInstallationAndServicing.MSIPATCHDATATYPE */
  ePatchDataType: MSIPATCHDATATYPE;
  /** u32 */
  dwOrder: number;
  /** u32 */
  uStatus: number;
}

export const sizeofMSIPATCHSEQUENCEINFOW = 24;

export function allocMSIPATCHSEQUENCEINFOW(data?: Partial<MSIPATCHSEQUENCEINFOW>): Uint8Array {
  const buf = new Uint8Array(sizeofMSIPATCHSEQUENCEINFOW);
  const view = new DataView(buf.buffer);
  // 0x00: buffer
  if (data?.szPatchData !== undefined) {
    (buf as any)._f0 = util.pwstrToFfi(data.szPatchData);
    view.setBigUint64(0, (buf as any)._f0 === null ? 0n : BigInt(Deno.UnsafePointer.of((buf as any)._f0)), true);
  }
  // 0x08: i32
  if (data?.ePatchDataType !== undefined) view.setInt32(8, Number(data.ePatchDataType), true);
  // 0x0c: u32
  if (data?.dwOrder !== undefined) view.setUint32(12, Number(data.dwOrder), true);
  // 0x10: u32
  if (data?.uStatus !== undefined) view.setUint32(16, Number(data.uStatus), true);
  // 0x14: pad4
  return buf;
}

/**
 * Windows.Win32.System.ApplicationInstallationAndServicing.MSIFILEHASHINFO (size: 16)
 */
export interface MSIFILEHASHINFO {
  /** u32 */
  dwFileHashInfoSize: number;
  /** array */
  dwData: Deno.PointerValue | null;
}

export const sizeofMSIFILEHASHINFO = 16;

export function allocMSIFILEHASHINFO(data?: Partial<MSIFILEHASHINFO>): Uint8Array {
  const buf = new Uint8Array(sizeofMSIFILEHASHINFO);
  const view = new DataView(buf.buffer);
  // 0x00: u32
  if (data?.dwFileHashInfoSize !== undefined) view.setUint32(0, Number(data.dwFileHashInfoSize), true);
  // 0x04: pad4
  // 0x08: pointer
  if (data?.dwData !== undefined) view.setBigUint64(8, data.dwData === null ? 0n : BigInt(util.toPointer(data.dwData)), true);
  return buf;
}

/**
 * _Anonymous_e__Struct (size: 16)
 */
export interface _Anonymous_e__Struct {
  /** u64 */
  Alignment: Deno.PointerValue;
  /** u64 */
  Region: Deno.PointerValue;
}

export const sizeof_Anonymous_e__Struct = 16;

export function alloc_Anonymous_e__Struct(data?: Partial<_Anonymous_e__Struct>): Uint8Array {
  const buf = new Uint8Array(sizeof_Anonymous_e__Struct);
  const view = new DataView(buf.buffer);
  // 0x00: u64
  if (data?.Alignment !== undefined) view.setBigUint64(0, BigInt(data.Alignment), true);
  // 0x08: u64
  if (data?.Region !== undefined) view.setBigUint64(8, BigInt(data.Region), true);
  return buf;
}

/**
 * _u_e__Struct (size: 16)
 */
export interface _u_e__Struct {
  /** u32 */
  dwValue: number;
  /** Windows.Win32.Foundation.PWSTR */
  pwszName: string | null;
}

export const sizeof_u_e__Struct = 16;

export function alloc_u_e__Struct(data?: Partial<_u_e__Struct>): Uint8Array {
  const buf = new Uint8Array(sizeof_u_e__Struct);
  const view = new DataView(buf.buffer);
  // 0x00: u32
  if (data?.dwValue !== undefined) view.setUint32(0, Number(data.dwValue), true);
  // 0x04: pad4
  // 0x08: buffer
  if (data?.pwszName !== undefined) {
    (buf as any)._f8 = util.pwstrToFfi(data.pwszName);
    view.setBigUint64(8, (buf as any)._f8 === null ? 0n : BigInt(Deno.UnsafePointer.of((buf as any)._f8)), true);
  }
  return buf;
}

/**
 * Windows.Win32.Foundation.ULARGE_INTEGER (size: 24)
 */
export interface ULARGE_INTEGER {
  /** _Anonymous_e__Struct */
  Anonymous: Uint8Array | Deno.PointerValue | null;
  /** _u_e__Struct */
  u: Uint8Array | Deno.PointerValue | null;
  /** u64 */
  QuadPart: Deno.PointerValue;
}

export const sizeofULARGE_INTEGER = 24;

export function allocULARGE_INTEGER(data?: Partial<ULARGE_INTEGER>): Uint8Array {
  const buf = new Uint8Array(sizeofULARGE_INTEGER);
  const view = new DataView(buf.buffer);
  // 0x00: pointer
  if (data?.Anonymous !== undefined) view.setBigUint64(0, data.Anonymous === null ? 0n : BigInt(util.toPointer(data.Anonymous)), true);
  // 0x08: pointer
  if (data?.u !== undefined) view.setBigUint64(8, data.u === null ? 0n : BigInt(util.toPointer(data.u)), true);
  // 0x10: u64
  if (data?.QuadPart !== undefined) view.setBigUint64(16, BigInt(data.QuadPart), true);
  return buf;
}

/**
 * Windows.Win32.System.ApplicationInstallationAndServicing.ASSEMBLY_INFO (size: 32)
 */
export interface ASSEMBLY_INFO {
  /** u32 */
  cbAssemblyInfo: number;
  /** u32 */
  dwAssemblyFlags: number;
  /** Windows.Win32.Foundation.ULARGE_INTEGER */
  uliAssemblySizeInKB: Uint8Array | Deno.PointerValue | null;
  /** Windows.Win32.Foundation.PWSTR */
  pszCurrentAssemblyPathBuf: string | null;
  /** u32 */
  cchBuf: number;
}

export const sizeofASSEMBLY_INFO = 32;

export function allocASSEMBLY_INFO(data?: Partial<ASSEMBLY_INFO>): Uint8Array {
  const buf = new Uint8Array(sizeofASSEMBLY_INFO);
  const view = new DataView(buf.buffer);
  // 0x00: u32
  if (data?.cbAssemblyInfo !== undefined) view.setUint32(0, Number(data.cbAssemblyInfo), true);
  // 0x04: u32
  if (data?.dwAssemblyFlags !== undefined) view.setUint32(4, Number(data.dwAssemblyFlags), true);
  // 0x08: pointer
  if (data?.uliAssemblySizeInKB !== undefined) view.setBigUint64(8, data.uliAssemblySizeInKB === null ? 0n : BigInt(util.toPointer(data.uliAssemblySizeInKB)), true);
  // 0x10: buffer
  if (data?.pszCurrentAssemblyPathBuf !== undefined) {
    (buf as any)._f16 = util.pwstrToFfi(data.pszCurrentAssemblyPathBuf);
    view.setBigUint64(16, (buf as any)._f16 === null ? 0n : BigInt(Deno.UnsafePointer.of((buf as any)._f16)), true);
  }
  // 0x18: u32
  if (data?.cchBuf !== undefined) view.setUint32(24, Number(data.cchBuf), true);
  // 0x1c: pad4
  return buf;
}

/**
 * Windows.Win32.System.ApplicationInstallationAndServicing.FUSION_INSTALL_REFERENCE (size: 32)
 */
export interface FUSION_INSTALL_REFERENCE {
  /** u32 */
  cbSize: number;
  /** u32 */
  dwFlags: number;
  /** System.Guid */
  guidScheme: Uint8Array | Deno.PointerValue | null;
  /** Windows.Win32.Foundation.PWSTR */
  szIdentifier: string | null;
  /** Windows.Win32.Foundation.PWSTR */
  szNonCannonicalData: string | null;
}

export const sizeofFUSION_INSTALL_REFERENCE = 32;

export function allocFUSION_INSTALL_REFERENCE(data?: Partial<FUSION_INSTALL_REFERENCE>): Uint8Array {
  const buf = new Uint8Array(sizeofFUSION_INSTALL_REFERENCE);
  const view = new DataView(buf.buffer);
  // 0x00: u32
  if (data?.cbSize !== undefined) view.setUint32(0, Number(data.cbSize), true);
  // 0x04: u32
  if (data?.dwFlags !== undefined) view.setUint32(4, Number(data.dwFlags), true);
  // 0x08: pointer
  if (data?.guidScheme !== undefined) view.setBigUint64(8, data.guidScheme === null ? 0n : BigInt(util.toPointer(data.guidScheme)), true);
  // 0x10: buffer
  if (data?.szIdentifier !== undefined) {
    (buf as any)._f16 = util.pwstrToFfi(data.szIdentifier);
    view.setBigUint64(16, (buf as any)._f16 === null ? 0n : BigInt(Deno.UnsafePointer.of((buf as any)._f16)), true);
  }
  // 0x18: buffer
  if (data?.szNonCannonicalData !== undefined) {
    (buf as any)._f24 = util.pwstrToFfi(data.szNonCannonicalData);
    view.setBigUint64(24, (buf as any)._f24 === null ? 0n : BigInt(Deno.UnsafePointer.of((buf as any)._f24)), true);
  }
  return buf;
}

/**
 * Windows.Win32.System.ApplicationInstallationAndServicing.PROTECTED_FILE_DATA (size: 16)
 */
export interface PROTECTED_FILE_DATA {
  /** array */
  FileName: Deno.PointerValue | null;
  /** u32 */
  FileNumber: number;
}

export const sizeofPROTECTED_FILE_DATA = 16;

export function allocPROTECTED_FILE_DATA(data?: Partial<PROTECTED_FILE_DATA>): Uint8Array {
  const buf = new Uint8Array(sizeofPROTECTED_FILE_DATA);
  const view = new DataView(buf.buffer);
  // 0x00: pointer
  if (data?.FileName !== undefined) view.setBigUint64(0, data.FileName === null ? 0n : BigInt(util.toPointer(data.FileName)), true);
  // 0x08: u32
  if (data?.FileNumber !== undefined) view.setUint32(8, Number(data.FileNumber), true);
  // 0x0c: pad4
  return buf;
}

/**
 * Windows.Win32.System.ApplicationInstallationAndServicing.PM_APPTASKTYPE (size: 16)
 */
export interface PM_APPTASKTYPE {
  /** System.Guid */
  ProductID: Uint8Array | Deno.PointerValue | null;
  /** Windows.Win32.System.ApplicationInstallationAndServicing.PM_TASK_TYPE */
  TaskType: PM_TASK_TYPE;
}

export const sizeofPM_APPTASKTYPE = 16;

export function allocPM_APPTASKTYPE(data?: Partial<PM_APPTASKTYPE>): Uint8Array {
  const buf = new Uint8Array(sizeofPM_APPTASKTYPE);
  const view = new DataView(buf.buffer);
  // 0x00: pointer
  if (data?.ProductID !== undefined) view.setBigUint64(0, data.ProductID === null ? 0n : BigInt(util.toPointer(data.ProductID)), true);
  // 0x08: i32
  if (data?.TaskType !== undefined) view.setInt32(8, Number(data.TaskType), true);
  // 0x0c: pad4
  return buf;
}

export type BSTR = Deno.PointerValue | Uint8Array | null;

/**
 * Windows.Win32.System.ApplicationInstallationAndServicing.PM_EXTENSIONCONSUMER (size: 16)
 */
export interface PM_EXTENSIONCONSUMER {
  /** System.Guid */
  ConsumerPID: Uint8Array | Deno.PointerValue | null;
  /** Windows.Win32.Foundation.BSTR */
  ExtensionID: Uint8Array | Deno.PointerValue | null;
}

export const sizeofPM_EXTENSIONCONSUMER = 16;

export function allocPM_EXTENSIONCONSUMER(data?: Partial<PM_EXTENSIONCONSUMER>): Uint8Array {
  const buf = new Uint8Array(sizeofPM_EXTENSIONCONSUMER);
  const view = new DataView(buf.buffer);
  // 0x00: pointer
  if (data?.ConsumerPID !== undefined) view.setBigUint64(0, data.ConsumerPID === null ? 0n : BigInt(util.toPointer(data.ConsumerPID)), true);
  // 0x08: pointer
  if (data?.ExtensionID !== undefined) view.setBigUint64(8, data.ExtensionID === null ? 0n : BigInt(util.toPointer(data.ExtensionID)), true);
  return buf;
}

/**
 * Windows.Win32.System.ApplicationInstallationAndServicing.PM_BSATASKID (size: 16)
 */
export interface PM_BSATASKID {
  /** System.Guid */
  ProductID: Uint8Array | Deno.PointerValue | null;
  /** Windows.Win32.Foundation.BSTR */
  TaskID: Uint8Array | Deno.PointerValue | null;
}

export const sizeofPM_BSATASKID = 16;

export function allocPM_BSATASKID(data?: Partial<PM_BSATASKID>): Uint8Array {
  const buf = new Uint8Array(sizeofPM_BSATASKID);
  const view = new DataView(buf.buffer);
  // 0x00: pointer
  if (data?.ProductID !== undefined) view.setBigUint64(0, data.ProductID === null ? 0n : BigInt(util.toPointer(data.ProductID)), true);
  // 0x08: pointer
  if (data?.TaskID !== undefined) view.setBigUint64(8, data.TaskID === null ? 0n : BigInt(util.toPointer(data.TaskID)), true);
  return buf;
}

/**
 * Windows.Win32.System.ApplicationInstallationAndServicing.PM_BWTASKID (size: 16)
 */
export interface PM_BWTASKID {
  /** System.Guid */
  ProductID: Uint8Array | Deno.PointerValue | null;
  /** Windows.Win32.Foundation.BSTR */
  TaskID: Uint8Array | Deno.PointerValue | null;
}

export const sizeofPM_BWTASKID = 16;

export function allocPM_BWTASKID(data?: Partial<PM_BWTASKID>): Uint8Array {
  const buf = new Uint8Array(sizeofPM_BWTASKID);
  const view = new DataView(buf.buffer);
  // 0x00: pointer
  if (data?.ProductID !== undefined) view.setBigUint64(0, data.ProductID === null ? 0n : BigInt(util.toPointer(data.ProductID)), true);
  // 0x08: pointer
  if (data?.TaskID !== undefined) view.setBigUint64(8, data.TaskID === null ? 0n : BigInt(util.toPointer(data.TaskID)), true);
  return buf;
}

/**
 * _FilterParameter_e__Union (size: 120)
 */
export interface _FilterParameter_e__Union {
  /** i32 */
  Dummy: number;
  /** Windows.Win32.System.ApplicationInstallationAndServicing.PM_APP_GENRE */
  Genre: PM_APP_GENRE;
  /** Windows.Win32.System.ApplicationInstallationAndServicing.PM_APPLICATION_HUBTYPE */
  AppHubType: PM_APPLICATION_HUBTYPE;
  /** Windows.Win32.System.ApplicationInstallationAndServicing.PM_TILE_HUBTYPE */
  HubType: PM_TILE_HUBTYPE;
  /** Windows.Win32.System.ApplicationInstallationAndServicing.PM_TASK_TYPE */
  Tasktype: PM_TASK_TYPE;
  /** System.Guid */
  TaskProductID: Uint8Array | Deno.PointerValue | null;
  /** System.Guid */
  TileProductID: Uint8Array | Deno.PointerValue | null;
  /** Windows.Win32.System.ApplicationInstallationAndServicing.PM_APPTASKTYPE */
  AppTaskType: Uint8Array | Deno.PointerValue | null;
  /** Windows.Win32.System.ApplicationInstallationAndServicing.PM_EXTENSIONCONSUMER */
  Consumer: Uint8Array | Deno.PointerValue | null;
  /** Windows.Win32.System.ApplicationInstallationAndServicing.PM_BSATASKID */
  BSATask: Uint8Array | Deno.PointerValue | null;
  /** System.Guid */
  BSAProductID: Uint8Array | Deno.PointerValue | null;
  /** Windows.Win32.System.ApplicationInstallationAndServicing.PM_BWTASKID */
  BWTask: Uint8Array | Deno.PointerValue | null;
  /** Windows.Win32.Foundation.BSTR */
  ProtocolName: Uint8Array | Deno.PointerValue | null;
  /** Windows.Win32.Foundation.BSTR */
  FileType: Uint8Array | Deno.PointerValue | null;
  /** Windows.Win32.Foundation.BSTR */
  ContentType: Uint8Array | Deno.PointerValue | null;
  /** System.Guid */
  AppSupportedFileExtPID: Uint8Array | Deno.PointerValue | null;
  /** Windows.Win32.Foundation.BSTR */
  ShareTargetFileType: Uint8Array | Deno.PointerValue | null;
}

export const sizeof_FilterParameter_e__Union = 120;

export function alloc_FilterParameter_e__Union(data?: Partial<_FilterParameter_e__Union>): Uint8Array {
  const buf = new Uint8Array(sizeof_FilterParameter_e__Union);
  const view = new DataView(buf.buffer);
  // 0x00: i32
  if (data?.Dummy !== undefined) view.setInt32(0, Number(data.Dummy), true);
  // 0x04: i32
  if (data?.Genre !== undefined) view.setInt32(4, Number(data.Genre), true);
  // 0x08: i32
  if (data?.AppHubType !== undefined) view.setInt32(8, Number(data.AppHubType), true);
  // 0x0c: i32
  if (data?.HubType !== undefined) view.setInt32(12, Number(data.HubType), true);
  // 0x10: i32
  if (data?.Tasktype !== undefined) view.setInt32(16, Number(data.Tasktype), true);
  // 0x14: pad4
  // 0x18: pointer
  if (data?.TaskProductID !== undefined) view.setBigUint64(24, data.TaskProductID === null ? 0n : BigInt(util.toPointer(data.TaskProductID)), true);
  // 0x20: pointer
  if (data?.TileProductID !== undefined) view.setBigUint64(32, data.TileProductID === null ? 0n : BigInt(util.toPointer(data.TileProductID)), true);
  // 0x28: pointer
  if (data?.AppTaskType !== undefined) view.setBigUint64(40, data.AppTaskType === null ? 0n : BigInt(util.toPointer(data.AppTaskType)), true);
  // 0x30: pointer
  if (data?.Consumer !== undefined) view.setBigUint64(48, data.Consumer === null ? 0n : BigInt(util.toPointer(data.Consumer)), true);
  // 0x38: pointer
  if (data?.BSATask !== undefined) view.setBigUint64(56, data.BSATask === null ? 0n : BigInt(util.toPointer(data.BSATask)), true);
  // 0x40: pointer
  if (data?.BSAProductID !== undefined) view.setBigUint64(64, data.BSAProductID === null ? 0n : BigInt(util.toPointer(data.BSAProductID)), true);
  // 0x48: pointer
  if (data?.BWTask !== undefined) view.setBigUint64(72, data.BWTask === null ? 0n : BigInt(util.toPointer(data.BWTask)), true);
  // 0x50: pointer
  if (data?.ProtocolName !== undefined) view.setBigUint64(80, data.ProtocolName === null ? 0n : BigInt(util.toPointer(data.ProtocolName)), true);
  // 0x58: pointer
  if (data?.FileType !== undefined) view.setBigUint64(88, data.FileType === null ? 0n : BigInt(util.toPointer(data.FileType)), true);
  // 0x60: pointer
  if (data?.ContentType !== undefined) view.setBigUint64(96, data.ContentType === null ? 0n : BigInt(util.toPointer(data.ContentType)), true);
  // 0x68: pointer
  if (data?.AppSupportedFileExtPID !== undefined) view.setBigUint64(104, data.AppSupportedFileExtPID === null ? 0n : BigInt(util.toPointer(data.AppSupportedFileExtPID)), true);
  // 0x70: pointer
  if (data?.ShareTargetFileType !== undefined) view.setBigUint64(112, data.ShareTargetFileType === null ? 0n : BigInt(util.toPointer(data.ShareTargetFileType)), true);
  return buf;
}

/**
 * Windows.Win32.System.ApplicationInstallationAndServicing.PM_ENUM_FILTER (size: 16)
 */
export interface PM_ENUM_FILTER {
  /** i32 */
  FilterType: number;
  /** _FilterParameter_e__Union */
  FilterParameter: Uint8Array | Deno.PointerValue | null;
}

export const sizeofPM_ENUM_FILTER = 16;

export function allocPM_ENUM_FILTER(data?: Partial<PM_ENUM_FILTER>): Uint8Array {
  const buf = new Uint8Array(sizeofPM_ENUM_FILTER);
  const view = new DataView(buf.buffer);
  // 0x00: i32
  if (data?.FilterType !== undefined) view.setInt32(0, Number(data.FilterType), true);
  // 0x04: pad4
  // 0x08: pointer
  if (data?.FilterParameter !== undefined) view.setBigUint64(8, data.FilterParameter === null ? 0n : BigInt(util.toPointer(data.FilterParameter)), true);
  return buf;
}

export type BOOL = number;

/**
 * Windows.Win32.System.ApplicationInstallationAndServicing.PM_STARTAPPBLOB (size: 64)
 */
export interface PM_STARTAPPBLOB {
  /** u32 */
  cbSize: number;
  /** System.Guid */
  ProductID: Uint8Array | Deno.PointerValue | null;
  /** Windows.Win32.Foundation.BSTR */
  AppTitle: Uint8Array | Deno.PointerValue | null;
  /** Windows.Win32.Foundation.BSTR */
  IconPath: Uint8Array | Deno.PointerValue | null;
  /** Windows.Win32.Foundation.BOOL */
  IsUninstallable: boolean;
  /** Windows.Win32.System.ApplicationInstallationAndServicing.PM_APPLICATION_INSTALL_TYPE */
  AppInstallType: PM_APPLICATION_INSTALL_TYPE;
  /** System.Guid */
  InstanceID: Uint8Array | Deno.PointerValue | null;
  /** Windows.Win32.System.ApplicationInstallationAndServicing.PM_APPLICATION_STATE */
  State: PM_APPLICATION_STATE;
  /** Windows.Win32.Foundation.BOOL */
  IsModern: boolean;
  /** Windows.Win32.Foundation.BOOL */
  IsModernLightUp: boolean;
  /** u16 */
  LightUpSupportMask: number;
}

export const sizeofPM_STARTAPPBLOB = 64;

export function allocPM_STARTAPPBLOB(data?: Partial<PM_STARTAPPBLOB>): Uint8Array {
  const buf = new Uint8Array(sizeofPM_STARTAPPBLOB);
  const view = new DataView(buf.buffer);
  // 0x00: u32
  if (data?.cbSize !== undefined) view.setUint32(0, Number(data.cbSize), true);
  // 0x04: pad4
  // 0x08: pointer
  if (data?.ProductID !== undefined) view.setBigUint64(8, data.ProductID === null ? 0n : BigInt(util.toPointer(data.ProductID)), true);
  // 0x10: pointer
  if (data?.AppTitle !== undefined) view.setBigUint64(16, data.AppTitle === null ? 0n : BigInt(util.toPointer(data.AppTitle)), true);
  // 0x18: pointer
  if (data?.IconPath !== undefined) view.setBigUint64(24, data.IconPath === null ? 0n : BigInt(util.toPointer(data.IconPath)), true);
  // 0x20: i32
  if (data?.IsUninstallable !== undefined) view.setInt32(32, Number(data.IsUninstallable), true);
  // 0x24: i32
  if (data?.AppInstallType !== undefined) view.setInt32(36, Number(data.AppInstallType), true);
  // 0x28: pointer
  if (data?.InstanceID !== undefined) view.setBigUint64(40, data.InstanceID === null ? 0n : BigInt(util.toPointer(data.InstanceID)), true);
  // 0x30: i32
  if (data?.State !== undefined) view.setInt32(48, Number(data.State), true);
  // 0x34: i32
  if (data?.IsModern !== undefined) view.setInt32(52, Number(data.IsModern), true);
  // 0x38: i32
  if (data?.IsModernLightUp !== undefined) view.setInt32(56, Number(data.IsModernLightUp), true);
  // 0x3c: u16
  if (data?.LightUpSupportMask !== undefined) view.setUint16(60, Number(data.LightUpSupportMask), true);
  // 0x3e: pad2
  return buf;
}

/**
 * Windows.Win32.System.ApplicationInstallationAndServicing.PM_INVOCATIONINFO (size: 16)
 */
export interface PM_INVOCATIONINFO {
  /** Windows.Win32.Foundation.BSTR */
  URIBaseOrAUMID: Uint8Array | Deno.PointerValue | null;
  /** Windows.Win32.Foundation.BSTR */
  URIFragmentOrArgs: Uint8Array | Deno.PointerValue | null;
}

export const sizeofPM_INVOCATIONINFO = 16;

export function allocPM_INVOCATIONINFO(data?: Partial<PM_INVOCATIONINFO>): Uint8Array {
  const buf = new Uint8Array(sizeofPM_INVOCATIONINFO);
  const view = new DataView(buf.buffer);
  // 0x00: pointer
  if (data?.URIBaseOrAUMID !== undefined) view.setBigUint64(0, data.URIBaseOrAUMID === null ? 0n : BigInt(util.toPointer(data.URIBaseOrAUMID)), true);
  // 0x08: pointer
  if (data?.URIFragmentOrArgs !== undefined) view.setBigUint64(8, data.URIFragmentOrArgs === null ? 0n : BigInt(util.toPointer(data.URIFragmentOrArgs)), true);
  return buf;
}

/**
 * Windows.Win32.System.ApplicationInstallationAndServicing.PM_STARTTILEBLOB (size: 88)
 */
export interface PM_STARTTILEBLOB {
  /** u32 */
  cbSize: number;
  /** System.Guid */
  ProductID: Uint8Array | Deno.PointerValue | null;
  /** Windows.Win32.Foundation.BSTR */
  TileID: Uint8Array | Deno.PointerValue | null;
  /** Windows.Win32.System.ApplicationInstallationAndServicing.TILE_TEMPLATE_TYPE */
  TemplateType: TILE_TEMPLATE_TYPE;
  /** array */
  HubPosition: Deno.PointerValue | null;
  /** u32 */
  HubVisibilityBitmask: number;
  /** Windows.Win32.Foundation.BOOL */
  IsDefault: boolean;
  /** Windows.Win32.System.ApplicationInstallationAndServicing.PM_STARTTILE_TYPE */
  TileType: PM_STARTTILE_TYPE;
  /** ptr */
  pbPropBlob: Deno.PointerValue | Uint8Array | null;
  /** u32 */
  cbPropBlob: number;
  /** Windows.Win32.Foundation.BOOL */
  IsRestoring: boolean;
  /** Windows.Win32.Foundation.BOOL */
  IsModern: boolean;
  /** Windows.Win32.System.ApplicationInstallationAndServicing.PM_INVOCATIONINFO */
  InvocationInfo: Uint8Array | Deno.PointerValue | null;
}

export const sizeofPM_STARTTILEBLOB = 88;

export function allocPM_STARTTILEBLOB(data?: Partial<PM_STARTTILEBLOB>): Uint8Array {
  const buf = new Uint8Array(sizeofPM_STARTTILEBLOB);
  const view = new DataView(buf.buffer);
  // 0x00: u32
  if (data?.cbSize !== undefined) view.setUint32(0, Number(data.cbSize), true);
  // 0x04: pad4
  // 0x08: pointer
  if (data?.ProductID !== undefined) view.setBigUint64(8, data.ProductID === null ? 0n : BigInt(util.toPointer(data.ProductID)), true);
  // 0x10: pointer
  if (data?.TileID !== undefined) view.setBigUint64(16, data.TileID === null ? 0n : BigInt(util.toPointer(data.TileID)), true);
  // 0x18: i32
  if (data?.TemplateType !== undefined) view.setInt32(24, Number(data.TemplateType), true);
  // 0x1c: pad4
  // 0x20: pointer
  if (data?.HubPosition !== undefined) view.setBigUint64(32, data.HubPosition === null ? 0n : BigInt(util.toPointer(data.HubPosition)), true);
  // 0x28: u32
  if (data?.HubVisibilityBitmask !== undefined) view.setUint32(40, Number(data.HubVisibilityBitmask), true);
  // 0x2c: i32
  if (data?.IsDefault !== undefined) view.setInt32(44, Number(data.IsDefault), true);
  // 0x30: i32
  if (data?.TileType !== undefined) view.setInt32(48, Number(data.TileType), true);
  // 0x34: pad4
  // 0x38: pointer
  if (data?.pbPropBlob !== undefined) view.setBigUint64(56, data.pbPropBlob === null ? 0n : BigInt(util.toPointer(data.pbPropBlob)), true);
  // 0x40: u32
  if (data?.cbPropBlob !== undefined) view.setUint32(64, Number(data.cbPropBlob), true);
  // 0x44: i32
  if (data?.IsRestoring !== undefined) view.setInt32(68, Number(data.IsRestoring), true);
  // 0x48: i32
  if (data?.IsModern !== undefined) view.setInt32(72, Number(data.IsModern), true);
  // 0x4c: pad4
  // 0x50: pointer
  if (data?.InvocationInfo !== undefined) view.setBigUint64(80, data.InvocationInfo === null ? 0n : BigInt(util.toPointer(data.InvocationInfo)), true);
  return buf;
}

/**
 * Windows.Win32.System.ApplicationInstallationAndServicing.PM_INSTALLINFO (size: 64)
 */
export interface PM_INSTALLINFO {
  /** System.Guid */
  ProductID: Uint8Array | Deno.PointerValue | null;
  /** Windows.Win32.Foundation.BSTR */
  PackagePath: Uint8Array | Deno.PointerValue | null;
  /** System.Guid */
  InstanceID: Uint8Array | Deno.PointerValue | null;
  /** ptr */
  pbLicense: Deno.PointerValue | Uint8Array | null;
  /** u32 */
  cbLicense: number;
  /** Windows.Win32.Foundation.BOOL */
  IsUninstallDisabled: boolean;
  /** u32 */
  DeploymentOptions: number;
  /** System.Guid */
  OfferID: Uint8Array | Deno.PointerValue | null;
  /** Windows.Win32.Foundation.BSTR */
  MarketplaceAppVersion: Uint8Array | Deno.PointerValue | null;
}

export const sizeofPM_INSTALLINFO = 64;

export function allocPM_INSTALLINFO(data?: Partial<PM_INSTALLINFO>): Uint8Array {
  const buf = new Uint8Array(sizeofPM_INSTALLINFO);
  const view = new DataView(buf.buffer);
  // 0x00: pointer
  if (data?.ProductID !== undefined) view.setBigUint64(0, data.ProductID === null ? 0n : BigInt(util.toPointer(data.ProductID)), true);
  // 0x08: pointer
  if (data?.PackagePath !== undefined) view.setBigUint64(8, data.PackagePath === null ? 0n : BigInt(util.toPointer(data.PackagePath)), true);
  // 0x10: pointer
  if (data?.InstanceID !== undefined) view.setBigUint64(16, data.InstanceID === null ? 0n : BigInt(util.toPointer(data.InstanceID)), true);
  // 0x18: pointer
  if (data?.pbLicense !== undefined) view.setBigUint64(24, data.pbLicense === null ? 0n : BigInt(util.toPointer(data.pbLicense)), true);
  // 0x20: u32
  if (data?.cbLicense !== undefined) view.setUint32(32, Number(data.cbLicense), true);
  // 0x24: i32
  if (data?.IsUninstallDisabled !== undefined) view.setInt32(36, Number(data.IsUninstallDisabled), true);
  // 0x28: u32
  if (data?.DeploymentOptions !== undefined) view.setUint32(40, Number(data.DeploymentOptions), true);
  // 0x2c: pad4
  // 0x30: pointer
  if (data?.OfferID !== undefined) view.setBigUint64(48, data.OfferID === null ? 0n : BigInt(util.toPointer(data.OfferID)), true);
  // 0x38: pointer
  if (data?.MarketplaceAppVersion !== undefined) view.setBigUint64(56, data.MarketplaceAppVersion === null ? 0n : BigInt(util.toPointer(data.MarketplaceAppVersion)), true);
  return buf;
}

/**
 * Windows.Win32.System.ApplicationInstallationAndServicing.PM_UPDATEINFO_LEGACY (size: 48)
 */
export interface PM_UPDATEINFO_LEGACY {
  /** System.Guid */
  ProductID: Uint8Array | Deno.PointerValue | null;
  /** Windows.Win32.Foundation.BSTR */
  PackagePath: Uint8Array | Deno.PointerValue | null;
  /** System.Guid */
  InstanceID: Uint8Array | Deno.PointerValue | null;
  /** ptr */
  pbLicense: Deno.PointerValue | Uint8Array | null;
  /** u32 */
  cbLicense: number;
  /** Windows.Win32.Foundation.BSTR */
  MarketplaceAppVersion: Uint8Array | Deno.PointerValue | null;
}

export const sizeofPM_UPDATEINFO_LEGACY = 48;

export function allocPM_UPDATEINFO_LEGACY(data?: Partial<PM_UPDATEINFO_LEGACY>): Uint8Array {
  const buf = new Uint8Array(sizeofPM_UPDATEINFO_LEGACY);
  const view = new DataView(buf.buffer);
  // 0x00: pointer
  if (data?.ProductID !== undefined) view.setBigUint64(0, data.ProductID === null ? 0n : BigInt(util.toPointer(data.ProductID)), true);
  // 0x08: pointer
  if (data?.PackagePath !== undefined) view.setBigUint64(8, data.PackagePath === null ? 0n : BigInt(util.toPointer(data.PackagePath)), true);
  // 0x10: pointer
  if (data?.InstanceID !== undefined) view.setBigUint64(16, data.InstanceID === null ? 0n : BigInt(util.toPointer(data.InstanceID)), true);
  // 0x18: pointer
  if (data?.pbLicense !== undefined) view.setBigUint64(24, data.pbLicense === null ? 0n : BigInt(util.toPointer(data.pbLicense)), true);
  // 0x20: u32
  if (data?.cbLicense !== undefined) view.setUint32(32, Number(data.cbLicense), true);
  // 0x24: pad4
  // 0x28: pointer
  if (data?.MarketplaceAppVersion !== undefined) view.setBigUint64(40, data.MarketplaceAppVersion === null ? 0n : BigInt(util.toPointer(data.MarketplaceAppVersion)), true);
  return buf;
}

/**
 * Windows.Win32.System.ApplicationInstallationAndServicing.PM_UPDATEINFO (size: 56)
 */
export interface PM_UPDATEINFO {
  /** System.Guid */
  ProductID: Uint8Array | Deno.PointerValue | null;
  /** Windows.Win32.Foundation.BSTR */
  PackagePath: Uint8Array | Deno.PointerValue | null;
  /** System.Guid */
  InstanceID: Uint8Array | Deno.PointerValue | null;
  /** ptr */
  pbLicense: Deno.PointerValue | Uint8Array | null;
  /** u32 */
  cbLicense: number;
  /** Windows.Win32.Foundation.BSTR */
  MarketplaceAppVersion: Uint8Array | Deno.PointerValue | null;
  /** u32 */
  DeploymentOptions: number;
}

export const sizeofPM_UPDATEINFO = 56;

export function allocPM_UPDATEINFO(data?: Partial<PM_UPDATEINFO>): Uint8Array {
  const buf = new Uint8Array(sizeofPM_UPDATEINFO);
  const view = new DataView(buf.buffer);
  // 0x00: pointer
  if (data?.ProductID !== undefined) view.setBigUint64(0, data.ProductID === null ? 0n : BigInt(util.toPointer(data.ProductID)), true);
  // 0x08: pointer
  if (data?.PackagePath !== undefined) view.setBigUint64(8, data.PackagePath === null ? 0n : BigInt(util.toPointer(data.PackagePath)), true);
  // 0x10: pointer
  if (data?.InstanceID !== undefined) view.setBigUint64(16, data.InstanceID === null ? 0n : BigInt(util.toPointer(data.InstanceID)), true);
  // 0x18: pointer
  if (data?.pbLicense !== undefined) view.setBigUint64(24, data.pbLicense === null ? 0n : BigInt(util.toPointer(data.pbLicense)), true);
  // 0x20: u32
  if (data?.cbLicense !== undefined) view.setUint32(32, Number(data.cbLicense), true);
  // 0x24: pad4
  // 0x28: pointer
  if (data?.MarketplaceAppVersion !== undefined) view.setBigUint64(40, data.MarketplaceAppVersion === null ? 0n : BigInt(util.toPointer(data.MarketplaceAppVersion)), true);
  // 0x30: u32
  if (data?.DeploymentOptions !== undefined) view.setUint32(48, Number(data.DeploymentOptions), true);
  // 0x34: pad4
  return buf;
}

/**
 * Windows.Win32.System.ApplicationInstallationAndServicing.PATCH_IGNORE_RANGE (size: 8)
 */
export interface PATCH_IGNORE_RANGE {
  /** u32 */
  OffsetInOldFile: number;
  /** u32 */
  LengthInBytes: number;
}

export const sizeofPATCH_IGNORE_RANGE = 8;

export function allocPATCH_IGNORE_RANGE(data?: Partial<PATCH_IGNORE_RANGE>): Uint8Array {
  const buf = new Uint8Array(sizeofPATCH_IGNORE_RANGE);
  const view = new DataView(buf.buffer);
  // 0x00: u32
  if (data?.OffsetInOldFile !== undefined) view.setUint32(0, Number(data.OffsetInOldFile), true);
  // 0x04: u32
  if (data?.LengthInBytes !== undefined) view.setUint32(4, Number(data.LengthInBytes), true);
  return buf;
}

/**
 * Windows.Win32.System.ApplicationInstallationAndServicing.PATCH_RETAIN_RANGE (size: 16)
 */
export interface PATCH_RETAIN_RANGE {
  /** u32 */
  OffsetInOldFile: number;
  /** u32 */
  LengthInBytes: number;
  /** u32 */
  OffsetInNewFile: number;
}

export const sizeofPATCH_RETAIN_RANGE = 16;

export function allocPATCH_RETAIN_RANGE(data?: Partial<PATCH_RETAIN_RANGE>): Uint8Array {
  const buf = new Uint8Array(sizeofPATCH_RETAIN_RANGE);
  const view = new DataView(buf.buffer);
  // 0x00: u32
  if (data?.OffsetInOldFile !== undefined) view.setUint32(0, Number(data.OffsetInOldFile), true);
  // 0x04: u32
  if (data?.LengthInBytes !== undefined) view.setUint32(4, Number(data.LengthInBytes), true);
  // 0x08: u32
  if (data?.OffsetInNewFile !== undefined) view.setUint32(8, Number(data.OffsetInNewFile), true);
  // 0x0c: pad4
  return buf;
}

/**
 * Windows.Win32.System.ApplicationInstallationAndServicing.PATCH_OLD_FILE_INFO_A (size: 48)
 */
export interface PATCH_OLD_FILE_INFO_A {
  /** u32 */
  SizeOfThisStruct: number;
  /** Windows.Win32.Foundation.PSTR */
  OldFileName: string | null;
  /** u32 */
  IgnoreRangeCount: number;
  /** ptr */
  IgnoreRangeArray: Deno.PointerValue | Uint8Array | null;
  /** u32 */
  RetainRangeCount: number;
  /** ptr */
  RetainRangeArray: Deno.PointerValue | Uint8Array | null;
}

export const sizeofPATCH_OLD_FILE_INFO_A = 48;

export function allocPATCH_OLD_FILE_INFO_A(data?: Partial<PATCH_OLD_FILE_INFO_A>): Uint8Array {
  const buf = new Uint8Array(sizeofPATCH_OLD_FILE_INFO_A);
  const view = new DataView(buf.buffer);
  // 0x00: u32
  if (data?.SizeOfThisStruct !== undefined) view.setUint32(0, Number(data.SizeOfThisStruct), true);
  // 0x04: pad4
  // 0x08: buffer
  if (data?.OldFileName !== undefined) {
    (buf as any)._f8 = util.pstrToFfi(data.OldFileName);
    view.setBigUint64(8, (buf as any)._f8 === null ? 0n : BigInt(Deno.UnsafePointer.of((buf as any)._f8)), true);
  }
  // 0x10: u32
  if (data?.IgnoreRangeCount !== undefined) view.setUint32(16, Number(data.IgnoreRangeCount), true);
  // 0x14: pad4
  // 0x18: pointer
  if (data?.IgnoreRangeArray !== undefined) view.setBigUint64(24, data.IgnoreRangeArray === null ? 0n : BigInt(util.toPointer(data.IgnoreRangeArray)), true);
  // 0x20: u32
  if (data?.RetainRangeCount !== undefined) view.setUint32(32, Number(data.RetainRangeCount), true);
  // 0x24: pad4
  // 0x28: pointer
  if (data?.RetainRangeArray !== undefined) view.setBigUint64(40, data.RetainRangeArray === null ? 0n : BigInt(util.toPointer(data.RetainRangeArray)), true);
  return buf;
}

/**
 * Windows.Win32.System.ApplicationInstallationAndServicing.PATCH_OLD_FILE_INFO_W (size: 48)
 */
export interface PATCH_OLD_FILE_INFO_W {
  /** u32 */
  SizeOfThisStruct: number;
  /** Windows.Win32.Foundation.PWSTR */
  OldFileName: string | null;
  /** u32 */
  IgnoreRangeCount: number;
  /** ptr */
  IgnoreRangeArray: Deno.PointerValue | Uint8Array | null;
  /** u32 */
  RetainRangeCount: number;
  /** ptr */
  RetainRangeArray: Deno.PointerValue | Uint8Array | null;
}

export const sizeofPATCH_OLD_FILE_INFO_W = 48;

export function allocPATCH_OLD_FILE_INFO_W(data?: Partial<PATCH_OLD_FILE_INFO_W>): Uint8Array {
  const buf = new Uint8Array(sizeofPATCH_OLD_FILE_INFO_W);
  const view = new DataView(buf.buffer);
  // 0x00: u32
  if (data?.SizeOfThisStruct !== undefined) view.setUint32(0, Number(data.SizeOfThisStruct), true);
  // 0x04: pad4
  // 0x08: buffer
  if (data?.OldFileName !== undefined) {
    (buf as any)._f8 = util.pwstrToFfi(data.OldFileName);
    view.setBigUint64(8, (buf as any)._f8 === null ? 0n : BigInt(Deno.UnsafePointer.of((buf as any)._f8)), true);
  }
  // 0x10: u32
  if (data?.IgnoreRangeCount !== undefined) view.setUint32(16, Number(data.IgnoreRangeCount), true);
  // 0x14: pad4
  // 0x18: pointer
  if (data?.IgnoreRangeArray !== undefined) view.setBigUint64(24, data.IgnoreRangeArray === null ? 0n : BigInt(util.toPointer(data.IgnoreRangeArray)), true);
  // 0x20: u32
  if (data?.RetainRangeCount !== undefined) view.setUint32(32, Number(data.RetainRangeCount), true);
  // 0x24: pad4
  // 0x28: pointer
  if (data?.RetainRangeArray !== undefined) view.setBigUint64(40, data.RetainRangeArray === null ? 0n : BigInt(util.toPointer(data.RetainRangeArray)), true);
  return buf;
}

export type HANDLE = Deno.PointerValue;

/**
 * Windows.Win32.System.ApplicationInstallationAndServicing.PATCH_OLD_FILE_INFO_H (size: 48)
 */
export interface PATCH_OLD_FILE_INFO_H {
  /** u32 */
  SizeOfThisStruct: number;
  /** Windows.Win32.Foundation.HANDLE */
  OldFileHandle: Uint8Array | Deno.PointerValue | null;
  /** u32 */
  IgnoreRangeCount: number;
  /** ptr */
  IgnoreRangeArray: Deno.PointerValue | Uint8Array | null;
  /** u32 */
  RetainRangeCount: number;
  /** ptr */
  RetainRangeArray: Deno.PointerValue | Uint8Array | null;
}

export const sizeofPATCH_OLD_FILE_INFO_H = 48;

export function allocPATCH_OLD_FILE_INFO_H(data?: Partial<PATCH_OLD_FILE_INFO_H>): Uint8Array {
  const buf = new Uint8Array(sizeofPATCH_OLD_FILE_INFO_H);
  const view = new DataView(buf.buffer);
  // 0x00: u32
  if (data?.SizeOfThisStruct !== undefined) view.setUint32(0, Number(data.SizeOfThisStruct), true);
  // 0x04: pad4
  // 0x08: pointer
  if (data?.OldFileHandle !== undefined) view.setBigUint64(8, data.OldFileHandle === null ? 0n : BigInt(util.toPointer(data.OldFileHandle)), true);
  // 0x10: u32
  if (data?.IgnoreRangeCount !== undefined) view.setUint32(16, Number(data.IgnoreRangeCount), true);
  // 0x14: pad4
  // 0x18: pointer
  if (data?.IgnoreRangeArray !== undefined) view.setBigUint64(24, data.IgnoreRangeArray === null ? 0n : BigInt(util.toPointer(data.IgnoreRangeArray)), true);
  // 0x20: u32
  if (data?.RetainRangeCount !== undefined) view.setUint32(32, Number(data.RetainRangeCount), true);
  // 0x24: pad4
  // 0x28: pointer
  if (data?.RetainRangeArray !== undefined) view.setBigUint64(40, data.RetainRangeArray === null ? 0n : BigInt(util.toPointer(data.RetainRangeArray)), true);
  return buf;
}

/**
 * _Anonymous_e__Union (size: 16)
 */
export interface _Anonymous_e__Union {
  /** _Anonymous_e__Struct */
  Anonymous: Uint8Array | Deno.PointerValue | null;
  /** array */
  X: Deno.PointerValue | null;
}

export const sizeof_Anonymous_e__Union = 16;

export function alloc_Anonymous_e__Union(data?: Partial<_Anonymous_e__Union>): Uint8Array {
  const buf = new Uint8Array(sizeof_Anonymous_e__Union);
  const view = new DataView(buf.buffer);
  // 0x00: pointer
  if (data?.Anonymous !== undefined) view.setBigUint64(0, data.Anonymous === null ? 0n : BigInt(util.toPointer(data.Anonymous)), true);
  // 0x08: pointer
  if (data?.X !== undefined) view.setBigUint64(8, data.X === null ? 0n : BigInt(util.toPointer(data.X)), true);
  return buf;
}

/**
 * Windows.Win32.System.ApplicationInstallationAndServicing.PATCH_OLD_FILE_INFO (size: 48)
 */
export interface PATCH_OLD_FILE_INFO {
  /** u32 */
  SizeOfThisStruct: number;
  /** _Anonymous_e__Union */
  Anonymous: Uint8Array | Deno.PointerValue | null;
  /** u32 */
  IgnoreRangeCount: number;
  /** ptr */
  IgnoreRangeArray: Deno.PointerValue | Uint8Array | null;
  /** u32 */
  RetainRangeCount: number;
  /** ptr */
  RetainRangeArray: Deno.PointerValue | Uint8Array | null;
}

export const sizeofPATCH_OLD_FILE_INFO = 48;

export function allocPATCH_OLD_FILE_INFO(data?: Partial<PATCH_OLD_FILE_INFO>): Uint8Array {
  const buf = new Uint8Array(sizeofPATCH_OLD_FILE_INFO);
  const view = new DataView(buf.buffer);
  // 0x00: u32
  if (data?.SizeOfThisStruct !== undefined) view.setUint32(0, Number(data.SizeOfThisStruct), true);
  // 0x04: pad4
  // 0x08: pointer
  if (data?.Anonymous !== undefined) view.setBigUint64(8, data.Anonymous === null ? 0n : BigInt(util.toPointer(data.Anonymous)), true);
  // 0x10: u32
  if (data?.IgnoreRangeCount !== undefined) view.setUint32(16, Number(data.IgnoreRangeCount), true);
  // 0x14: pad4
  // 0x18: pointer
  if (data?.IgnoreRangeArray !== undefined) view.setBigUint64(24, data.IgnoreRangeArray === null ? 0n : BigInt(util.toPointer(data.IgnoreRangeArray)), true);
  // 0x20: u32
  if (data?.RetainRangeCount !== undefined) view.setUint32(32, Number(data.RetainRangeCount), true);
  // 0x24: pad4
  // 0x28: pointer
  if (data?.RetainRangeArray !== undefined) view.setBigUint64(40, data.RetainRangeArray === null ? 0n : BigInt(util.toPointer(data.RetainRangeArray)), true);
  return buf;
}

/**
 * Windows.Win32.System.ApplicationInstallationAndServicing.PATCH_INTERLEAVE_MAP (size: 16)
 */
export interface PATCH_INTERLEAVE_MAP {
  /** u32 */
  CountRanges: number;
  /** array */
  Range: Deno.PointerValue | null;
}

export const sizeofPATCH_INTERLEAVE_MAP = 16;

export function allocPATCH_INTERLEAVE_MAP(data?: Partial<PATCH_INTERLEAVE_MAP>): Uint8Array {
  const buf = new Uint8Array(sizeofPATCH_INTERLEAVE_MAP);
  const view = new DataView(buf.buffer);
  // 0x00: u32
  if (data?.CountRanges !== undefined) view.setUint32(0, Number(data.CountRanges), true);
  // 0x04: pad4
  // 0x08: pointer
  if (data?.Range !== undefined) view.setBigUint64(8, data.Range === null ? 0n : BigInt(util.toPointer(data.Range)), true);
  return buf;
}

/**
 * Windows.Win32.System.ApplicationInstallationAndServicing.PATCH_OPTION_DATA (size: 64)
 */
export interface PATCH_OPTION_DATA {
  /** u32 */
  SizeOfThisStruct: number;
  /** u32 */
  SymbolOptionFlags: number;
  /** Windows.Win32.Foundation.PSTR */
  NewFileSymbolPath: string | null;
  /** ptr */
  OldFileSymbolPathArray: Deno.PointerValue | Uint8Array | null;
  /** u32 */
  ExtendedOptionFlags: number;
  /** Windows.Win32.System.ApplicationInstallationAndServicing.PPATCH_SYMLOAD_CALLBACK */
  SymLoadCallback: Uint8Array | Deno.PointerValue | null;
  /** ptr */
  SymLoadContext: Deno.PointerValue | Uint8Array | null;
  /** ptr */
  InterleaveMapArray: Deno.PointerValue | Uint8Array | null;
  /** u32 */
  MaxLzxWindowSize: number;
}

export const sizeofPATCH_OPTION_DATA = 64;

export function allocPATCH_OPTION_DATA(data?: Partial<PATCH_OPTION_DATA>): Uint8Array {
  const buf = new Uint8Array(sizeofPATCH_OPTION_DATA);
  const view = new DataView(buf.buffer);
  // 0x00: u32
  if (data?.SizeOfThisStruct !== undefined) view.setUint32(0, Number(data.SizeOfThisStruct), true);
  // 0x04: u32
  if (data?.SymbolOptionFlags !== undefined) view.setUint32(4, Number(data.SymbolOptionFlags), true);
  // 0x08: buffer
  if (data?.NewFileSymbolPath !== undefined) {
    (buf as any)._f8 = util.pstrToFfi(data.NewFileSymbolPath);
    view.setBigUint64(8, (buf as any)._f8 === null ? 0n : BigInt(Deno.UnsafePointer.of((buf as any)._f8)), true);
  }
  // 0x10: pointer
  if (data?.OldFileSymbolPathArray !== undefined) view.setBigUint64(16, data.OldFileSymbolPathArray === null ? 0n : BigInt(util.toPointer(data.OldFileSymbolPathArray)), true);
  // 0x18: u32
  if (data?.ExtendedOptionFlags !== undefined) view.setUint32(24, Number(data.ExtendedOptionFlags), true);
  // 0x1c: pad4
  // 0x20: pointer
  if (data?.SymLoadCallback !== undefined) view.setBigUint64(32, data.SymLoadCallback === null ? 0n : BigInt(util.toPointer(data.SymLoadCallback)), true);
  // 0x28: pointer
  if (data?.SymLoadContext !== undefined) view.setBigUint64(40, data.SymLoadContext === null ? 0n : BigInt(util.toPointer(data.SymLoadContext)), true);
  // 0x30: pointer
  if (data?.InterleaveMapArray !== undefined) view.setBigUint64(48, data.InterleaveMapArray === null ? 0n : BigInt(util.toPointer(data.InterleaveMapArray)), true);
  // 0x38: u32
  if (data?.MaxLzxWindowSize !== undefined) view.setUint32(56, Number(data.MaxLzxWindowSize), true);
  // 0x3c: pad4
  return buf;
}

/**
 * Windows.Win32.System.ApplicationInstallationAndServicing.DELTA_INPUT (size: 24)
 */
export interface DELTA_INPUT {
  /** _Anonymous_e__Union */
  Anonymous: Uint8Array | Deno.PointerValue | null;
  /** usize */
  uSize: Deno.PointerValue;
  /** Windows.Win32.Foundation.BOOL */
  Editable: boolean;
}

export const sizeofDELTA_INPUT = 24;

export function allocDELTA_INPUT(data?: Partial<DELTA_INPUT>): Uint8Array {
  const buf = new Uint8Array(sizeofDELTA_INPUT);
  const view = new DataView(buf.buffer);
  // 0x00: pointer
  if (data?.Anonymous !== undefined) view.setBigUint64(0, data.Anonymous === null ? 0n : BigInt(util.toPointer(data.Anonymous)), true);
  // 0x08: usize
  if (data?.uSize !== undefined) view.setBigUint64(8, BigInt(data.uSize), true);
  // 0x10: i32
  if (data?.Editable !== undefined) view.setInt32(16, Number(data.Editable), true);
  // 0x14: pad4
  return buf;
}

/**
 * Windows.Win32.System.ApplicationInstallationAndServicing.DELTA_OUTPUT (size: 16)
 */
export interface DELTA_OUTPUT {
  /** ptr */
  lpStart: Deno.PointerValue | Uint8Array | null;
  /** usize */
  uSize: Deno.PointerValue;
}

export const sizeofDELTA_OUTPUT = 16;

export function allocDELTA_OUTPUT(data?: Partial<DELTA_OUTPUT>): Uint8Array {
  const buf = new Uint8Array(sizeofDELTA_OUTPUT);
  const view = new DataView(buf.buffer);
  // 0x00: pointer
  if (data?.lpStart !== undefined) view.setBigUint64(0, data.lpStart === null ? 0n : BigInt(util.toPointer(data.lpStart)), true);
  // 0x08: usize
  if (data?.uSize !== undefined) view.setBigUint64(8, BigInt(data.uSize), true);
  return buf;
}

/**
 * Windows.Win32.System.ApplicationInstallationAndServicing.DELTA_HASH (size: 16)
 */
export interface DELTA_HASH {
  /** u32 */
  HashSize: number;
  /** array */
  HashValue: Deno.PointerValue | null;
}

export const sizeofDELTA_HASH = 16;

export function allocDELTA_HASH(data?: Partial<DELTA_HASH>): Uint8Array {
  const buf = new Uint8Array(sizeofDELTA_HASH);
  const view = new DataView(buf.buffer);
  // 0x00: u32
  if (data?.HashSize !== undefined) view.setUint32(0, Number(data.HashSize), true);
  // 0x04: pad4
  // 0x08: pointer
  if (data?.HashValue !== undefined) view.setBigUint64(8, data.HashValue === null ? 0n : BigInt(util.toPointer(data.HashValue)), true);
  return buf;
}

/**
 * Windows.Win32.Foundation.FILETIME (size: 8)
 */
export interface FILETIME {
  /** u32 */
  dwLowDateTime: number;
  /** u32 */
  dwHighDateTime: number;
}

export const sizeofFILETIME = 8;

export function allocFILETIME(data?: Partial<FILETIME>): Uint8Array {
  const buf = new Uint8Array(sizeofFILETIME);
  const view = new DataView(buf.buffer);
  // 0x00: u32
  if (data?.dwLowDateTime !== undefined) view.setUint32(0, Number(data.dwLowDateTime), true);
  // 0x04: u32
  if (data?.dwHighDateTime !== undefined) view.setUint32(4, Number(data.dwHighDateTime), true);
  return buf;
}

/**
 * Windows.Win32.System.ApplicationInstallationAndServicing.DELTA_HEADER_INFO (size: 56)
 */
export interface DELTA_HEADER_INFO {
  /** i64 */
  FileTypeSet: Deno.PointerValue;
  /** i64 */
  FileType: Deno.PointerValue;
  /** i64 */
  Flags: Deno.PointerValue;
  /** usize */
  TargetSize: Deno.PointerValue;
  /** Windows.Win32.Foundation.FILETIME */
  TargetFileTime: Uint8Array | Deno.PointerValue | null;
  /** u32 */
  TargetHashAlgId: number;
  /** Windows.Win32.System.ApplicationInstallationAndServicing.DELTA_HASH */
  TargetHash: Uint8Array | Deno.PointerValue | null;
}

export const sizeofDELTA_HEADER_INFO = 56;

export function allocDELTA_HEADER_INFO(data?: Partial<DELTA_HEADER_INFO>): Uint8Array {
  const buf = new Uint8Array(sizeofDELTA_HEADER_INFO);
  const view = new DataView(buf.buffer);
  // 0x00: i64
  if (data?.FileTypeSet !== undefined) view.setBigInt64(0, BigInt(data.FileTypeSet), true);
  // 0x08: i64
  if (data?.FileType !== undefined) view.setBigInt64(8, BigInt(data.FileType), true);
  // 0x10: i64
  if (data?.Flags !== undefined) view.setBigInt64(16, BigInt(data.Flags), true);
  // 0x18: usize
  if (data?.TargetSize !== undefined) view.setBigUint64(24, BigInt(data.TargetSize), true);
  // 0x20: pointer
  if (data?.TargetFileTime !== undefined) view.setBigUint64(32, data.TargetFileTime === null ? 0n : BigInt(util.toPointer(data.TargetFileTime)), true);
  // 0x28: u32
  if (data?.TargetHashAlgId !== undefined) view.setUint32(40, Number(data.TargetHashAlgId), true);
  // 0x2c: pad4
  // 0x30: pointer
  if (data?.TargetHash !== undefined) view.setBigUint64(48, data.TargetHash === null ? 0n : BigInt(util.toPointer(data.TargetHash)), true);
  return buf;
}

/**
 * Windows.Win32.System.ApplicationInstallationAndServicing.ACTIVATION_CONTEXT_QUERY_INDEX (size: 8)
 */
export interface ACTIVATION_CONTEXT_QUERY_INDEX {
  /** u32 */
  ulAssemblyIndex: number;
  /** u32 */
  ulFileIndexInAssembly: number;
}

export const sizeofACTIVATION_CONTEXT_QUERY_INDEX = 8;

export function allocACTIVATION_CONTEXT_QUERY_INDEX(data?: Partial<ACTIVATION_CONTEXT_QUERY_INDEX>): Uint8Array {
  const buf = new Uint8Array(sizeofACTIVATION_CONTEXT_QUERY_INDEX);
  const view = new DataView(buf.buffer);
  // 0x00: u32
  if (data?.ulAssemblyIndex !== undefined) view.setUint32(0, Number(data.ulAssemblyIndex), true);
  // 0x04: u32
  if (data?.ulFileIndexInAssembly !== undefined) view.setUint32(4, Number(data.ulFileIndexInAssembly), true);
  return buf;
}

/**
 * Windows.Win32.System.ApplicationInstallationAndServicing.ASSEMBLY_FILE_DETAILED_INFORMATION (size: 32)
 */
export interface ASSEMBLY_FILE_DETAILED_INFORMATION {
  /** u32 */
  ulFlags: number;
  /** u32 */
  ulFilenameLength: number;
  /** u32 */
  ulPathLength: number;
  /** Windows.Win32.Foundation.PWSTR */
  lpFileName: string | null;
  /** Windows.Win32.Foundation.PWSTR */
  lpFilePath: string | null;
}

export const sizeofASSEMBLY_FILE_DETAILED_INFORMATION = 32;

export function allocASSEMBLY_FILE_DETAILED_INFORMATION(data?: Partial<ASSEMBLY_FILE_DETAILED_INFORMATION>): Uint8Array {
  const buf = new Uint8Array(sizeofASSEMBLY_FILE_DETAILED_INFORMATION);
  const view = new DataView(buf.buffer);
  // 0x00: u32
  if (data?.ulFlags !== undefined) view.setUint32(0, Number(data.ulFlags), true);
  // 0x04: u32
  if (data?.ulFilenameLength !== undefined) view.setUint32(4, Number(data.ulFilenameLength), true);
  // 0x08: u32
  if (data?.ulPathLength !== undefined) view.setUint32(8, Number(data.ulPathLength), true);
  // 0x0c: pad4
  // 0x10: buffer
  if (data?.lpFileName !== undefined) {
    (buf as any)._f16 = util.pwstrToFfi(data.lpFileName);
    view.setBigUint64(16, (buf as any)._f16 === null ? 0n : BigInt(Deno.UnsafePointer.of((buf as any)._f16)), true);
  }
  // 0x18: buffer
  if (data?.lpFilePath !== undefined) {
    (buf as any)._f24 = util.pwstrToFfi(data.lpFilePath);
    view.setBigUint64(24, (buf as any)._f24 === null ? 0n : BigInt(Deno.UnsafePointer.of((buf as any)._f24)), true);
  }
  return buf;
}

/**
 * Windows.Win32.Foundation.LARGE_INTEGER (size: 24)
 */
export interface LARGE_INTEGER {
  /** _Anonymous_e__Struct */
  Anonymous: Uint8Array | Deno.PointerValue | null;
  /** _u_e__Struct */
  u: Uint8Array | Deno.PointerValue | null;
  /** i64 */
  QuadPart: Deno.PointerValue;
}

export const sizeofLARGE_INTEGER = 24;

export function allocLARGE_INTEGER(data?: Partial<LARGE_INTEGER>): Uint8Array {
  const buf = new Uint8Array(sizeofLARGE_INTEGER);
  const view = new DataView(buf.buffer);
  // 0x00: pointer
  if (data?.Anonymous !== undefined) view.setBigUint64(0, data.Anonymous === null ? 0n : BigInt(util.toPointer(data.Anonymous)), true);
  // 0x08: pointer
  if (data?.u !== undefined) view.setBigUint64(8, data.u === null ? 0n : BigInt(util.toPointer(data.u)), true);
  // 0x10: i64
  if (data?.QuadPart !== undefined) view.setBigInt64(16, BigInt(data.QuadPart), true);
  return buf;
}

/**
 * Windows.Win32.System.ApplicationInstallationAndServicing.ACTIVATION_CONTEXT_ASSEMBLY_DETAILED_INFORMATION (size: 104)
 */
export interface ACTIVATION_CONTEXT_ASSEMBLY_DETAILED_INFORMATION {
  /** u32 */
  ulFlags: number;
  /** u32 */
  ulEncodedAssemblyIdentityLength: number;
  /** u32 */
  ulManifestPathType: number;
  /** u32 */
  ulManifestPathLength: number;
  /** Windows.Win32.Foundation.LARGE_INTEGER */
  liManifestLastWriteTime: Uint8Array | Deno.PointerValue | null;
  /** u32 */
  ulPolicyPathType: number;
  /** u32 */
  ulPolicyPathLength: number;
  /** Windows.Win32.Foundation.LARGE_INTEGER */
  liPolicyLastWriteTime: Uint8Array | Deno.PointerValue | null;
  /** u32 */
  ulMetadataSatelliteRosterIndex: number;
  /** u32 */
  ulManifestVersionMajor: number;
  /** u32 */
  ulManifestVersionMinor: number;
  /** u32 */
  ulPolicyVersionMajor: number;
  /** u32 */
  ulPolicyVersionMinor: number;
  /** u32 */
  ulAssemblyDirectoryNameLength: number;
  /** Windows.Win32.Foundation.PWSTR */
  lpAssemblyEncodedAssemblyIdentity: string | null;
  /** Windows.Win32.Foundation.PWSTR */
  lpAssemblyManifestPath: string | null;
  /** Windows.Win32.Foundation.PWSTR */
  lpAssemblyPolicyPath: string | null;
  /** Windows.Win32.Foundation.PWSTR */
  lpAssemblyDirectoryName: string | null;
  /** u32 */
  ulFileCount: number;
}

export const sizeofACTIVATION_CONTEXT_ASSEMBLY_DETAILED_INFORMATION = 104;

export function allocACTIVATION_CONTEXT_ASSEMBLY_DETAILED_INFORMATION(data?: Partial<ACTIVATION_CONTEXT_ASSEMBLY_DETAILED_INFORMATION>): Uint8Array {
  const buf = new Uint8Array(sizeofACTIVATION_CONTEXT_ASSEMBLY_DETAILED_INFORMATION);
  const view = new DataView(buf.buffer);
  // 0x00: u32
  if (data?.ulFlags !== undefined) view.setUint32(0, Number(data.ulFlags), true);
  // 0x04: u32
  if (data?.ulEncodedAssemblyIdentityLength !== undefined) view.setUint32(4, Number(data.ulEncodedAssemblyIdentityLength), true);
  // 0x08: u32
  if (data?.ulManifestPathType !== undefined) view.setUint32(8, Number(data.ulManifestPathType), true);
  // 0x0c: u32
  if (data?.ulManifestPathLength !== undefined) view.setUint32(12, Number(data.ulManifestPathLength), true);
  // 0x10: pointer
  if (data?.liManifestLastWriteTime !== undefined) view.setBigUint64(16, data.liManifestLastWriteTime === null ? 0n : BigInt(util.toPointer(data.liManifestLastWriteTime)), true);
  // 0x18: u32
  if (data?.ulPolicyPathType !== undefined) view.setUint32(24, Number(data.ulPolicyPathType), true);
  // 0x1c: u32
  if (data?.ulPolicyPathLength !== undefined) view.setUint32(28, Number(data.ulPolicyPathLength), true);
  // 0x20: pointer
  if (data?.liPolicyLastWriteTime !== undefined) view.setBigUint64(32, data.liPolicyLastWriteTime === null ? 0n : BigInt(util.toPointer(data.liPolicyLastWriteTime)), true);
  // 0x28: u32
  if (data?.ulMetadataSatelliteRosterIndex !== undefined) view.setUint32(40, Number(data.ulMetadataSatelliteRosterIndex), true);
  // 0x2c: u32
  if (data?.ulManifestVersionMajor !== undefined) view.setUint32(44, Number(data.ulManifestVersionMajor), true);
  // 0x30: u32
  if (data?.ulManifestVersionMinor !== undefined) view.setUint32(48, Number(data.ulManifestVersionMinor), true);
  // 0x34: u32
  if (data?.ulPolicyVersionMajor !== undefined) view.setUint32(52, Number(data.ulPolicyVersionMajor), true);
  // 0x38: u32
  if (data?.ulPolicyVersionMinor !== undefined) view.setUint32(56, Number(data.ulPolicyVersionMinor), true);
  // 0x3c: u32
  if (data?.ulAssemblyDirectoryNameLength !== undefined) view.setUint32(60, Number(data.ulAssemblyDirectoryNameLength), true);
  // 0x40: buffer
  if (data?.lpAssemblyEncodedAssemblyIdentity !== undefined) {
    (buf as any)._f64 = util.pwstrToFfi(data.lpAssemblyEncodedAssemblyIdentity);
    view.setBigUint64(64, (buf as any)._f64 === null ? 0n : BigInt(Deno.UnsafePointer.of((buf as any)._f64)), true);
  }
  // 0x48: buffer
  if (data?.lpAssemblyManifestPath !== undefined) {
    (buf as any)._f72 = util.pwstrToFfi(data.lpAssemblyManifestPath);
    view.setBigUint64(72, (buf as any)._f72 === null ? 0n : BigInt(Deno.UnsafePointer.of((buf as any)._f72)), true);
  }
  // 0x50: buffer
  if (data?.lpAssemblyPolicyPath !== undefined) {
    (buf as any)._f80 = util.pwstrToFfi(data.lpAssemblyPolicyPath);
    view.setBigUint64(80, (buf as any)._f80 === null ? 0n : BigInt(Deno.UnsafePointer.of((buf as any)._f80)), true);
  }
  // 0x58: buffer
  if (data?.lpAssemblyDirectoryName !== undefined) {
    (buf as any)._f88 = util.pwstrToFfi(data.lpAssemblyDirectoryName);
    view.setBigUint64(88, (buf as any)._f88 === null ? 0n : BigInt(Deno.UnsafePointer.of((buf as any)._f88)), true);
  }
  // 0x60: u32
  if (data?.ulFileCount !== undefined) view.setUint32(96, Number(data.ulFileCount), true);
  // 0x64: pad4
  return buf;
}

/**
 * Windows.Win32.System.ApplicationInstallationAndServicing.ACTIVATION_CONTEXT_RUN_LEVEL_INFORMATION (size: 16)
 */
export interface ACTIVATION_CONTEXT_RUN_LEVEL_INFORMATION {
  /** u32 */
  ulFlags: number;
  /** Windows.Win32.System.ApplicationInstallationAndServicing.ACTCTX_REQUESTED_RUN_LEVEL */
  RunLevel: ACTCTX_REQUESTED_RUN_LEVEL;
  /** u32 */
  UiAccess: number;
}

export const sizeofACTIVATION_CONTEXT_RUN_LEVEL_INFORMATION = 16;

export function allocACTIVATION_CONTEXT_RUN_LEVEL_INFORMATION(data?: Partial<ACTIVATION_CONTEXT_RUN_LEVEL_INFORMATION>): Uint8Array {
  const buf = new Uint8Array(sizeofACTIVATION_CONTEXT_RUN_LEVEL_INFORMATION);
  const view = new DataView(buf.buffer);
  // 0x00: u32
  if (data?.ulFlags !== undefined) view.setUint32(0, Number(data.ulFlags), true);
  // 0x04: i32
  if (data?.RunLevel !== undefined) view.setInt32(4, Number(data.RunLevel), true);
  // 0x08: u32
  if (data?.UiAccess !== undefined) view.setUint32(8, Number(data.UiAccess), true);
  // 0x0c: pad4
  return buf;
}

/**
 * Windows.Win32.System.ApplicationInstallationAndServicing.COMPATIBILITY_CONTEXT_ELEMENT (size: 24)
 */
export interface COMPATIBILITY_CONTEXT_ELEMENT {
  /** System.Guid */
  Id: Uint8Array | Deno.PointerValue | null;
  /** Windows.Win32.System.ApplicationInstallationAndServicing.ACTCTX_COMPATIBILITY_ELEMENT_TYPE */
  Type: ACTCTX_COMPATIBILITY_ELEMENT_TYPE;
  /** u64 */
  MaxVersionTested: Deno.PointerValue;
}

export const sizeofCOMPATIBILITY_CONTEXT_ELEMENT = 24;

export function allocCOMPATIBILITY_CONTEXT_ELEMENT(data?: Partial<COMPATIBILITY_CONTEXT_ELEMENT>): Uint8Array {
  const buf = new Uint8Array(sizeofCOMPATIBILITY_CONTEXT_ELEMENT);
  const view = new DataView(buf.buffer);
  // 0x00: pointer
  if (data?.Id !== undefined) view.setBigUint64(0, data.Id === null ? 0n : BigInt(util.toPointer(data.Id)), true);
  // 0x08: i32
  if (data?.Type !== undefined) view.setInt32(8, Number(data.Type), true);
  // 0x0c: pad4
  // 0x10: u64
  if (data?.MaxVersionTested !== undefined) view.setBigUint64(16, BigInt(data.MaxVersionTested), true);
  return buf;
}

/**
 * Windows.Win32.System.ApplicationInstallationAndServicing.ACTIVATION_CONTEXT_DETAILED_INFORMATION (size: 64)
 */
export interface ACTIVATION_CONTEXT_DETAILED_INFORMATION {
  /** u32 */
  dwFlags: number;
  /** u32 */
  ulFormatVersion: number;
  /** u32 */
  ulAssemblyCount: number;
  /** u32 */
  ulRootManifestPathType: number;
  /** u32 */
  ulRootManifestPathChars: number;
  /** u32 */
  ulRootConfigurationPathType: number;
  /** u32 */
  ulRootConfigurationPathChars: number;
  /** u32 */
  ulAppDirPathType: number;
  /** u32 */
  ulAppDirPathChars: number;
  /** Windows.Win32.Foundation.PWSTR */
  lpRootManifestPath: string | null;
  /** Windows.Win32.Foundation.PWSTR */
  lpRootConfigurationPath: string | null;
  /** Windows.Win32.Foundation.PWSTR */
  lpAppDirPath: string | null;
}

export const sizeofACTIVATION_CONTEXT_DETAILED_INFORMATION = 64;

export function allocACTIVATION_CONTEXT_DETAILED_INFORMATION(data?: Partial<ACTIVATION_CONTEXT_DETAILED_INFORMATION>): Uint8Array {
  const buf = new Uint8Array(sizeofACTIVATION_CONTEXT_DETAILED_INFORMATION);
  const view = new DataView(buf.buffer);
  // 0x00: u32
  if (data?.dwFlags !== undefined) view.setUint32(0, Number(data.dwFlags), true);
  // 0x04: u32
  if (data?.ulFormatVersion !== undefined) view.setUint32(4, Number(data.ulFormatVersion), true);
  // 0x08: u32
  if (data?.ulAssemblyCount !== undefined) view.setUint32(8, Number(data.ulAssemblyCount), true);
  // 0x0c: u32
  if (data?.ulRootManifestPathType !== undefined) view.setUint32(12, Number(data.ulRootManifestPathType), true);
  // 0x10: u32
  if (data?.ulRootManifestPathChars !== undefined) view.setUint32(16, Number(data.ulRootManifestPathChars), true);
  // 0x14: u32
  if (data?.ulRootConfigurationPathType !== undefined) view.setUint32(20, Number(data.ulRootConfigurationPathType), true);
  // 0x18: u32
  if (data?.ulRootConfigurationPathChars !== undefined) view.setUint32(24, Number(data.ulRootConfigurationPathChars), true);
  // 0x1c: u32
  if (data?.ulAppDirPathType !== undefined) view.setUint32(28, Number(data.ulAppDirPathType), true);
  // 0x20: u32
  if (data?.ulAppDirPathChars !== undefined) view.setUint32(32, Number(data.ulAppDirPathChars), true);
  // 0x24: pad4
  // 0x28: buffer
  if (data?.lpRootManifestPath !== undefined) {
    (buf as any)._f40 = util.pwstrToFfi(data.lpRootManifestPath);
    view.setBigUint64(40, (buf as any)._f40 === null ? 0n : BigInt(Deno.UnsafePointer.of((buf as any)._f40)), true);
  }
  // 0x30: buffer
  if (data?.lpRootConfigurationPath !== undefined) {
    (buf as any)._f48 = util.pwstrToFfi(data.lpRootConfigurationPath);
    view.setBigUint64(48, (buf as any)._f48 === null ? 0n : BigInt(Deno.UnsafePointer.of((buf as any)._f48)), true);
  }
  // 0x38: buffer
  if (data?.lpAppDirPath !== undefined) {
    (buf as any)._f56 = util.pwstrToFfi(data.lpAppDirPath);
    view.setBigUint64(56, (buf as any)._f56 === null ? 0n : BigInt(Deno.UnsafePointer.of((buf as any)._f56)), true);
  }
  return buf;
}

export type HINSTANCE = Deno.PointerValue;

/**
 * Windows.Win32.System.ApplicationInstallationAndServicing.ACTCTXA (size: 56)
 */
export interface ACTCTXA {
  /** u32 */
  cbSize: number;
  /** u32 */
  dwFlags: number;
  /** Windows.Win32.Foundation.PSTR */
  lpSource: string | null;
  /** u16 */
  wProcessorArchitecture: number;
  /** u16 */
  wLangId: number;
  /** Windows.Win32.Foundation.PSTR */
  lpAssemblyDirectory: string | null;
  /** Windows.Win32.Foundation.PSTR */
  lpResourceName: string | null;
  /** Windows.Win32.Foundation.PSTR */
  lpApplicationName: string | null;
  /** Windows.Win32.Foundation.HINSTANCE */
  hModule: Uint8Array | Deno.PointerValue | null;
}

export const sizeofACTCTXA = 56;

export function allocACTCTXA(data?: Partial<ACTCTXA>): Uint8Array {
  const buf = new Uint8Array(sizeofACTCTXA);
  const view = new DataView(buf.buffer);
  // 0x00: u32
  if (data?.cbSize !== undefined) view.setUint32(0, Number(data.cbSize), true);
  // 0x04: u32
  if (data?.dwFlags !== undefined) view.setUint32(4, Number(data.dwFlags), true);
  // 0x08: buffer
  if (data?.lpSource !== undefined) {
    (buf as any)._f8 = util.pstrToFfi(data.lpSource);
    view.setBigUint64(8, (buf as any)._f8 === null ? 0n : BigInt(Deno.UnsafePointer.of((buf as any)._f8)), true);
  }
  // 0x10: u16
  if (data?.wProcessorArchitecture !== undefined) view.setUint16(16, Number(data.wProcessorArchitecture), true);
  // 0x12: u16
  if (data?.wLangId !== undefined) view.setUint16(18, Number(data.wLangId), true);
  // 0x14: pad4
  // 0x18: buffer
  if (data?.lpAssemblyDirectory !== undefined) {
    (buf as any)._f24 = util.pstrToFfi(data.lpAssemblyDirectory);
    view.setBigUint64(24, (buf as any)._f24 === null ? 0n : BigInt(Deno.UnsafePointer.of((buf as any)._f24)), true);
  }
  // 0x20: buffer
  if (data?.lpResourceName !== undefined) {
    (buf as any)._f32 = util.pstrToFfi(data.lpResourceName);
    view.setBigUint64(32, (buf as any)._f32 === null ? 0n : BigInt(Deno.UnsafePointer.of((buf as any)._f32)), true);
  }
  // 0x28: buffer
  if (data?.lpApplicationName !== undefined) {
    (buf as any)._f40 = util.pstrToFfi(data.lpApplicationName);
    view.setBigUint64(40, (buf as any)._f40 === null ? 0n : BigInt(Deno.UnsafePointer.of((buf as any)._f40)), true);
  }
  // 0x30: pointer
  if (data?.hModule !== undefined) view.setBigUint64(48, data.hModule === null ? 0n : BigInt(util.toPointer(data.hModule)), true);
  return buf;
}

/**
 * Windows.Win32.System.ApplicationInstallationAndServicing.ACTCTXW (size: 56)
 */
export interface ACTCTXW {
  /** u32 */
  cbSize: number;
  /** u32 */
  dwFlags: number;
  /** Windows.Win32.Foundation.PWSTR */
  lpSource: string | null;
  /** u16 */
  wProcessorArchitecture: number;
  /** u16 */
  wLangId: number;
  /** Windows.Win32.Foundation.PWSTR */
  lpAssemblyDirectory: string | null;
  /** Windows.Win32.Foundation.PWSTR */
  lpResourceName: string | null;
  /** Windows.Win32.Foundation.PWSTR */
  lpApplicationName: string | null;
  /** Windows.Win32.Foundation.HINSTANCE */
  hModule: Uint8Array | Deno.PointerValue | null;
}

export const sizeofACTCTXW = 56;

export function allocACTCTXW(data?: Partial<ACTCTXW>): Uint8Array {
  const buf = new Uint8Array(sizeofACTCTXW);
  const view = new DataView(buf.buffer);
  // 0x00: u32
  if (data?.cbSize !== undefined) view.setUint32(0, Number(data.cbSize), true);
  // 0x04: u32
  if (data?.dwFlags !== undefined) view.setUint32(4, Number(data.dwFlags), true);
  // 0x08: buffer
  if (data?.lpSource !== undefined) {
    (buf as any)._f8 = util.pwstrToFfi(data.lpSource);
    view.setBigUint64(8, (buf as any)._f8 === null ? 0n : BigInt(Deno.UnsafePointer.of((buf as any)._f8)), true);
  }
  // 0x10: u16
  if (data?.wProcessorArchitecture !== undefined) view.setUint16(16, Number(data.wProcessorArchitecture), true);
  // 0x12: u16
  if (data?.wLangId !== undefined) view.setUint16(18, Number(data.wLangId), true);
  // 0x14: pad4
  // 0x18: buffer
  if (data?.lpAssemblyDirectory !== undefined) {
    (buf as any)._f24 = util.pwstrToFfi(data.lpAssemblyDirectory);
    view.setBigUint64(24, (buf as any)._f24 === null ? 0n : BigInt(Deno.UnsafePointer.of((buf as any)._f24)), true);
  }
  // 0x20: buffer
  if (data?.lpResourceName !== undefined) {
    (buf as any)._f32 = util.pwstrToFfi(data.lpResourceName);
    view.setBigUint64(32, (buf as any)._f32 === null ? 0n : BigInt(Deno.UnsafePointer.of((buf as any)._f32)), true);
  }
  // 0x28: buffer
  if (data?.lpApplicationName !== undefined) {
    (buf as any)._f40 = util.pwstrToFfi(data.lpApplicationName);
    view.setBigUint64(40, (buf as any)._f40 === null ? 0n : BigInt(Deno.UnsafePointer.of((buf as any)._f40)), true);
  }
  // 0x30: pointer
  if (data?.hModule !== undefined) view.setBigUint64(48, data.hModule === null ? 0n : BigInt(util.toPointer(data.hModule)), true);
  return buf;
}

/**
 * Windows.Win32.System.WindowsProgramming.ACTCTX_SECTION_KEYED_DATA_ASSEMBLY_METADATA (size: 40)
 */
export interface ACTCTX_SECTION_KEYED_DATA_ASSEMBLY_METADATA {
  /** ptr */
  lpInformation: Deno.PointerValue | Uint8Array | null;
  /** ptr */
  lpSectionBase: Deno.PointerValue | Uint8Array | null;
  /** u32 */
  ulSectionLength: number;
  /** ptr */
  lpSectionGlobalDataBase: Deno.PointerValue | Uint8Array | null;
  /** u32 */
  ulSectionGlobalDataLength: number;
}

export const sizeofACTCTX_SECTION_KEYED_DATA_ASSEMBLY_METADATA = 40;

export function allocACTCTX_SECTION_KEYED_DATA_ASSEMBLY_METADATA(data?: Partial<ACTCTX_SECTION_KEYED_DATA_ASSEMBLY_METADATA>): Uint8Array {
  const buf = new Uint8Array(sizeofACTCTX_SECTION_KEYED_DATA_ASSEMBLY_METADATA);
  const view = new DataView(buf.buffer);
  // 0x00: pointer
  if (data?.lpInformation !== undefined) view.setBigUint64(0, data.lpInformation === null ? 0n : BigInt(util.toPointer(data.lpInformation)), true);
  // 0x08: pointer
  if (data?.lpSectionBase !== undefined) view.setBigUint64(8, data.lpSectionBase === null ? 0n : BigInt(util.toPointer(data.lpSectionBase)), true);
  // 0x10: u32
  if (data?.ulSectionLength !== undefined) view.setUint32(16, Number(data.ulSectionLength), true);
  // 0x14: pad4
  // 0x18: pointer
  if (data?.lpSectionGlobalDataBase !== undefined) view.setBigUint64(24, data.lpSectionGlobalDataBase === null ? 0n : BigInt(util.toPointer(data.lpSectionGlobalDataBase)), true);
  // 0x20: u32
  if (data?.ulSectionGlobalDataLength !== undefined) view.setUint32(32, Number(data.ulSectionGlobalDataLength), true);
  // 0x24: pad4
  return buf;
}

/**
 * Windows.Win32.System.ApplicationInstallationAndServicing.ACTCTX_SECTION_KEYED_DATA (size: 80)
 */
export interface ACTCTX_SECTION_KEYED_DATA {
  /** u32 */
  cbSize: number;
  /** u32 */
  ulDataFormatVersion: number;
  /** ptr */
  lpData: Deno.PointerValue | Uint8Array | null;
  /** u32 */
  ulLength: number;
  /** ptr */
  lpSectionGlobalData: Deno.PointerValue | Uint8Array | null;
  /** u32 */
  ulSectionGlobalDataLength: number;
  /** ptr */
  lpSectionBase: Deno.PointerValue | Uint8Array | null;
  /** u32 */
  ulSectionTotalLength: number;
  /** Windows.Win32.Foundation.HANDLE */
  hActCtx: Uint8Array | Deno.PointerValue | null;
  /** u32 */
  ulAssemblyRosterIndex: number;
  /** u32 */
  ulFlags: number;
  /** Windows.Win32.System.WindowsProgramming.ACTCTX_SECTION_KEYED_DATA_ASSEMBLY_METADATA */
  AssemblyMetadata: Uint8Array | Deno.PointerValue | null;
}

export const sizeofACTCTX_SECTION_KEYED_DATA = 80;

export function allocACTCTX_SECTION_KEYED_DATA(data?: Partial<ACTCTX_SECTION_KEYED_DATA>): Uint8Array {
  const buf = new Uint8Array(sizeofACTCTX_SECTION_KEYED_DATA);
  const view = new DataView(buf.buffer);
  // 0x00: u32
  if (data?.cbSize !== undefined) view.setUint32(0, Number(data.cbSize), true);
  // 0x04: u32
  if (data?.ulDataFormatVersion !== undefined) view.setUint32(4, Number(data.ulDataFormatVersion), true);
  // 0x08: pointer
  if (data?.lpData !== undefined) view.setBigUint64(8, data.lpData === null ? 0n : BigInt(util.toPointer(data.lpData)), true);
  // 0x10: u32
  if (data?.ulLength !== undefined) view.setUint32(16, Number(data.ulLength), true);
  // 0x14: pad4
  // 0x18: pointer
  if (data?.lpSectionGlobalData !== undefined) view.setBigUint64(24, data.lpSectionGlobalData === null ? 0n : BigInt(util.toPointer(data.lpSectionGlobalData)), true);
  // 0x20: u32
  if (data?.ulSectionGlobalDataLength !== undefined) view.setUint32(32, Number(data.ulSectionGlobalDataLength), true);
  // 0x24: pad4
  // 0x28: pointer
  if (data?.lpSectionBase !== undefined) view.setBigUint64(40, data.lpSectionBase === null ? 0n : BigInt(util.toPointer(data.lpSectionBase)), true);
  // 0x30: u32
  if (data?.ulSectionTotalLength !== undefined) view.setUint32(48, Number(data.ulSectionTotalLength), true);
  // 0x34: pad4
  // 0x38: pointer
  if (data?.hActCtx !== undefined) view.setBigUint64(56, data.hActCtx === null ? 0n : BigInt(util.toPointer(data.hActCtx)), true);
  // 0x40: u32
  if (data?.ulAssemblyRosterIndex !== undefined) view.setUint32(64, Number(data.ulAssemblyRosterIndex), true);
  // 0x44: u32
  if (data?.ulFlags !== undefined) view.setUint32(68, Number(data.ulFlags), true);
  // 0x48: pointer
  if (data?.AssemblyMetadata !== undefined) view.setBigUint64(72, data.AssemblyMetadata === null ? 0n : BigInt(util.toPointer(data.AssemblyMetadata)), true);
  return buf;
}

export type HKEY = Deno.PointerValue;

export type HRESULT = number;

// Native Libraries

try {
  var libmsi_dll = Deno.dlopen("msi.dll", {
    MsiCloseHandle: {
      parameters: ["pointer"],
      result: "u32",
    },
    MsiCloseAllHandles: {
      parameters: [],
      result: "u32",
    },
    MsiSetInternalUI: {
      parameters: ["i32", "pointer"],
      result: "i32",
    },
    MsiSetExternalUIA: {
      parameters: ["pointer", "u32", "pointer"],
      result: "pointer",
    },
    MsiSetExternalUIW: {
      parameters: ["pointer", "u32", "pointer"],
      result: "pointer",
    },
    MsiSetExternalUIRecord: {
      parameters: ["pointer", "u32", "pointer", "pointer"],
      result: "u32",
    },
    MsiEnableLogA: {
      parameters: ["i32", "buffer", "u32"],
      result: "u32",
    },
    MsiEnableLogW: {
      parameters: ["i32", "buffer", "u32"],
      result: "u32",
    },
    MsiQueryProductStateA: {
      parameters: ["buffer"],
      result: "i32",
    },
    MsiQueryProductStateW: {
      parameters: ["buffer"],
      result: "i32",
    },
    MsiGetProductInfoA: {
      parameters: ["buffer", "buffer", "buffer", "pointer"],
      result: "u32",
    },
    MsiGetProductInfoW: {
      parameters: ["buffer", "buffer", "buffer", "pointer"],
      result: "u32",
    },
    MsiGetProductInfoExA: {
      parameters: ["buffer", "buffer", "i32", "buffer", "buffer", "pointer"],
      result: "u32",
    },
    MsiGetProductInfoExW: {
      parameters: ["buffer", "buffer", "i32", "buffer", "buffer", "pointer"],
      result: "u32",
    },
    MsiInstallProductA: {
      parameters: ["buffer", "buffer"],
      result: "u32",
    },
    MsiInstallProductW: {
      parameters: ["buffer", "buffer"],
      result: "u32",
    },
    MsiConfigureProductA: {
      parameters: ["buffer", "i32", "i32"],
      result: "u32",
    },
    MsiConfigureProductW: {
      parameters: ["buffer", "i32", "i32"],
      result: "u32",
    },
    MsiConfigureProductExA: {
      parameters: ["buffer", "i32", "i32", "buffer"],
      result: "u32",
    },
    MsiConfigureProductExW: {
      parameters: ["buffer", "i32", "i32", "buffer"],
      result: "u32",
    },
    MsiReinstallProductA: {
      parameters: ["buffer", "i32"],
      result: "u32",
    },
    MsiReinstallProductW: {
      parameters: ["buffer", "i32"],
      result: "u32",
    },
    MsiAdvertiseProductExA: {
      parameters: ["buffer", "buffer", "buffer", "u16", "u32", "u32"],
      result: "u32",
    },
    MsiAdvertiseProductExW: {
      parameters: ["buffer", "buffer", "buffer", "u16", "u32", "u32"],
      result: "u32",
    },
    MsiAdvertiseProductA: {
      parameters: ["buffer", "buffer", "buffer", "u16"],
      result: "u32",
    },
    MsiAdvertiseProductW: {
      parameters: ["buffer", "buffer", "buffer", "u16"],
      result: "u32",
    },
    MsiProcessAdvertiseScriptA: {
      parameters: ["buffer", "buffer", "pointer", "i32", "i32"],
      result: "u32",
    },
    MsiProcessAdvertiseScriptW: {
      parameters: ["buffer", "buffer", "pointer", "i32", "i32"],
      result: "u32",
    },
    MsiAdvertiseScriptA: {
      parameters: ["buffer", "u32", "pointer", "i32"],
      result: "u32",
    },
    MsiAdvertiseScriptW: {
      parameters: ["buffer", "u32", "pointer", "i32"],
      result: "u32",
    },
    MsiGetProductInfoFromScriptA: {
      parameters: ["buffer", "buffer", "pointer", "pointer", "buffer", "pointer", "buffer", "pointer"],
      result: "u32",
    },
    MsiGetProductInfoFromScriptW: {
      parameters: ["buffer", "buffer", "pointer", "pointer", "buffer", "pointer", "buffer", "pointer"],
      result: "u32",
    },
    MsiGetProductCodeA: {
      parameters: ["buffer", "buffer"],
      result: "u32",
    },
    MsiGetProductCodeW: {
      parameters: ["buffer", "buffer"],
      result: "u32",
    },
    MsiGetUserInfoA: {
      parameters: ["buffer", "buffer", "pointer", "buffer", "pointer", "buffer", "pointer"],
      result: "i32",
    },
    MsiGetUserInfoW: {
      parameters: ["buffer", "buffer", "pointer", "buffer", "pointer", "buffer", "pointer"],
      result: "i32",
    },
    MsiCollectUserInfoA: {
      parameters: ["buffer"],
      result: "u32",
    },
    MsiCollectUserInfoW: {
      parameters: ["buffer"],
      result: "u32",
    },
    MsiApplyPatchA: {
      parameters: ["buffer", "buffer", "i32", "buffer"],
      result: "u32",
    },
    MsiApplyPatchW: {
      parameters: ["buffer", "buffer", "i32", "buffer"],
      result: "u32",
    },
    MsiGetPatchInfoA: {
      parameters: ["buffer", "buffer", "buffer", "pointer"],
      result: "u32",
    },
    MsiGetPatchInfoW: {
      parameters: ["buffer", "buffer", "buffer", "pointer"],
      result: "u32",
    },
    MsiEnumPatchesA: {
      parameters: ["buffer", "u32", "buffer", "buffer", "pointer"],
      result: "u32",
    },
    MsiEnumPatchesW: {
      parameters: ["buffer", "u32", "buffer", "buffer", "pointer"],
      result: "u32",
    },
    MsiRemovePatchesA: {
      parameters: ["buffer", "buffer", "i32", "buffer"],
      result: "u32",
    },
    MsiRemovePatchesW: {
      parameters: ["buffer", "buffer", "i32", "buffer"],
      result: "u32",
    },
    MsiExtractPatchXMLDataA: {
      parameters: ["buffer", "u32", "buffer", "pointer"],
      result: "u32",
    },
    MsiExtractPatchXMLDataW: {
      parameters: ["buffer", "u32", "buffer", "pointer"],
      result: "u32",
    },
    MsiGetPatchInfoExA: {
      parameters: ["buffer", "buffer", "buffer", "i32", "buffer", "buffer", "pointer"],
      result: "u32",
    },
    MsiGetPatchInfoExW: {
      parameters: ["buffer", "buffer", "buffer", "i32", "buffer", "buffer", "pointer"],
      result: "u32",
    },
    MsiApplyMultiplePatchesA: {
      parameters: ["buffer", "buffer", "buffer"],
      result: "u32",
    },
    MsiApplyMultiplePatchesW: {
      parameters: ["buffer", "buffer", "buffer"],
      result: "u32",
    },
    MsiDeterminePatchSequenceA: {
      parameters: ["buffer", "buffer", "i32", "u32", "pointer"],
      result: "u32",
    },
    MsiDeterminePatchSequenceW: {
      parameters: ["buffer", "buffer", "i32", "u32", "pointer"],
      result: "u32",
    },
    MsiDetermineApplicablePatchesA: {
      parameters: ["buffer", "u32", "pointer"],
      result: "u32",
    },
    MsiDetermineApplicablePatchesW: {
      parameters: ["buffer", "u32", "pointer"],
      result: "u32",
    },
    MsiEnumPatchesExA: {
      parameters: ["buffer", "buffer", "u32", "u32", "u32", "buffer", "buffer", "pointer", "buffer", "pointer"],
      result: "u32",
    },
    MsiEnumPatchesExW: {
      parameters: ["buffer", "buffer", "u32", "u32", "u32", "buffer", "buffer", "pointer", "buffer", "pointer"],
      result: "u32",
    },
    MsiQueryFeatureStateA: {
      parameters: ["buffer", "buffer"],
      result: "i32",
    },
    MsiQueryFeatureStateW: {
      parameters: ["buffer", "buffer"],
      result: "i32",
    },
    MsiQueryFeatureStateExA: {
      parameters: ["buffer", "buffer", "i32", "buffer", "pointer"],
      result: "u32",
    },
    MsiQueryFeatureStateExW: {
      parameters: ["buffer", "buffer", "i32", "buffer", "pointer"],
      result: "u32",
    },
    MsiUseFeatureA: {
      parameters: ["buffer", "buffer"],
      result: "i32",
    },
    MsiUseFeatureW: {
      parameters: ["buffer", "buffer"],
      result: "i32",
    },
    MsiUseFeatureExA: {
      parameters: ["buffer", "buffer", "u32", "u32"],
      result: "i32",
    },
    MsiUseFeatureExW: {
      parameters: ["buffer", "buffer", "u32", "u32"],
      result: "i32",
    },
    MsiGetFeatureUsageA: {
      parameters: ["buffer", "buffer", "pointer", "pointer"],
      result: "u32",
    },
    MsiGetFeatureUsageW: {
      parameters: ["buffer", "buffer", "pointer", "pointer"],
      result: "u32",
    },
    MsiConfigureFeatureA: {
      parameters: ["buffer", "buffer", "i32"],
      result: "u32",
    },
    MsiConfigureFeatureW: {
      parameters: ["buffer", "buffer", "i32"],
      result: "u32",
    },
    MsiReinstallFeatureA: {
      parameters: ["buffer", "buffer", "i32"],
      result: "u32",
    },
    MsiReinstallFeatureW: {
      parameters: ["buffer", "buffer", "i32"],
      result: "u32",
    },
    MsiProvideComponentA: {
      parameters: ["buffer", "buffer", "buffer", "i32", "buffer", "pointer"],
      result: "u32",
    },
    MsiProvideComponentW: {
      parameters: ["buffer", "buffer", "buffer", "i32", "buffer", "pointer"],
      result: "u32",
    },
    MsiProvideQualifiedComponentA: {
      parameters: ["buffer", "buffer", "i32", "buffer", "pointer"],
      result: "u32",
    },
    MsiProvideQualifiedComponentW: {
      parameters: ["buffer", "buffer", "i32", "buffer", "pointer"],
      result: "u32",
    },
    MsiProvideQualifiedComponentExA: {
      parameters: ["buffer", "buffer", "i32", "buffer", "u32", "u32", "buffer", "pointer"],
      result: "u32",
    },
    MsiProvideQualifiedComponentExW: {
      parameters: ["buffer", "buffer", "i32", "buffer", "u32", "u32", "buffer", "pointer"],
      result: "u32",
    },
    MsiGetComponentPathA: {
      parameters: ["buffer", "buffer", "buffer", "pointer"],
      result: "i32",
    },
    MsiGetComponentPathW: {
      parameters: ["buffer", "buffer", "buffer", "pointer"],
      result: "i32",
    },
    MsiGetComponentPathExA: {
      parameters: ["buffer", "buffer", "buffer", "i32", "buffer", "pointer"],
      result: "i32",
    },
    MsiGetComponentPathExW: {
      parameters: ["buffer", "buffer", "buffer", "i32", "buffer", "pointer"],
      result: "i32",
    },
    MsiProvideAssemblyA: {
      parameters: ["buffer", "buffer", "i32", "u32", "buffer", "pointer"],
      result: "u32",
    },
    MsiProvideAssemblyW: {
      parameters: ["buffer", "buffer", "i32", "u32", "buffer", "pointer"],
      result: "u32",
    },
    MsiQueryComponentStateA: {
      parameters: ["buffer", "buffer", "i32", "buffer", "pointer"],
      result: "u32",
    },
    MsiQueryComponentStateW: {
      parameters: ["buffer", "buffer", "i32", "buffer", "pointer"],
      result: "u32",
    },
    MsiEnumProductsA: {
      parameters: ["u32", "buffer"],
      result: "u32",
    },
    MsiEnumProductsW: {
      parameters: ["u32", "buffer"],
      result: "u32",
    },
    MsiEnumProductsExA: {
      parameters: ["buffer", "buffer", "u32", "u32", "buffer", "pointer", "buffer", "pointer"],
      result: "u32",
    },
    MsiEnumProductsExW: {
      parameters: ["buffer", "buffer", "u32", "u32", "buffer", "pointer", "buffer", "pointer"],
      result: "u32",
    },
    MsiEnumRelatedProductsA: {
      parameters: ["buffer", "u32", "u32", "buffer"],
      result: "u32",
    },
    MsiEnumRelatedProductsW: {
      parameters: ["buffer", "u32", "u32", "buffer"],
      result: "u32",
    },
    MsiEnumFeaturesA: {
      parameters: ["buffer", "u32", "buffer", "buffer"],
      result: "u32",
    },
    MsiEnumFeaturesW: {
      parameters: ["buffer", "u32", "buffer", "buffer"],
      result: "u32",
    },
    MsiEnumComponentsA: {
      parameters: ["u32", "buffer"],
      result: "u32",
    },
    MsiEnumComponentsW: {
      parameters: ["u32", "buffer"],
      result: "u32",
    },
    MsiEnumComponentsExA: {
      parameters: ["buffer", "u32", "u32", "buffer", "pointer", "buffer", "pointer"],
      result: "u32",
    },
    MsiEnumComponentsExW: {
      parameters: ["buffer", "u32", "u32", "buffer", "pointer", "buffer", "pointer"],
      result: "u32",
    },
    MsiEnumClientsA: {
      parameters: ["buffer", "u32", "buffer"],
      result: "u32",
    },
    MsiEnumClientsW: {
      parameters: ["buffer", "u32", "buffer"],
      result: "u32",
    },
    MsiEnumClientsExA: {
      parameters: ["buffer", "buffer", "i32", "u32", "buffer", "pointer", "buffer", "pointer"],
      result: "u32",
    },
    MsiEnumClientsExW: {
      parameters: ["buffer", "buffer", "i32", "u32", "buffer", "pointer", "buffer", "pointer"],
      result: "u32",
    },
    MsiEnumComponentQualifiersA: {
      parameters: ["buffer", "u32", "buffer", "pointer", "buffer", "pointer"],
      result: "u32",
    },
    MsiEnumComponentQualifiersW: {
      parameters: ["buffer", "u32", "buffer", "pointer", "buffer", "pointer"],
      result: "u32",
    },
    MsiOpenProductA: {
      parameters: ["buffer", "pointer"],
      result: "u32",
    },
    MsiOpenProductW: {
      parameters: ["buffer", "pointer"],
      result: "u32",
    },
    MsiOpenPackageA: {
      parameters: ["buffer", "pointer"],
      result: "u32",
    },
    MsiOpenPackageW: {
      parameters: ["buffer", "pointer"],
      result: "u32",
    },
    MsiOpenPackageExA: {
      parameters: ["buffer", "u32", "pointer"],
      result: "u32",
    },
    MsiOpenPackageExW: {
      parameters: ["buffer", "u32", "pointer"],
      result: "u32",
    },
    MsiGetPatchFileListA: {
      parameters: ["buffer", "buffer", "pointer", "pointer"],
      result: "u32",
    },
    MsiGetPatchFileListW: {
      parameters: ["buffer", "buffer", "pointer", "pointer"],
      result: "u32",
    },
    MsiGetProductPropertyA: {
      parameters: ["pointer", "buffer", "buffer", "pointer"],
      result: "u32",
    },
    MsiGetProductPropertyW: {
      parameters: ["pointer", "buffer", "buffer", "pointer"],
      result: "u32",
    },
    MsiVerifyPackageA: {
      parameters: ["buffer"],
      result: "u32",
    },
    MsiVerifyPackageW: {
      parameters: ["buffer"],
      result: "u32",
    },
    MsiGetFeatureInfoA: {
      parameters: ["pointer", "buffer", "pointer", "buffer", "pointer", "buffer", "pointer"],
      result: "u32",
    },
    MsiGetFeatureInfoW: {
      parameters: ["pointer", "buffer", "pointer", "buffer", "pointer", "buffer", "pointer"],
      result: "u32",
    },
    MsiInstallMissingComponentA: {
      parameters: ["buffer", "buffer", "i32"],
      result: "u32",
    },
    MsiInstallMissingComponentW: {
      parameters: ["buffer", "buffer", "i32"],
      result: "u32",
    },
    MsiInstallMissingFileA: {
      parameters: ["buffer", "buffer"],
      result: "u32",
    },
    MsiInstallMissingFileW: {
      parameters: ["buffer", "buffer"],
      result: "u32",
    },
    MsiLocateComponentA: {
      parameters: ["buffer", "buffer", "pointer"],
      result: "i32",
    },
    MsiLocateComponentW: {
      parameters: ["buffer", "buffer", "pointer"],
      result: "i32",
    },
    MsiSourceListClearAllA: {
      parameters: ["buffer", "buffer", "u32"],
      result: "u32",
    },
    MsiSourceListClearAllW: {
      parameters: ["buffer", "buffer", "u32"],
      result: "u32",
    },
    MsiSourceListAddSourceA: {
      parameters: ["buffer", "buffer", "u32", "buffer"],
      result: "u32",
    },
    MsiSourceListAddSourceW: {
      parameters: ["buffer", "buffer", "u32", "buffer"],
      result: "u32",
    },
    MsiSourceListForceResolutionA: {
      parameters: ["buffer", "buffer", "u32"],
      result: "u32",
    },
    MsiSourceListForceResolutionW: {
      parameters: ["buffer", "buffer", "u32"],
      result: "u32",
    },
    MsiSourceListAddSourceExA: {
      parameters: ["buffer", "buffer", "i32", "u32", "buffer", "u32"],
      result: "u32",
    },
    MsiSourceListAddSourceExW: {
      parameters: ["buffer", "buffer", "i32", "u32", "buffer", "u32"],
      result: "u32",
    },
    MsiSourceListAddMediaDiskA: {
      parameters: ["buffer", "buffer", "i32", "u32", "u32", "buffer", "buffer"],
      result: "u32",
    },
    MsiSourceListAddMediaDiskW: {
      parameters: ["buffer", "buffer", "i32", "u32", "u32", "buffer", "buffer"],
      result: "u32",
    },
    MsiSourceListClearSourceA: {
      parameters: ["buffer", "buffer", "i32", "u32", "buffer"],
      result: "u32",
    },
    MsiSourceListClearSourceW: {
      parameters: ["buffer", "buffer", "i32", "u32", "buffer"],
      result: "u32",
    },
    MsiSourceListClearMediaDiskA: {
      parameters: ["buffer", "buffer", "i32", "u32", "u32"],
      result: "u32",
    },
    MsiSourceListClearMediaDiskW: {
      parameters: ["buffer", "buffer", "i32", "u32", "u32"],
      result: "u32",
    },
    MsiSourceListClearAllExA: {
      parameters: ["buffer", "buffer", "i32", "u32"],
      result: "u32",
    },
    MsiSourceListClearAllExW: {
      parameters: ["buffer", "buffer", "i32", "u32"],
      result: "u32",
    },
    MsiSourceListForceResolutionExA: {
      parameters: ["buffer", "buffer", "i32", "u32"],
      result: "u32",
    },
    MsiSourceListForceResolutionExW: {
      parameters: ["buffer", "buffer", "i32", "u32"],
      result: "u32",
    },
    MsiSourceListSetInfoA: {
      parameters: ["buffer", "buffer", "i32", "u32", "buffer", "buffer"],
      result: "u32",
    },
    MsiSourceListSetInfoW: {
      parameters: ["buffer", "buffer", "i32", "u32", "buffer", "buffer"],
      result: "u32",
    },
    MsiSourceListGetInfoA: {
      parameters: ["buffer", "buffer", "i32", "u32", "buffer", "buffer", "pointer"],
      result: "u32",
    },
    MsiSourceListGetInfoW: {
      parameters: ["buffer", "buffer", "i32", "u32", "buffer", "buffer", "pointer"],
      result: "u32",
    },
    MsiSourceListEnumSourcesA: {
      parameters: ["buffer", "buffer", "i32", "u32", "u32", "buffer", "pointer"],
      result: "u32",
    },
    MsiSourceListEnumSourcesW: {
      parameters: ["buffer", "buffer", "i32", "u32", "u32", "buffer", "pointer"],
      result: "u32",
    },
    MsiSourceListEnumMediaDisksA: {
      parameters: ["buffer", "buffer", "i32", "u32", "u32", "pointer", "buffer", "pointer", "buffer", "pointer"],
      result: "u32",
    },
    MsiSourceListEnumMediaDisksW: {
      parameters: ["buffer", "buffer", "i32", "u32", "u32", "pointer", "buffer", "pointer", "buffer", "pointer"],
      result: "u32",
    },
    MsiGetFileVersionA: {
      parameters: ["buffer", "buffer", "pointer", "buffer", "pointer"],
      result: "u32",
    },
    MsiGetFileVersionW: {
      parameters: ["buffer", "buffer", "pointer", "buffer", "pointer"],
      result: "u32",
    },
    MsiGetFileHashA: {
      parameters: ["buffer", "u32", "pointer"],
      result: "u32",
    },
    MsiGetFileHashW: {
      parameters: ["buffer", "u32", "pointer"],
      result: "u32",
    },
    MsiGetFileSignatureInformationA: {
      parameters: ["buffer", "u32", "pointer", "pointer", "pointer"],
      result: "pointer",
    },
    MsiGetFileSignatureInformationW: {
      parameters: ["buffer", "u32", "pointer", "pointer", "pointer"],
      result: "pointer",
    },
    MsiGetShortcutTargetA: {
      parameters: ["buffer", "buffer", "buffer", "buffer"],
      result: "u32",
    },
    MsiGetShortcutTargetW: {
      parameters: ["buffer", "buffer", "buffer", "buffer"],
      result: "u32",
    },
    MsiIsProductElevatedA: {
      parameters: ["buffer", "pointer"],
      result: "u32",
    },
    MsiIsProductElevatedW: {
      parameters: ["buffer", "pointer"],
      result: "u32",
    },
    MsiNotifySidChangeA: {
      parameters: ["buffer", "buffer"],
      result: "u32",
    },
    MsiNotifySidChangeW: {
      parameters: ["buffer", "buffer"],
      result: "u32",
    },
    MsiBeginTransactionA: {
      parameters: ["buffer", "u32", "pointer", "pointer"],
      result: "u32",
    },
    MsiBeginTransactionW: {
      parameters: ["buffer", "u32", "pointer", "pointer"],
      result: "u32",
    },
    MsiEndTransaction: {
      parameters: ["u32"],
      result: "u32",
    },
    MsiJoinTransaction: {
      parameters: ["pointer", "u32", "pointer"],
      result: "u32",
    },
    MsiDatabaseOpenViewA: {
      parameters: ["pointer", "buffer", "pointer"],
      result: "u32",
    },
    MsiDatabaseOpenViewW: {
      parameters: ["pointer", "buffer", "pointer"],
      result: "u32",
    },
    MsiViewGetErrorA: {
      parameters: ["pointer", "buffer", "pointer"],
      result: "i32",
    },
    MsiViewGetErrorW: {
      parameters: ["pointer", "buffer", "pointer"],
      result: "i32",
    },
    MsiViewExecute: {
      parameters: ["pointer", "pointer"],
      result: "u32",
    },
    MsiViewFetch: {
      parameters: ["pointer", "pointer"],
      result: "u32",
    },
    MsiViewModify: {
      parameters: ["pointer", "i32", "pointer"],
      result: "u32",
    },
    MsiViewGetColumnInfo: {
      parameters: ["pointer", "i32", "pointer"],
      result: "u32",
    },
    MsiViewClose: {
      parameters: ["pointer"],
      result: "u32",
    },
    MsiDatabaseGetPrimaryKeysA: {
      parameters: ["pointer", "buffer", "pointer"],
      result: "u32",
    },
    MsiDatabaseGetPrimaryKeysW: {
      parameters: ["pointer", "buffer", "pointer"],
      result: "u32",
    },
    MsiDatabaseIsTablePersistentA: {
      parameters: ["pointer", "buffer"],
      result: "i32",
    },
    MsiDatabaseIsTablePersistentW: {
      parameters: ["pointer", "buffer"],
      result: "i32",
    },
    MsiGetSummaryInformationA: {
      parameters: ["pointer", "buffer", "u32", "pointer"],
      result: "u32",
    },
    MsiGetSummaryInformationW: {
      parameters: ["pointer", "buffer", "u32", "pointer"],
      result: "u32",
    },
    MsiSummaryInfoGetPropertyCount: {
      parameters: ["pointer", "pointer"],
      result: "u32",
    },
    MsiSummaryInfoSetPropertyA: {
      parameters: ["pointer", "u32", "u32", "i32", "pointer", "buffer"],
      result: "u32",
    },
    MsiSummaryInfoSetPropertyW: {
      parameters: ["pointer", "u32", "u32", "i32", "pointer", "buffer"],
      result: "u32",
    },
    MsiSummaryInfoGetPropertyA: {
      parameters: ["pointer", "u32", "pointer", "pointer", "pointer", "buffer", "pointer"],
      result: "u32",
    },
    MsiSummaryInfoGetPropertyW: {
      parameters: ["pointer", "u32", "pointer", "pointer", "pointer", "buffer", "pointer"],
      result: "u32",
    },
    MsiSummaryInfoPersist: {
      parameters: ["pointer"],
      result: "u32",
    },
    MsiOpenDatabaseA: {
      parameters: ["buffer", "buffer", "pointer"],
      result: "u32",
    },
    MsiOpenDatabaseW: {
      parameters: ["buffer", "buffer", "pointer"],
      result: "u32",
    },
    MsiDatabaseImportA: {
      parameters: ["pointer", "buffer", "buffer"],
      result: "u32",
    },
    MsiDatabaseImportW: {
      parameters: ["pointer", "buffer", "buffer"],
      result: "u32",
    },
    MsiDatabaseExportA: {
      parameters: ["pointer", "buffer", "buffer", "buffer"],
      result: "u32",
    },
    MsiDatabaseExportW: {
      parameters: ["pointer", "buffer", "buffer", "buffer"],
      result: "u32",
    },
    MsiDatabaseMergeA: {
      parameters: ["pointer", "pointer", "buffer"],
      result: "u32",
    },
    MsiDatabaseMergeW: {
      parameters: ["pointer", "pointer", "buffer"],
      result: "u32",
    },
    MsiDatabaseGenerateTransformA: {
      parameters: ["pointer", "pointer", "buffer", "i32", "i32"],
      result: "u32",
    },
    MsiDatabaseGenerateTransformW: {
      parameters: ["pointer", "pointer", "buffer", "i32", "i32"],
      result: "u32",
    },
    MsiDatabaseApplyTransformA: {
      parameters: ["pointer", "buffer", "i32"],
      result: "u32",
    },
    MsiDatabaseApplyTransformW: {
      parameters: ["pointer", "buffer", "i32"],
      result: "u32",
    },
    MsiCreateTransformSummaryInfoA: {
      parameters: ["pointer", "pointer", "buffer", "i32", "i32"],
      result: "u32",
    },
    MsiCreateTransformSummaryInfoW: {
      parameters: ["pointer", "pointer", "buffer", "i32", "i32"],
      result: "u32",
    },
    MsiDatabaseCommit: {
      parameters: ["pointer"],
      result: "u32",
    },
    MsiGetDatabaseState: {
      parameters: ["pointer"],
      result: "i32",
    },
    MsiCreateRecord: {
      parameters: ["u32"],
      result: "pointer",
    },
    MsiRecordIsNull: {
      parameters: ["pointer", "u32"],
      result: "i32",
    },
    MsiRecordDataSize: {
      parameters: ["pointer", "u32"],
      result: "u32",
    },
    MsiRecordSetInteger: {
      parameters: ["pointer", "u32", "i32"],
      result: "u32",
    },
    MsiRecordSetStringA: {
      parameters: ["pointer", "u32", "buffer"],
      result: "u32",
    },
    MsiRecordSetStringW: {
      parameters: ["pointer", "u32", "buffer"],
      result: "u32",
    },
    MsiRecordGetInteger: {
      parameters: ["pointer", "u32"],
      result: "i32",
    },
    MsiRecordGetStringA: {
      parameters: ["pointer", "u32", "buffer", "pointer"],
      result: "u32",
    },
    MsiRecordGetStringW: {
      parameters: ["pointer", "u32", "buffer", "pointer"],
      result: "u32",
    },
    MsiRecordGetFieldCount: {
      parameters: ["pointer"],
      result: "u32",
    },
    MsiRecordSetStreamA: {
      parameters: ["pointer", "u32", "buffer"],
      result: "u32",
    },
    MsiRecordSetStreamW: {
      parameters: ["pointer", "u32", "buffer"],
      result: "u32",
    },
    MsiRecordReadStream: {
      parameters: ["pointer", "u32", "buffer", "pointer"],
      result: "u32",
    },
    MsiRecordClearData: {
      parameters: ["pointer"],
      result: "u32",
    },
    MsiGetActiveDatabase: {
      parameters: ["pointer"],
      result: "pointer",
    },
    MsiSetPropertyA: {
      parameters: ["pointer", "buffer", "buffer"],
      result: "u32",
    },
    MsiSetPropertyW: {
      parameters: ["pointer", "buffer", "buffer"],
      result: "u32",
    },
    MsiGetPropertyA: {
      parameters: ["pointer", "buffer", "buffer", "pointer"],
      result: "u32",
    },
    MsiGetPropertyW: {
      parameters: ["pointer", "buffer", "buffer", "pointer"],
      result: "u32",
    },
    MsiGetLanguage: {
      parameters: ["pointer"],
      result: "u16",
    },
    MsiGetMode: {
      parameters: ["pointer", "i32"],
      result: "i32",
    },
    MsiSetMode: {
      parameters: ["pointer", "i32", "i32"],
      result: "u32",
    },
    MsiFormatRecordA: {
      parameters: ["pointer", "pointer", "buffer", "pointer"],
      result: "u32",
    },
    MsiFormatRecordW: {
      parameters: ["pointer", "pointer", "buffer", "pointer"],
      result: "u32",
    },
    MsiDoActionA: {
      parameters: ["pointer", "buffer"],
      result: "u32",
    },
    MsiDoActionW: {
      parameters: ["pointer", "buffer"],
      result: "u32",
    },
    MsiSequenceA: {
      parameters: ["pointer", "buffer", "i32"],
      result: "u32",
    },
    MsiSequenceW: {
      parameters: ["pointer", "buffer", "i32"],
      result: "u32",
    },
    MsiProcessMessage: {
      parameters: ["pointer", "i32", "pointer"],
      result: "i32",
    },
    MsiEvaluateConditionA: {
      parameters: ["pointer", "buffer"],
      result: "i32",
    },
    MsiEvaluateConditionW: {
      parameters: ["pointer", "buffer"],
      result: "i32",
    },
    MsiGetFeatureStateA: {
      parameters: ["pointer", "buffer", "pointer", "pointer"],
      result: "u32",
    },
    MsiGetFeatureStateW: {
      parameters: ["pointer", "buffer", "pointer", "pointer"],
      result: "u32",
    },
    MsiSetFeatureStateA: {
      parameters: ["pointer", "buffer", "i32"],
      result: "u32",
    },
    MsiSetFeatureStateW: {
      parameters: ["pointer", "buffer", "i32"],
      result: "u32",
    },
    MsiSetFeatureAttributesA: {
      parameters: ["pointer", "buffer", "u32"],
      result: "u32",
    },
    MsiSetFeatureAttributesW: {
      parameters: ["pointer", "buffer", "u32"],
      result: "u32",
    },
    MsiGetComponentStateA: {
      parameters: ["pointer", "buffer", "pointer", "pointer"],
      result: "u32",
    },
    MsiGetComponentStateW: {
      parameters: ["pointer", "buffer", "pointer", "pointer"],
      result: "u32",
    },
    MsiSetComponentStateA: {
      parameters: ["pointer", "buffer", "i32"],
      result: "u32",
    },
    MsiSetComponentStateW: {
      parameters: ["pointer", "buffer", "i32"],
      result: "u32",
    },
    MsiGetFeatureCostA: {
      parameters: ["pointer", "buffer", "i32", "i32", "pointer"],
      result: "u32",
    },
    MsiGetFeatureCostW: {
      parameters: ["pointer", "buffer", "i32", "i32", "pointer"],
      result: "u32",
    },
    MsiEnumComponentCostsA: {
      parameters: ["pointer", "buffer", "u32", "i32", "buffer", "pointer", "pointer", "pointer"],
      result: "u32",
    },
    MsiEnumComponentCostsW: {
      parameters: ["pointer", "buffer", "u32", "i32", "buffer", "pointer", "pointer", "pointer"],
      result: "u32",
    },
    MsiSetInstallLevel: {
      parameters: ["pointer", "i32"],
      result: "u32",
    },
    MsiGetFeatureValidStatesA: {
      parameters: ["pointer", "buffer", "pointer"],
      result: "u32",
    },
    MsiGetFeatureValidStatesW: {
      parameters: ["pointer", "buffer", "pointer"],
      result: "u32",
    },
    MsiGetSourcePathA: {
      parameters: ["pointer", "buffer", "buffer", "pointer"],
      result: "u32",
    },
    MsiGetSourcePathW: {
      parameters: ["pointer", "buffer", "buffer", "pointer"],
      result: "u32",
    },
    MsiGetTargetPathA: {
      parameters: ["pointer", "buffer", "buffer", "pointer"],
      result: "u32",
    },
    MsiGetTargetPathW: {
      parameters: ["pointer", "buffer", "buffer", "pointer"],
      result: "u32",
    },
    MsiSetTargetPathA: {
      parameters: ["pointer", "buffer", "buffer"],
      result: "u32",
    },
    MsiSetTargetPathW: {
      parameters: ["pointer", "buffer", "buffer"],
      result: "u32",
    },
    MsiVerifyDiskSpace: {
      parameters: ["pointer"],
      result: "u32",
    },
    MsiEnableUIPreview: {
      parameters: ["pointer", "pointer"],
      result: "u32",
    },
    MsiPreviewDialogA: {
      parameters: ["pointer", "buffer"],
      result: "u32",
    },
    MsiPreviewDialogW: {
      parameters: ["pointer", "buffer"],
      result: "u32",
    },
    MsiPreviewBillboardA: {
      parameters: ["pointer", "buffer", "buffer"],
      result: "u32",
    },
    MsiPreviewBillboardW: {
      parameters: ["pointer", "buffer", "buffer"],
      result: "u32",
    },
    MsiGetLastErrorRecord: {
      parameters: [],
      result: "pointer",
    },
  }).symbols;
} catch(e) { /* ignore */ }

try {
  var libsfc_dll = Deno.dlopen("sfc.dll", {
    SfcGetNextProtectedFile: {
      parameters: ["pointer", "pointer"],
      result: "i32",
    },
    SfcIsFileProtected: {
      parameters: ["pointer", "buffer"],
      result: "i32",
    },
    SfcIsKeyProtected: {
      parameters: ["pointer", "buffer", "u32"],
      result: "i32",
    },
    SfpVerifyFile: {
      parameters: ["buffer", "buffer", "u32"],
      result: "i32",
    },
  }).symbols;
} catch(e) { /* ignore */ }

try {
  var libmspatchc_dll = Deno.dlopen("mspatchc.dll", {
    CreatePatchFileA: {
      parameters: ["buffer", "buffer", "buffer", "u32", "pointer"],
      result: "i32",
    },
    CreatePatchFileW: {
      parameters: ["buffer", "buffer", "buffer", "u32", "pointer"],
      result: "i32",
    },
    CreatePatchFileByHandles: {
      parameters: ["pointer", "pointer", "pointer", "u32", "pointer"],
      result: "i32",
    },
    CreatePatchFileExA: {
      parameters: ["u32", "pointer", "buffer", "buffer", "u32", "pointer", "pointer", "pointer"],
      result: "i32",
    },
    CreatePatchFileExW: {
      parameters: ["u32", "pointer", "buffer", "buffer", "u32", "pointer", "pointer", "pointer"],
      result: "i32",
    },
    CreatePatchFileByHandlesEx: {
      parameters: ["u32", "pointer", "pointer", "pointer", "u32", "pointer", "pointer", "pointer"],
      result: "i32",
    },
    ExtractPatchHeaderToFileA: {
      parameters: ["buffer", "buffer"],
      result: "i32",
    },
    ExtractPatchHeaderToFileW: {
      parameters: ["buffer", "buffer"],
      result: "i32",
    },
    ExtractPatchHeaderToFileByHandles: {
      parameters: ["pointer", "pointer"],
      result: "i32",
    },
  }).symbols;
} catch(e) { /* ignore */ }

try {
  var libmspatcha_dll = Deno.dlopen("mspatcha.dll", {
    TestApplyPatchToFileA: {
      parameters: ["buffer", "buffer", "u32"],
      result: "i32",
    },
    TestApplyPatchToFileW: {
      parameters: ["buffer", "buffer", "u32"],
      result: "i32",
    },
    TestApplyPatchToFileByHandles: {
      parameters: ["pointer", "pointer", "u32"],
      result: "i32",
    },
    TestApplyPatchToFileByBuffers: {
      parameters: ["pointer", "u32", "pointer", "u32", "pointer", "u32"],
      result: "i32",
    },
    ApplyPatchToFileA: {
      parameters: ["buffer", "buffer", "buffer", "u32"],
      result: "i32",
    },
    ApplyPatchToFileW: {
      parameters: ["buffer", "buffer", "buffer", "u32"],
      result: "i32",
    },
    ApplyPatchToFileByHandles: {
      parameters: ["pointer", "pointer", "pointer", "u32"],
      result: "i32",
    },
    ApplyPatchToFileExA: {
      parameters: ["buffer", "buffer", "buffer", "u32", "pointer", "pointer"],
      result: "i32",
    },
    ApplyPatchToFileExW: {
      parameters: ["buffer", "buffer", "buffer", "u32", "pointer", "pointer"],
      result: "i32",
    },
    ApplyPatchToFileByHandlesEx: {
      parameters: ["pointer", "pointer", "pointer", "u32", "pointer", "pointer"],
      result: "i32",
    },
    ApplyPatchToFileByBuffers: {
      parameters: ["pointer", "u32", "pointer", "u32", "pointer", "u32", "pointer", "pointer", "u32", "pointer", "pointer"],
      result: "i32",
    },
    GetFilePatchSignatureA: {
      parameters: ["buffer", "u32", "pointer", "u32", "pointer", "u32", "pointer", "u32", "buffer"],
      result: "i32",
    },
    GetFilePatchSignatureW: {
      parameters: ["buffer", "u32", "pointer", "u32", "pointer", "u32", "pointer", "u32", "buffer"],
      result: "i32",
    },
    GetFilePatchSignatureByHandle: {
      parameters: ["pointer", "u32", "pointer", "u32", "pointer", "u32", "pointer", "u32", "buffer"],
      result: "i32",
    },
    GetFilePatchSignatureByBuffer: {
      parameters: ["pointer", "u32", "u32", "pointer", "u32", "pointer", "u32", "pointer", "u32", "buffer"],
      result: "i32",
    },
    NormalizeFileForPatchSignature: {
      parameters: ["pointer", "u32", "u32", "pointer", "u32", "u32", "u32", "pointer", "u32", "pointer"],
      result: "i32",
    },
  }).symbols;
} catch(e) { /* ignore */ }

try {
  var libmsdelta_dll = Deno.dlopen("msdelta.dll", {
    GetDeltaInfoB: {
      parameters: ["pointer", "pointer"],
      result: "i32",
    },
    GetDeltaInfoA: {
      parameters: ["buffer", "pointer"],
      result: "i32",
    },
    GetDeltaInfoW: {
      parameters: ["buffer", "pointer"],
      result: "i32",
    },
    ApplyDeltaGetReverseB: {
      parameters: ["i64", "pointer", "pointer", "pointer", "pointer", "pointer"],
      result: "i32",
    },
    ApplyDeltaB: {
      parameters: ["i64", "pointer", "pointer", "pointer"],
      result: "i32",
    },
    ApplyDeltaProvidedB: {
      parameters: ["i64", "pointer", "pointer", "pointer", "usize"],
      result: "i32",
    },
    ApplyDeltaA: {
      parameters: ["i64", "buffer", "buffer", "buffer"],
      result: "i32",
    },
    ApplyDeltaW: {
      parameters: ["i64", "buffer", "buffer", "buffer"],
      result: "i32",
    },
    CreateDeltaB: {
      parameters: ["i64", "i64", "i64", "pointer", "pointer", "pointer", "pointer", "pointer", "pointer", "u32", "pointer"],
      result: "i32",
    },
    CreateDeltaA: {
      parameters: ["i64", "i64", "i64", "buffer", "buffer", "buffer", "buffer", "pointer", "pointer", "u32", "buffer"],
      result: "i32",
    },
    CreateDeltaW: {
      parameters: ["i64", "i64", "i64", "buffer", "buffer", "buffer", "buffer", "pointer", "pointer", "u32", "buffer"],
      result: "i32",
    },
    GetDeltaSignatureB: {
      parameters: ["i64", "u32", "pointer", "pointer"],
      result: "i32",
    },
    GetDeltaSignatureA: {
      parameters: ["i64", "u32", "buffer", "pointer"],
      result: "i32",
    },
    GetDeltaSignatureW: {
      parameters: ["i64", "u32", "buffer", "pointer"],
      result: "i32",
    },
    DeltaNormalizeProvidedB: {
      parameters: ["i64", "i64", "pointer", "pointer", "usize"],
      result: "i32",
    },
    DeltaFree: {
      parameters: ["pointer"],
      result: "i32",
    },
  }).symbols;
} catch(e) { /* ignore */ }

try {
  var libKERNEL32_dll = Deno.dlopen("KERNEL32.dll", {
    CreateActCtxA: {
      parameters: ["pointer"],
      result: "pointer",
    },
    CreateActCtxW: {
      parameters: ["pointer"],
      result: "pointer",
    },
    AddRefActCtx: {
      parameters: ["pointer"],
      result: "void",
    },
    ReleaseActCtx: {
      parameters: ["pointer"],
      result: "void",
    },
    ZombifyActCtx: {
      parameters: ["pointer"],
      result: "i32",
    },
    ActivateActCtx: {
      parameters: ["pointer", "pointer"],
      result: "i32",
    },
    DeactivateActCtx: {
      parameters: ["u32", "usize"],
      result: "i32",
    },
    GetCurrentActCtx: {
      parameters: ["pointer"],
      result: "i32",
    },
    FindActCtxSectionStringA: {
      parameters: ["u32", "pointer", "u32", "buffer", "pointer"],
      result: "i32",
    },
    FindActCtxSectionStringW: {
      parameters: ["u32", "pointer", "u32", "buffer", "pointer"],
      result: "i32",
    },
    FindActCtxSectionGuid: {
      parameters: ["u32", "pointer", "u32", "pointer", "pointer"],
      result: "i32",
    },
    QueryActCtxW: {
      parameters: ["u32", "pointer", "pointer", "u32", "pointer", "usize", "pointer"],
      result: "i32",
    },
    QueryActCtxSettingsW: {
      parameters: ["u32", "pointer", "buffer", "buffer", "buffer", "usize", "pointer"],
      result: "i32",
    },
  }).symbols;
} catch(e) { /* ignore */ }

// Symbols

export function MsiCloseHandle(
  hAny: Uint8Array | Deno.PointerValue | null /* Windows.Win32.System.ApplicationInstallationAndServicing.MSIHANDLE */,
): number /* u32 */ {
  return libmsi_dll.MsiCloseHandle(util.toPointer(hAny));
}

export function MsiCloseAllHandles(): number /* u32 */ {
  return libmsi_dll.MsiCloseAllHandles();
}

export function MsiSetInternalUI(
  dwUILevel: INSTALLUILEVEL /* Windows.Win32.System.ApplicationInstallationAndServicing.INSTALLUILEVEL */,
  phWnd: Deno.PointerValue | Uint8Array | null /* ptr */,
): INSTALLUILEVEL /* Windows.Win32.System.ApplicationInstallationAndServicing.INSTALLUILEVEL */ {
  return libmsi_dll.MsiSetInternalUI(dwUILevel, util.toPointer(phWnd));
}

export function MsiSetExternalUIA(
  puiHandler: Uint8Array | Deno.PointerValue | null /* Windows.Win32.System.ApplicationInstallationAndServicing.INSTALLUI_HANDLERA */,
  dwMessageFilter: number /* u32 */,
  pvContext: Deno.PointerValue | Uint8Array | null /* ptr */,
): Deno.PointerValue | null /* Windows.Win32.System.ApplicationInstallationAndServicing.INSTALLUI_HANDLERA */ {
  return util.pointerFromFfi(libmsi_dll.MsiSetExternalUIA(util.toPointer(puiHandler), dwMessageFilter, util.toPointer(pvContext)));
}

export function MsiSetExternalUIW(
  puiHandler: Uint8Array | Deno.PointerValue | null /* Windows.Win32.System.ApplicationInstallationAndServicing.INSTALLUI_HANDLERW */,
  dwMessageFilter: number /* u32 */,
  pvContext: Deno.PointerValue | Uint8Array | null /* ptr */,
): Deno.PointerValue | null /* Windows.Win32.System.ApplicationInstallationAndServicing.INSTALLUI_HANDLERW */ {
  return util.pointerFromFfi(libmsi_dll.MsiSetExternalUIW(util.toPointer(puiHandler), dwMessageFilter, util.toPointer(pvContext)));
}

export function MsiSetExternalUIRecord(
  puiHandler: Uint8Array | Deno.PointerValue | null /* Windows.Win32.System.ApplicationInstallationAndServicing.PINSTALLUI_HANDLER_RECORD */,
  dwMessageFilter: number /* u32 */,
  pvContext: Deno.PointerValue | Uint8Array | null /* ptr */,
  ppuiPrevHandler: Uint8Array | Deno.PointerValue | null /* Windows.Win32.System.ApplicationInstallationAndServicing.PINSTALLUI_HANDLER_RECORD */,
): number /* u32 */ {
  return libmsi_dll.MsiSetExternalUIRecord(util.toPointer(puiHandler), dwMessageFilter, util.toPointer(pvContext), util.toPointer(ppuiPrevHandler));
}

export function MsiEnableLogA(
  dwLogMode: INSTALLLOGMODE /* Windows.Win32.System.ApplicationInstallationAndServicing.INSTALLLOGMODE */,
  szLogFile: string | null /* Windows.Win32.Foundation.PSTR */,
  dwLogAttributes: number /* u32 */,
): number /* u32 */ {
  return libmsi_dll.MsiEnableLogA(dwLogMode, util.pstrToFfi(szLogFile), dwLogAttributes);
}

export function MsiEnableLogW(
  dwLogMode: INSTALLLOGMODE /* Windows.Win32.System.ApplicationInstallationAndServicing.INSTALLLOGMODE */,
  szLogFile: string | null /* Windows.Win32.Foundation.PWSTR */,
  dwLogAttributes: number /* u32 */,
): number /* u32 */ {
  return libmsi_dll.MsiEnableLogW(dwLogMode, util.pwstrToFfi(szLogFile), dwLogAttributes);
}

export function MsiQueryProductStateA(
  szProduct: string | null /* Windows.Win32.Foundation.PSTR */,
): INSTALLSTATE /* Windows.Win32.System.ApplicationInstallationAndServicing.INSTALLSTATE */ {
  return libmsi_dll.MsiQueryProductStateA(util.pstrToFfi(szProduct));
}

export function MsiQueryProductStateW(
  szProduct: string | null /* Windows.Win32.Foundation.PWSTR */,
): INSTALLSTATE /* Windows.Win32.System.ApplicationInstallationAndServicing.INSTALLSTATE */ {
  return libmsi_dll.MsiQueryProductStateW(util.pwstrToFfi(szProduct));
}

export function MsiGetProductInfoA(
  szProduct: string | null /* Windows.Win32.Foundation.PSTR */,
  szAttribute: string | null /* Windows.Win32.Foundation.PSTR */,
  lpValueBuf: string | null /* Windows.Win32.Foundation.PSTR */,
  pcchValueBuf: Deno.PointerValue | Uint8Array | null /* ptr */,
): number /* u32 */ {
  return libmsi_dll.MsiGetProductInfoA(util.pstrToFfi(szProduct), util.pstrToFfi(szAttribute), util.pstrToFfi(lpValueBuf), util.toPointer(pcchValueBuf));
}

export function MsiGetProductInfoW(
  szProduct: string | null /* Windows.Win32.Foundation.PWSTR */,
  szAttribute: string | null /* Windows.Win32.Foundation.PWSTR */,
  lpValueBuf: string | null /* Windows.Win32.Foundation.PWSTR */,
  pcchValueBuf: Deno.PointerValue | Uint8Array | null /* ptr */,
): number /* u32 */ {
  return libmsi_dll.MsiGetProductInfoW(util.pwstrToFfi(szProduct), util.pwstrToFfi(szAttribute), util.pwstrToFfi(lpValueBuf), util.toPointer(pcchValueBuf));
}

export function MsiGetProductInfoExA(
  szProductCode: string | null /* Windows.Win32.Foundation.PSTR */,
  szUserSid: string | null /* Windows.Win32.Foundation.PSTR */,
  dwContext: MSIINSTALLCONTEXT /* Windows.Win32.System.ApplicationInstallationAndServicing.MSIINSTALLCONTEXT */,
  szProperty: string | null /* Windows.Win32.Foundation.PSTR */,
  szValue: string | null /* Windows.Win32.Foundation.PSTR */,
  pcchValue: Deno.PointerValue | Uint8Array | null /* ptr */,
): number /* u32 */ {
  return libmsi_dll.MsiGetProductInfoExA(util.pstrToFfi(szProductCode), util.pstrToFfi(szUserSid), dwContext, util.pstrToFfi(szProperty), util.pstrToFfi(szValue), util.toPointer(pcchValue));
}

export function MsiGetProductInfoExW(
  szProductCode: string | null /* Windows.Win32.Foundation.PWSTR */,
  szUserSid: string | null /* Windows.Win32.Foundation.PWSTR */,
  dwContext: MSIINSTALLCONTEXT /* Windows.Win32.System.ApplicationInstallationAndServicing.MSIINSTALLCONTEXT */,
  szProperty: string | null /* Windows.Win32.Foundation.PWSTR */,
  szValue: string | null /* Windows.Win32.Foundation.PWSTR */,
  pcchValue: Deno.PointerValue | Uint8Array | null /* ptr */,
): number /* u32 */ {
  return libmsi_dll.MsiGetProductInfoExW(util.pwstrToFfi(szProductCode), util.pwstrToFfi(szUserSid), dwContext, util.pwstrToFfi(szProperty), util.pwstrToFfi(szValue), util.toPointer(pcchValue));
}

export function MsiInstallProductA(
  szPackagePath: string | null /* Windows.Win32.Foundation.PSTR */,
  szCommandLine: string | null /* Windows.Win32.Foundation.PSTR */,
): number /* u32 */ {
  return libmsi_dll.MsiInstallProductA(util.pstrToFfi(szPackagePath), util.pstrToFfi(szCommandLine));
}

export function MsiInstallProductW(
  szPackagePath: string | null /* Windows.Win32.Foundation.PWSTR */,
  szCommandLine: string | null /* Windows.Win32.Foundation.PWSTR */,
): number /* u32 */ {
  return libmsi_dll.MsiInstallProductW(util.pwstrToFfi(szPackagePath), util.pwstrToFfi(szCommandLine));
}

export function MsiConfigureProductA(
  szProduct: string | null /* Windows.Win32.Foundation.PSTR */,
  iInstallLevel: INSTALLLEVEL /* Windows.Win32.System.ApplicationInstallationAndServicing.INSTALLLEVEL */,
  eInstallState: INSTALLSTATE /* Windows.Win32.System.ApplicationInstallationAndServicing.INSTALLSTATE */,
): number /* u32 */ {
  return libmsi_dll.MsiConfigureProductA(util.pstrToFfi(szProduct), iInstallLevel, eInstallState);
}

export function MsiConfigureProductW(
  szProduct: string | null /* Windows.Win32.Foundation.PWSTR */,
  iInstallLevel: INSTALLLEVEL /* Windows.Win32.System.ApplicationInstallationAndServicing.INSTALLLEVEL */,
  eInstallState: INSTALLSTATE /* Windows.Win32.System.ApplicationInstallationAndServicing.INSTALLSTATE */,
): number /* u32 */ {
  return libmsi_dll.MsiConfigureProductW(util.pwstrToFfi(szProduct), iInstallLevel, eInstallState);
}

export function MsiConfigureProductExA(
  szProduct: string | null /* Windows.Win32.Foundation.PSTR */,
  iInstallLevel: INSTALLLEVEL /* Windows.Win32.System.ApplicationInstallationAndServicing.INSTALLLEVEL */,
  eInstallState: INSTALLSTATE /* Windows.Win32.System.ApplicationInstallationAndServicing.INSTALLSTATE */,
  szCommandLine: string | null /* Windows.Win32.Foundation.PSTR */,
): number /* u32 */ {
  return libmsi_dll.MsiConfigureProductExA(util.pstrToFfi(szProduct), iInstallLevel, eInstallState, util.pstrToFfi(szCommandLine));
}

export function MsiConfigureProductExW(
  szProduct: string | null /* Windows.Win32.Foundation.PWSTR */,
  iInstallLevel: INSTALLLEVEL /* Windows.Win32.System.ApplicationInstallationAndServicing.INSTALLLEVEL */,
  eInstallState: INSTALLSTATE /* Windows.Win32.System.ApplicationInstallationAndServicing.INSTALLSTATE */,
  szCommandLine: string | null /* Windows.Win32.Foundation.PWSTR */,
): number /* u32 */ {
  return libmsi_dll.MsiConfigureProductExW(util.pwstrToFfi(szProduct), iInstallLevel, eInstallState, util.pwstrToFfi(szCommandLine));
}

export function MsiReinstallProductA(
  szProduct: string | null /* Windows.Win32.Foundation.PSTR */,
  szReinstallMode: REINSTALLMODE /* Windows.Win32.System.ApplicationInstallationAndServicing.REINSTALLMODE */,
): number /* u32 */ {
  return libmsi_dll.MsiReinstallProductA(util.pstrToFfi(szProduct), szReinstallMode);
}

export function MsiReinstallProductW(
  szProduct: string | null /* Windows.Win32.Foundation.PWSTR */,
  szReinstallMode: REINSTALLMODE /* Windows.Win32.System.ApplicationInstallationAndServicing.REINSTALLMODE */,
): number /* u32 */ {
  return libmsi_dll.MsiReinstallProductW(util.pwstrToFfi(szProduct), szReinstallMode);
}

export function MsiAdvertiseProductExA(
  szPackagePath: string | null /* Windows.Win32.Foundation.PSTR */,
  szScriptfilePath: string | null /* Windows.Win32.Foundation.PSTR */,
  szTransforms: string | null /* Windows.Win32.Foundation.PSTR */,
  lgidLanguage: number /* u16 */,
  dwPlatform: number /* u32 */,
  dwOptions: number /* u32 */,
): number /* u32 */ {
  return libmsi_dll.MsiAdvertiseProductExA(util.pstrToFfi(szPackagePath), util.pstrToFfi(szScriptfilePath), util.pstrToFfi(szTransforms), lgidLanguage, dwPlatform, dwOptions);
}

export function MsiAdvertiseProductExW(
  szPackagePath: string | null /* Windows.Win32.Foundation.PWSTR */,
  szScriptfilePath: string | null /* Windows.Win32.Foundation.PWSTR */,
  szTransforms: string | null /* Windows.Win32.Foundation.PWSTR */,
  lgidLanguage: number /* u16 */,
  dwPlatform: number /* u32 */,
  dwOptions: number /* u32 */,
): number /* u32 */ {
  return libmsi_dll.MsiAdvertiseProductExW(util.pwstrToFfi(szPackagePath), util.pwstrToFfi(szScriptfilePath), util.pwstrToFfi(szTransforms), lgidLanguage, dwPlatform, dwOptions);
}

export function MsiAdvertiseProductA(
  szPackagePath: string | null /* Windows.Win32.Foundation.PSTR */,
  szScriptfilePath: string | null /* Windows.Win32.Foundation.PSTR */,
  szTransforms: string | null /* Windows.Win32.Foundation.PSTR */,
  lgidLanguage: number /* u16 */,
): number /* u32 */ {
  return libmsi_dll.MsiAdvertiseProductA(util.pstrToFfi(szPackagePath), util.pstrToFfi(szScriptfilePath), util.pstrToFfi(szTransforms), lgidLanguage);
}

export function MsiAdvertiseProductW(
  szPackagePath: string | null /* Windows.Win32.Foundation.PWSTR */,
  szScriptfilePath: string | null /* Windows.Win32.Foundation.PWSTR */,
  szTransforms: string | null /* Windows.Win32.Foundation.PWSTR */,
  lgidLanguage: number /* u16 */,
): number /* u32 */ {
  return libmsi_dll.MsiAdvertiseProductW(util.pwstrToFfi(szPackagePath), util.pwstrToFfi(szScriptfilePath), util.pwstrToFfi(szTransforms), lgidLanguage);
}

export function MsiProcessAdvertiseScriptA(
  szScriptFile: string | null /* Windows.Win32.Foundation.PSTR */,
  szIconFolder: string | null /* Windows.Win32.Foundation.PSTR */,
  hRegData: Uint8Array | Deno.PointerValue | null /* Windows.Win32.System.Registry.HKEY */,
  fShortcuts: boolean /* Windows.Win32.Foundation.BOOL */,
  fRemoveItems: boolean /* Windows.Win32.Foundation.BOOL */,
): number /* u32 */ {
  return libmsi_dll.MsiProcessAdvertiseScriptA(util.pstrToFfi(szScriptFile), util.pstrToFfi(szIconFolder), util.toPointer(hRegData), util.boolToFfi(fShortcuts), util.boolToFfi(fRemoveItems));
}

export function MsiProcessAdvertiseScriptW(
  szScriptFile: string | null /* Windows.Win32.Foundation.PWSTR */,
  szIconFolder: string | null /* Windows.Win32.Foundation.PWSTR */,
  hRegData: Uint8Array | Deno.PointerValue | null /* Windows.Win32.System.Registry.HKEY */,
  fShortcuts: boolean /* Windows.Win32.Foundation.BOOL */,
  fRemoveItems: boolean /* Windows.Win32.Foundation.BOOL */,
): number /* u32 */ {
  return libmsi_dll.MsiProcessAdvertiseScriptW(util.pwstrToFfi(szScriptFile), util.pwstrToFfi(szIconFolder), util.toPointer(hRegData), util.boolToFfi(fShortcuts), util.boolToFfi(fRemoveItems));
}

export function MsiAdvertiseScriptA(
  szScriptFile: string | null /* Windows.Win32.Foundation.PSTR */,
  dwFlags: number /* u32 */,
  phRegData: Deno.PointerValue | Uint8Array | null /* ptr */,
  fRemoveItems: boolean /* Windows.Win32.Foundation.BOOL */,
): number /* u32 */ {
  return libmsi_dll.MsiAdvertiseScriptA(util.pstrToFfi(szScriptFile), dwFlags, util.toPointer(phRegData), util.boolToFfi(fRemoveItems));
}

export function MsiAdvertiseScriptW(
  szScriptFile: string | null /* Windows.Win32.Foundation.PWSTR */,
  dwFlags: number /* u32 */,
  phRegData: Deno.PointerValue | Uint8Array | null /* ptr */,
  fRemoveItems: boolean /* Windows.Win32.Foundation.BOOL */,
): number /* u32 */ {
  return libmsi_dll.MsiAdvertiseScriptW(util.pwstrToFfi(szScriptFile), dwFlags, util.toPointer(phRegData), util.boolToFfi(fRemoveItems));
}

export function MsiGetProductInfoFromScriptA(
  szScriptFile: string | null /* Windows.Win32.Foundation.PSTR */,
  lpProductBuf39: string | null /* Windows.Win32.Foundation.PSTR */,
  plgidLanguage: Deno.PointerValue | Uint8Array | null /* ptr */,
  pdwVersion: Deno.PointerValue | Uint8Array | null /* ptr */,
  lpNameBuf: string | null /* Windows.Win32.Foundation.PSTR */,
  pcchNameBuf: Deno.PointerValue | Uint8Array | null /* ptr */,
  lpPackageBuf: string | null /* Windows.Win32.Foundation.PSTR */,
  pcchPackageBuf: Deno.PointerValue | Uint8Array | null /* ptr */,
): number /* u32 */ {
  return libmsi_dll.MsiGetProductInfoFromScriptA(util.pstrToFfi(szScriptFile), util.pstrToFfi(lpProductBuf39), util.toPointer(plgidLanguage), util.toPointer(pdwVersion), util.pstrToFfi(lpNameBuf), util.toPointer(pcchNameBuf), util.pstrToFfi(lpPackageBuf), util.toPointer(pcchPackageBuf));
}

export function MsiGetProductInfoFromScriptW(
  szScriptFile: string | null /* Windows.Win32.Foundation.PWSTR */,
  lpProductBuf39: string | null /* Windows.Win32.Foundation.PWSTR */,
  plgidLanguage: Deno.PointerValue | Uint8Array | null /* ptr */,
  pdwVersion: Deno.PointerValue | Uint8Array | null /* ptr */,
  lpNameBuf: string | null /* Windows.Win32.Foundation.PWSTR */,
  pcchNameBuf: Deno.PointerValue | Uint8Array | null /* ptr */,
  lpPackageBuf: string | null /* Windows.Win32.Foundation.PWSTR */,
  pcchPackageBuf: Deno.PointerValue | Uint8Array | null /* ptr */,
): number /* u32 */ {
  return libmsi_dll.MsiGetProductInfoFromScriptW(util.pwstrToFfi(szScriptFile), util.pwstrToFfi(lpProductBuf39), util.toPointer(plgidLanguage), util.toPointer(pdwVersion), util.pwstrToFfi(lpNameBuf), util.toPointer(pcchNameBuf), util.pwstrToFfi(lpPackageBuf), util.toPointer(pcchPackageBuf));
}

export function MsiGetProductCodeA(
  szComponent: string | null /* Windows.Win32.Foundation.PSTR */,
  lpBuf39: string | null /* Windows.Win32.Foundation.PSTR */,
): number /* u32 */ {
  return libmsi_dll.MsiGetProductCodeA(util.pstrToFfi(szComponent), util.pstrToFfi(lpBuf39));
}

export function MsiGetProductCodeW(
  szComponent: string | null /* Windows.Win32.Foundation.PWSTR */,
  lpBuf39: string | null /* Windows.Win32.Foundation.PWSTR */,
): number /* u32 */ {
  return libmsi_dll.MsiGetProductCodeW(util.pwstrToFfi(szComponent), util.pwstrToFfi(lpBuf39));
}

export function MsiGetUserInfoA(
  szProduct: string | null /* Windows.Win32.Foundation.PSTR */,
  lpUserNameBuf: string | null /* Windows.Win32.Foundation.PSTR */,
  pcchUserNameBuf: Deno.PointerValue | Uint8Array | null /* ptr */,
  lpOrgNameBuf: string | null /* Windows.Win32.Foundation.PSTR */,
  pcchOrgNameBuf: Deno.PointerValue | Uint8Array | null /* ptr */,
  lpSerialBuf: string | null /* Windows.Win32.Foundation.PSTR */,
  pcchSerialBuf: Deno.PointerValue | Uint8Array | null /* ptr */,
): USERINFOSTATE /* Windows.Win32.System.ApplicationInstallationAndServicing.USERINFOSTATE */ {
  return libmsi_dll.MsiGetUserInfoA(util.pstrToFfi(szProduct), util.pstrToFfi(lpUserNameBuf), util.toPointer(pcchUserNameBuf), util.pstrToFfi(lpOrgNameBuf), util.toPointer(pcchOrgNameBuf), util.pstrToFfi(lpSerialBuf), util.toPointer(pcchSerialBuf));
}

export function MsiGetUserInfoW(
  szProduct: string | null /* Windows.Win32.Foundation.PWSTR */,
  lpUserNameBuf: string | null /* Windows.Win32.Foundation.PWSTR */,
  pcchUserNameBuf: Deno.PointerValue | Uint8Array | null /* ptr */,
  lpOrgNameBuf: string | null /* Windows.Win32.Foundation.PWSTR */,
  pcchOrgNameBuf: Deno.PointerValue | Uint8Array | null /* ptr */,
  lpSerialBuf: string | null /* Windows.Win32.Foundation.PWSTR */,
  pcchSerialBuf: Deno.PointerValue | Uint8Array | null /* ptr */,
): USERINFOSTATE /* Windows.Win32.System.ApplicationInstallationAndServicing.USERINFOSTATE */ {
  return libmsi_dll.MsiGetUserInfoW(util.pwstrToFfi(szProduct), util.pwstrToFfi(lpUserNameBuf), util.toPointer(pcchUserNameBuf), util.pwstrToFfi(lpOrgNameBuf), util.toPointer(pcchOrgNameBuf), util.pwstrToFfi(lpSerialBuf), util.toPointer(pcchSerialBuf));
}

export function MsiCollectUserInfoA(
  szProduct: string | null /* Windows.Win32.Foundation.PSTR */,
): number /* u32 */ {
  return libmsi_dll.MsiCollectUserInfoA(util.pstrToFfi(szProduct));
}

export function MsiCollectUserInfoW(
  szProduct: string | null /* Windows.Win32.Foundation.PWSTR */,
): number /* u32 */ {
  return libmsi_dll.MsiCollectUserInfoW(util.pwstrToFfi(szProduct));
}

export function MsiApplyPatchA(
  szPatchPackage: string | null /* Windows.Win32.Foundation.PSTR */,
  szInstallPackage: string | null /* Windows.Win32.Foundation.PSTR */,
  eInstallType: INSTALLTYPE /* Windows.Win32.System.ApplicationInstallationAndServicing.INSTALLTYPE */,
  szCommandLine: string | null /* Windows.Win32.Foundation.PSTR */,
): number /* u32 */ {
  return libmsi_dll.MsiApplyPatchA(util.pstrToFfi(szPatchPackage), util.pstrToFfi(szInstallPackage), eInstallType, util.pstrToFfi(szCommandLine));
}

export function MsiApplyPatchW(
  szPatchPackage: string | null /* Windows.Win32.Foundation.PWSTR */,
  szInstallPackage: string | null /* Windows.Win32.Foundation.PWSTR */,
  eInstallType: INSTALLTYPE /* Windows.Win32.System.ApplicationInstallationAndServicing.INSTALLTYPE */,
  szCommandLine: string | null /* Windows.Win32.Foundation.PWSTR */,
): number /* u32 */ {
  return libmsi_dll.MsiApplyPatchW(util.pwstrToFfi(szPatchPackage), util.pwstrToFfi(szInstallPackage), eInstallType, util.pwstrToFfi(szCommandLine));
}

export function MsiGetPatchInfoA(
  szPatch: string | null /* Windows.Win32.Foundation.PSTR */,
  szAttribute: string | null /* Windows.Win32.Foundation.PSTR */,
  lpValueBuf: string | null /* Windows.Win32.Foundation.PSTR */,
  pcchValueBuf: Deno.PointerValue | Uint8Array | null /* ptr */,
): number /* u32 */ {
  return libmsi_dll.MsiGetPatchInfoA(util.pstrToFfi(szPatch), util.pstrToFfi(szAttribute), util.pstrToFfi(lpValueBuf), util.toPointer(pcchValueBuf));
}

export function MsiGetPatchInfoW(
  szPatch: string | null /* Windows.Win32.Foundation.PWSTR */,
  szAttribute: string | null /* Windows.Win32.Foundation.PWSTR */,
  lpValueBuf: string | null /* Windows.Win32.Foundation.PWSTR */,
  pcchValueBuf: Deno.PointerValue | Uint8Array | null /* ptr */,
): number /* u32 */ {
  return libmsi_dll.MsiGetPatchInfoW(util.pwstrToFfi(szPatch), util.pwstrToFfi(szAttribute), util.pwstrToFfi(lpValueBuf), util.toPointer(pcchValueBuf));
}

export function MsiEnumPatchesA(
  szProduct: string | null /* Windows.Win32.Foundation.PSTR */,
  iPatchIndex: number /* u32 */,
  lpPatchBuf: string | null /* Windows.Win32.Foundation.PSTR */,
  lpTransformsBuf: string | null /* Windows.Win32.Foundation.PSTR */,
  pcchTransformsBuf: Deno.PointerValue | Uint8Array | null /* ptr */,
): number /* u32 */ {
  return libmsi_dll.MsiEnumPatchesA(util.pstrToFfi(szProduct), iPatchIndex, util.pstrToFfi(lpPatchBuf), util.pstrToFfi(lpTransformsBuf), util.toPointer(pcchTransformsBuf));
}

export function MsiEnumPatchesW(
  szProduct: string | null /* Windows.Win32.Foundation.PWSTR */,
  iPatchIndex: number /* u32 */,
  lpPatchBuf: string | null /* Windows.Win32.Foundation.PWSTR */,
  lpTransformsBuf: string | null /* Windows.Win32.Foundation.PWSTR */,
  pcchTransformsBuf: Deno.PointerValue | Uint8Array | null /* ptr */,
): number /* u32 */ {
  return libmsi_dll.MsiEnumPatchesW(util.pwstrToFfi(szProduct), iPatchIndex, util.pwstrToFfi(lpPatchBuf), util.pwstrToFfi(lpTransformsBuf), util.toPointer(pcchTransformsBuf));
}

export function MsiRemovePatchesA(
  szPatchList: string | null /* Windows.Win32.Foundation.PSTR */,
  szProductCode: string | null /* Windows.Win32.Foundation.PSTR */,
  eUninstallType: INSTALLTYPE /* Windows.Win32.System.ApplicationInstallationAndServicing.INSTALLTYPE */,
  szPropertyList: string | null /* Windows.Win32.Foundation.PSTR */,
): number /* u32 */ {
  return libmsi_dll.MsiRemovePatchesA(util.pstrToFfi(szPatchList), util.pstrToFfi(szProductCode), eUninstallType, util.pstrToFfi(szPropertyList));
}

export function MsiRemovePatchesW(
  szPatchList: string | null /* Windows.Win32.Foundation.PWSTR */,
  szProductCode: string | null /* Windows.Win32.Foundation.PWSTR */,
  eUninstallType: INSTALLTYPE /* Windows.Win32.System.ApplicationInstallationAndServicing.INSTALLTYPE */,
  szPropertyList: string | null /* Windows.Win32.Foundation.PWSTR */,
): number /* u32 */ {
  return libmsi_dll.MsiRemovePatchesW(util.pwstrToFfi(szPatchList), util.pwstrToFfi(szProductCode), eUninstallType, util.pwstrToFfi(szPropertyList));
}

export function MsiExtractPatchXMLDataA(
  szPatchPath: string | null /* Windows.Win32.Foundation.PSTR */,
  dwReserved: number /* u32 */,
  szXMLData: string | null /* Windows.Win32.Foundation.PSTR */,
  pcchXMLData: Deno.PointerValue | Uint8Array | null /* ptr */,
): number /* u32 */ {
  return libmsi_dll.MsiExtractPatchXMLDataA(util.pstrToFfi(szPatchPath), dwReserved, util.pstrToFfi(szXMLData), util.toPointer(pcchXMLData));
}

export function MsiExtractPatchXMLDataW(
  szPatchPath: string | null /* Windows.Win32.Foundation.PWSTR */,
  dwReserved: number /* u32 */,
  szXMLData: string | null /* Windows.Win32.Foundation.PWSTR */,
  pcchXMLData: Deno.PointerValue | Uint8Array | null /* ptr */,
): number /* u32 */ {
  return libmsi_dll.MsiExtractPatchXMLDataW(util.pwstrToFfi(szPatchPath), dwReserved, util.pwstrToFfi(szXMLData), util.toPointer(pcchXMLData));
}

export function MsiGetPatchInfoExA(
  szPatchCode: string | null /* Windows.Win32.Foundation.PSTR */,
  szProductCode: string | null /* Windows.Win32.Foundation.PSTR */,
  szUserSid: string | null /* Windows.Win32.Foundation.PSTR */,
  dwContext: MSIINSTALLCONTEXT /* Windows.Win32.System.ApplicationInstallationAndServicing.MSIINSTALLCONTEXT */,
  szProperty: string | null /* Windows.Win32.Foundation.PSTR */,
  lpValue: string | null /* Windows.Win32.Foundation.PSTR */,
  pcchValue: Deno.PointerValue | Uint8Array | null /* ptr */,
): number /* u32 */ {
  return libmsi_dll.MsiGetPatchInfoExA(util.pstrToFfi(szPatchCode), util.pstrToFfi(szProductCode), util.pstrToFfi(szUserSid), dwContext, util.pstrToFfi(szProperty), util.pstrToFfi(lpValue), util.toPointer(pcchValue));
}

export function MsiGetPatchInfoExW(
  szPatchCode: string | null /* Windows.Win32.Foundation.PWSTR */,
  szProductCode: string | null /* Windows.Win32.Foundation.PWSTR */,
  szUserSid: string | null /* Windows.Win32.Foundation.PWSTR */,
  dwContext: MSIINSTALLCONTEXT /* Windows.Win32.System.ApplicationInstallationAndServicing.MSIINSTALLCONTEXT */,
  szProperty: string | null /* Windows.Win32.Foundation.PWSTR */,
  lpValue: string | null /* Windows.Win32.Foundation.PWSTR */,
  pcchValue: Deno.PointerValue | Uint8Array | null /* ptr */,
): number /* u32 */ {
  return libmsi_dll.MsiGetPatchInfoExW(util.pwstrToFfi(szPatchCode), util.pwstrToFfi(szProductCode), util.pwstrToFfi(szUserSid), dwContext, util.pwstrToFfi(szProperty), util.pwstrToFfi(lpValue), util.toPointer(pcchValue));
}

export function MsiApplyMultiplePatchesA(
  szPatchPackages: string | null /* Windows.Win32.Foundation.PSTR */,
  szProductCode: string | null /* Windows.Win32.Foundation.PSTR */,
  szPropertiesList: string | null /* Windows.Win32.Foundation.PSTR */,
): number /* u32 */ {
  return libmsi_dll.MsiApplyMultiplePatchesA(util.pstrToFfi(szPatchPackages), util.pstrToFfi(szProductCode), util.pstrToFfi(szPropertiesList));
}

export function MsiApplyMultiplePatchesW(
  szPatchPackages: string | null /* Windows.Win32.Foundation.PWSTR */,
  szProductCode: string | null /* Windows.Win32.Foundation.PWSTR */,
  szPropertiesList: string | null /* Windows.Win32.Foundation.PWSTR */,
): number /* u32 */ {
  return libmsi_dll.MsiApplyMultiplePatchesW(util.pwstrToFfi(szPatchPackages), util.pwstrToFfi(szProductCode), util.pwstrToFfi(szPropertiesList));
}

export function MsiDeterminePatchSequenceA(
  szProductCode: string | null /* Windows.Win32.Foundation.PSTR */,
  szUserSid: string | null /* Windows.Win32.Foundation.PSTR */,
  dwContext: MSIINSTALLCONTEXT /* Windows.Win32.System.ApplicationInstallationAndServicing.MSIINSTALLCONTEXT */,
  cPatchInfo: number /* u32 */,
  pPatchInfo: Deno.PointerValue | Uint8Array | null /* ptr */,
): number /* u32 */ {
  return libmsi_dll.MsiDeterminePatchSequenceA(util.pstrToFfi(szProductCode), util.pstrToFfi(szUserSid), dwContext, cPatchInfo, util.toPointer(pPatchInfo));
}

export function MsiDeterminePatchSequenceW(
  szProductCode: string | null /* Windows.Win32.Foundation.PWSTR */,
  szUserSid: string | null /* Windows.Win32.Foundation.PWSTR */,
  dwContext: MSIINSTALLCONTEXT /* Windows.Win32.System.ApplicationInstallationAndServicing.MSIINSTALLCONTEXT */,
  cPatchInfo: number /* u32 */,
  pPatchInfo: Deno.PointerValue | Uint8Array | null /* ptr */,
): number /* u32 */ {
  return libmsi_dll.MsiDeterminePatchSequenceW(util.pwstrToFfi(szProductCode), util.pwstrToFfi(szUserSid), dwContext, cPatchInfo, util.toPointer(pPatchInfo));
}

export function MsiDetermineApplicablePatchesA(
  szProductPackagePath: string | null /* Windows.Win32.Foundation.PSTR */,
  cPatchInfo: number /* u32 */,
  pPatchInfo: Deno.PointerValue | Uint8Array | null /* ptr */,
): number /* u32 */ {
  return libmsi_dll.MsiDetermineApplicablePatchesA(util.pstrToFfi(szProductPackagePath), cPatchInfo, util.toPointer(pPatchInfo));
}

export function MsiDetermineApplicablePatchesW(
  szProductPackagePath: string | null /* Windows.Win32.Foundation.PWSTR */,
  cPatchInfo: number /* u32 */,
  pPatchInfo: Deno.PointerValue | Uint8Array | null /* ptr */,
): number /* u32 */ {
  return libmsi_dll.MsiDetermineApplicablePatchesW(util.pwstrToFfi(szProductPackagePath), cPatchInfo, util.toPointer(pPatchInfo));
}

export function MsiEnumPatchesExA(
  szProductCode: string | null /* Windows.Win32.Foundation.PSTR */,
  szUserSid: string | null /* Windows.Win32.Foundation.PSTR */,
  dwContext: number /* u32 */,
  dwFilter: number /* u32 */,
  dwIndex: number /* u32 */,
  szPatchCode: string | null /* Windows.Win32.Foundation.PSTR */,
  szTargetProductCode: string | null /* Windows.Win32.Foundation.PSTR */,
  pdwTargetProductContext: Deno.PointerValue | Uint8Array | null /* ptr */,
  szTargetUserSid: string | null /* Windows.Win32.Foundation.PSTR */,
  pcchTargetUserSid: Deno.PointerValue | Uint8Array | null /* ptr */,
): number /* u32 */ {
  return libmsi_dll.MsiEnumPatchesExA(util.pstrToFfi(szProductCode), util.pstrToFfi(szUserSid), dwContext, dwFilter, dwIndex, util.pstrToFfi(szPatchCode), util.pstrToFfi(szTargetProductCode), util.toPointer(pdwTargetProductContext), util.pstrToFfi(szTargetUserSid), util.toPointer(pcchTargetUserSid));
}

export function MsiEnumPatchesExW(
  szProductCode: string | null /* Windows.Win32.Foundation.PWSTR */,
  szUserSid: string | null /* Windows.Win32.Foundation.PWSTR */,
  dwContext: number /* u32 */,
  dwFilter: number /* u32 */,
  dwIndex: number /* u32 */,
  szPatchCode: string | null /* Windows.Win32.Foundation.PWSTR */,
  szTargetProductCode: string | null /* Windows.Win32.Foundation.PWSTR */,
  pdwTargetProductContext: Deno.PointerValue | Uint8Array | null /* ptr */,
  szTargetUserSid: string | null /* Windows.Win32.Foundation.PWSTR */,
  pcchTargetUserSid: Deno.PointerValue | Uint8Array | null /* ptr */,
): number /* u32 */ {
  return libmsi_dll.MsiEnumPatchesExW(util.pwstrToFfi(szProductCode), util.pwstrToFfi(szUserSid), dwContext, dwFilter, dwIndex, util.pwstrToFfi(szPatchCode), util.pwstrToFfi(szTargetProductCode), util.toPointer(pdwTargetProductContext), util.pwstrToFfi(szTargetUserSid), util.toPointer(pcchTargetUserSid));
}

export function MsiQueryFeatureStateA(
  szProduct: string | null /* Windows.Win32.Foundation.PSTR */,
  szFeature: string | null /* Windows.Win32.Foundation.PSTR */,
): INSTALLSTATE /* Windows.Win32.System.ApplicationInstallationAndServicing.INSTALLSTATE */ {
  return libmsi_dll.MsiQueryFeatureStateA(util.pstrToFfi(szProduct), util.pstrToFfi(szFeature));
}

export function MsiQueryFeatureStateW(
  szProduct: string | null /* Windows.Win32.Foundation.PWSTR */,
  szFeature: string | null /* Windows.Win32.Foundation.PWSTR */,
): INSTALLSTATE /* Windows.Win32.System.ApplicationInstallationAndServicing.INSTALLSTATE */ {
  return libmsi_dll.MsiQueryFeatureStateW(util.pwstrToFfi(szProduct), util.pwstrToFfi(szFeature));
}

export function MsiQueryFeatureStateExA(
  szProductCode: string | null /* Windows.Win32.Foundation.PSTR */,
  szUserSid: string | null /* Windows.Win32.Foundation.PSTR */,
  dwContext: MSIINSTALLCONTEXT /* Windows.Win32.System.ApplicationInstallationAndServicing.MSIINSTALLCONTEXT */,
  szFeature: string | null /* Windows.Win32.Foundation.PSTR */,
  pdwState: Deno.PointerValue | Uint8Array | null /* ptr */,
): number /* u32 */ {
  return libmsi_dll.MsiQueryFeatureStateExA(util.pstrToFfi(szProductCode), util.pstrToFfi(szUserSid), dwContext, util.pstrToFfi(szFeature), util.toPointer(pdwState));
}

export function MsiQueryFeatureStateExW(
  szProductCode: string | null /* Windows.Win32.Foundation.PWSTR */,
  szUserSid: string | null /* Windows.Win32.Foundation.PWSTR */,
  dwContext: MSIINSTALLCONTEXT /* Windows.Win32.System.ApplicationInstallationAndServicing.MSIINSTALLCONTEXT */,
  szFeature: string | null /* Windows.Win32.Foundation.PWSTR */,
  pdwState: Deno.PointerValue | Uint8Array | null /* ptr */,
): number /* u32 */ {
  return libmsi_dll.MsiQueryFeatureStateExW(util.pwstrToFfi(szProductCode), util.pwstrToFfi(szUserSid), dwContext, util.pwstrToFfi(szFeature), util.toPointer(pdwState));
}

export function MsiUseFeatureA(
  szProduct: string | null /* Windows.Win32.Foundation.PSTR */,
  szFeature: string | null /* Windows.Win32.Foundation.PSTR */,
): INSTALLSTATE /* Windows.Win32.System.ApplicationInstallationAndServicing.INSTALLSTATE */ {
  return libmsi_dll.MsiUseFeatureA(util.pstrToFfi(szProduct), util.pstrToFfi(szFeature));
}

export function MsiUseFeatureW(
  szProduct: string | null /* Windows.Win32.Foundation.PWSTR */,
  szFeature: string | null /* Windows.Win32.Foundation.PWSTR */,
): INSTALLSTATE /* Windows.Win32.System.ApplicationInstallationAndServicing.INSTALLSTATE */ {
  return libmsi_dll.MsiUseFeatureW(util.pwstrToFfi(szProduct), util.pwstrToFfi(szFeature));
}

export function MsiUseFeatureExA(
  szProduct: string | null /* Windows.Win32.Foundation.PSTR */,
  szFeature: string | null /* Windows.Win32.Foundation.PSTR */,
  dwInstallMode: number /* u32 */,
  dwReserved: number /* u32 */,
): INSTALLSTATE /* Windows.Win32.System.ApplicationInstallationAndServicing.INSTALLSTATE */ {
  return libmsi_dll.MsiUseFeatureExA(util.pstrToFfi(szProduct), util.pstrToFfi(szFeature), dwInstallMode, dwReserved);
}

export function MsiUseFeatureExW(
  szProduct: string | null /* Windows.Win32.Foundation.PWSTR */,
  szFeature: string | null /* Windows.Win32.Foundation.PWSTR */,
  dwInstallMode: number /* u32 */,
  dwReserved: number /* u32 */,
): INSTALLSTATE /* Windows.Win32.System.ApplicationInstallationAndServicing.INSTALLSTATE */ {
  return libmsi_dll.MsiUseFeatureExW(util.pwstrToFfi(szProduct), util.pwstrToFfi(szFeature), dwInstallMode, dwReserved);
}

export function MsiGetFeatureUsageA(
  szProduct: string | null /* Windows.Win32.Foundation.PSTR */,
  szFeature: string | null /* Windows.Win32.Foundation.PSTR */,
  pdwUseCount: Deno.PointerValue | Uint8Array | null /* ptr */,
  pwDateUsed: Deno.PointerValue | Uint8Array | null /* ptr */,
): number /* u32 */ {
  return libmsi_dll.MsiGetFeatureUsageA(util.pstrToFfi(szProduct), util.pstrToFfi(szFeature), util.toPointer(pdwUseCount), util.toPointer(pwDateUsed));
}

export function MsiGetFeatureUsageW(
  szProduct: string | null /* Windows.Win32.Foundation.PWSTR */,
  szFeature: string | null /* Windows.Win32.Foundation.PWSTR */,
  pdwUseCount: Deno.PointerValue | Uint8Array | null /* ptr */,
  pwDateUsed: Deno.PointerValue | Uint8Array | null /* ptr */,
): number /* u32 */ {
  return libmsi_dll.MsiGetFeatureUsageW(util.pwstrToFfi(szProduct), util.pwstrToFfi(szFeature), util.toPointer(pdwUseCount), util.toPointer(pwDateUsed));
}

export function MsiConfigureFeatureA(
  szProduct: string | null /* Windows.Win32.Foundation.PSTR */,
  szFeature: string | null /* Windows.Win32.Foundation.PSTR */,
  eInstallState: INSTALLSTATE /* Windows.Win32.System.ApplicationInstallationAndServicing.INSTALLSTATE */,
): number /* u32 */ {
  return libmsi_dll.MsiConfigureFeatureA(util.pstrToFfi(szProduct), util.pstrToFfi(szFeature), eInstallState);
}

export function MsiConfigureFeatureW(
  szProduct: string | null /* Windows.Win32.Foundation.PWSTR */,
  szFeature: string | null /* Windows.Win32.Foundation.PWSTR */,
  eInstallState: INSTALLSTATE /* Windows.Win32.System.ApplicationInstallationAndServicing.INSTALLSTATE */,
): number /* u32 */ {
  return libmsi_dll.MsiConfigureFeatureW(util.pwstrToFfi(szProduct), util.pwstrToFfi(szFeature), eInstallState);
}

export function MsiReinstallFeatureA(
  szProduct: string | null /* Windows.Win32.Foundation.PSTR */,
  szFeature: string | null /* Windows.Win32.Foundation.PSTR */,
  dwReinstallMode: REINSTALLMODE /* Windows.Win32.System.ApplicationInstallationAndServicing.REINSTALLMODE */,
): number /* u32 */ {
  return libmsi_dll.MsiReinstallFeatureA(util.pstrToFfi(szProduct), util.pstrToFfi(szFeature), dwReinstallMode);
}

export function MsiReinstallFeatureW(
  szProduct: string | null /* Windows.Win32.Foundation.PWSTR */,
  szFeature: string | null /* Windows.Win32.Foundation.PWSTR */,
  dwReinstallMode: REINSTALLMODE /* Windows.Win32.System.ApplicationInstallationAndServicing.REINSTALLMODE */,
): number /* u32 */ {
  return libmsi_dll.MsiReinstallFeatureW(util.pwstrToFfi(szProduct), util.pwstrToFfi(szFeature), dwReinstallMode);
}

export function MsiProvideComponentA(
  szProduct: string | null /* Windows.Win32.Foundation.PSTR */,
  szFeature: string | null /* Windows.Win32.Foundation.PSTR */,
  szComponent: string | null /* Windows.Win32.Foundation.PSTR */,
  dwInstallMode: INSTALLMODE /* Windows.Win32.System.ApplicationInstallationAndServicing.INSTALLMODE */,
  lpPathBuf: string | null /* Windows.Win32.Foundation.PSTR */,
  pcchPathBuf: Deno.PointerValue | Uint8Array | null /* ptr */,
): number /* u32 */ {
  return libmsi_dll.MsiProvideComponentA(util.pstrToFfi(szProduct), util.pstrToFfi(szFeature), util.pstrToFfi(szComponent), dwInstallMode, util.pstrToFfi(lpPathBuf), util.toPointer(pcchPathBuf));
}

export function MsiProvideComponentW(
  szProduct: string | null /* Windows.Win32.Foundation.PWSTR */,
  szFeature: string | null /* Windows.Win32.Foundation.PWSTR */,
  szComponent: string | null /* Windows.Win32.Foundation.PWSTR */,
  dwInstallMode: INSTALLMODE /* Windows.Win32.System.ApplicationInstallationAndServicing.INSTALLMODE */,
  lpPathBuf: string | null /* Windows.Win32.Foundation.PWSTR */,
  pcchPathBuf: Deno.PointerValue | Uint8Array | null /* ptr */,
): number /* u32 */ {
  return libmsi_dll.MsiProvideComponentW(util.pwstrToFfi(szProduct), util.pwstrToFfi(szFeature), util.pwstrToFfi(szComponent), dwInstallMode, util.pwstrToFfi(lpPathBuf), util.toPointer(pcchPathBuf));
}

export function MsiProvideQualifiedComponentA(
  szCategory: string | null /* Windows.Win32.Foundation.PSTR */,
  szQualifier: string | null /* Windows.Win32.Foundation.PSTR */,
  dwInstallMode: INSTALLMODE /* Windows.Win32.System.ApplicationInstallationAndServicing.INSTALLMODE */,
  lpPathBuf: string | null /* Windows.Win32.Foundation.PSTR */,
  pcchPathBuf: Deno.PointerValue | Uint8Array | null /* ptr */,
): number /* u32 */ {
  return libmsi_dll.MsiProvideQualifiedComponentA(util.pstrToFfi(szCategory), util.pstrToFfi(szQualifier), dwInstallMode, util.pstrToFfi(lpPathBuf), util.toPointer(pcchPathBuf));
}

export function MsiProvideQualifiedComponentW(
  szCategory: string | null /* Windows.Win32.Foundation.PWSTR */,
  szQualifier: string | null /* Windows.Win32.Foundation.PWSTR */,
  dwInstallMode: INSTALLMODE /* Windows.Win32.System.ApplicationInstallationAndServicing.INSTALLMODE */,
  lpPathBuf: string | null /* Windows.Win32.Foundation.PWSTR */,
  pcchPathBuf: Deno.PointerValue | Uint8Array | null /* ptr */,
): number /* u32 */ {
  return libmsi_dll.MsiProvideQualifiedComponentW(util.pwstrToFfi(szCategory), util.pwstrToFfi(szQualifier), dwInstallMode, util.pwstrToFfi(lpPathBuf), util.toPointer(pcchPathBuf));
}

export function MsiProvideQualifiedComponentExA(
  szCategory: string | null /* Windows.Win32.Foundation.PSTR */,
  szQualifier: string | null /* Windows.Win32.Foundation.PSTR */,
  dwInstallMode: INSTALLMODE /* Windows.Win32.System.ApplicationInstallationAndServicing.INSTALLMODE */,
  szProduct: string | null /* Windows.Win32.Foundation.PSTR */,
  dwUnused1: number /* u32 */,
  dwUnused2: number /* u32 */,
  lpPathBuf: string | null /* Windows.Win32.Foundation.PSTR */,
  pcchPathBuf: Deno.PointerValue | Uint8Array | null /* ptr */,
): number /* u32 */ {
  return libmsi_dll.MsiProvideQualifiedComponentExA(util.pstrToFfi(szCategory), util.pstrToFfi(szQualifier), dwInstallMode, util.pstrToFfi(szProduct), dwUnused1, dwUnused2, util.pstrToFfi(lpPathBuf), util.toPointer(pcchPathBuf));
}

export function MsiProvideQualifiedComponentExW(
  szCategory: string | null /* Windows.Win32.Foundation.PWSTR */,
  szQualifier: string | null /* Windows.Win32.Foundation.PWSTR */,
  dwInstallMode: INSTALLMODE /* Windows.Win32.System.ApplicationInstallationAndServicing.INSTALLMODE */,
  szProduct: string | null /* Windows.Win32.Foundation.PWSTR */,
  dwUnused1: number /* u32 */,
  dwUnused2: number /* u32 */,
  lpPathBuf: string | null /* Windows.Win32.Foundation.PWSTR */,
  pcchPathBuf: Deno.PointerValue | Uint8Array | null /* ptr */,
): number /* u32 */ {
  return libmsi_dll.MsiProvideQualifiedComponentExW(util.pwstrToFfi(szCategory), util.pwstrToFfi(szQualifier), dwInstallMode, util.pwstrToFfi(szProduct), dwUnused1, dwUnused2, util.pwstrToFfi(lpPathBuf), util.toPointer(pcchPathBuf));
}

export function MsiGetComponentPathA(
  szProduct: string | null /* Windows.Win32.Foundation.PSTR */,
  szComponent: string | null /* Windows.Win32.Foundation.PSTR */,
  lpPathBuf: string | null /* Windows.Win32.Foundation.PSTR */,
  pcchBuf: Deno.PointerValue | Uint8Array | null /* ptr */,
): INSTALLSTATE /* Windows.Win32.System.ApplicationInstallationAndServicing.INSTALLSTATE */ {
  return libmsi_dll.MsiGetComponentPathA(util.pstrToFfi(szProduct), util.pstrToFfi(szComponent), util.pstrToFfi(lpPathBuf), util.toPointer(pcchBuf));
}

export function MsiGetComponentPathW(
  szProduct: string | null /* Windows.Win32.Foundation.PWSTR */,
  szComponent: string | null /* Windows.Win32.Foundation.PWSTR */,
  lpPathBuf: string | null /* Windows.Win32.Foundation.PWSTR */,
  pcchBuf: Deno.PointerValue | Uint8Array | null /* ptr */,
): INSTALLSTATE /* Windows.Win32.System.ApplicationInstallationAndServicing.INSTALLSTATE */ {
  return libmsi_dll.MsiGetComponentPathW(util.pwstrToFfi(szProduct), util.pwstrToFfi(szComponent), util.pwstrToFfi(lpPathBuf), util.toPointer(pcchBuf));
}

export function MsiGetComponentPathExA(
  szProductCode: string | null /* Windows.Win32.Foundation.PSTR */,
  szComponentCode: string | null /* Windows.Win32.Foundation.PSTR */,
  szUserSid: string | null /* Windows.Win32.Foundation.PSTR */,
  dwContext: MSIINSTALLCONTEXT /* Windows.Win32.System.ApplicationInstallationAndServicing.MSIINSTALLCONTEXT */,
  lpOutPathBuffer: string | null /* Windows.Win32.Foundation.PSTR */,
  pcchOutPathBuffer: Deno.PointerValue | Uint8Array | null /* ptr */,
): INSTALLSTATE /* Windows.Win32.System.ApplicationInstallationAndServicing.INSTALLSTATE */ {
  return libmsi_dll.MsiGetComponentPathExA(util.pstrToFfi(szProductCode), util.pstrToFfi(szComponentCode), util.pstrToFfi(szUserSid), dwContext, util.pstrToFfi(lpOutPathBuffer), util.toPointer(pcchOutPathBuffer));
}

export function MsiGetComponentPathExW(
  szProductCode: string | null /* Windows.Win32.Foundation.PWSTR */,
  szComponentCode: string | null /* Windows.Win32.Foundation.PWSTR */,
  szUserSid: string | null /* Windows.Win32.Foundation.PWSTR */,
  dwContext: MSIINSTALLCONTEXT /* Windows.Win32.System.ApplicationInstallationAndServicing.MSIINSTALLCONTEXT */,
  lpOutPathBuffer: string | null /* Windows.Win32.Foundation.PWSTR */,
  pcchOutPathBuffer: Deno.PointerValue | Uint8Array | null /* ptr */,
): INSTALLSTATE /* Windows.Win32.System.ApplicationInstallationAndServicing.INSTALLSTATE */ {
  return libmsi_dll.MsiGetComponentPathExW(util.pwstrToFfi(szProductCode), util.pwstrToFfi(szComponentCode), util.pwstrToFfi(szUserSid), dwContext, util.pwstrToFfi(lpOutPathBuffer), util.toPointer(pcchOutPathBuffer));
}

export function MsiProvideAssemblyA(
  szAssemblyName: string | null /* Windows.Win32.Foundation.PSTR */,
  szAppContext: string | null /* Windows.Win32.Foundation.PSTR */,
  dwInstallMode: INSTALLMODE /* Windows.Win32.System.ApplicationInstallationAndServicing.INSTALLMODE */,
  dwAssemblyInfo: MSIASSEMBLYINFO /* Windows.Win32.System.ApplicationInstallationAndServicing.MSIASSEMBLYINFO */,
  lpPathBuf: string | null /* Windows.Win32.Foundation.PSTR */,
  pcchPathBuf: Deno.PointerValue | Uint8Array | null /* ptr */,
): number /* u32 */ {
  return libmsi_dll.MsiProvideAssemblyA(util.pstrToFfi(szAssemblyName), util.pstrToFfi(szAppContext), dwInstallMode, dwAssemblyInfo, util.pstrToFfi(lpPathBuf), util.toPointer(pcchPathBuf));
}

export function MsiProvideAssemblyW(
  szAssemblyName: string | null /* Windows.Win32.Foundation.PWSTR */,
  szAppContext: string | null /* Windows.Win32.Foundation.PWSTR */,
  dwInstallMode: INSTALLMODE /* Windows.Win32.System.ApplicationInstallationAndServicing.INSTALLMODE */,
  dwAssemblyInfo: MSIASSEMBLYINFO /* Windows.Win32.System.ApplicationInstallationAndServicing.MSIASSEMBLYINFO */,
  lpPathBuf: string | null /* Windows.Win32.Foundation.PWSTR */,
  pcchPathBuf: Deno.PointerValue | Uint8Array | null /* ptr */,
): number /* u32 */ {
  return libmsi_dll.MsiProvideAssemblyW(util.pwstrToFfi(szAssemblyName), util.pwstrToFfi(szAppContext), dwInstallMode, dwAssemblyInfo, util.pwstrToFfi(lpPathBuf), util.toPointer(pcchPathBuf));
}

export function MsiQueryComponentStateA(
  szProductCode: string | null /* Windows.Win32.Foundation.PSTR */,
  szUserSid: string | null /* Windows.Win32.Foundation.PSTR */,
  dwContext: MSIINSTALLCONTEXT /* Windows.Win32.System.ApplicationInstallationAndServicing.MSIINSTALLCONTEXT */,
  szComponentCode: string | null /* Windows.Win32.Foundation.PSTR */,
  pdwState: Deno.PointerValue | Uint8Array | null /* ptr */,
): number /* u32 */ {
  return libmsi_dll.MsiQueryComponentStateA(util.pstrToFfi(szProductCode), util.pstrToFfi(szUserSid), dwContext, util.pstrToFfi(szComponentCode), util.toPointer(pdwState));
}

export function MsiQueryComponentStateW(
  szProductCode: string | null /* Windows.Win32.Foundation.PWSTR */,
  szUserSid: string | null /* Windows.Win32.Foundation.PWSTR */,
  dwContext: MSIINSTALLCONTEXT /* Windows.Win32.System.ApplicationInstallationAndServicing.MSIINSTALLCONTEXT */,
  szComponentCode: string | null /* Windows.Win32.Foundation.PWSTR */,
  pdwState: Deno.PointerValue | Uint8Array | null /* ptr */,
): number /* u32 */ {
  return libmsi_dll.MsiQueryComponentStateW(util.pwstrToFfi(szProductCode), util.pwstrToFfi(szUserSid), dwContext, util.pwstrToFfi(szComponentCode), util.toPointer(pdwState));
}

export function MsiEnumProductsA(
  iProductIndex: number /* u32 */,
  lpProductBuf: string | null /* Windows.Win32.Foundation.PSTR */,
): number /* u32 */ {
  return libmsi_dll.MsiEnumProductsA(iProductIndex, util.pstrToFfi(lpProductBuf));
}

export function MsiEnumProductsW(
  iProductIndex: number /* u32 */,
  lpProductBuf: string | null /* Windows.Win32.Foundation.PWSTR */,
): number /* u32 */ {
  return libmsi_dll.MsiEnumProductsW(iProductIndex, util.pwstrToFfi(lpProductBuf));
}

export function MsiEnumProductsExA(
  szProductCode: string | null /* Windows.Win32.Foundation.PSTR */,
  szUserSid: string | null /* Windows.Win32.Foundation.PSTR */,
  dwContext: number /* u32 */,
  dwIndex: number /* u32 */,
  szInstalledProductCode: string | null /* Windows.Win32.Foundation.PSTR */,
  pdwInstalledContext: Deno.PointerValue | Uint8Array | null /* ptr */,
  szSid: string | null /* Windows.Win32.Foundation.PSTR */,
  pcchSid: Deno.PointerValue | Uint8Array | null /* ptr */,
): number /* u32 */ {
  return libmsi_dll.MsiEnumProductsExA(util.pstrToFfi(szProductCode), util.pstrToFfi(szUserSid), dwContext, dwIndex, util.pstrToFfi(szInstalledProductCode), util.toPointer(pdwInstalledContext), util.pstrToFfi(szSid), util.toPointer(pcchSid));
}

export function MsiEnumProductsExW(
  szProductCode: string | null /* Windows.Win32.Foundation.PWSTR */,
  szUserSid: string | null /* Windows.Win32.Foundation.PWSTR */,
  dwContext: number /* u32 */,
  dwIndex: number /* u32 */,
  szInstalledProductCode: string | null /* Windows.Win32.Foundation.PWSTR */,
  pdwInstalledContext: Deno.PointerValue | Uint8Array | null /* ptr */,
  szSid: string | null /* Windows.Win32.Foundation.PWSTR */,
  pcchSid: Deno.PointerValue | Uint8Array | null /* ptr */,
): number /* u32 */ {
  return libmsi_dll.MsiEnumProductsExW(util.pwstrToFfi(szProductCode), util.pwstrToFfi(szUserSid), dwContext, dwIndex, util.pwstrToFfi(szInstalledProductCode), util.toPointer(pdwInstalledContext), util.pwstrToFfi(szSid), util.toPointer(pcchSid));
}

export function MsiEnumRelatedProductsA(
  lpUpgradeCode: string | null /* Windows.Win32.Foundation.PSTR */,
  dwReserved: number /* u32 */,
  iProductIndex: number /* u32 */,
  lpProductBuf: string | null /* Windows.Win32.Foundation.PSTR */,
): number /* u32 */ {
  return libmsi_dll.MsiEnumRelatedProductsA(util.pstrToFfi(lpUpgradeCode), dwReserved, iProductIndex, util.pstrToFfi(lpProductBuf));
}

export function MsiEnumRelatedProductsW(
  lpUpgradeCode: string | null /* Windows.Win32.Foundation.PWSTR */,
  dwReserved: number /* u32 */,
  iProductIndex: number /* u32 */,
  lpProductBuf: string | null /* Windows.Win32.Foundation.PWSTR */,
): number /* u32 */ {
  return libmsi_dll.MsiEnumRelatedProductsW(util.pwstrToFfi(lpUpgradeCode), dwReserved, iProductIndex, util.pwstrToFfi(lpProductBuf));
}

export function MsiEnumFeaturesA(
  szProduct: string | null /* Windows.Win32.Foundation.PSTR */,
  iFeatureIndex: number /* u32 */,
  lpFeatureBuf: string | null /* Windows.Win32.Foundation.PSTR */,
  lpParentBuf: string | null /* Windows.Win32.Foundation.PSTR */,
): number /* u32 */ {
  return libmsi_dll.MsiEnumFeaturesA(util.pstrToFfi(szProduct), iFeatureIndex, util.pstrToFfi(lpFeatureBuf), util.pstrToFfi(lpParentBuf));
}

export function MsiEnumFeaturesW(
  szProduct: string | null /* Windows.Win32.Foundation.PWSTR */,
  iFeatureIndex: number /* u32 */,
  lpFeatureBuf: string | null /* Windows.Win32.Foundation.PWSTR */,
  lpParentBuf: string | null /* Windows.Win32.Foundation.PWSTR */,
): number /* u32 */ {
  return libmsi_dll.MsiEnumFeaturesW(util.pwstrToFfi(szProduct), iFeatureIndex, util.pwstrToFfi(lpFeatureBuf), util.pwstrToFfi(lpParentBuf));
}

export function MsiEnumComponentsA(
  iComponentIndex: number /* u32 */,
  lpComponentBuf: string | null /* Windows.Win32.Foundation.PSTR */,
): number /* u32 */ {
  return libmsi_dll.MsiEnumComponentsA(iComponentIndex, util.pstrToFfi(lpComponentBuf));
}

export function MsiEnumComponentsW(
  iComponentIndex: number /* u32 */,
  lpComponentBuf: string | null /* Windows.Win32.Foundation.PWSTR */,
): number /* u32 */ {
  return libmsi_dll.MsiEnumComponentsW(iComponentIndex, util.pwstrToFfi(lpComponentBuf));
}

export function MsiEnumComponentsExA(
  szUserSid: string | null /* Windows.Win32.Foundation.PSTR */,
  dwContext: number /* u32 */,
  dwIndex: number /* u32 */,
  szInstalledComponentCode: string | null /* Windows.Win32.Foundation.PSTR */,
  pdwInstalledContext: Deno.PointerValue | Uint8Array | null /* ptr */,
  szSid: string | null /* Windows.Win32.Foundation.PSTR */,
  pcchSid: Deno.PointerValue | Uint8Array | null /* ptr */,
): number /* u32 */ {
  return libmsi_dll.MsiEnumComponentsExA(util.pstrToFfi(szUserSid), dwContext, dwIndex, util.pstrToFfi(szInstalledComponentCode), util.toPointer(pdwInstalledContext), util.pstrToFfi(szSid), util.toPointer(pcchSid));
}

export function MsiEnumComponentsExW(
  szUserSid: string | null /* Windows.Win32.Foundation.PWSTR */,
  dwContext: number /* u32 */,
  dwIndex: number /* u32 */,
  szInstalledComponentCode: string | null /* Windows.Win32.Foundation.PWSTR */,
  pdwInstalledContext: Deno.PointerValue | Uint8Array | null /* ptr */,
  szSid: string | null /* Windows.Win32.Foundation.PWSTR */,
  pcchSid: Deno.PointerValue | Uint8Array | null /* ptr */,
): number /* u32 */ {
  return libmsi_dll.MsiEnumComponentsExW(util.pwstrToFfi(szUserSid), dwContext, dwIndex, util.pwstrToFfi(szInstalledComponentCode), util.toPointer(pdwInstalledContext), util.pwstrToFfi(szSid), util.toPointer(pcchSid));
}

export function MsiEnumClientsA(
  szComponent: string | null /* Windows.Win32.Foundation.PSTR */,
  iProductIndex: number /* u32 */,
  lpProductBuf: string | null /* Windows.Win32.Foundation.PSTR */,
): number /* u32 */ {
  return libmsi_dll.MsiEnumClientsA(util.pstrToFfi(szComponent), iProductIndex, util.pstrToFfi(lpProductBuf));
}

export function MsiEnumClientsW(
  szComponent: string | null /* Windows.Win32.Foundation.PWSTR */,
  iProductIndex: number /* u32 */,
  lpProductBuf: string | null /* Windows.Win32.Foundation.PWSTR */,
): number /* u32 */ {
  return libmsi_dll.MsiEnumClientsW(util.pwstrToFfi(szComponent), iProductIndex, util.pwstrToFfi(lpProductBuf));
}

export function MsiEnumClientsExA(
  szComponent: string | null /* Windows.Win32.Foundation.PSTR */,
  szUserSid: string | null /* Windows.Win32.Foundation.PSTR */,
  dwContext: MSIINSTALLCONTEXT /* Windows.Win32.System.ApplicationInstallationAndServicing.MSIINSTALLCONTEXT */,
  dwProductIndex: number /* u32 */,
  szProductBuf: string | null /* Windows.Win32.Foundation.PSTR */,
  pdwInstalledContext: Deno.PointerValue | Uint8Array | null /* ptr */,
  szSid: string | null /* Windows.Win32.Foundation.PSTR */,
  pcchSid: Deno.PointerValue | Uint8Array | null /* ptr */,
): number /* u32 */ {
  return libmsi_dll.MsiEnumClientsExA(util.pstrToFfi(szComponent), util.pstrToFfi(szUserSid), dwContext, dwProductIndex, util.pstrToFfi(szProductBuf), util.toPointer(pdwInstalledContext), util.pstrToFfi(szSid), util.toPointer(pcchSid));
}

export function MsiEnumClientsExW(
  szComponent: string | null /* Windows.Win32.Foundation.PWSTR */,
  szUserSid: string | null /* Windows.Win32.Foundation.PWSTR */,
  dwContext: MSIINSTALLCONTEXT /* Windows.Win32.System.ApplicationInstallationAndServicing.MSIINSTALLCONTEXT */,
  dwProductIndex: number /* u32 */,
  szProductBuf: string | null /* Windows.Win32.Foundation.PWSTR */,
  pdwInstalledContext: Deno.PointerValue | Uint8Array | null /* ptr */,
  szSid: string | null /* Windows.Win32.Foundation.PWSTR */,
  pcchSid: Deno.PointerValue | Uint8Array | null /* ptr */,
): number /* u32 */ {
  return libmsi_dll.MsiEnumClientsExW(util.pwstrToFfi(szComponent), util.pwstrToFfi(szUserSid), dwContext, dwProductIndex, util.pwstrToFfi(szProductBuf), util.toPointer(pdwInstalledContext), util.pwstrToFfi(szSid), util.toPointer(pcchSid));
}

export function MsiEnumComponentQualifiersA(
  szComponent: string | null /* Windows.Win32.Foundation.PSTR */,
  iIndex: number /* u32 */,
  lpQualifierBuf: string | null /* Windows.Win32.Foundation.PSTR */,
  pcchQualifierBuf: Deno.PointerValue | Uint8Array | null /* ptr */,
  lpApplicationDataBuf: string | null /* Windows.Win32.Foundation.PSTR */,
  pcchApplicationDataBuf: Deno.PointerValue | Uint8Array | null /* ptr */,
): number /* u32 */ {
  return libmsi_dll.MsiEnumComponentQualifiersA(util.pstrToFfi(szComponent), iIndex, util.pstrToFfi(lpQualifierBuf), util.toPointer(pcchQualifierBuf), util.pstrToFfi(lpApplicationDataBuf), util.toPointer(pcchApplicationDataBuf));
}

export function MsiEnumComponentQualifiersW(
  szComponent: string | null /* Windows.Win32.Foundation.PWSTR */,
  iIndex: number /* u32 */,
  lpQualifierBuf: string | null /* Windows.Win32.Foundation.PWSTR */,
  pcchQualifierBuf: Deno.PointerValue | Uint8Array | null /* ptr */,
  lpApplicationDataBuf: string | null /* Windows.Win32.Foundation.PWSTR */,
  pcchApplicationDataBuf: Deno.PointerValue | Uint8Array | null /* ptr */,
): number /* u32 */ {
  return libmsi_dll.MsiEnumComponentQualifiersW(util.pwstrToFfi(szComponent), iIndex, util.pwstrToFfi(lpQualifierBuf), util.toPointer(pcchQualifierBuf), util.pwstrToFfi(lpApplicationDataBuf), util.toPointer(pcchApplicationDataBuf));
}

export function MsiOpenProductA(
  szProduct: string | null /* Windows.Win32.Foundation.PSTR */,
  hProduct: Deno.PointerValue | Uint8Array | null /* ptr */,
): number /* u32 */ {
  return libmsi_dll.MsiOpenProductA(util.pstrToFfi(szProduct), util.toPointer(hProduct));
}

export function MsiOpenProductW(
  szProduct: string | null /* Windows.Win32.Foundation.PWSTR */,
  hProduct: Deno.PointerValue | Uint8Array | null /* ptr */,
): number /* u32 */ {
  return libmsi_dll.MsiOpenProductW(util.pwstrToFfi(szProduct), util.toPointer(hProduct));
}

export function MsiOpenPackageA(
  szPackagePath: string | null /* Windows.Win32.Foundation.PSTR */,
  hProduct: Deno.PointerValue | Uint8Array | null /* ptr */,
): number /* u32 */ {
  return libmsi_dll.MsiOpenPackageA(util.pstrToFfi(szPackagePath), util.toPointer(hProduct));
}

export function MsiOpenPackageW(
  szPackagePath: string | null /* Windows.Win32.Foundation.PWSTR */,
  hProduct: Deno.PointerValue | Uint8Array | null /* ptr */,
): number /* u32 */ {
  return libmsi_dll.MsiOpenPackageW(util.pwstrToFfi(szPackagePath), util.toPointer(hProduct));
}

export function MsiOpenPackageExA(
  szPackagePath: string | null /* Windows.Win32.Foundation.PSTR */,
  dwOptions: number /* u32 */,
  hProduct: Deno.PointerValue | Uint8Array | null /* ptr */,
): number /* u32 */ {
  return libmsi_dll.MsiOpenPackageExA(util.pstrToFfi(szPackagePath), dwOptions, util.toPointer(hProduct));
}

export function MsiOpenPackageExW(
  szPackagePath: string | null /* Windows.Win32.Foundation.PWSTR */,
  dwOptions: number /* u32 */,
  hProduct: Deno.PointerValue | Uint8Array | null /* ptr */,
): number /* u32 */ {
  return libmsi_dll.MsiOpenPackageExW(util.pwstrToFfi(szPackagePath), dwOptions, util.toPointer(hProduct));
}

export function MsiGetPatchFileListA(
  szProductCode: string | null /* Windows.Win32.Foundation.PSTR */,
  szPatchPackages: string | null /* Windows.Win32.Foundation.PSTR */,
  pcFiles: Deno.PointerValue | Uint8Array | null /* ptr */,
  pphFileRecords: Deno.PointerValue | Uint8Array | null /* ptr */,
): number /* u32 */ {
  return libmsi_dll.MsiGetPatchFileListA(util.pstrToFfi(szProductCode), util.pstrToFfi(szPatchPackages), util.toPointer(pcFiles), util.toPointer(pphFileRecords));
}

export function MsiGetPatchFileListW(
  szProductCode: string | null /* Windows.Win32.Foundation.PWSTR */,
  szPatchPackages: string | null /* Windows.Win32.Foundation.PWSTR */,
  pcFiles: Deno.PointerValue | Uint8Array | null /* ptr */,
  pphFileRecords: Deno.PointerValue | Uint8Array | null /* ptr */,
): number /* u32 */ {
  return libmsi_dll.MsiGetPatchFileListW(util.pwstrToFfi(szProductCode), util.pwstrToFfi(szPatchPackages), util.toPointer(pcFiles), util.toPointer(pphFileRecords));
}

export function MsiGetProductPropertyA(
  hProduct: Uint8Array | Deno.PointerValue | null /* Windows.Win32.System.ApplicationInstallationAndServicing.MSIHANDLE */,
  szProperty: string | null /* Windows.Win32.Foundation.PSTR */,
  lpValueBuf: string | null /* Windows.Win32.Foundation.PSTR */,
  pcchValueBuf: Deno.PointerValue | Uint8Array | null /* ptr */,
): number /* u32 */ {
  return libmsi_dll.MsiGetProductPropertyA(util.toPointer(hProduct), util.pstrToFfi(szProperty), util.pstrToFfi(lpValueBuf), util.toPointer(pcchValueBuf));
}

export function MsiGetProductPropertyW(
  hProduct: Uint8Array | Deno.PointerValue | null /* Windows.Win32.System.ApplicationInstallationAndServicing.MSIHANDLE */,
  szProperty: string | null /* Windows.Win32.Foundation.PWSTR */,
  lpValueBuf: string | null /* Windows.Win32.Foundation.PWSTR */,
  pcchValueBuf: Deno.PointerValue | Uint8Array | null /* ptr */,
): number /* u32 */ {
  return libmsi_dll.MsiGetProductPropertyW(util.toPointer(hProduct), util.pwstrToFfi(szProperty), util.pwstrToFfi(lpValueBuf), util.toPointer(pcchValueBuf));
}

export function MsiVerifyPackageA(
  szPackagePath: string | null /* Windows.Win32.Foundation.PSTR */,
): number /* u32 */ {
  return libmsi_dll.MsiVerifyPackageA(util.pstrToFfi(szPackagePath));
}

export function MsiVerifyPackageW(
  szPackagePath: string | null /* Windows.Win32.Foundation.PWSTR */,
): number /* u32 */ {
  return libmsi_dll.MsiVerifyPackageW(util.pwstrToFfi(szPackagePath));
}

export function MsiGetFeatureInfoA(
  hProduct: Uint8Array | Deno.PointerValue | null /* Windows.Win32.System.ApplicationInstallationAndServicing.MSIHANDLE */,
  szFeature: string | null /* Windows.Win32.Foundation.PSTR */,
  lpAttributes: Deno.PointerValue | Uint8Array | null /* ptr */,
  lpTitleBuf: string | null /* Windows.Win32.Foundation.PSTR */,
  pcchTitleBuf: Deno.PointerValue | Uint8Array | null /* ptr */,
  lpHelpBuf: string | null /* Windows.Win32.Foundation.PSTR */,
  pcchHelpBuf: Deno.PointerValue | Uint8Array | null /* ptr */,
): number /* u32 */ {
  return libmsi_dll.MsiGetFeatureInfoA(util.toPointer(hProduct), util.pstrToFfi(szFeature), util.toPointer(lpAttributes), util.pstrToFfi(lpTitleBuf), util.toPointer(pcchTitleBuf), util.pstrToFfi(lpHelpBuf), util.toPointer(pcchHelpBuf));
}

export function MsiGetFeatureInfoW(
  hProduct: Uint8Array | Deno.PointerValue | null /* Windows.Win32.System.ApplicationInstallationAndServicing.MSIHANDLE */,
  szFeature: string | null /* Windows.Win32.Foundation.PWSTR */,
  lpAttributes: Deno.PointerValue | Uint8Array | null /* ptr */,
  lpTitleBuf: string | null /* Windows.Win32.Foundation.PWSTR */,
  pcchTitleBuf: Deno.PointerValue | Uint8Array | null /* ptr */,
  lpHelpBuf: string | null /* Windows.Win32.Foundation.PWSTR */,
  pcchHelpBuf: Deno.PointerValue | Uint8Array | null /* ptr */,
): number /* u32 */ {
  return libmsi_dll.MsiGetFeatureInfoW(util.toPointer(hProduct), util.pwstrToFfi(szFeature), util.toPointer(lpAttributes), util.pwstrToFfi(lpTitleBuf), util.toPointer(pcchTitleBuf), util.pwstrToFfi(lpHelpBuf), util.toPointer(pcchHelpBuf));
}

export function MsiInstallMissingComponentA(
  szProduct: string | null /* Windows.Win32.Foundation.PSTR */,
  szComponent: string | null /* Windows.Win32.Foundation.PSTR */,
  eInstallState: INSTALLSTATE /* Windows.Win32.System.ApplicationInstallationAndServicing.INSTALLSTATE */,
): number /* u32 */ {
  return libmsi_dll.MsiInstallMissingComponentA(util.pstrToFfi(szProduct), util.pstrToFfi(szComponent), eInstallState);
}

export function MsiInstallMissingComponentW(
  szProduct: string | null /* Windows.Win32.Foundation.PWSTR */,
  szComponent: string | null /* Windows.Win32.Foundation.PWSTR */,
  eInstallState: INSTALLSTATE /* Windows.Win32.System.ApplicationInstallationAndServicing.INSTALLSTATE */,
): number /* u32 */ {
  return libmsi_dll.MsiInstallMissingComponentW(util.pwstrToFfi(szProduct), util.pwstrToFfi(szComponent), eInstallState);
}

export function MsiInstallMissingFileA(
  szProduct: string | null /* Windows.Win32.Foundation.PSTR */,
  szFile: string | null /* Windows.Win32.Foundation.PSTR */,
): number /* u32 */ {
  return libmsi_dll.MsiInstallMissingFileA(util.pstrToFfi(szProduct), util.pstrToFfi(szFile));
}

export function MsiInstallMissingFileW(
  szProduct: string | null /* Windows.Win32.Foundation.PWSTR */,
  szFile: string | null /* Windows.Win32.Foundation.PWSTR */,
): number /* u32 */ {
  return libmsi_dll.MsiInstallMissingFileW(util.pwstrToFfi(szProduct), util.pwstrToFfi(szFile));
}

export function MsiLocateComponentA(
  szComponent: string | null /* Windows.Win32.Foundation.PSTR */,
  lpPathBuf: string | null /* Windows.Win32.Foundation.PSTR */,
  pcchBuf: Deno.PointerValue | Uint8Array | null /* ptr */,
): INSTALLSTATE /* Windows.Win32.System.ApplicationInstallationAndServicing.INSTALLSTATE */ {
  return libmsi_dll.MsiLocateComponentA(util.pstrToFfi(szComponent), util.pstrToFfi(lpPathBuf), util.toPointer(pcchBuf));
}

export function MsiLocateComponentW(
  szComponent: string | null /* Windows.Win32.Foundation.PWSTR */,
  lpPathBuf: string | null /* Windows.Win32.Foundation.PWSTR */,
  pcchBuf: Deno.PointerValue | Uint8Array | null /* ptr */,
): INSTALLSTATE /* Windows.Win32.System.ApplicationInstallationAndServicing.INSTALLSTATE */ {
  return libmsi_dll.MsiLocateComponentW(util.pwstrToFfi(szComponent), util.pwstrToFfi(lpPathBuf), util.toPointer(pcchBuf));
}

export function MsiSourceListClearAllA(
  szProduct: string | null /* Windows.Win32.Foundation.PSTR */,
  szUserName: string | null /* Windows.Win32.Foundation.PSTR */,
  dwReserved: number /* u32 */,
): number /* u32 */ {
  return libmsi_dll.MsiSourceListClearAllA(util.pstrToFfi(szProduct), util.pstrToFfi(szUserName), dwReserved);
}

export function MsiSourceListClearAllW(
  szProduct: string | null /* Windows.Win32.Foundation.PWSTR */,
  szUserName: string | null /* Windows.Win32.Foundation.PWSTR */,
  dwReserved: number /* u32 */,
): number /* u32 */ {
  return libmsi_dll.MsiSourceListClearAllW(util.pwstrToFfi(szProduct), util.pwstrToFfi(szUserName), dwReserved);
}

export function MsiSourceListAddSourceA(
  szProduct: string | null /* Windows.Win32.Foundation.PSTR */,
  szUserName: string | null /* Windows.Win32.Foundation.PSTR */,
  dwReserved: number /* u32 */,
  szSource: string | null /* Windows.Win32.Foundation.PSTR */,
): number /* u32 */ {
  return libmsi_dll.MsiSourceListAddSourceA(util.pstrToFfi(szProduct), util.pstrToFfi(szUserName), dwReserved, util.pstrToFfi(szSource));
}

export function MsiSourceListAddSourceW(
  szProduct: string | null /* Windows.Win32.Foundation.PWSTR */,
  szUserName: string | null /* Windows.Win32.Foundation.PWSTR */,
  dwReserved: number /* u32 */,
  szSource: string | null /* Windows.Win32.Foundation.PWSTR */,
): number /* u32 */ {
  return libmsi_dll.MsiSourceListAddSourceW(util.pwstrToFfi(szProduct), util.pwstrToFfi(szUserName), dwReserved, util.pwstrToFfi(szSource));
}

export function MsiSourceListForceResolutionA(
  szProduct: string | null /* Windows.Win32.Foundation.PSTR */,
  szUserName: string | null /* Windows.Win32.Foundation.PSTR */,
  dwReserved: number /* u32 */,
): number /* u32 */ {
  return libmsi_dll.MsiSourceListForceResolutionA(util.pstrToFfi(szProduct), util.pstrToFfi(szUserName), dwReserved);
}

export function MsiSourceListForceResolutionW(
  szProduct: string | null /* Windows.Win32.Foundation.PWSTR */,
  szUserName: string | null /* Windows.Win32.Foundation.PWSTR */,
  dwReserved: number /* u32 */,
): number /* u32 */ {
  return libmsi_dll.MsiSourceListForceResolutionW(util.pwstrToFfi(szProduct), util.pwstrToFfi(szUserName), dwReserved);
}

export function MsiSourceListAddSourceExA(
  szProductCodeOrPatchCode: string | null /* Windows.Win32.Foundation.PSTR */,
  szUserSid: string | null /* Windows.Win32.Foundation.PSTR */,
  dwContext: MSIINSTALLCONTEXT /* Windows.Win32.System.ApplicationInstallationAndServicing.MSIINSTALLCONTEXT */,
  dwOptions: number /* u32 */,
  szSource: string | null /* Windows.Win32.Foundation.PSTR */,
  dwIndex: number /* u32 */,
): number /* u32 */ {
  return libmsi_dll.MsiSourceListAddSourceExA(util.pstrToFfi(szProductCodeOrPatchCode), util.pstrToFfi(szUserSid), dwContext, dwOptions, util.pstrToFfi(szSource), dwIndex);
}

export function MsiSourceListAddSourceExW(
  szProductCodeOrPatchCode: string | null /* Windows.Win32.Foundation.PWSTR */,
  szUserSid: string | null /* Windows.Win32.Foundation.PWSTR */,
  dwContext: MSIINSTALLCONTEXT /* Windows.Win32.System.ApplicationInstallationAndServicing.MSIINSTALLCONTEXT */,
  dwOptions: number /* u32 */,
  szSource: string | null /* Windows.Win32.Foundation.PWSTR */,
  dwIndex: number /* u32 */,
): number /* u32 */ {
  return libmsi_dll.MsiSourceListAddSourceExW(util.pwstrToFfi(szProductCodeOrPatchCode), util.pwstrToFfi(szUserSid), dwContext, dwOptions, util.pwstrToFfi(szSource), dwIndex);
}

export function MsiSourceListAddMediaDiskA(
  szProductCodeOrPatchCode: string | null /* Windows.Win32.Foundation.PSTR */,
  szUserSid: string | null /* Windows.Win32.Foundation.PSTR */,
  dwContext: MSIINSTALLCONTEXT /* Windows.Win32.System.ApplicationInstallationAndServicing.MSIINSTALLCONTEXT */,
  dwOptions: number /* u32 */,
  dwDiskId: number /* u32 */,
  szVolumeLabel: string | null /* Windows.Win32.Foundation.PSTR */,
  szDiskPrompt: string | null /* Windows.Win32.Foundation.PSTR */,
): number /* u32 */ {
  return libmsi_dll.MsiSourceListAddMediaDiskA(util.pstrToFfi(szProductCodeOrPatchCode), util.pstrToFfi(szUserSid), dwContext, dwOptions, dwDiskId, util.pstrToFfi(szVolumeLabel), util.pstrToFfi(szDiskPrompt));
}

export function MsiSourceListAddMediaDiskW(
  szProductCodeOrPatchCode: string | null /* Windows.Win32.Foundation.PWSTR */,
  szUserSid: string | null /* Windows.Win32.Foundation.PWSTR */,
  dwContext: MSIINSTALLCONTEXT /* Windows.Win32.System.ApplicationInstallationAndServicing.MSIINSTALLCONTEXT */,
  dwOptions: number /* u32 */,
  dwDiskId: number /* u32 */,
  szVolumeLabel: string | null /* Windows.Win32.Foundation.PWSTR */,
  szDiskPrompt: string | null /* Windows.Win32.Foundation.PWSTR */,
): number /* u32 */ {
  return libmsi_dll.MsiSourceListAddMediaDiskW(util.pwstrToFfi(szProductCodeOrPatchCode), util.pwstrToFfi(szUserSid), dwContext, dwOptions, dwDiskId, util.pwstrToFfi(szVolumeLabel), util.pwstrToFfi(szDiskPrompt));
}

export function MsiSourceListClearSourceA(
  szProductCodeOrPatchCode: string | null /* Windows.Win32.Foundation.PSTR */,
  szUserSid: string | null /* Windows.Win32.Foundation.PSTR */,
  dwContext: MSIINSTALLCONTEXT /* Windows.Win32.System.ApplicationInstallationAndServicing.MSIINSTALLCONTEXT */,
  dwOptions: number /* u32 */,
  szSource: string | null /* Windows.Win32.Foundation.PSTR */,
): number /* u32 */ {
  return libmsi_dll.MsiSourceListClearSourceA(util.pstrToFfi(szProductCodeOrPatchCode), util.pstrToFfi(szUserSid), dwContext, dwOptions, util.pstrToFfi(szSource));
}

export function MsiSourceListClearSourceW(
  szProductCodeOrPatchCode: string | null /* Windows.Win32.Foundation.PWSTR */,
  szUserSid: string | null /* Windows.Win32.Foundation.PWSTR */,
  dwContext: MSIINSTALLCONTEXT /* Windows.Win32.System.ApplicationInstallationAndServicing.MSIINSTALLCONTEXT */,
  dwOptions: number /* u32 */,
  szSource: string | null /* Windows.Win32.Foundation.PWSTR */,
): number /* u32 */ {
  return libmsi_dll.MsiSourceListClearSourceW(util.pwstrToFfi(szProductCodeOrPatchCode), util.pwstrToFfi(szUserSid), dwContext, dwOptions, util.pwstrToFfi(szSource));
}

export function MsiSourceListClearMediaDiskA(
  szProductCodeOrPatchCode: string | null /* Windows.Win32.Foundation.PSTR */,
  szUserSid: string | null /* Windows.Win32.Foundation.PSTR */,
  dwContext: MSIINSTALLCONTEXT /* Windows.Win32.System.ApplicationInstallationAndServicing.MSIINSTALLCONTEXT */,
  dwOptions: number /* u32 */,
  dwDiskId: number /* u32 */,
): number /* u32 */ {
  return libmsi_dll.MsiSourceListClearMediaDiskA(util.pstrToFfi(szProductCodeOrPatchCode), util.pstrToFfi(szUserSid), dwContext, dwOptions, dwDiskId);
}

export function MsiSourceListClearMediaDiskW(
  szProductCodeOrPatchCode: string | null /* Windows.Win32.Foundation.PWSTR */,
  szUserSid: string | null /* Windows.Win32.Foundation.PWSTR */,
  dwContext: MSIINSTALLCONTEXT /* Windows.Win32.System.ApplicationInstallationAndServicing.MSIINSTALLCONTEXT */,
  dwOptions: number /* u32 */,
  dwDiskId: number /* u32 */,
): number /* u32 */ {
  return libmsi_dll.MsiSourceListClearMediaDiskW(util.pwstrToFfi(szProductCodeOrPatchCode), util.pwstrToFfi(szUserSid), dwContext, dwOptions, dwDiskId);
}

export function MsiSourceListClearAllExA(
  szProductCodeOrPatchCode: string | null /* Windows.Win32.Foundation.PSTR */,
  szUserSid: string | null /* Windows.Win32.Foundation.PSTR */,
  dwContext: MSIINSTALLCONTEXT /* Windows.Win32.System.ApplicationInstallationAndServicing.MSIINSTALLCONTEXT */,
  dwOptions: number /* u32 */,
): number /* u32 */ {
  return libmsi_dll.MsiSourceListClearAllExA(util.pstrToFfi(szProductCodeOrPatchCode), util.pstrToFfi(szUserSid), dwContext, dwOptions);
}

export function MsiSourceListClearAllExW(
  szProductCodeOrPatchCode: string | null /* Windows.Win32.Foundation.PWSTR */,
  szUserSid: string | null /* Windows.Win32.Foundation.PWSTR */,
  dwContext: MSIINSTALLCONTEXT /* Windows.Win32.System.ApplicationInstallationAndServicing.MSIINSTALLCONTEXT */,
  dwOptions: number /* u32 */,
): number /* u32 */ {
  return libmsi_dll.MsiSourceListClearAllExW(util.pwstrToFfi(szProductCodeOrPatchCode), util.pwstrToFfi(szUserSid), dwContext, dwOptions);
}

export function MsiSourceListForceResolutionExA(
  szProductCodeOrPatchCode: string | null /* Windows.Win32.Foundation.PSTR */,
  szUserSid: string | null /* Windows.Win32.Foundation.PSTR */,
  dwContext: MSIINSTALLCONTEXT /* Windows.Win32.System.ApplicationInstallationAndServicing.MSIINSTALLCONTEXT */,
  dwOptions: number /* u32 */,
): number /* u32 */ {
  return libmsi_dll.MsiSourceListForceResolutionExA(util.pstrToFfi(szProductCodeOrPatchCode), util.pstrToFfi(szUserSid), dwContext, dwOptions);
}

export function MsiSourceListForceResolutionExW(
  szProductCodeOrPatchCode: string | null /* Windows.Win32.Foundation.PWSTR */,
  szUserSid: string | null /* Windows.Win32.Foundation.PWSTR */,
  dwContext: MSIINSTALLCONTEXT /* Windows.Win32.System.ApplicationInstallationAndServicing.MSIINSTALLCONTEXT */,
  dwOptions: number /* u32 */,
): number /* u32 */ {
  return libmsi_dll.MsiSourceListForceResolutionExW(util.pwstrToFfi(szProductCodeOrPatchCode), util.pwstrToFfi(szUserSid), dwContext, dwOptions);
}

export function MsiSourceListSetInfoA(
  szProductCodeOrPatchCode: string | null /* Windows.Win32.Foundation.PSTR */,
  szUserSid: string | null /* Windows.Win32.Foundation.PSTR */,
  dwContext: MSIINSTALLCONTEXT /* Windows.Win32.System.ApplicationInstallationAndServicing.MSIINSTALLCONTEXT */,
  dwOptions: number /* u32 */,
  szProperty: string | null /* Windows.Win32.Foundation.PSTR */,
  szValue: string | null /* Windows.Win32.Foundation.PSTR */,
): number /* u32 */ {
  return libmsi_dll.MsiSourceListSetInfoA(util.pstrToFfi(szProductCodeOrPatchCode), util.pstrToFfi(szUserSid), dwContext, dwOptions, util.pstrToFfi(szProperty), util.pstrToFfi(szValue));
}

export function MsiSourceListSetInfoW(
  szProductCodeOrPatchCode: string | null /* Windows.Win32.Foundation.PWSTR */,
  szUserSid: string | null /* Windows.Win32.Foundation.PWSTR */,
  dwContext: MSIINSTALLCONTEXT /* Windows.Win32.System.ApplicationInstallationAndServicing.MSIINSTALLCONTEXT */,
  dwOptions: number /* u32 */,
  szProperty: string | null /* Windows.Win32.Foundation.PWSTR */,
  szValue: string | null /* Windows.Win32.Foundation.PWSTR */,
): number /* u32 */ {
  return libmsi_dll.MsiSourceListSetInfoW(util.pwstrToFfi(szProductCodeOrPatchCode), util.pwstrToFfi(szUserSid), dwContext, dwOptions, util.pwstrToFfi(szProperty), util.pwstrToFfi(szValue));
}

export function MsiSourceListGetInfoA(
  szProductCodeOrPatchCode: string | null /* Windows.Win32.Foundation.PSTR */,
  szUserSid: string | null /* Windows.Win32.Foundation.PSTR */,
  dwContext: MSIINSTALLCONTEXT /* Windows.Win32.System.ApplicationInstallationAndServicing.MSIINSTALLCONTEXT */,
  dwOptions: number /* u32 */,
  szProperty: string | null /* Windows.Win32.Foundation.PSTR */,
  szValue: string | null /* Windows.Win32.Foundation.PSTR */,
  pcchValue: Deno.PointerValue | Uint8Array | null /* ptr */,
): number /* u32 */ {
  return libmsi_dll.MsiSourceListGetInfoA(util.pstrToFfi(szProductCodeOrPatchCode), util.pstrToFfi(szUserSid), dwContext, dwOptions, util.pstrToFfi(szProperty), util.pstrToFfi(szValue), util.toPointer(pcchValue));
}

export function MsiSourceListGetInfoW(
  szProductCodeOrPatchCode: string | null /* Windows.Win32.Foundation.PWSTR */,
  szUserSid: string | null /* Windows.Win32.Foundation.PWSTR */,
  dwContext: MSIINSTALLCONTEXT /* Windows.Win32.System.ApplicationInstallationAndServicing.MSIINSTALLCONTEXT */,
  dwOptions: number /* u32 */,
  szProperty: string | null /* Windows.Win32.Foundation.PWSTR */,
  szValue: string | null /* Windows.Win32.Foundation.PWSTR */,
  pcchValue: Deno.PointerValue | Uint8Array | null /* ptr */,
): number /* u32 */ {
  return libmsi_dll.MsiSourceListGetInfoW(util.pwstrToFfi(szProductCodeOrPatchCode), util.pwstrToFfi(szUserSid), dwContext, dwOptions, util.pwstrToFfi(szProperty), util.pwstrToFfi(szValue), util.toPointer(pcchValue));
}

export function MsiSourceListEnumSourcesA(
  szProductCodeOrPatchCode: string | null /* Windows.Win32.Foundation.PSTR */,
  szUserSid: string | null /* Windows.Win32.Foundation.PSTR */,
  dwContext: MSIINSTALLCONTEXT /* Windows.Win32.System.ApplicationInstallationAndServicing.MSIINSTALLCONTEXT */,
  dwOptions: number /* u32 */,
  dwIndex: number /* u32 */,
  szSource: string | null /* Windows.Win32.Foundation.PSTR */,
  pcchSource: Deno.PointerValue | Uint8Array | null /* ptr */,
): number /* u32 */ {
  return libmsi_dll.MsiSourceListEnumSourcesA(util.pstrToFfi(szProductCodeOrPatchCode), util.pstrToFfi(szUserSid), dwContext, dwOptions, dwIndex, util.pstrToFfi(szSource), util.toPointer(pcchSource));
}

export function MsiSourceListEnumSourcesW(
  szProductCodeOrPatchCode: string | null /* Windows.Win32.Foundation.PWSTR */,
  szUserSid: string | null /* Windows.Win32.Foundation.PWSTR */,
  dwContext: MSIINSTALLCONTEXT /* Windows.Win32.System.ApplicationInstallationAndServicing.MSIINSTALLCONTEXT */,
  dwOptions: number /* u32 */,
  dwIndex: number /* u32 */,
  szSource: string | null /* Windows.Win32.Foundation.PWSTR */,
  pcchSource: Deno.PointerValue | Uint8Array | null /* ptr */,
): number /* u32 */ {
  return libmsi_dll.MsiSourceListEnumSourcesW(util.pwstrToFfi(szProductCodeOrPatchCode), util.pwstrToFfi(szUserSid), dwContext, dwOptions, dwIndex, util.pwstrToFfi(szSource), util.toPointer(pcchSource));
}

export function MsiSourceListEnumMediaDisksA(
  szProductCodeOrPatchCode: string | null /* Windows.Win32.Foundation.PSTR */,
  szUserSid: string | null /* Windows.Win32.Foundation.PSTR */,
  dwContext: MSIINSTALLCONTEXT /* Windows.Win32.System.ApplicationInstallationAndServicing.MSIINSTALLCONTEXT */,
  dwOptions: number /* u32 */,
  dwIndex: number /* u32 */,
  pdwDiskId: Deno.PointerValue | Uint8Array | null /* ptr */,
  szVolumeLabel: string | null /* Windows.Win32.Foundation.PSTR */,
  pcchVolumeLabel: Deno.PointerValue | Uint8Array | null /* ptr */,
  szDiskPrompt: string | null /* Windows.Win32.Foundation.PSTR */,
  pcchDiskPrompt: Deno.PointerValue | Uint8Array | null /* ptr */,
): number /* u32 */ {
  return libmsi_dll.MsiSourceListEnumMediaDisksA(util.pstrToFfi(szProductCodeOrPatchCode), util.pstrToFfi(szUserSid), dwContext, dwOptions, dwIndex, util.toPointer(pdwDiskId), util.pstrToFfi(szVolumeLabel), util.toPointer(pcchVolumeLabel), util.pstrToFfi(szDiskPrompt), util.toPointer(pcchDiskPrompt));
}

export function MsiSourceListEnumMediaDisksW(
  szProductCodeOrPatchCode: string | null /* Windows.Win32.Foundation.PWSTR */,
  szUserSid: string | null /* Windows.Win32.Foundation.PWSTR */,
  dwContext: MSIINSTALLCONTEXT /* Windows.Win32.System.ApplicationInstallationAndServicing.MSIINSTALLCONTEXT */,
  dwOptions: number /* u32 */,
  dwIndex: number /* u32 */,
  pdwDiskId: Deno.PointerValue | Uint8Array | null /* ptr */,
  szVolumeLabel: string | null /* Windows.Win32.Foundation.PWSTR */,
  pcchVolumeLabel: Deno.PointerValue | Uint8Array | null /* ptr */,
  szDiskPrompt: string | null /* Windows.Win32.Foundation.PWSTR */,
  pcchDiskPrompt: Deno.PointerValue | Uint8Array | null /* ptr */,
): number /* u32 */ {
  return libmsi_dll.MsiSourceListEnumMediaDisksW(util.pwstrToFfi(szProductCodeOrPatchCode), util.pwstrToFfi(szUserSid), dwContext, dwOptions, dwIndex, util.toPointer(pdwDiskId), util.pwstrToFfi(szVolumeLabel), util.toPointer(pcchVolumeLabel), util.pwstrToFfi(szDiskPrompt), util.toPointer(pcchDiskPrompt));
}

export function MsiGetFileVersionA(
  szFilePath: string | null /* Windows.Win32.Foundation.PSTR */,
  lpVersionBuf: string | null /* Windows.Win32.Foundation.PSTR */,
  pcchVersionBuf: Deno.PointerValue | Uint8Array | null /* ptr */,
  lpLangBuf: string | null /* Windows.Win32.Foundation.PSTR */,
  pcchLangBuf: Deno.PointerValue | Uint8Array | null /* ptr */,
): number /* u32 */ {
  return libmsi_dll.MsiGetFileVersionA(util.pstrToFfi(szFilePath), util.pstrToFfi(lpVersionBuf), util.toPointer(pcchVersionBuf), util.pstrToFfi(lpLangBuf), util.toPointer(pcchLangBuf));
}

export function MsiGetFileVersionW(
  szFilePath: string | null /* Windows.Win32.Foundation.PWSTR */,
  lpVersionBuf: string | null /* Windows.Win32.Foundation.PWSTR */,
  pcchVersionBuf: Deno.PointerValue | Uint8Array | null /* ptr */,
  lpLangBuf: string | null /* Windows.Win32.Foundation.PWSTR */,
  pcchLangBuf: Deno.PointerValue | Uint8Array | null /* ptr */,
): number /* u32 */ {
  return libmsi_dll.MsiGetFileVersionW(util.pwstrToFfi(szFilePath), util.pwstrToFfi(lpVersionBuf), util.toPointer(pcchVersionBuf), util.pwstrToFfi(lpLangBuf), util.toPointer(pcchLangBuf));
}

export function MsiGetFileHashA(
  szFilePath: string | null /* Windows.Win32.Foundation.PSTR */,
  dwOptions: number /* u32 */,
  pHash: Deno.PointerValue | Uint8Array | null /* ptr */,
): number /* u32 */ {
  return libmsi_dll.MsiGetFileHashA(util.pstrToFfi(szFilePath), dwOptions, util.toPointer(pHash));
}

export function MsiGetFileHashW(
  szFilePath: string | null /* Windows.Win32.Foundation.PWSTR */,
  dwOptions: number /* u32 */,
  pHash: Deno.PointerValue | Uint8Array | null /* ptr */,
): number /* u32 */ {
  return libmsi_dll.MsiGetFileHashW(util.pwstrToFfi(szFilePath), dwOptions, util.toPointer(pHash));
}

export function MsiGetFileSignatureInformationA(
  szSignedObjectPath: string | null /* Windows.Win32.Foundation.PSTR */,
  dwFlags: number /* u32 */,
  ppcCertContext: Deno.PointerValue | Uint8Array | null /* ptr */,
  pbHashData: Deno.PointerValue | Uint8Array | null /* ptr */,
  pcbHashData: Deno.PointerValue | Uint8Array | null /* ptr */,
): Deno.PointerValue | null /* Windows.Win32.Foundation.HRESULT */ {
  return util.pointerFromFfi(libmsi_dll.MsiGetFileSignatureInformationA(util.pstrToFfi(szSignedObjectPath), dwFlags, util.toPointer(ppcCertContext), util.toPointer(pbHashData), util.toPointer(pcbHashData)));
}

export function MsiGetFileSignatureInformationW(
  szSignedObjectPath: string | null /* Windows.Win32.Foundation.PWSTR */,
  dwFlags: number /* u32 */,
  ppcCertContext: Deno.PointerValue | Uint8Array | null /* ptr */,
  pbHashData: Deno.PointerValue | Uint8Array | null /* ptr */,
  pcbHashData: Deno.PointerValue | Uint8Array | null /* ptr */,
): Deno.PointerValue | null /* Windows.Win32.Foundation.HRESULT */ {
  return util.pointerFromFfi(libmsi_dll.MsiGetFileSignatureInformationW(util.pwstrToFfi(szSignedObjectPath), dwFlags, util.toPointer(ppcCertContext), util.toPointer(pbHashData), util.toPointer(pcbHashData)));
}

export function MsiGetShortcutTargetA(
  szShortcutPath: string | null /* Windows.Win32.Foundation.PSTR */,
  szProductCode: string | null /* Windows.Win32.Foundation.PSTR */,
  szFeatureId: string | null /* Windows.Win32.Foundation.PSTR */,
  szComponentCode: string | null /* Windows.Win32.Foundation.PSTR */,
): number /* u32 */ {
  return libmsi_dll.MsiGetShortcutTargetA(util.pstrToFfi(szShortcutPath), util.pstrToFfi(szProductCode), util.pstrToFfi(szFeatureId), util.pstrToFfi(szComponentCode));
}

export function MsiGetShortcutTargetW(
  szShortcutPath: string | null /* Windows.Win32.Foundation.PWSTR */,
  szProductCode: string | null /* Windows.Win32.Foundation.PWSTR */,
  szFeatureId: string | null /* Windows.Win32.Foundation.PWSTR */,
  szComponentCode: string | null /* Windows.Win32.Foundation.PWSTR */,
): number /* u32 */ {
  return libmsi_dll.MsiGetShortcutTargetW(util.pwstrToFfi(szShortcutPath), util.pwstrToFfi(szProductCode), util.pwstrToFfi(szFeatureId), util.pwstrToFfi(szComponentCode));
}

export function MsiIsProductElevatedA(
  szProduct: string | null /* Windows.Win32.Foundation.PSTR */,
  pfElevated: Deno.PointerValue | Uint8Array | null /* ptr */,
): number /* u32 */ {
  return libmsi_dll.MsiIsProductElevatedA(util.pstrToFfi(szProduct), util.toPointer(pfElevated));
}

export function MsiIsProductElevatedW(
  szProduct: string | null /* Windows.Win32.Foundation.PWSTR */,
  pfElevated: Deno.PointerValue | Uint8Array | null /* ptr */,
): number /* u32 */ {
  return libmsi_dll.MsiIsProductElevatedW(util.pwstrToFfi(szProduct), util.toPointer(pfElevated));
}

export function MsiNotifySidChangeA(
  pOldSid: string | null /* Windows.Win32.Foundation.PSTR */,
  pNewSid: string | null /* Windows.Win32.Foundation.PSTR */,
): number /* u32 */ {
  return libmsi_dll.MsiNotifySidChangeA(util.pstrToFfi(pOldSid), util.pstrToFfi(pNewSid));
}

export function MsiNotifySidChangeW(
  pOldSid: string | null /* Windows.Win32.Foundation.PWSTR */,
  pNewSid: string | null /* Windows.Win32.Foundation.PWSTR */,
): number /* u32 */ {
  return libmsi_dll.MsiNotifySidChangeW(util.pwstrToFfi(pOldSid), util.pwstrToFfi(pNewSid));
}

export function MsiBeginTransactionA(
  szName: string | null /* Windows.Win32.Foundation.PSTR */,
  dwTransactionAttributes: number /* u32 */,
  phTransactionHandle: Deno.PointerValue | Uint8Array | null /* ptr */,
  phChangeOfOwnerEvent: Deno.PointerValue | Uint8Array | null /* ptr */,
): number /* u32 */ {
  return libmsi_dll.MsiBeginTransactionA(util.pstrToFfi(szName), dwTransactionAttributes, util.toPointer(phTransactionHandle), util.toPointer(phChangeOfOwnerEvent));
}

export function MsiBeginTransactionW(
  szName: string | null /* Windows.Win32.Foundation.PWSTR */,
  dwTransactionAttributes: number /* u32 */,
  phTransactionHandle: Deno.PointerValue | Uint8Array | null /* ptr */,
  phChangeOfOwnerEvent: Deno.PointerValue | Uint8Array | null /* ptr */,
): number /* u32 */ {
  return libmsi_dll.MsiBeginTransactionW(util.pwstrToFfi(szName), dwTransactionAttributes, util.toPointer(phTransactionHandle), util.toPointer(phChangeOfOwnerEvent));
}

export function MsiEndTransaction(
  dwTransactionState: MSITRANSACTIONSTATE /* Windows.Win32.System.ApplicationInstallationAndServicing.MSITRANSACTIONSTATE */,
): number /* u32 */ {
  return libmsi_dll.MsiEndTransaction(dwTransactionState);
}

export function MsiJoinTransaction(
  hTransactionHandle: Uint8Array | Deno.PointerValue | null /* Windows.Win32.System.ApplicationInstallationAndServicing.MSIHANDLE */,
  dwTransactionAttributes: number /* u32 */,
  phChangeOfOwnerEvent: Deno.PointerValue | Uint8Array | null /* ptr */,
): number /* u32 */ {
  return libmsi_dll.MsiJoinTransaction(util.toPointer(hTransactionHandle), dwTransactionAttributes, util.toPointer(phChangeOfOwnerEvent));
}

export function MsiDatabaseOpenViewA(
  hDatabase: Uint8Array | Deno.PointerValue | null /* Windows.Win32.System.ApplicationInstallationAndServicing.MSIHANDLE */,
  szQuery: string | null /* Windows.Win32.Foundation.PSTR */,
  phView: Deno.PointerValue | Uint8Array | null /* ptr */,
): number /* u32 */ {
  return libmsi_dll.MsiDatabaseOpenViewA(util.toPointer(hDatabase), util.pstrToFfi(szQuery), util.toPointer(phView));
}

export function MsiDatabaseOpenViewW(
  hDatabase: Uint8Array | Deno.PointerValue | null /* Windows.Win32.System.ApplicationInstallationAndServicing.MSIHANDLE */,
  szQuery: string | null /* Windows.Win32.Foundation.PWSTR */,
  phView: Deno.PointerValue | Uint8Array | null /* ptr */,
): number /* u32 */ {
  return libmsi_dll.MsiDatabaseOpenViewW(util.toPointer(hDatabase), util.pwstrToFfi(szQuery), util.toPointer(phView));
}

export function MsiViewGetErrorA(
  hView: Uint8Array | Deno.PointerValue | null /* Windows.Win32.System.ApplicationInstallationAndServicing.MSIHANDLE */,
  szColumnNameBuffer: string | null /* Windows.Win32.Foundation.PSTR */,
  pcchBuf: Deno.PointerValue | Uint8Array | null /* ptr */,
): MSIDBERROR /* Windows.Win32.System.ApplicationInstallationAndServicing.MSIDBERROR */ {
  return libmsi_dll.MsiViewGetErrorA(util.toPointer(hView), util.pstrToFfi(szColumnNameBuffer), util.toPointer(pcchBuf));
}

export function MsiViewGetErrorW(
  hView: Uint8Array | Deno.PointerValue | null /* Windows.Win32.System.ApplicationInstallationAndServicing.MSIHANDLE */,
  szColumnNameBuffer: string | null /* Windows.Win32.Foundation.PWSTR */,
  pcchBuf: Deno.PointerValue | Uint8Array | null /* ptr */,
): MSIDBERROR /* Windows.Win32.System.ApplicationInstallationAndServicing.MSIDBERROR */ {
  return libmsi_dll.MsiViewGetErrorW(util.toPointer(hView), util.pwstrToFfi(szColumnNameBuffer), util.toPointer(pcchBuf));
}

export function MsiViewExecute(
  hView: Uint8Array | Deno.PointerValue | null /* Windows.Win32.System.ApplicationInstallationAndServicing.MSIHANDLE */,
  hRecord: Uint8Array | Deno.PointerValue | null /* Windows.Win32.System.ApplicationInstallationAndServicing.MSIHANDLE */,
): number /* u32 */ {
  return libmsi_dll.MsiViewExecute(util.toPointer(hView), util.toPointer(hRecord));
}

export function MsiViewFetch(
  hView: Uint8Array | Deno.PointerValue | null /* Windows.Win32.System.ApplicationInstallationAndServicing.MSIHANDLE */,
  phRecord: Deno.PointerValue | Uint8Array | null /* ptr */,
): number /* u32 */ {
  return libmsi_dll.MsiViewFetch(util.toPointer(hView), util.toPointer(phRecord));
}

export function MsiViewModify(
  hView: Uint8Array | Deno.PointerValue | null /* Windows.Win32.System.ApplicationInstallationAndServicing.MSIHANDLE */,
  eModifyMode: MSIMODIFY /* Windows.Win32.System.ApplicationInstallationAndServicing.MSIMODIFY */,
  hRecord: Uint8Array | Deno.PointerValue | null /* Windows.Win32.System.ApplicationInstallationAndServicing.MSIHANDLE */,
): number /* u32 */ {
  return libmsi_dll.MsiViewModify(util.toPointer(hView), eModifyMode, util.toPointer(hRecord));
}

export function MsiViewGetColumnInfo(
  hView: Uint8Array | Deno.PointerValue | null /* Windows.Win32.System.ApplicationInstallationAndServicing.MSIHANDLE */,
  eColumnInfo: MSICOLINFO /* Windows.Win32.System.ApplicationInstallationAndServicing.MSICOLINFO */,
  phRecord: Deno.PointerValue | Uint8Array | null /* ptr */,
): number /* u32 */ {
  return libmsi_dll.MsiViewGetColumnInfo(util.toPointer(hView), eColumnInfo, util.toPointer(phRecord));
}

export function MsiViewClose(
  hView: Uint8Array | Deno.PointerValue | null /* Windows.Win32.System.ApplicationInstallationAndServicing.MSIHANDLE */,
): number /* u32 */ {
  return libmsi_dll.MsiViewClose(util.toPointer(hView));
}

export function MsiDatabaseGetPrimaryKeysA(
  hDatabase: Uint8Array | Deno.PointerValue | null /* Windows.Win32.System.ApplicationInstallationAndServicing.MSIHANDLE */,
  szTableName: string | null /* Windows.Win32.Foundation.PSTR */,
  phRecord: Deno.PointerValue | Uint8Array | null /* ptr */,
): number /* u32 */ {
  return libmsi_dll.MsiDatabaseGetPrimaryKeysA(util.toPointer(hDatabase), util.pstrToFfi(szTableName), util.toPointer(phRecord));
}

export function MsiDatabaseGetPrimaryKeysW(
  hDatabase: Uint8Array | Deno.PointerValue | null /* Windows.Win32.System.ApplicationInstallationAndServicing.MSIHANDLE */,
  szTableName: string | null /* Windows.Win32.Foundation.PWSTR */,
  phRecord: Deno.PointerValue | Uint8Array | null /* ptr */,
): number /* u32 */ {
  return libmsi_dll.MsiDatabaseGetPrimaryKeysW(util.toPointer(hDatabase), util.pwstrToFfi(szTableName), util.toPointer(phRecord));
}

export function MsiDatabaseIsTablePersistentA(
  hDatabase: Uint8Array | Deno.PointerValue | null /* Windows.Win32.System.ApplicationInstallationAndServicing.MSIHANDLE */,
  szTableName: string | null /* Windows.Win32.Foundation.PSTR */,
): MSICONDITION /* Windows.Win32.System.ApplicationInstallationAndServicing.MSICONDITION */ {
  return libmsi_dll.MsiDatabaseIsTablePersistentA(util.toPointer(hDatabase), util.pstrToFfi(szTableName));
}

export function MsiDatabaseIsTablePersistentW(
  hDatabase: Uint8Array | Deno.PointerValue | null /* Windows.Win32.System.ApplicationInstallationAndServicing.MSIHANDLE */,
  szTableName: string | null /* Windows.Win32.Foundation.PWSTR */,
): MSICONDITION /* Windows.Win32.System.ApplicationInstallationAndServicing.MSICONDITION */ {
  return libmsi_dll.MsiDatabaseIsTablePersistentW(util.toPointer(hDatabase), util.pwstrToFfi(szTableName));
}

export function MsiGetSummaryInformationA(
  hDatabase: Uint8Array | Deno.PointerValue | null /* Windows.Win32.System.ApplicationInstallationAndServicing.MSIHANDLE */,
  szDatabasePath: string | null /* Windows.Win32.Foundation.PSTR */,
  uiUpdateCount: number /* u32 */,
  phSummaryInfo: Deno.PointerValue | Uint8Array | null /* ptr */,
): number /* u32 */ {
  return libmsi_dll.MsiGetSummaryInformationA(util.toPointer(hDatabase), util.pstrToFfi(szDatabasePath), uiUpdateCount, util.toPointer(phSummaryInfo));
}

export function MsiGetSummaryInformationW(
  hDatabase: Uint8Array | Deno.PointerValue | null /* Windows.Win32.System.ApplicationInstallationAndServicing.MSIHANDLE */,
  szDatabasePath: string | null /* Windows.Win32.Foundation.PWSTR */,
  uiUpdateCount: number /* u32 */,
  phSummaryInfo: Deno.PointerValue | Uint8Array | null /* ptr */,
): number /* u32 */ {
  return libmsi_dll.MsiGetSummaryInformationW(util.toPointer(hDatabase), util.pwstrToFfi(szDatabasePath), uiUpdateCount, util.toPointer(phSummaryInfo));
}

export function MsiSummaryInfoGetPropertyCount(
  hSummaryInfo: Uint8Array | Deno.PointerValue | null /* Windows.Win32.System.ApplicationInstallationAndServicing.MSIHANDLE */,
  puiPropertyCount: Deno.PointerValue | Uint8Array | null /* ptr */,
): number /* u32 */ {
  return libmsi_dll.MsiSummaryInfoGetPropertyCount(util.toPointer(hSummaryInfo), util.toPointer(puiPropertyCount));
}

export function MsiSummaryInfoSetPropertyA(
  hSummaryInfo: Uint8Array | Deno.PointerValue | null /* Windows.Win32.System.ApplicationInstallationAndServicing.MSIHANDLE */,
  uiProperty: number /* u32 */,
  uiDataType: number /* u32 */,
  iValue: number /* i32 */,
  pftValue: Deno.PointerValue | Uint8Array | null /* ptr */,
  szValue: string | null /* Windows.Win32.Foundation.PSTR */,
): number /* u32 */ {
  return libmsi_dll.MsiSummaryInfoSetPropertyA(util.toPointer(hSummaryInfo), uiProperty, uiDataType, iValue, util.toPointer(pftValue), util.pstrToFfi(szValue));
}

export function MsiSummaryInfoSetPropertyW(
  hSummaryInfo: Uint8Array | Deno.PointerValue | null /* Windows.Win32.System.ApplicationInstallationAndServicing.MSIHANDLE */,
  uiProperty: number /* u32 */,
  uiDataType: number /* u32 */,
  iValue: number /* i32 */,
  pftValue: Deno.PointerValue | Uint8Array | null /* ptr */,
  szValue: string | null /* Windows.Win32.Foundation.PWSTR */,
): number /* u32 */ {
  return libmsi_dll.MsiSummaryInfoSetPropertyW(util.toPointer(hSummaryInfo), uiProperty, uiDataType, iValue, util.toPointer(pftValue), util.pwstrToFfi(szValue));
}

export function MsiSummaryInfoGetPropertyA(
  hSummaryInfo: Uint8Array | Deno.PointerValue | null /* Windows.Win32.System.ApplicationInstallationAndServicing.MSIHANDLE */,
  uiProperty: number /* u32 */,
  puiDataType: Deno.PointerValue | Uint8Array | null /* ptr */,
  piValue: Deno.PointerValue | Uint8Array | null /* ptr */,
  pftValue: Deno.PointerValue | Uint8Array | null /* ptr */,
  szValueBuf: string | null /* Windows.Win32.Foundation.PSTR */,
  pcchValueBuf: Deno.PointerValue | Uint8Array | null /* ptr */,
): number /* u32 */ {
  return libmsi_dll.MsiSummaryInfoGetPropertyA(util.toPointer(hSummaryInfo), uiProperty, util.toPointer(puiDataType), util.toPointer(piValue), util.toPointer(pftValue), util.pstrToFfi(szValueBuf), util.toPointer(pcchValueBuf));
}

export function MsiSummaryInfoGetPropertyW(
  hSummaryInfo: Uint8Array | Deno.PointerValue | null /* Windows.Win32.System.ApplicationInstallationAndServicing.MSIHANDLE */,
  uiProperty: number /* u32 */,
  puiDataType: Deno.PointerValue | Uint8Array | null /* ptr */,
  piValue: Deno.PointerValue | Uint8Array | null /* ptr */,
  pftValue: Deno.PointerValue | Uint8Array | null /* ptr */,
  szValueBuf: string | null /* Windows.Win32.Foundation.PWSTR */,
  pcchValueBuf: Deno.PointerValue | Uint8Array | null /* ptr */,
): number /* u32 */ {
  return libmsi_dll.MsiSummaryInfoGetPropertyW(util.toPointer(hSummaryInfo), uiProperty, util.toPointer(puiDataType), util.toPointer(piValue), util.toPointer(pftValue), util.pwstrToFfi(szValueBuf), util.toPointer(pcchValueBuf));
}

export function MsiSummaryInfoPersist(
  hSummaryInfo: Uint8Array | Deno.PointerValue | null /* Windows.Win32.System.ApplicationInstallationAndServicing.MSIHANDLE */,
): number /* u32 */ {
  return libmsi_dll.MsiSummaryInfoPersist(util.toPointer(hSummaryInfo));
}

export function MsiOpenDatabaseA(
  szDatabasePath: string | null /* Windows.Win32.Foundation.PSTR */,
  szPersist: string | null /* Windows.Win32.Foundation.PSTR */,
  phDatabase: Deno.PointerValue | Uint8Array | null /* ptr */,
): number /* u32 */ {
  return libmsi_dll.MsiOpenDatabaseA(util.pstrToFfi(szDatabasePath), util.pstrToFfi(szPersist), util.toPointer(phDatabase));
}

export function MsiOpenDatabaseW(
  szDatabasePath: string | null /* Windows.Win32.Foundation.PWSTR */,
  szPersist: string | null /* Windows.Win32.Foundation.PWSTR */,
  phDatabase: Deno.PointerValue | Uint8Array | null /* ptr */,
): number /* u32 */ {
  return libmsi_dll.MsiOpenDatabaseW(util.pwstrToFfi(szDatabasePath), util.pwstrToFfi(szPersist), util.toPointer(phDatabase));
}

export function MsiDatabaseImportA(
  hDatabase: Uint8Array | Deno.PointerValue | null /* Windows.Win32.System.ApplicationInstallationAndServicing.MSIHANDLE */,
  szFolderPath: string | null /* Windows.Win32.Foundation.PSTR */,
  szFileName: string | null /* Windows.Win32.Foundation.PSTR */,
): number /* u32 */ {
  return libmsi_dll.MsiDatabaseImportA(util.toPointer(hDatabase), util.pstrToFfi(szFolderPath), util.pstrToFfi(szFileName));
}

export function MsiDatabaseImportW(
  hDatabase: Uint8Array | Deno.PointerValue | null /* Windows.Win32.System.ApplicationInstallationAndServicing.MSIHANDLE */,
  szFolderPath: string | null /* Windows.Win32.Foundation.PWSTR */,
  szFileName: string | null /* Windows.Win32.Foundation.PWSTR */,
): number /* u32 */ {
  return libmsi_dll.MsiDatabaseImportW(util.toPointer(hDatabase), util.pwstrToFfi(szFolderPath), util.pwstrToFfi(szFileName));
}

export function MsiDatabaseExportA(
  hDatabase: Uint8Array | Deno.PointerValue | null /* Windows.Win32.System.ApplicationInstallationAndServicing.MSIHANDLE */,
  szTableName: string | null /* Windows.Win32.Foundation.PSTR */,
  szFolderPath: string | null /* Windows.Win32.Foundation.PSTR */,
  szFileName: string | null /* Windows.Win32.Foundation.PSTR */,
): number /* u32 */ {
  return libmsi_dll.MsiDatabaseExportA(util.toPointer(hDatabase), util.pstrToFfi(szTableName), util.pstrToFfi(szFolderPath), util.pstrToFfi(szFileName));
}

export function MsiDatabaseExportW(
  hDatabase: Uint8Array | Deno.PointerValue | null /* Windows.Win32.System.ApplicationInstallationAndServicing.MSIHANDLE */,
  szTableName: string | null /* Windows.Win32.Foundation.PWSTR */,
  szFolderPath: string | null /* Windows.Win32.Foundation.PWSTR */,
  szFileName: string | null /* Windows.Win32.Foundation.PWSTR */,
): number /* u32 */ {
  return libmsi_dll.MsiDatabaseExportW(util.toPointer(hDatabase), util.pwstrToFfi(szTableName), util.pwstrToFfi(szFolderPath), util.pwstrToFfi(szFileName));
}

export function MsiDatabaseMergeA(
  hDatabase: Uint8Array | Deno.PointerValue | null /* Windows.Win32.System.ApplicationInstallationAndServicing.MSIHANDLE */,
  hDatabaseMerge: Uint8Array | Deno.PointerValue | null /* Windows.Win32.System.ApplicationInstallationAndServicing.MSIHANDLE */,
  szTableName: string | null /* Windows.Win32.Foundation.PSTR */,
): number /* u32 */ {
  return libmsi_dll.MsiDatabaseMergeA(util.toPointer(hDatabase), util.toPointer(hDatabaseMerge), util.pstrToFfi(szTableName));
}

export function MsiDatabaseMergeW(
  hDatabase: Uint8Array | Deno.PointerValue | null /* Windows.Win32.System.ApplicationInstallationAndServicing.MSIHANDLE */,
  hDatabaseMerge: Uint8Array | Deno.PointerValue | null /* Windows.Win32.System.ApplicationInstallationAndServicing.MSIHANDLE */,
  szTableName: string | null /* Windows.Win32.Foundation.PWSTR */,
): number /* u32 */ {
  return libmsi_dll.MsiDatabaseMergeW(util.toPointer(hDatabase), util.toPointer(hDatabaseMerge), util.pwstrToFfi(szTableName));
}

export function MsiDatabaseGenerateTransformA(
  hDatabase: Uint8Array | Deno.PointerValue | null /* Windows.Win32.System.ApplicationInstallationAndServicing.MSIHANDLE */,
  hDatabaseReference: Uint8Array | Deno.PointerValue | null /* Windows.Win32.System.ApplicationInstallationAndServicing.MSIHANDLE */,
  szTransformFile: string | null /* Windows.Win32.Foundation.PSTR */,
  iReserved1: number /* i32 */,
  iReserved2: number /* i32 */,
): number /* u32 */ {
  return libmsi_dll.MsiDatabaseGenerateTransformA(util.toPointer(hDatabase), util.toPointer(hDatabaseReference), util.pstrToFfi(szTransformFile), iReserved1, iReserved2);
}

export function MsiDatabaseGenerateTransformW(
  hDatabase: Uint8Array | Deno.PointerValue | null /* Windows.Win32.System.ApplicationInstallationAndServicing.MSIHANDLE */,
  hDatabaseReference: Uint8Array | Deno.PointerValue | null /* Windows.Win32.System.ApplicationInstallationAndServicing.MSIHANDLE */,
  szTransformFile: string | null /* Windows.Win32.Foundation.PWSTR */,
  iReserved1: number /* i32 */,
  iReserved2: number /* i32 */,
): number /* u32 */ {
  return libmsi_dll.MsiDatabaseGenerateTransformW(util.toPointer(hDatabase), util.toPointer(hDatabaseReference), util.pwstrToFfi(szTransformFile), iReserved1, iReserved2);
}

export function MsiDatabaseApplyTransformA(
  hDatabase: Uint8Array | Deno.PointerValue | null /* Windows.Win32.System.ApplicationInstallationAndServicing.MSIHANDLE */,
  szTransformFile: string | null /* Windows.Win32.Foundation.PSTR */,
  iErrorConditions: MSITRANSFORM_ERROR /* Windows.Win32.System.ApplicationInstallationAndServicing.MSITRANSFORM_ERROR */,
): number /* u32 */ {
  return libmsi_dll.MsiDatabaseApplyTransformA(util.toPointer(hDatabase), util.pstrToFfi(szTransformFile), iErrorConditions);
}

export function MsiDatabaseApplyTransformW(
  hDatabase: Uint8Array | Deno.PointerValue | null /* Windows.Win32.System.ApplicationInstallationAndServicing.MSIHANDLE */,
  szTransformFile: string | null /* Windows.Win32.Foundation.PWSTR */,
  iErrorConditions: MSITRANSFORM_ERROR /* Windows.Win32.System.ApplicationInstallationAndServicing.MSITRANSFORM_ERROR */,
): number /* u32 */ {
  return libmsi_dll.MsiDatabaseApplyTransformW(util.toPointer(hDatabase), util.pwstrToFfi(szTransformFile), iErrorConditions);
}

export function MsiCreateTransformSummaryInfoA(
  hDatabase: Uint8Array | Deno.PointerValue | null /* Windows.Win32.System.ApplicationInstallationAndServicing.MSIHANDLE */,
  hDatabaseReference: Uint8Array | Deno.PointerValue | null /* Windows.Win32.System.ApplicationInstallationAndServicing.MSIHANDLE */,
  szTransformFile: string | null /* Windows.Win32.Foundation.PSTR */,
  iErrorConditions: MSITRANSFORM_ERROR /* Windows.Win32.System.ApplicationInstallationAndServicing.MSITRANSFORM_ERROR */,
  iValidation: MSITRANSFORM_VALIDATE /* Windows.Win32.System.ApplicationInstallationAndServicing.MSITRANSFORM_VALIDATE */,
): number /* u32 */ {
  return libmsi_dll.MsiCreateTransformSummaryInfoA(util.toPointer(hDatabase), util.toPointer(hDatabaseReference), util.pstrToFfi(szTransformFile), iErrorConditions, iValidation);
}

export function MsiCreateTransformSummaryInfoW(
  hDatabase: Uint8Array | Deno.PointerValue | null /* Windows.Win32.System.ApplicationInstallationAndServicing.MSIHANDLE */,
  hDatabaseReference: Uint8Array | Deno.PointerValue | null /* Windows.Win32.System.ApplicationInstallationAndServicing.MSIHANDLE */,
  szTransformFile: string | null /* Windows.Win32.Foundation.PWSTR */,
  iErrorConditions: MSITRANSFORM_ERROR /* Windows.Win32.System.ApplicationInstallationAndServicing.MSITRANSFORM_ERROR */,
  iValidation: MSITRANSFORM_VALIDATE /* Windows.Win32.System.ApplicationInstallationAndServicing.MSITRANSFORM_VALIDATE */,
): number /* u32 */ {
  return libmsi_dll.MsiCreateTransformSummaryInfoW(util.toPointer(hDatabase), util.toPointer(hDatabaseReference), util.pwstrToFfi(szTransformFile), iErrorConditions, iValidation);
}

export function MsiDatabaseCommit(
  hDatabase: Uint8Array | Deno.PointerValue | null /* Windows.Win32.System.ApplicationInstallationAndServicing.MSIHANDLE */,
): number /* u32 */ {
  return libmsi_dll.MsiDatabaseCommit(util.toPointer(hDatabase));
}

export function MsiGetDatabaseState(
  hDatabase: Uint8Array | Deno.PointerValue | null /* Windows.Win32.System.ApplicationInstallationAndServicing.MSIHANDLE */,
): MSIDBSTATE /* Windows.Win32.System.ApplicationInstallationAndServicing.MSIDBSTATE */ {
  return libmsi_dll.MsiGetDatabaseState(util.toPointer(hDatabase));
}

export function MsiCreateRecord(
  cParams: number /* u32 */,
): Deno.PointerValue | null /* Windows.Win32.System.ApplicationInstallationAndServicing.MSIHANDLE */ {
  return util.pointerFromFfi(libmsi_dll.MsiCreateRecord(cParams));
}

export function MsiRecordIsNull(
  hRecord: Uint8Array | Deno.PointerValue | null /* Windows.Win32.System.ApplicationInstallationAndServicing.MSIHANDLE */,
  iField: number /* u32 */,
): boolean /* Windows.Win32.Foundation.BOOL */ {
  return util.boolFromFfi(libmsi_dll.MsiRecordIsNull(util.toPointer(hRecord), iField));
}

export function MsiRecordDataSize(
  hRecord: Uint8Array | Deno.PointerValue | null /* Windows.Win32.System.ApplicationInstallationAndServicing.MSIHANDLE */,
  iField: number /* u32 */,
): number /* u32 */ {
  return libmsi_dll.MsiRecordDataSize(util.toPointer(hRecord), iField);
}

export function MsiRecordSetInteger(
  hRecord: Uint8Array | Deno.PointerValue | null /* Windows.Win32.System.ApplicationInstallationAndServicing.MSIHANDLE */,
  iField: number /* u32 */,
  iValue: number /* i32 */,
): number /* u32 */ {
  return libmsi_dll.MsiRecordSetInteger(util.toPointer(hRecord), iField, iValue);
}

export function MsiRecordSetStringA(
  hRecord: Uint8Array | Deno.PointerValue | null /* Windows.Win32.System.ApplicationInstallationAndServicing.MSIHANDLE */,
  iField: number /* u32 */,
  szValue: string | null /* Windows.Win32.Foundation.PSTR */,
): number /* u32 */ {
  return libmsi_dll.MsiRecordSetStringA(util.toPointer(hRecord), iField, util.pstrToFfi(szValue));
}

export function MsiRecordSetStringW(
  hRecord: Uint8Array | Deno.PointerValue | null /* Windows.Win32.System.ApplicationInstallationAndServicing.MSIHANDLE */,
  iField: number /* u32 */,
  szValue: string | null /* Windows.Win32.Foundation.PWSTR */,
): number /* u32 */ {
  return libmsi_dll.MsiRecordSetStringW(util.toPointer(hRecord), iField, util.pwstrToFfi(szValue));
}

export function MsiRecordGetInteger(
  hRecord: Uint8Array | Deno.PointerValue | null /* Windows.Win32.System.ApplicationInstallationAndServicing.MSIHANDLE */,
  iField: number /* u32 */,
): number /* i32 */ {
  return libmsi_dll.MsiRecordGetInteger(util.toPointer(hRecord), iField);
}

export function MsiRecordGetStringA(
  hRecord: Uint8Array | Deno.PointerValue | null /* Windows.Win32.System.ApplicationInstallationAndServicing.MSIHANDLE */,
  iField: number /* u32 */,
  szValueBuf: string | null /* Windows.Win32.Foundation.PSTR */,
  pcchValueBuf: Deno.PointerValue | Uint8Array | null /* ptr */,
): number /* u32 */ {
  return libmsi_dll.MsiRecordGetStringA(util.toPointer(hRecord), iField, util.pstrToFfi(szValueBuf), util.toPointer(pcchValueBuf));
}

export function MsiRecordGetStringW(
  hRecord: Uint8Array | Deno.PointerValue | null /* Windows.Win32.System.ApplicationInstallationAndServicing.MSIHANDLE */,
  iField: number /* u32 */,
  szValueBuf: string | null /* Windows.Win32.Foundation.PWSTR */,
  pcchValueBuf: Deno.PointerValue | Uint8Array | null /* ptr */,
): number /* u32 */ {
  return libmsi_dll.MsiRecordGetStringW(util.toPointer(hRecord), iField, util.pwstrToFfi(szValueBuf), util.toPointer(pcchValueBuf));
}

export function MsiRecordGetFieldCount(
  hRecord: Uint8Array | Deno.PointerValue | null /* Windows.Win32.System.ApplicationInstallationAndServicing.MSIHANDLE */,
): number /* u32 */ {
  return libmsi_dll.MsiRecordGetFieldCount(util.toPointer(hRecord));
}

export function MsiRecordSetStreamA(
  hRecord: Uint8Array | Deno.PointerValue | null /* Windows.Win32.System.ApplicationInstallationAndServicing.MSIHANDLE */,
  iField: number /* u32 */,
  szFilePath: string | null /* Windows.Win32.Foundation.PSTR */,
): number /* u32 */ {
  return libmsi_dll.MsiRecordSetStreamA(util.toPointer(hRecord), iField, util.pstrToFfi(szFilePath));
}

export function MsiRecordSetStreamW(
  hRecord: Uint8Array | Deno.PointerValue | null /* Windows.Win32.System.ApplicationInstallationAndServicing.MSIHANDLE */,
  iField: number /* u32 */,
  szFilePath: string | null /* Windows.Win32.Foundation.PWSTR */,
): number /* u32 */ {
  return libmsi_dll.MsiRecordSetStreamW(util.toPointer(hRecord), iField, util.pwstrToFfi(szFilePath));
}

export function MsiRecordReadStream(
  hRecord: Uint8Array | Deno.PointerValue | null /* Windows.Win32.System.ApplicationInstallationAndServicing.MSIHANDLE */,
  iField: number /* u32 */,
  szDataBuf: string | null /* Windows.Win32.Foundation.PSTR */,
  pcbDataBuf: Deno.PointerValue | Uint8Array | null /* ptr */,
): number /* u32 */ {
  return libmsi_dll.MsiRecordReadStream(util.toPointer(hRecord), iField, util.pstrToFfi(szDataBuf), util.toPointer(pcbDataBuf));
}

export function MsiRecordClearData(
  hRecord: Uint8Array | Deno.PointerValue | null /* Windows.Win32.System.ApplicationInstallationAndServicing.MSIHANDLE */,
): number /* u32 */ {
  return libmsi_dll.MsiRecordClearData(util.toPointer(hRecord));
}

export function MsiGetActiveDatabase(
  hInstall: Uint8Array | Deno.PointerValue | null /* Windows.Win32.System.ApplicationInstallationAndServicing.MSIHANDLE */,
): Deno.PointerValue | null /* Windows.Win32.System.ApplicationInstallationAndServicing.MSIHANDLE */ {
  return util.pointerFromFfi(libmsi_dll.MsiGetActiveDatabase(util.toPointer(hInstall)));
}

export function MsiSetPropertyA(
  hInstall: Uint8Array | Deno.PointerValue | null /* Windows.Win32.System.ApplicationInstallationAndServicing.MSIHANDLE */,
  szName: string | null /* Windows.Win32.Foundation.PSTR */,
  szValue: string | null /* Windows.Win32.Foundation.PSTR */,
): number /* u32 */ {
  return libmsi_dll.MsiSetPropertyA(util.toPointer(hInstall), util.pstrToFfi(szName), util.pstrToFfi(szValue));
}

export function MsiSetPropertyW(
  hInstall: Uint8Array | Deno.PointerValue | null /* Windows.Win32.System.ApplicationInstallationAndServicing.MSIHANDLE */,
  szName: string | null /* Windows.Win32.Foundation.PWSTR */,
  szValue: string | null /* Windows.Win32.Foundation.PWSTR */,
): number /* u32 */ {
  return libmsi_dll.MsiSetPropertyW(util.toPointer(hInstall), util.pwstrToFfi(szName), util.pwstrToFfi(szValue));
}

export function MsiGetPropertyA(
  hInstall: Uint8Array | Deno.PointerValue | null /* Windows.Win32.System.ApplicationInstallationAndServicing.MSIHANDLE */,
  szName: string | null /* Windows.Win32.Foundation.PSTR */,
  szValueBuf: string | null /* Windows.Win32.Foundation.PSTR */,
  pcchValueBuf: Deno.PointerValue | Uint8Array | null /* ptr */,
): number /* u32 */ {
  return libmsi_dll.MsiGetPropertyA(util.toPointer(hInstall), util.pstrToFfi(szName), util.pstrToFfi(szValueBuf), util.toPointer(pcchValueBuf));
}

export function MsiGetPropertyW(
  hInstall: Uint8Array | Deno.PointerValue | null /* Windows.Win32.System.ApplicationInstallationAndServicing.MSIHANDLE */,
  szName: string | null /* Windows.Win32.Foundation.PWSTR */,
  szValueBuf: string | null /* Windows.Win32.Foundation.PWSTR */,
  pcchValueBuf: Deno.PointerValue | Uint8Array | null /* ptr */,
): number /* u32 */ {
  return libmsi_dll.MsiGetPropertyW(util.toPointer(hInstall), util.pwstrToFfi(szName), util.pwstrToFfi(szValueBuf), util.toPointer(pcchValueBuf));
}

export function MsiGetLanguage(
  hInstall: Uint8Array | Deno.PointerValue | null /* Windows.Win32.System.ApplicationInstallationAndServicing.MSIHANDLE */,
): number /* u16 */ {
  return libmsi_dll.MsiGetLanguage(util.toPointer(hInstall));
}

export function MsiGetMode(
  hInstall: Uint8Array | Deno.PointerValue | null /* Windows.Win32.System.ApplicationInstallationAndServicing.MSIHANDLE */,
  eRunMode: MSIRUNMODE /* Windows.Win32.System.ApplicationInstallationAndServicing.MSIRUNMODE */,
): boolean /* Windows.Win32.Foundation.BOOL */ {
  return util.boolFromFfi(libmsi_dll.MsiGetMode(util.toPointer(hInstall), eRunMode));
}

export function MsiSetMode(
  hInstall: Uint8Array | Deno.PointerValue | null /* Windows.Win32.System.ApplicationInstallationAndServicing.MSIHANDLE */,
  eRunMode: MSIRUNMODE /* Windows.Win32.System.ApplicationInstallationAndServicing.MSIRUNMODE */,
  fState: boolean /* Windows.Win32.Foundation.BOOL */,
): number /* u32 */ {
  return libmsi_dll.MsiSetMode(util.toPointer(hInstall), eRunMode, util.boolToFfi(fState));
}

export function MsiFormatRecordA(
  hInstall: Uint8Array | Deno.PointerValue | null /* Windows.Win32.System.ApplicationInstallationAndServicing.MSIHANDLE */,
  hRecord: Uint8Array | Deno.PointerValue | null /* Windows.Win32.System.ApplicationInstallationAndServicing.MSIHANDLE */,
  szResultBuf: string | null /* Windows.Win32.Foundation.PSTR */,
  pcchResultBuf: Deno.PointerValue | Uint8Array | null /* ptr */,
): number /* u32 */ {
  return libmsi_dll.MsiFormatRecordA(util.toPointer(hInstall), util.toPointer(hRecord), util.pstrToFfi(szResultBuf), util.toPointer(pcchResultBuf));
}

export function MsiFormatRecordW(
  hInstall: Uint8Array | Deno.PointerValue | null /* Windows.Win32.System.ApplicationInstallationAndServicing.MSIHANDLE */,
  hRecord: Uint8Array | Deno.PointerValue | null /* Windows.Win32.System.ApplicationInstallationAndServicing.MSIHANDLE */,
  szResultBuf: string | null /* Windows.Win32.Foundation.PWSTR */,
  pcchResultBuf: Deno.PointerValue | Uint8Array | null /* ptr */,
): number /* u32 */ {
  return libmsi_dll.MsiFormatRecordW(util.toPointer(hInstall), util.toPointer(hRecord), util.pwstrToFfi(szResultBuf), util.toPointer(pcchResultBuf));
}

export function MsiDoActionA(
  hInstall: Uint8Array | Deno.PointerValue | null /* Windows.Win32.System.ApplicationInstallationAndServicing.MSIHANDLE */,
  szAction: string | null /* Windows.Win32.Foundation.PSTR */,
): number /* u32 */ {
  return libmsi_dll.MsiDoActionA(util.toPointer(hInstall), util.pstrToFfi(szAction));
}

export function MsiDoActionW(
  hInstall: Uint8Array | Deno.PointerValue | null /* Windows.Win32.System.ApplicationInstallationAndServicing.MSIHANDLE */,
  szAction: string | null /* Windows.Win32.Foundation.PWSTR */,
): number /* u32 */ {
  return libmsi_dll.MsiDoActionW(util.toPointer(hInstall), util.pwstrToFfi(szAction));
}

export function MsiSequenceA(
  hInstall: Uint8Array | Deno.PointerValue | null /* Windows.Win32.System.ApplicationInstallationAndServicing.MSIHANDLE */,
  szTable: string | null /* Windows.Win32.Foundation.PSTR */,
  iSequenceMode: number /* i32 */,
): number /* u32 */ {
  return libmsi_dll.MsiSequenceA(util.toPointer(hInstall), util.pstrToFfi(szTable), iSequenceMode);
}

export function MsiSequenceW(
  hInstall: Uint8Array | Deno.PointerValue | null /* Windows.Win32.System.ApplicationInstallationAndServicing.MSIHANDLE */,
  szTable: string | null /* Windows.Win32.Foundation.PWSTR */,
  iSequenceMode: number /* i32 */,
): number /* u32 */ {
  return libmsi_dll.MsiSequenceW(util.toPointer(hInstall), util.pwstrToFfi(szTable), iSequenceMode);
}

export function MsiProcessMessage(
  hInstall: Uint8Array | Deno.PointerValue | null /* Windows.Win32.System.ApplicationInstallationAndServicing.MSIHANDLE */,
  eMessageType: INSTALLMESSAGE /* Windows.Win32.System.ApplicationInstallationAndServicing.INSTALLMESSAGE */,
  hRecord: Uint8Array | Deno.PointerValue | null /* Windows.Win32.System.ApplicationInstallationAndServicing.MSIHANDLE */,
): number /* i32 */ {
  return libmsi_dll.MsiProcessMessage(util.toPointer(hInstall), eMessageType, util.toPointer(hRecord));
}

export function MsiEvaluateConditionA(
  hInstall: Uint8Array | Deno.PointerValue | null /* Windows.Win32.System.ApplicationInstallationAndServicing.MSIHANDLE */,
  szCondition: string | null /* Windows.Win32.Foundation.PSTR */,
): MSICONDITION /* Windows.Win32.System.ApplicationInstallationAndServicing.MSICONDITION */ {
  return libmsi_dll.MsiEvaluateConditionA(util.toPointer(hInstall), util.pstrToFfi(szCondition));
}

export function MsiEvaluateConditionW(
  hInstall: Uint8Array | Deno.PointerValue | null /* Windows.Win32.System.ApplicationInstallationAndServicing.MSIHANDLE */,
  szCondition: string | null /* Windows.Win32.Foundation.PWSTR */,
): MSICONDITION /* Windows.Win32.System.ApplicationInstallationAndServicing.MSICONDITION */ {
  return libmsi_dll.MsiEvaluateConditionW(util.toPointer(hInstall), util.pwstrToFfi(szCondition));
}

export function MsiGetFeatureStateA(
  hInstall: Uint8Array | Deno.PointerValue | null /* Windows.Win32.System.ApplicationInstallationAndServicing.MSIHANDLE */,
  szFeature: string | null /* Windows.Win32.Foundation.PSTR */,
  piInstalled: Deno.PointerValue | Uint8Array | null /* ptr */,
  piAction: Deno.PointerValue | Uint8Array | null /* ptr */,
): number /* u32 */ {
  return libmsi_dll.MsiGetFeatureStateA(util.toPointer(hInstall), util.pstrToFfi(szFeature), util.toPointer(piInstalled), util.toPointer(piAction));
}

export function MsiGetFeatureStateW(
  hInstall: Uint8Array | Deno.PointerValue | null /* Windows.Win32.System.ApplicationInstallationAndServicing.MSIHANDLE */,
  szFeature: string | null /* Windows.Win32.Foundation.PWSTR */,
  piInstalled: Deno.PointerValue | Uint8Array | null /* ptr */,
  piAction: Deno.PointerValue | Uint8Array | null /* ptr */,
): number /* u32 */ {
  return libmsi_dll.MsiGetFeatureStateW(util.toPointer(hInstall), util.pwstrToFfi(szFeature), util.toPointer(piInstalled), util.toPointer(piAction));
}

export function MsiSetFeatureStateA(
  hInstall: Uint8Array | Deno.PointerValue | null /* Windows.Win32.System.ApplicationInstallationAndServicing.MSIHANDLE */,
  szFeature: string | null /* Windows.Win32.Foundation.PSTR */,
  iState: INSTALLSTATE /* Windows.Win32.System.ApplicationInstallationAndServicing.INSTALLSTATE */,
): number /* u32 */ {
  return libmsi_dll.MsiSetFeatureStateA(util.toPointer(hInstall), util.pstrToFfi(szFeature), iState);
}

export function MsiSetFeatureStateW(
  hInstall: Uint8Array | Deno.PointerValue | null /* Windows.Win32.System.ApplicationInstallationAndServicing.MSIHANDLE */,
  szFeature: string | null /* Windows.Win32.Foundation.PWSTR */,
  iState: INSTALLSTATE /* Windows.Win32.System.ApplicationInstallationAndServicing.INSTALLSTATE */,
): number /* u32 */ {
  return libmsi_dll.MsiSetFeatureStateW(util.toPointer(hInstall), util.pwstrToFfi(szFeature), iState);
}

export function MsiSetFeatureAttributesA(
  hInstall: Uint8Array | Deno.PointerValue | null /* Windows.Win32.System.ApplicationInstallationAndServicing.MSIHANDLE */,
  szFeature: string | null /* Windows.Win32.Foundation.PSTR */,
  dwAttributes: number /* u32 */,
): number /* u32 */ {
  return libmsi_dll.MsiSetFeatureAttributesA(util.toPointer(hInstall), util.pstrToFfi(szFeature), dwAttributes);
}

export function MsiSetFeatureAttributesW(
  hInstall: Uint8Array | Deno.PointerValue | null /* Windows.Win32.System.ApplicationInstallationAndServicing.MSIHANDLE */,
  szFeature: string | null /* Windows.Win32.Foundation.PWSTR */,
  dwAttributes: number /* u32 */,
): number /* u32 */ {
  return libmsi_dll.MsiSetFeatureAttributesW(util.toPointer(hInstall), util.pwstrToFfi(szFeature), dwAttributes);
}

export function MsiGetComponentStateA(
  hInstall: Uint8Array | Deno.PointerValue | null /* Windows.Win32.System.ApplicationInstallationAndServicing.MSIHANDLE */,
  szComponent: string | null /* Windows.Win32.Foundation.PSTR */,
  piInstalled: Deno.PointerValue | Uint8Array | null /* ptr */,
  piAction: Deno.PointerValue | Uint8Array | null /* ptr */,
): number /* u32 */ {
  return libmsi_dll.MsiGetComponentStateA(util.toPointer(hInstall), util.pstrToFfi(szComponent), util.toPointer(piInstalled), util.toPointer(piAction));
}

export function MsiGetComponentStateW(
  hInstall: Uint8Array | Deno.PointerValue | null /* Windows.Win32.System.ApplicationInstallationAndServicing.MSIHANDLE */,
  szComponent: string | null /* Windows.Win32.Foundation.PWSTR */,
  piInstalled: Deno.PointerValue | Uint8Array | null /* ptr */,
  piAction: Deno.PointerValue | Uint8Array | null /* ptr */,
): number /* u32 */ {
  return libmsi_dll.MsiGetComponentStateW(util.toPointer(hInstall), util.pwstrToFfi(szComponent), util.toPointer(piInstalled), util.toPointer(piAction));
}

export function MsiSetComponentStateA(
  hInstall: Uint8Array | Deno.PointerValue | null /* Windows.Win32.System.ApplicationInstallationAndServicing.MSIHANDLE */,
  szComponent: string | null /* Windows.Win32.Foundation.PSTR */,
  iState: INSTALLSTATE /* Windows.Win32.System.ApplicationInstallationAndServicing.INSTALLSTATE */,
): number /* u32 */ {
  return libmsi_dll.MsiSetComponentStateA(util.toPointer(hInstall), util.pstrToFfi(szComponent), iState);
}

export function MsiSetComponentStateW(
  hInstall: Uint8Array | Deno.PointerValue | null /* Windows.Win32.System.ApplicationInstallationAndServicing.MSIHANDLE */,
  szComponent: string | null /* Windows.Win32.Foundation.PWSTR */,
  iState: INSTALLSTATE /* Windows.Win32.System.ApplicationInstallationAndServicing.INSTALLSTATE */,
): number /* u32 */ {
  return libmsi_dll.MsiSetComponentStateW(util.toPointer(hInstall), util.pwstrToFfi(szComponent), iState);
}

export function MsiGetFeatureCostA(
  hInstall: Uint8Array | Deno.PointerValue | null /* Windows.Win32.System.ApplicationInstallationAndServicing.MSIHANDLE */,
  szFeature: string | null /* Windows.Win32.Foundation.PSTR */,
  iCostTree: MSICOSTTREE /* Windows.Win32.System.ApplicationInstallationAndServicing.MSICOSTTREE */,
  iState: INSTALLSTATE /* Windows.Win32.System.ApplicationInstallationAndServicing.INSTALLSTATE */,
  piCost: Deno.PointerValue | Uint8Array | null /* ptr */,
): number /* u32 */ {
  return libmsi_dll.MsiGetFeatureCostA(util.toPointer(hInstall), util.pstrToFfi(szFeature), iCostTree, iState, util.toPointer(piCost));
}

export function MsiGetFeatureCostW(
  hInstall: Uint8Array | Deno.PointerValue | null /* Windows.Win32.System.ApplicationInstallationAndServicing.MSIHANDLE */,
  szFeature: string | null /* Windows.Win32.Foundation.PWSTR */,
  iCostTree: MSICOSTTREE /* Windows.Win32.System.ApplicationInstallationAndServicing.MSICOSTTREE */,
  iState: INSTALLSTATE /* Windows.Win32.System.ApplicationInstallationAndServicing.INSTALLSTATE */,
  piCost: Deno.PointerValue | Uint8Array | null /* ptr */,
): number /* u32 */ {
  return libmsi_dll.MsiGetFeatureCostW(util.toPointer(hInstall), util.pwstrToFfi(szFeature), iCostTree, iState, util.toPointer(piCost));
}

export function MsiEnumComponentCostsA(
  hInstall: Uint8Array | Deno.PointerValue | null /* Windows.Win32.System.ApplicationInstallationAndServicing.MSIHANDLE */,
  szComponent: string | null /* Windows.Win32.Foundation.PSTR */,
  dwIndex: number /* u32 */,
  iState: INSTALLSTATE /* Windows.Win32.System.ApplicationInstallationAndServicing.INSTALLSTATE */,
  szDriveBuf: string | null /* Windows.Win32.Foundation.PSTR */,
  pcchDriveBuf: Deno.PointerValue | Uint8Array | null /* ptr */,
  piCost: Deno.PointerValue | Uint8Array | null /* ptr */,
  piTempCost: Deno.PointerValue | Uint8Array | null /* ptr */,
): number /* u32 */ {
  return libmsi_dll.MsiEnumComponentCostsA(util.toPointer(hInstall), util.pstrToFfi(szComponent), dwIndex, iState, util.pstrToFfi(szDriveBuf), util.toPointer(pcchDriveBuf), util.toPointer(piCost), util.toPointer(piTempCost));
}

export function MsiEnumComponentCostsW(
  hInstall: Uint8Array | Deno.PointerValue | null /* Windows.Win32.System.ApplicationInstallationAndServicing.MSIHANDLE */,
  szComponent: string | null /* Windows.Win32.Foundation.PWSTR */,
  dwIndex: number /* u32 */,
  iState: INSTALLSTATE /* Windows.Win32.System.ApplicationInstallationAndServicing.INSTALLSTATE */,
  szDriveBuf: string | null /* Windows.Win32.Foundation.PWSTR */,
  pcchDriveBuf: Deno.PointerValue | Uint8Array | null /* ptr */,
  piCost: Deno.PointerValue | Uint8Array | null /* ptr */,
  piTempCost: Deno.PointerValue | Uint8Array | null /* ptr */,
): number /* u32 */ {
  return libmsi_dll.MsiEnumComponentCostsW(util.toPointer(hInstall), util.pwstrToFfi(szComponent), dwIndex, iState, util.pwstrToFfi(szDriveBuf), util.toPointer(pcchDriveBuf), util.toPointer(piCost), util.toPointer(piTempCost));
}

export function MsiSetInstallLevel(
  hInstall: Uint8Array | Deno.PointerValue | null /* Windows.Win32.System.ApplicationInstallationAndServicing.MSIHANDLE */,
  iInstallLevel: number /* i32 */,
): number /* u32 */ {
  return libmsi_dll.MsiSetInstallLevel(util.toPointer(hInstall), iInstallLevel);
}

export function MsiGetFeatureValidStatesA(
  hInstall: Uint8Array | Deno.PointerValue | null /* Windows.Win32.System.ApplicationInstallationAndServicing.MSIHANDLE */,
  szFeature: string | null /* Windows.Win32.Foundation.PSTR */,
  lpInstallStates: Deno.PointerValue | Uint8Array | null /* ptr */,
): number /* u32 */ {
  return libmsi_dll.MsiGetFeatureValidStatesA(util.toPointer(hInstall), util.pstrToFfi(szFeature), util.toPointer(lpInstallStates));
}

export function MsiGetFeatureValidStatesW(
  hInstall: Uint8Array | Deno.PointerValue | null /* Windows.Win32.System.ApplicationInstallationAndServicing.MSIHANDLE */,
  szFeature: string | null /* Windows.Win32.Foundation.PWSTR */,
  lpInstallStates: Deno.PointerValue | Uint8Array | null /* ptr */,
): number /* u32 */ {
  return libmsi_dll.MsiGetFeatureValidStatesW(util.toPointer(hInstall), util.pwstrToFfi(szFeature), util.toPointer(lpInstallStates));
}

export function MsiGetSourcePathA(
  hInstall: Uint8Array | Deno.PointerValue | null /* Windows.Win32.System.ApplicationInstallationAndServicing.MSIHANDLE */,
  szFolder: string | null /* Windows.Win32.Foundation.PSTR */,
  szPathBuf: string | null /* Windows.Win32.Foundation.PSTR */,
  pcchPathBuf: Deno.PointerValue | Uint8Array | null /* ptr */,
): number /* u32 */ {
  return libmsi_dll.MsiGetSourcePathA(util.toPointer(hInstall), util.pstrToFfi(szFolder), util.pstrToFfi(szPathBuf), util.toPointer(pcchPathBuf));
}

export function MsiGetSourcePathW(
  hInstall: Uint8Array | Deno.PointerValue | null /* Windows.Win32.System.ApplicationInstallationAndServicing.MSIHANDLE */,
  szFolder: string | null /* Windows.Win32.Foundation.PWSTR */,
  szPathBuf: string | null /* Windows.Win32.Foundation.PWSTR */,
  pcchPathBuf: Deno.PointerValue | Uint8Array | null /* ptr */,
): number /* u32 */ {
  return libmsi_dll.MsiGetSourcePathW(util.toPointer(hInstall), util.pwstrToFfi(szFolder), util.pwstrToFfi(szPathBuf), util.toPointer(pcchPathBuf));
}

export function MsiGetTargetPathA(
  hInstall: Uint8Array | Deno.PointerValue | null /* Windows.Win32.System.ApplicationInstallationAndServicing.MSIHANDLE */,
  szFolder: string | null /* Windows.Win32.Foundation.PSTR */,
  szPathBuf: string | null /* Windows.Win32.Foundation.PSTR */,
  pcchPathBuf: Deno.PointerValue | Uint8Array | null /* ptr */,
): number /* u32 */ {
  return libmsi_dll.MsiGetTargetPathA(util.toPointer(hInstall), util.pstrToFfi(szFolder), util.pstrToFfi(szPathBuf), util.toPointer(pcchPathBuf));
}

export function MsiGetTargetPathW(
  hInstall: Uint8Array | Deno.PointerValue | null /* Windows.Win32.System.ApplicationInstallationAndServicing.MSIHANDLE */,
  szFolder: string | null /* Windows.Win32.Foundation.PWSTR */,
  szPathBuf: string | null /* Windows.Win32.Foundation.PWSTR */,
  pcchPathBuf: Deno.PointerValue | Uint8Array | null /* ptr */,
): number /* u32 */ {
  return libmsi_dll.MsiGetTargetPathW(util.toPointer(hInstall), util.pwstrToFfi(szFolder), util.pwstrToFfi(szPathBuf), util.toPointer(pcchPathBuf));
}

export function MsiSetTargetPathA(
  hInstall: Uint8Array | Deno.PointerValue | null /* Windows.Win32.System.ApplicationInstallationAndServicing.MSIHANDLE */,
  szFolder: string | null /* Windows.Win32.Foundation.PSTR */,
  szFolderPath: string | null /* Windows.Win32.Foundation.PSTR */,
): number /* u32 */ {
  return libmsi_dll.MsiSetTargetPathA(util.toPointer(hInstall), util.pstrToFfi(szFolder), util.pstrToFfi(szFolderPath));
}

export function MsiSetTargetPathW(
  hInstall: Uint8Array | Deno.PointerValue | null /* Windows.Win32.System.ApplicationInstallationAndServicing.MSIHANDLE */,
  szFolder: string | null /* Windows.Win32.Foundation.PWSTR */,
  szFolderPath: string | null /* Windows.Win32.Foundation.PWSTR */,
): number /* u32 */ {
  return libmsi_dll.MsiSetTargetPathW(util.toPointer(hInstall), util.pwstrToFfi(szFolder), util.pwstrToFfi(szFolderPath));
}

export function MsiVerifyDiskSpace(
  hInstall: Uint8Array | Deno.PointerValue | null /* Windows.Win32.System.ApplicationInstallationAndServicing.MSIHANDLE */,
): number /* u32 */ {
  return libmsi_dll.MsiVerifyDiskSpace(util.toPointer(hInstall));
}

export function MsiEnableUIPreview(
  hDatabase: Uint8Array | Deno.PointerValue | null /* Windows.Win32.System.ApplicationInstallationAndServicing.MSIHANDLE */,
  phPreview: Deno.PointerValue | Uint8Array | null /* ptr */,
): number /* u32 */ {
  return libmsi_dll.MsiEnableUIPreview(util.toPointer(hDatabase), util.toPointer(phPreview));
}

export function MsiPreviewDialogA(
  hPreview: Uint8Array | Deno.PointerValue | null /* Windows.Win32.System.ApplicationInstallationAndServicing.MSIHANDLE */,
  szDialogName: string | null /* Windows.Win32.Foundation.PSTR */,
): number /* u32 */ {
  return libmsi_dll.MsiPreviewDialogA(util.toPointer(hPreview), util.pstrToFfi(szDialogName));
}

export function MsiPreviewDialogW(
  hPreview: Uint8Array | Deno.PointerValue | null /* Windows.Win32.System.ApplicationInstallationAndServicing.MSIHANDLE */,
  szDialogName: string | null /* Windows.Win32.Foundation.PWSTR */,
): number /* u32 */ {
  return libmsi_dll.MsiPreviewDialogW(util.toPointer(hPreview), util.pwstrToFfi(szDialogName));
}

export function MsiPreviewBillboardA(
  hPreview: Uint8Array | Deno.PointerValue | null /* Windows.Win32.System.ApplicationInstallationAndServicing.MSIHANDLE */,
  szControlName: string | null /* Windows.Win32.Foundation.PSTR */,
  szBillboard: string | null /* Windows.Win32.Foundation.PSTR */,
): number /* u32 */ {
  return libmsi_dll.MsiPreviewBillboardA(util.toPointer(hPreview), util.pstrToFfi(szControlName), util.pstrToFfi(szBillboard));
}

export function MsiPreviewBillboardW(
  hPreview: Uint8Array | Deno.PointerValue | null /* Windows.Win32.System.ApplicationInstallationAndServicing.MSIHANDLE */,
  szControlName: string | null /* Windows.Win32.Foundation.PWSTR */,
  szBillboard: string | null /* Windows.Win32.Foundation.PWSTR */,
): number /* u32 */ {
  return libmsi_dll.MsiPreviewBillboardW(util.toPointer(hPreview), util.pwstrToFfi(szControlName), util.pwstrToFfi(szBillboard));
}

export function MsiGetLastErrorRecord(): Deno.PointerValue | null /* Windows.Win32.System.ApplicationInstallationAndServicing.MSIHANDLE */ {
  return util.pointerFromFfi(libmsi_dll.MsiGetLastErrorRecord());
}

export function SfcGetNextProtectedFile(
  RpcHandle: Uint8Array | Deno.PointerValue | null /* Windows.Win32.Foundation.HANDLE */,
  ProtFileData: Deno.PointerValue | Uint8Array | null /* ptr */,
): boolean /* Windows.Win32.Foundation.BOOL */ {
  return util.boolFromFfi(libsfc_dll.SfcGetNextProtectedFile(util.toPointer(RpcHandle), util.toPointer(ProtFileData)));
}

export function SfcIsFileProtected(
  RpcHandle: Uint8Array | Deno.PointerValue | null /* Windows.Win32.Foundation.HANDLE */,
  ProtFileName: string | null /* Windows.Win32.Foundation.PWSTR */,
): boolean /* Windows.Win32.Foundation.BOOL */ {
  return util.boolFromFfi(libsfc_dll.SfcIsFileProtected(util.toPointer(RpcHandle), util.pwstrToFfi(ProtFileName)));
}

export function SfcIsKeyProtected(
  KeyHandle: Uint8Array | Deno.PointerValue | null /* Windows.Win32.System.Registry.HKEY */,
  SubKeyName: string | null /* Windows.Win32.Foundation.PWSTR */,
  KeySam: number /* u32 */,
): boolean /* Windows.Win32.Foundation.BOOL */ {
  return util.boolFromFfi(libsfc_dll.SfcIsKeyProtected(util.toPointer(KeyHandle), util.pwstrToFfi(SubKeyName), KeySam));
}

export function SfpVerifyFile(
  pszFileName: string | null /* Windows.Win32.Foundation.PSTR */,
  pszError: string | null /* Windows.Win32.Foundation.PSTR */,
  dwErrSize: number /* u32 */,
): boolean /* Windows.Win32.Foundation.BOOL */ {
  return util.boolFromFfi(libsfc_dll.SfpVerifyFile(util.pstrToFfi(pszFileName), util.pstrToFfi(pszError), dwErrSize));
}

export function CreatePatchFileA(
  OldFileName: string | null /* Windows.Win32.Foundation.PSTR */,
  NewFileName: string | null /* Windows.Win32.Foundation.PSTR */,
  PatchFileName: string | null /* Windows.Win32.Foundation.PSTR */,
  OptionFlags: number /* u32 */,
  OptionData: Deno.PointerValue | Uint8Array | null /* ptr */,
): boolean /* Windows.Win32.Foundation.BOOL */ {
  return util.boolFromFfi(libmspatchc_dll.CreatePatchFileA(util.pstrToFfi(OldFileName), util.pstrToFfi(NewFileName), util.pstrToFfi(PatchFileName), OptionFlags, util.toPointer(OptionData)));
}

export function CreatePatchFileW(
  OldFileName: string | null /* Windows.Win32.Foundation.PWSTR */,
  NewFileName: string | null /* Windows.Win32.Foundation.PWSTR */,
  PatchFileName: string | null /* Windows.Win32.Foundation.PWSTR */,
  OptionFlags: number /* u32 */,
  OptionData: Deno.PointerValue | Uint8Array | null /* ptr */,
): boolean /* Windows.Win32.Foundation.BOOL */ {
  return util.boolFromFfi(libmspatchc_dll.CreatePatchFileW(util.pwstrToFfi(OldFileName), util.pwstrToFfi(NewFileName), util.pwstrToFfi(PatchFileName), OptionFlags, util.toPointer(OptionData)));
}

export function CreatePatchFileByHandles(
  OldFileHandle: Uint8Array | Deno.PointerValue | null /* Windows.Win32.Foundation.HANDLE */,
  NewFileHandle: Uint8Array | Deno.PointerValue | null /* Windows.Win32.Foundation.HANDLE */,
  PatchFileHandle: Uint8Array | Deno.PointerValue | null /* Windows.Win32.Foundation.HANDLE */,
  OptionFlags: number /* u32 */,
  OptionData: Deno.PointerValue | Uint8Array | null /* ptr */,
): boolean /* Windows.Win32.Foundation.BOOL */ {
  return util.boolFromFfi(libmspatchc_dll.CreatePatchFileByHandles(util.toPointer(OldFileHandle), util.toPointer(NewFileHandle), util.toPointer(PatchFileHandle), OptionFlags, util.toPointer(OptionData)));
}

export function CreatePatchFileExA(
  OldFileCount: number /* u32 */,
  OldFileInfoArray: Deno.PointerValue | Uint8Array | null /* ptr */,
  NewFileName: string | null /* Windows.Win32.Foundation.PSTR */,
  PatchFileName: string | null /* Windows.Win32.Foundation.PSTR */,
  OptionFlags: number /* u32 */,
  OptionData: Deno.PointerValue | Uint8Array | null /* ptr */,
  ProgressCallback: Uint8Array | Deno.PointerValue | null /* Windows.Win32.System.ApplicationInstallationAndServicing.PPATCH_PROGRESS_CALLBACK */,
  CallbackContext: Deno.PointerValue | Uint8Array | null /* ptr */,
): boolean /* Windows.Win32.Foundation.BOOL */ {
  return util.boolFromFfi(libmspatchc_dll.CreatePatchFileExA(OldFileCount, util.toPointer(OldFileInfoArray), util.pstrToFfi(NewFileName), util.pstrToFfi(PatchFileName), OptionFlags, util.toPointer(OptionData), util.toPointer(ProgressCallback), util.toPointer(CallbackContext)));
}

export function CreatePatchFileExW(
  OldFileCount: number /* u32 */,
  OldFileInfoArray: Deno.PointerValue | Uint8Array | null /* ptr */,
  NewFileName: string | null /* Windows.Win32.Foundation.PWSTR */,
  PatchFileName: string | null /* Windows.Win32.Foundation.PWSTR */,
  OptionFlags: number /* u32 */,
  OptionData: Deno.PointerValue | Uint8Array | null /* ptr */,
  ProgressCallback: Uint8Array | Deno.PointerValue | null /* Windows.Win32.System.ApplicationInstallationAndServicing.PPATCH_PROGRESS_CALLBACK */,
  CallbackContext: Deno.PointerValue | Uint8Array | null /* ptr */,
): boolean /* Windows.Win32.Foundation.BOOL */ {
  return util.boolFromFfi(libmspatchc_dll.CreatePatchFileExW(OldFileCount, util.toPointer(OldFileInfoArray), util.pwstrToFfi(NewFileName), util.pwstrToFfi(PatchFileName), OptionFlags, util.toPointer(OptionData), util.toPointer(ProgressCallback), util.toPointer(CallbackContext)));
}

export function CreatePatchFileByHandlesEx(
  OldFileCount: number /* u32 */,
  OldFileInfoArray: Deno.PointerValue | Uint8Array | null /* ptr */,
  NewFileHandle: Uint8Array | Deno.PointerValue | null /* Windows.Win32.Foundation.HANDLE */,
  PatchFileHandle: Uint8Array | Deno.PointerValue | null /* Windows.Win32.Foundation.HANDLE */,
  OptionFlags: number /* u32 */,
  OptionData: Deno.PointerValue | Uint8Array | null /* ptr */,
  ProgressCallback: Uint8Array | Deno.PointerValue | null /* Windows.Win32.System.ApplicationInstallationAndServicing.PPATCH_PROGRESS_CALLBACK */,
  CallbackContext: Deno.PointerValue | Uint8Array | null /* ptr */,
): boolean /* Windows.Win32.Foundation.BOOL */ {
  return util.boolFromFfi(libmspatchc_dll.CreatePatchFileByHandlesEx(OldFileCount, util.toPointer(OldFileInfoArray), util.toPointer(NewFileHandle), util.toPointer(PatchFileHandle), OptionFlags, util.toPointer(OptionData), util.toPointer(ProgressCallback), util.toPointer(CallbackContext)));
}

export function ExtractPatchHeaderToFileA(
  PatchFileName: string | null /* Windows.Win32.Foundation.PSTR */,
  PatchHeaderFileName: string | null /* Windows.Win32.Foundation.PSTR */,
): boolean /* Windows.Win32.Foundation.BOOL */ {
  return util.boolFromFfi(libmspatchc_dll.ExtractPatchHeaderToFileA(util.pstrToFfi(PatchFileName), util.pstrToFfi(PatchHeaderFileName)));
}

export function ExtractPatchHeaderToFileW(
  PatchFileName: string | null /* Windows.Win32.Foundation.PWSTR */,
  PatchHeaderFileName: string | null /* Windows.Win32.Foundation.PWSTR */,
): boolean /* Windows.Win32.Foundation.BOOL */ {
  return util.boolFromFfi(libmspatchc_dll.ExtractPatchHeaderToFileW(util.pwstrToFfi(PatchFileName), util.pwstrToFfi(PatchHeaderFileName)));
}

export function ExtractPatchHeaderToFileByHandles(
  PatchFileHandle: Uint8Array | Deno.PointerValue | null /* Windows.Win32.Foundation.HANDLE */,
  PatchHeaderFileHandle: Uint8Array | Deno.PointerValue | null /* Windows.Win32.Foundation.HANDLE */,
): boolean /* Windows.Win32.Foundation.BOOL */ {
  return util.boolFromFfi(libmspatchc_dll.ExtractPatchHeaderToFileByHandles(util.toPointer(PatchFileHandle), util.toPointer(PatchHeaderFileHandle)));
}

export function TestApplyPatchToFileA(
  PatchFileName: string | null /* Windows.Win32.Foundation.PSTR */,
  OldFileName: string | null /* Windows.Win32.Foundation.PSTR */,
  ApplyOptionFlags: number /* u32 */,
): boolean /* Windows.Win32.Foundation.BOOL */ {
  return util.boolFromFfi(libmspatcha_dll.TestApplyPatchToFileA(util.pstrToFfi(PatchFileName), util.pstrToFfi(OldFileName), ApplyOptionFlags));
}

export function TestApplyPatchToFileW(
  PatchFileName: string | null /* Windows.Win32.Foundation.PWSTR */,
  OldFileName: string | null /* Windows.Win32.Foundation.PWSTR */,
  ApplyOptionFlags: number /* u32 */,
): boolean /* Windows.Win32.Foundation.BOOL */ {
  return util.boolFromFfi(libmspatcha_dll.TestApplyPatchToFileW(util.pwstrToFfi(PatchFileName), util.pwstrToFfi(OldFileName), ApplyOptionFlags));
}

export function TestApplyPatchToFileByHandles(
  PatchFileHandle: Uint8Array | Deno.PointerValue | null /* Windows.Win32.Foundation.HANDLE */,
  OldFileHandle: Uint8Array | Deno.PointerValue | null /* Windows.Win32.Foundation.HANDLE */,
  ApplyOptionFlags: number /* u32 */,
): boolean /* Windows.Win32.Foundation.BOOL */ {
  return util.boolFromFfi(libmspatcha_dll.TestApplyPatchToFileByHandles(util.toPointer(PatchFileHandle), util.toPointer(OldFileHandle), ApplyOptionFlags));
}

export function TestApplyPatchToFileByBuffers(
  PatchFileBuffer: Deno.PointerValue | Uint8Array | null /* ptr */,
  PatchFileSize: number /* u32 */,
  OldFileBuffer: Deno.PointerValue | Uint8Array | null /* ptr */,
  OldFileSize: number /* u32 */,
  NewFileSize: Deno.PointerValue | Uint8Array | null /* ptr */,
  ApplyOptionFlags: number /* u32 */,
): boolean /* Windows.Win32.Foundation.BOOL */ {
  return util.boolFromFfi(libmspatcha_dll.TestApplyPatchToFileByBuffers(util.toPointer(PatchFileBuffer), PatchFileSize, util.toPointer(OldFileBuffer), OldFileSize, util.toPointer(NewFileSize), ApplyOptionFlags));
}

export function ApplyPatchToFileA(
  PatchFileName: string | null /* Windows.Win32.Foundation.PSTR */,
  OldFileName: string | null /* Windows.Win32.Foundation.PSTR */,
  NewFileName: string | null /* Windows.Win32.Foundation.PSTR */,
  ApplyOptionFlags: number /* u32 */,
): boolean /* Windows.Win32.Foundation.BOOL */ {
  return util.boolFromFfi(libmspatcha_dll.ApplyPatchToFileA(util.pstrToFfi(PatchFileName), util.pstrToFfi(OldFileName), util.pstrToFfi(NewFileName), ApplyOptionFlags));
}

export function ApplyPatchToFileW(
  PatchFileName: string | null /* Windows.Win32.Foundation.PWSTR */,
  OldFileName: string | null /* Windows.Win32.Foundation.PWSTR */,
  NewFileName: string | null /* Windows.Win32.Foundation.PWSTR */,
  ApplyOptionFlags: number /* u32 */,
): boolean /* Windows.Win32.Foundation.BOOL */ {
  return util.boolFromFfi(libmspatcha_dll.ApplyPatchToFileW(util.pwstrToFfi(PatchFileName), util.pwstrToFfi(OldFileName), util.pwstrToFfi(NewFileName), ApplyOptionFlags));
}

export function ApplyPatchToFileByHandles(
  PatchFileHandle: Uint8Array | Deno.PointerValue | null /* Windows.Win32.Foundation.HANDLE */,
  OldFileHandle: Uint8Array | Deno.PointerValue | null /* Windows.Win32.Foundation.HANDLE */,
  NewFileHandle: Uint8Array | Deno.PointerValue | null /* Windows.Win32.Foundation.HANDLE */,
  ApplyOptionFlags: number /* u32 */,
): boolean /* Windows.Win32.Foundation.BOOL */ {
  return util.boolFromFfi(libmspatcha_dll.ApplyPatchToFileByHandles(util.toPointer(PatchFileHandle), util.toPointer(OldFileHandle), util.toPointer(NewFileHandle), ApplyOptionFlags));
}

export function ApplyPatchToFileExA(
  PatchFileName: string | null /* Windows.Win32.Foundation.PSTR */,
  OldFileName: string | null /* Windows.Win32.Foundation.PSTR */,
  NewFileName: string | null /* Windows.Win32.Foundation.PSTR */,
  ApplyOptionFlags: number /* u32 */,
  ProgressCallback: Uint8Array | Deno.PointerValue | null /* Windows.Win32.System.ApplicationInstallationAndServicing.PPATCH_PROGRESS_CALLBACK */,
  CallbackContext: Deno.PointerValue | Uint8Array | null /* ptr */,
): boolean /* Windows.Win32.Foundation.BOOL */ {
  return util.boolFromFfi(libmspatcha_dll.ApplyPatchToFileExA(util.pstrToFfi(PatchFileName), util.pstrToFfi(OldFileName), util.pstrToFfi(NewFileName), ApplyOptionFlags, util.toPointer(ProgressCallback), util.toPointer(CallbackContext)));
}

export function ApplyPatchToFileExW(
  PatchFileName: string | null /* Windows.Win32.Foundation.PWSTR */,
  OldFileName: string | null /* Windows.Win32.Foundation.PWSTR */,
  NewFileName: string | null /* Windows.Win32.Foundation.PWSTR */,
  ApplyOptionFlags: number /* u32 */,
  ProgressCallback: Uint8Array | Deno.PointerValue | null /* Windows.Win32.System.ApplicationInstallationAndServicing.PPATCH_PROGRESS_CALLBACK */,
  CallbackContext: Deno.PointerValue | Uint8Array | null /* ptr */,
): boolean /* Windows.Win32.Foundation.BOOL */ {
  return util.boolFromFfi(libmspatcha_dll.ApplyPatchToFileExW(util.pwstrToFfi(PatchFileName), util.pwstrToFfi(OldFileName), util.pwstrToFfi(NewFileName), ApplyOptionFlags, util.toPointer(ProgressCallback), util.toPointer(CallbackContext)));
}

export function ApplyPatchToFileByHandlesEx(
  PatchFileHandle: Uint8Array | Deno.PointerValue | null /* Windows.Win32.Foundation.HANDLE */,
  OldFileHandle: Uint8Array | Deno.PointerValue | null /* Windows.Win32.Foundation.HANDLE */,
  NewFileHandle: Uint8Array | Deno.PointerValue | null /* Windows.Win32.Foundation.HANDLE */,
  ApplyOptionFlags: number /* u32 */,
  ProgressCallback: Uint8Array | Deno.PointerValue | null /* Windows.Win32.System.ApplicationInstallationAndServicing.PPATCH_PROGRESS_CALLBACK */,
  CallbackContext: Deno.PointerValue | Uint8Array | null /* ptr */,
): boolean /* Windows.Win32.Foundation.BOOL */ {
  return util.boolFromFfi(libmspatcha_dll.ApplyPatchToFileByHandlesEx(util.toPointer(PatchFileHandle), util.toPointer(OldFileHandle), util.toPointer(NewFileHandle), ApplyOptionFlags, util.toPointer(ProgressCallback), util.toPointer(CallbackContext)));
}

export function ApplyPatchToFileByBuffers(
  PatchFileMapped: Deno.PointerValue | Uint8Array | null /* ptr */,
  PatchFileSize: number /* u32 */,
  OldFileMapped: Deno.PointerValue | Uint8Array | null /* ptr */,
  OldFileSize: number /* u32 */,
  NewFileBuffer: Deno.PointerValue | Uint8Array | null /* ptr */,
  NewFileBufferSize: number /* u32 */,
  NewFileActualSize: Deno.PointerValue | Uint8Array | null /* ptr */,
  NewFileTime: Deno.PointerValue | Uint8Array | null /* ptr */,
  ApplyOptionFlags: number /* u32 */,
  ProgressCallback: Uint8Array | Deno.PointerValue | null /* Windows.Win32.System.ApplicationInstallationAndServicing.PPATCH_PROGRESS_CALLBACK */,
  CallbackContext: Deno.PointerValue | Uint8Array | null /* ptr */,
): boolean /* Windows.Win32.Foundation.BOOL */ {
  return util.boolFromFfi(libmspatcha_dll.ApplyPatchToFileByBuffers(util.toPointer(PatchFileMapped), PatchFileSize, util.toPointer(OldFileMapped), OldFileSize, util.toPointer(NewFileBuffer), NewFileBufferSize, util.toPointer(NewFileActualSize), util.toPointer(NewFileTime), ApplyOptionFlags, util.toPointer(ProgressCallback), util.toPointer(CallbackContext)));
}

export function GetFilePatchSignatureA(
  FileName: string | null /* Windows.Win32.Foundation.PSTR */,
  OptionFlags: number /* u32 */,
  OptionData: Deno.PointerValue | Uint8Array | null /* ptr */,
  IgnoreRangeCount: number /* u32 */,
  IgnoreRangeArray: Deno.PointerValue | Uint8Array | null /* ptr */,
  RetainRangeCount: number /* u32 */,
  RetainRangeArray: Deno.PointerValue | Uint8Array | null /* ptr */,
  SignatureBufferSize: number /* u32 */,
  SignatureBuffer: string | null /* Windows.Win32.Foundation.PSTR */,
): boolean /* Windows.Win32.Foundation.BOOL */ {
  return util.boolFromFfi(libmspatcha_dll.GetFilePatchSignatureA(util.pstrToFfi(FileName), OptionFlags, util.toPointer(OptionData), IgnoreRangeCount, util.toPointer(IgnoreRangeArray), RetainRangeCount, util.toPointer(RetainRangeArray), SignatureBufferSize, util.pstrToFfi(SignatureBuffer)));
}

export function GetFilePatchSignatureW(
  FileName: string | null /* Windows.Win32.Foundation.PWSTR */,
  OptionFlags: number /* u32 */,
  OptionData: Deno.PointerValue | Uint8Array | null /* ptr */,
  IgnoreRangeCount: number /* u32 */,
  IgnoreRangeArray: Deno.PointerValue | Uint8Array | null /* ptr */,
  RetainRangeCount: number /* u32 */,
  RetainRangeArray: Deno.PointerValue | Uint8Array | null /* ptr */,
  SignatureBufferSize: number /* u32 */,
  SignatureBuffer: string | null /* Windows.Win32.Foundation.PWSTR */,
): boolean /* Windows.Win32.Foundation.BOOL */ {
  return util.boolFromFfi(libmspatcha_dll.GetFilePatchSignatureW(util.pwstrToFfi(FileName), OptionFlags, util.toPointer(OptionData), IgnoreRangeCount, util.toPointer(IgnoreRangeArray), RetainRangeCount, util.toPointer(RetainRangeArray), SignatureBufferSize, util.pwstrToFfi(SignatureBuffer)));
}

export function GetFilePatchSignatureByHandle(
  FileHandle: Uint8Array | Deno.PointerValue | null /* Windows.Win32.Foundation.HANDLE */,
  OptionFlags: number /* u32 */,
  OptionData: Deno.PointerValue | Uint8Array | null /* ptr */,
  IgnoreRangeCount: number /* u32 */,
  IgnoreRangeArray: Deno.PointerValue | Uint8Array | null /* ptr */,
  RetainRangeCount: number /* u32 */,
  RetainRangeArray: Deno.PointerValue | Uint8Array | null /* ptr */,
  SignatureBufferSize: number /* u32 */,
  SignatureBuffer: string | null /* Windows.Win32.Foundation.PSTR */,
): boolean /* Windows.Win32.Foundation.BOOL */ {
  return util.boolFromFfi(libmspatcha_dll.GetFilePatchSignatureByHandle(util.toPointer(FileHandle), OptionFlags, util.toPointer(OptionData), IgnoreRangeCount, util.toPointer(IgnoreRangeArray), RetainRangeCount, util.toPointer(RetainRangeArray), SignatureBufferSize, util.pstrToFfi(SignatureBuffer)));
}

export function GetFilePatchSignatureByBuffer(
  FileBufferWritable: Deno.PointerValue | Uint8Array | null /* ptr */,
  FileSize: number /* u32 */,
  OptionFlags: number /* u32 */,
  OptionData: Deno.PointerValue | Uint8Array | null /* ptr */,
  IgnoreRangeCount: number /* u32 */,
  IgnoreRangeArray: Deno.PointerValue | Uint8Array | null /* ptr */,
  RetainRangeCount: number /* u32 */,
  RetainRangeArray: Deno.PointerValue | Uint8Array | null /* ptr */,
  SignatureBufferSize: number /* u32 */,
  SignatureBuffer: string | null /* Windows.Win32.Foundation.PSTR */,
): boolean /* Windows.Win32.Foundation.BOOL */ {
  return util.boolFromFfi(libmspatcha_dll.GetFilePatchSignatureByBuffer(util.toPointer(FileBufferWritable), FileSize, OptionFlags, util.toPointer(OptionData), IgnoreRangeCount, util.toPointer(IgnoreRangeArray), RetainRangeCount, util.toPointer(RetainRangeArray), SignatureBufferSize, util.pstrToFfi(SignatureBuffer)));
}

export function NormalizeFileForPatchSignature(
  FileBuffer: Deno.PointerValue | Uint8Array | null /* ptr */,
  FileSize: number /* u32 */,
  OptionFlags: number /* u32 */,
  OptionData: Deno.PointerValue | Uint8Array | null /* ptr */,
  NewFileCoffBase: number /* u32 */,
  NewFileCoffTime: number /* u32 */,
  IgnoreRangeCount: number /* u32 */,
  IgnoreRangeArray: Deno.PointerValue | Uint8Array | null /* ptr */,
  RetainRangeCount: number /* u32 */,
  RetainRangeArray: Deno.PointerValue | Uint8Array | null /* ptr */,
): number /* i32 */ {
  return libmspatcha_dll.NormalizeFileForPatchSignature(util.toPointer(FileBuffer), FileSize, OptionFlags, util.toPointer(OptionData), NewFileCoffBase, NewFileCoffTime, IgnoreRangeCount, util.toPointer(IgnoreRangeArray), RetainRangeCount, util.toPointer(RetainRangeArray));
}

export function GetDeltaInfoB(
  Delta: Uint8Array | Deno.PointerValue | null /* Windows.Win32.System.ApplicationInstallationAndServicing.DELTA_INPUT */,
  lpHeaderInfo: Deno.PointerValue | Uint8Array | null /* ptr */,
): boolean /* Windows.Win32.Foundation.BOOL */ {
  return util.boolFromFfi(libmsdelta_dll.GetDeltaInfoB(util.toPointer(Delta), util.toPointer(lpHeaderInfo)));
}

export function GetDeltaInfoA(
  lpDeltaName: string | null /* Windows.Win32.Foundation.PSTR */,
  lpHeaderInfo: Deno.PointerValue | Uint8Array | null /* ptr */,
): boolean /* Windows.Win32.Foundation.BOOL */ {
  return util.boolFromFfi(libmsdelta_dll.GetDeltaInfoA(util.pstrToFfi(lpDeltaName), util.toPointer(lpHeaderInfo)));
}

export function GetDeltaInfoW(
  lpDeltaName: string | null /* Windows.Win32.Foundation.PWSTR */,
  lpHeaderInfo: Deno.PointerValue | Uint8Array | null /* ptr */,
): boolean /* Windows.Win32.Foundation.BOOL */ {
  return util.boolFromFfi(libmsdelta_dll.GetDeltaInfoW(util.pwstrToFfi(lpDeltaName), util.toPointer(lpHeaderInfo)));
}

export function ApplyDeltaGetReverseB(
  ApplyFlags: Deno.PointerValue /* i64 */,
  Source: Uint8Array | Deno.PointerValue | null /* Windows.Win32.System.ApplicationInstallationAndServicing.DELTA_INPUT */,
  Delta: Uint8Array | Deno.PointerValue | null /* Windows.Win32.System.ApplicationInstallationAndServicing.DELTA_INPUT */,
  lpReverseFileTime: Deno.PointerValue | Uint8Array | null /* ptr */,
  lpTarget: Deno.PointerValue | Uint8Array | null /* ptr */,
  lpTargetReverse: Deno.PointerValue | Uint8Array | null /* ptr */,
): boolean /* Windows.Win32.Foundation.BOOL */ {
  return util.boolFromFfi(libmsdelta_dll.ApplyDeltaGetReverseB(ApplyFlags, util.toPointer(Source), util.toPointer(Delta), util.toPointer(lpReverseFileTime), util.toPointer(lpTarget), util.toPointer(lpTargetReverse)));
}

export function ApplyDeltaB(
  ApplyFlags: Deno.PointerValue /* i64 */,
  Source: Uint8Array | Deno.PointerValue | null /* Windows.Win32.System.ApplicationInstallationAndServicing.DELTA_INPUT */,
  Delta: Uint8Array | Deno.PointerValue | null /* Windows.Win32.System.ApplicationInstallationAndServicing.DELTA_INPUT */,
  lpTarget: Deno.PointerValue | Uint8Array | null /* ptr */,
): boolean /* Windows.Win32.Foundation.BOOL */ {
  return util.boolFromFfi(libmsdelta_dll.ApplyDeltaB(ApplyFlags, util.toPointer(Source), util.toPointer(Delta), util.toPointer(lpTarget)));
}

export function ApplyDeltaProvidedB(
  ApplyFlags: Deno.PointerValue /* i64 */,
  Source: Uint8Array | Deno.PointerValue | null /* Windows.Win32.System.ApplicationInstallationAndServicing.DELTA_INPUT */,
  Delta: Uint8Array | Deno.PointerValue | null /* Windows.Win32.System.ApplicationInstallationAndServicing.DELTA_INPUT */,
  lpTarget: Deno.PointerValue | Uint8Array | null /* ptr */,
  uTargetSize: Deno.PointerValue /* usize */,
): boolean /* Windows.Win32.Foundation.BOOL */ {
  return util.boolFromFfi(libmsdelta_dll.ApplyDeltaProvidedB(ApplyFlags, util.toPointer(Source), util.toPointer(Delta), util.toPointer(lpTarget), uTargetSize));
}

export function ApplyDeltaA(
  ApplyFlags: Deno.PointerValue /* i64 */,
  lpSourceName: string | null /* Windows.Win32.Foundation.PSTR */,
  lpDeltaName: string | null /* Windows.Win32.Foundation.PSTR */,
  lpTargetName: string | null /* Windows.Win32.Foundation.PSTR */,
): boolean /* Windows.Win32.Foundation.BOOL */ {
  return util.boolFromFfi(libmsdelta_dll.ApplyDeltaA(ApplyFlags, util.pstrToFfi(lpSourceName), util.pstrToFfi(lpDeltaName), util.pstrToFfi(lpTargetName)));
}

export function ApplyDeltaW(
  ApplyFlags: Deno.PointerValue /* i64 */,
  lpSourceName: string | null /* Windows.Win32.Foundation.PWSTR */,
  lpDeltaName: string | null /* Windows.Win32.Foundation.PWSTR */,
  lpTargetName: string | null /* Windows.Win32.Foundation.PWSTR */,
): boolean /* Windows.Win32.Foundation.BOOL */ {
  return util.boolFromFfi(libmsdelta_dll.ApplyDeltaW(ApplyFlags, util.pwstrToFfi(lpSourceName), util.pwstrToFfi(lpDeltaName), util.pwstrToFfi(lpTargetName)));
}

export function CreateDeltaB(
  FileTypeSet: Deno.PointerValue /* i64 */,
  SetFlags: Deno.PointerValue /* i64 */,
  ResetFlags: Deno.PointerValue /* i64 */,
  Source: Uint8Array | Deno.PointerValue | null /* Windows.Win32.System.ApplicationInstallationAndServicing.DELTA_INPUT */,
  Target: Uint8Array | Deno.PointerValue | null /* Windows.Win32.System.ApplicationInstallationAndServicing.DELTA_INPUT */,
  SourceOptions: Uint8Array | Deno.PointerValue | null /* Windows.Win32.System.ApplicationInstallationAndServicing.DELTA_INPUT */,
  TargetOptions: Uint8Array | Deno.PointerValue | null /* Windows.Win32.System.ApplicationInstallationAndServicing.DELTA_INPUT */,
  GlobalOptions: Uint8Array | Deno.PointerValue | null /* Windows.Win32.System.ApplicationInstallationAndServicing.DELTA_INPUT */,
  lpTargetFileTime: Deno.PointerValue | Uint8Array | null /* ptr */,
  HashAlgId: number /* u32 */,
  lpDelta: Deno.PointerValue | Uint8Array | null /* ptr */,
): boolean /* Windows.Win32.Foundation.BOOL */ {
  return util.boolFromFfi(libmsdelta_dll.CreateDeltaB(FileTypeSet, SetFlags, ResetFlags, util.toPointer(Source), util.toPointer(Target), util.toPointer(SourceOptions), util.toPointer(TargetOptions), util.toPointer(GlobalOptions), util.toPointer(lpTargetFileTime), HashAlgId, util.toPointer(lpDelta)));
}

export function CreateDeltaA(
  FileTypeSet: Deno.PointerValue /* i64 */,
  SetFlags: Deno.PointerValue /* i64 */,
  ResetFlags: Deno.PointerValue /* i64 */,
  lpSourceName: string | null /* Windows.Win32.Foundation.PSTR */,
  lpTargetName: string | null /* Windows.Win32.Foundation.PSTR */,
  lpSourceOptionsName: string | null /* Windows.Win32.Foundation.PSTR */,
  lpTargetOptionsName: string | null /* Windows.Win32.Foundation.PSTR */,
  GlobalOptions: Uint8Array | Deno.PointerValue | null /* Windows.Win32.System.ApplicationInstallationAndServicing.DELTA_INPUT */,
  lpTargetFileTime: Deno.PointerValue | Uint8Array | null /* ptr */,
  HashAlgId: number /* u32 */,
  lpDeltaName: string | null /* Windows.Win32.Foundation.PSTR */,
): boolean /* Windows.Win32.Foundation.BOOL */ {
  return util.boolFromFfi(libmsdelta_dll.CreateDeltaA(FileTypeSet, SetFlags, ResetFlags, util.pstrToFfi(lpSourceName), util.pstrToFfi(lpTargetName), util.pstrToFfi(lpSourceOptionsName), util.pstrToFfi(lpTargetOptionsName), util.toPointer(GlobalOptions), util.toPointer(lpTargetFileTime), HashAlgId, util.pstrToFfi(lpDeltaName)));
}

export function CreateDeltaW(
  FileTypeSet: Deno.PointerValue /* i64 */,
  SetFlags: Deno.PointerValue /* i64 */,
  ResetFlags: Deno.PointerValue /* i64 */,
  lpSourceName: string | null /* Windows.Win32.Foundation.PWSTR */,
  lpTargetName: string | null /* Windows.Win32.Foundation.PWSTR */,
  lpSourceOptionsName: string | null /* Windows.Win32.Foundation.PWSTR */,
  lpTargetOptionsName: string | null /* Windows.Win32.Foundation.PWSTR */,
  GlobalOptions: Uint8Array | Deno.PointerValue | null /* Windows.Win32.System.ApplicationInstallationAndServicing.DELTA_INPUT */,
  lpTargetFileTime: Deno.PointerValue | Uint8Array | null /* ptr */,
  HashAlgId: number /* u32 */,
  lpDeltaName: string | null /* Windows.Win32.Foundation.PWSTR */,
): boolean /* Windows.Win32.Foundation.BOOL */ {
  return util.boolFromFfi(libmsdelta_dll.CreateDeltaW(FileTypeSet, SetFlags, ResetFlags, util.pwstrToFfi(lpSourceName), util.pwstrToFfi(lpTargetName), util.pwstrToFfi(lpSourceOptionsName), util.pwstrToFfi(lpTargetOptionsName), util.toPointer(GlobalOptions), util.toPointer(lpTargetFileTime), HashAlgId, util.pwstrToFfi(lpDeltaName)));
}

export function GetDeltaSignatureB(
  FileTypeSet: Deno.PointerValue /* i64 */,
  HashAlgId: number /* u32 */,
  Source: Uint8Array | Deno.PointerValue | null /* Windows.Win32.System.ApplicationInstallationAndServicing.DELTA_INPUT */,
  lpHash: Deno.PointerValue | Uint8Array | null /* ptr */,
): boolean /* Windows.Win32.Foundation.BOOL */ {
  return util.boolFromFfi(libmsdelta_dll.GetDeltaSignatureB(FileTypeSet, HashAlgId, util.toPointer(Source), util.toPointer(lpHash)));
}

export function GetDeltaSignatureA(
  FileTypeSet: Deno.PointerValue /* i64 */,
  HashAlgId: number /* u32 */,
  lpSourceName: string | null /* Windows.Win32.Foundation.PSTR */,
  lpHash: Deno.PointerValue | Uint8Array | null /* ptr */,
): boolean /* Windows.Win32.Foundation.BOOL */ {
  return util.boolFromFfi(libmsdelta_dll.GetDeltaSignatureA(FileTypeSet, HashAlgId, util.pstrToFfi(lpSourceName), util.toPointer(lpHash)));
}

export function GetDeltaSignatureW(
  FileTypeSet: Deno.PointerValue /* i64 */,
  HashAlgId: number /* u32 */,
  lpSourceName: string | null /* Windows.Win32.Foundation.PWSTR */,
  lpHash: Deno.PointerValue | Uint8Array | null /* ptr */,
): boolean /* Windows.Win32.Foundation.BOOL */ {
  return util.boolFromFfi(libmsdelta_dll.GetDeltaSignatureW(FileTypeSet, HashAlgId, util.pwstrToFfi(lpSourceName), util.toPointer(lpHash)));
}

export function DeltaNormalizeProvidedB(
  FileTypeSet: Deno.PointerValue /* i64 */,
  NormalizeFlags: Deno.PointerValue /* i64 */,
  NormalizeOptions: Uint8Array | Deno.PointerValue | null /* Windows.Win32.System.ApplicationInstallationAndServicing.DELTA_INPUT */,
  lpSource: Deno.PointerValue | Uint8Array | null /* ptr */,
  uSourceSize: Deno.PointerValue /* usize */,
): boolean /* Windows.Win32.Foundation.BOOL */ {
  return util.boolFromFfi(libmsdelta_dll.DeltaNormalizeProvidedB(FileTypeSet, NormalizeFlags, util.toPointer(NormalizeOptions), util.toPointer(lpSource), uSourceSize));
}

export function DeltaFree(
  lpMemory: Deno.PointerValue | Uint8Array | null /* ptr */,
): boolean /* Windows.Win32.Foundation.BOOL */ {
  return util.boolFromFfi(libmsdelta_dll.DeltaFree(util.toPointer(lpMemory)));
}

export function CreateActCtxA(
  pActCtx: Deno.PointerValue | Uint8Array | null /* ptr */,
): Deno.PointerValue | null /* Windows.Win32.Foundation.HANDLE */ {
  return util.pointerFromFfi(libKERNEL32_dll.CreateActCtxA(util.toPointer(pActCtx)));
}

export function CreateActCtxW(
  pActCtx: Deno.PointerValue | Uint8Array | null /* ptr */,
): Deno.PointerValue | null /* Windows.Win32.Foundation.HANDLE */ {
  return util.pointerFromFfi(libKERNEL32_dll.CreateActCtxW(util.toPointer(pActCtx)));
}

export function AddRefActCtx(
  hActCtx: Uint8Array | Deno.PointerValue | null /* Windows.Win32.Foundation.HANDLE */,
): void /* void */ {
  return libKERNEL32_dll.AddRefActCtx(util.toPointer(hActCtx));
}

export function ReleaseActCtx(
  hActCtx: Uint8Array | Deno.PointerValue | null /* Windows.Win32.Foundation.HANDLE */,
): void /* void */ {
  return libKERNEL32_dll.ReleaseActCtx(util.toPointer(hActCtx));
}

export function ZombifyActCtx(
  hActCtx: Uint8Array | Deno.PointerValue | null /* Windows.Win32.Foundation.HANDLE */,
): boolean /* Windows.Win32.Foundation.BOOL */ {
  return util.boolFromFfi(libKERNEL32_dll.ZombifyActCtx(util.toPointer(hActCtx)));
}

export function ActivateActCtx(
  hActCtx: Uint8Array | Deno.PointerValue | null /* Windows.Win32.Foundation.HANDLE */,
  lpCookie: Deno.PointerValue | Uint8Array | null /* ptr */,
): boolean /* Windows.Win32.Foundation.BOOL */ {
  return util.boolFromFfi(libKERNEL32_dll.ActivateActCtx(util.toPointer(hActCtx), util.toPointer(lpCookie)));
}

export function DeactivateActCtx(
  dwFlags: number /* u32 */,
  ulCookie: Deno.PointerValue /* usize */,
): boolean /* Windows.Win32.Foundation.BOOL */ {
  return util.boolFromFfi(libKERNEL32_dll.DeactivateActCtx(dwFlags, ulCookie));
}

export function GetCurrentActCtx(
  lphActCtx: Deno.PointerValue | Uint8Array | null /* ptr */,
): boolean /* Windows.Win32.Foundation.BOOL */ {
  return util.boolFromFfi(libKERNEL32_dll.GetCurrentActCtx(util.toPointer(lphActCtx)));
}

export function FindActCtxSectionStringA(
  dwFlags: number /* u32 */,
  lpExtensionGuid: Deno.PointerValue | Uint8Array | null /* ptr */,
  ulSectionId: number /* u32 */,
  lpStringToFind: string | null /* Windows.Win32.Foundation.PSTR */,
  ReturnedData: Deno.PointerValue | Uint8Array | null /* ptr */,
): boolean /* Windows.Win32.Foundation.BOOL */ {
  return util.boolFromFfi(libKERNEL32_dll.FindActCtxSectionStringA(dwFlags, util.toPointer(lpExtensionGuid), ulSectionId, util.pstrToFfi(lpStringToFind), util.toPointer(ReturnedData)));
}

export function FindActCtxSectionStringW(
  dwFlags: number /* u32 */,
  lpExtensionGuid: Deno.PointerValue | Uint8Array | null /* ptr */,
  ulSectionId: number /* u32 */,
  lpStringToFind: string | null /* Windows.Win32.Foundation.PWSTR */,
  ReturnedData: Deno.PointerValue | Uint8Array | null /* ptr */,
): boolean /* Windows.Win32.Foundation.BOOL */ {
  return util.boolFromFfi(libKERNEL32_dll.FindActCtxSectionStringW(dwFlags, util.toPointer(lpExtensionGuid), ulSectionId, util.pwstrToFfi(lpStringToFind), util.toPointer(ReturnedData)));
}

export function FindActCtxSectionGuid(
  dwFlags: number /* u32 */,
  lpExtensionGuid: Deno.PointerValue | Uint8Array | null /* ptr */,
  ulSectionId: number /* u32 */,
  lpGuidToFind: Deno.PointerValue | Uint8Array | null /* ptr */,
  ReturnedData: Deno.PointerValue | Uint8Array | null /* ptr */,
): boolean /* Windows.Win32.Foundation.BOOL */ {
  return util.boolFromFfi(libKERNEL32_dll.FindActCtxSectionGuid(dwFlags, util.toPointer(lpExtensionGuid), ulSectionId, util.toPointer(lpGuidToFind), util.toPointer(ReturnedData)));
}

export function QueryActCtxW(
  dwFlags: number /* u32 */,
  hActCtx: Uint8Array | Deno.PointerValue | null /* Windows.Win32.Foundation.HANDLE */,
  pvSubInstance: Deno.PointerValue | Uint8Array | null /* ptr */,
  ulInfoClass: number /* u32 */,
  pvBuffer: Deno.PointerValue | Uint8Array | null /* ptr */,
  cbBuffer: Deno.PointerValue /* usize */,
  pcbWrittenOrRequired: Deno.PointerValue | Uint8Array | null /* ptr */,
): boolean /* Windows.Win32.Foundation.BOOL */ {
  return util.boolFromFfi(libKERNEL32_dll.QueryActCtxW(dwFlags, util.toPointer(hActCtx), util.toPointer(pvSubInstance), ulInfoClass, util.toPointer(pvBuffer), cbBuffer, util.toPointer(pcbWrittenOrRequired)));
}

export function QueryActCtxSettingsW(
  dwFlags: number /* u32 */,
  hActCtx: Uint8Array | Deno.PointerValue | null /* Windows.Win32.Foundation.HANDLE */,
  settingsNameSpace: string | null /* Windows.Win32.Foundation.PWSTR */,
  settingName: string | null /* Windows.Win32.Foundation.PWSTR */,
  pvBuffer: string | null /* Windows.Win32.Foundation.PWSTR */,
  dwBuffer: Deno.PointerValue /* usize */,
  pdwWrittenOrRequired: Deno.PointerValue | Uint8Array | null /* ptr */,
): boolean /* Windows.Win32.Foundation.BOOL */ {
  return util.boolFromFfi(libKERNEL32_dll.QueryActCtxSettingsW(dwFlags, util.toPointer(hActCtx), util.pwstrToFfi(settingsNameSpace), util.pwstrToFfi(settingName), util.pwstrToFfi(pvBuffer), dwBuffer, util.toPointer(pdwWrittenOrRequired)));
}

