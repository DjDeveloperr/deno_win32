/// Auto-generated by Deno Win32: Windows.Win32.System.Registry.Apis

import * as util from "../../util.ts";

// Enums
export type REG_VALUE_TYPE = number;
export type REG_SAM_FLAGS = number;
export type REG_OPEN_CREATE_OPTIONS = number;
export type REG_CREATE_KEY_DISPOSITION = number;
export type REG_SAVE_FORMAT = number;
export type REG_RESTORE_KEY_FLAGS = number;
export type REG_NOTIFY_FILTER = number;
export type RRF_RT = number;
export type WIN32_ERROR = number;

// Constants
export const HKEY_CLASSES_ROOT = 19327352832;
export const HKEY_CURRENT_USER = 2218350608385;
export const HKEY_LOCAL_MACHINE = 4417373863938;
export const HKEY_USERS = 153950955241475;
export const HKEY_PERFORMANCE_DATA = 8815420375044;
export const HKEY_PERFORMANCE_TEXT = 105572443619408;
export const HKEY_PERFORMANCE_NLSTEXT = 7782293868472434784n;
export const HKEY_CURRENT_CONFIG = 6616397119493;
export const HKEY_DYN_DATA = 7715908747270;
export const HKEY_CURRENT_USER_LOCAL_SETTINGS = 11014443630599;
export const RRF_SUBKEY_WOW6464KEY = 65536;
export const RRF_SUBKEY_WOW6432KEY = 131072;
export const RRF_WOW64_MASK = 196608;
export const RRF_NOEXPAND = 268435456;
export const RRF_ZEROONFAILURE = 536870912;
export const REG_PROCESS_APPKEY = 1;
export const REG_USE_CURRENT_SECURITY_CONTEXT = 2;
export const PROVIDER_KEEPS_VALUE_LENGTH = 1;
export const REG_MUI_STRING_TRUNCATE = 1;
export const REG_SECURE_CONNECTION = 1;
export const REGSTR_KEY_CLASS = `Class`;
export const REGSTR_KEY_CONFIG = `Config`;
export const REGSTR_KEY_ENUM = `Enum`;
export const REGSTR_KEY_ROOTENUM = `Root`;
export const REGSTR_KEY_BIOSENUM = `BIOS`;
export const REGSTR_KEY_ACPIENUM = `ACPI`;
export const REGSTR_KEY_PCMCIAENUM = `PCMCIA`;
export const REGSTR_KEY_PCIENUM = `PCI`;
export const REGSTR_KEY_VPOWERDENUM = `VPOWERD`;
export const REGSTR_KEY_ISAENUM = `ISAPnP`;
export const REGSTR_KEY_EISAENUM = `EISA`;
export const REGSTR_KEY_LOGCONFIG = `LogConfig`;
export const REGSTR_KEY_SYSTEMBOARD = `*PNP0C01`;
export const REGSTR_KEY_APM = `*PNP0C05`;
export const REGSTR_KEY_INIUPDATE = `IniUpdate`;
export const REG_KEY_INSTDEV = `Installed`;
export const REGSTR_KEY_DOSOPTCDROM = `CD-ROM`;
export const REGSTR_KEY_DOSOPTMOUSE = `MOUSE`;
export const REGSTR_KEY_KNOWNDOCKINGSTATES = `Hardware Profiles`;
export const REGSTR_KEY_DEVICEPARAMETERS = `Device Parameters`;
export const REGSTR_KEY_DRIVERPARAMETERS = `Driver Parameters`;
export const REGSTR_DEFAULT_INSTANCE = 0000;
export const REGSTR_PATH_SETUP = `Software\\Microsoft\\Windows\\CurrentVersion`;
export const REGSTR_PATH_DRIVERSIGN = `Software\\Microsoft\\Driver Signing`;
export const REGSTR_PATH_NONDRIVERSIGN = `Software\\Microsoft\\Non-Driver Signing`;
export const REGSTR_PATH_DRIVERSIGN_POLICY = `Software\\Policies\\Microsoft\\Windows NT\\Driver Signing`;
export const REGSTR_PATH_NONDRIVERSIGN_POLICY = `Software\\Policies\\Microsoft\\Windows NT\\Non-Driver Signing`;
export const REGSTR_PATH_PIFCONVERT = `Software\\Microsoft\\Windows\\CurrentVersion\\PIFConvert`;
export const REGSTR_PATH_MSDOSOPTS = `Software\\Microsoft\\Windows\\CurrentVersion\\MS-DOSOptions`;
export const REGSTR_PATH_NOSUGGMSDOS = `Software\\Microsoft\\Windows\\CurrentVersion\\NoMSDOSWarn`;
export const REGSTR_PATH_NEWDOSBOX = `Software\\Microsoft\\Windows\\CurrentVersion\\MS-DOSSpecialConfig`;
export const REGSTR_PATH_RUNONCE = `Software\\Microsoft\\Windows\\CurrentVersion\\RunOnce`;
export const REGSTR_PATH_RUNONCEEX = `Software\\Microsoft\\Windows\\CurrentVersion\\RunOnceEx`;
export const REGSTR_PATH_RUN = `Software\\Microsoft\\Windows\\CurrentVersion\\Run`;
export const REGSTR_PATH_RUNSERVICESONCE = `Software\\Microsoft\\Windows\\CurrentVersion\\RunServicesOnce`;
export const REGSTR_PATH_RUNSERVICES = `Software\\Microsoft\\Windows\\CurrentVersion\\RunServices`;
export const REGSTR_PATH_EXPLORER = `Software\\Microsoft\\Windows\\CurrentVersion\\Explorer`;
export const REGSTR_PATH_PROPERTYSYSTEM = `Software\\Microsoft\\Windows\\CurrentVersion\\PropertySystem`;
export const REGSTR_PATH_DETECT = `Software\\Microsoft\\Windows\\CurrentVersion\\Detect`;
export const REGSTR_PATH_APPPATHS = `Software\\Microsoft\\Windows\\CurrentVersion\\App Paths`;
export const REGSTR_PATH_UNINSTALL = `Software\\Microsoft\\Windows\\CurrentVersion\\Uninstall`;
export const REGSTR_PATH_REALMODENET = `Software\\Microsoft\\Windows\\CurrentVersion\\Network\\Real Mode Net`;
export const REGSTR_PATH_NETEQUIV = `Software\\Microsoft\\Windows\\CurrentVersion\\Network\\Equivalent`;
export const REGSTR_PATH_CVNETWORK = `Software\\Microsoft\\Windows\\CurrentVersion\\Network`;
export const REGSTR_PATH_WMI_SECURITY = `System\\CurrentControlSet\\Control\\Wmi\\Security`;
export const REGSTR_PATH_RELIABILITY = `Software\\Microsoft\\Windows\\CurrentVersion\\Reliability`;
export const REGSTR_PATH_RELIABILITY_POLICY = `Software\\Policies\\Microsoft\\Windows NT\\Reliability`;
export const REGSTR_PATH_RELIABILITY_POLICY_SHUTDOWNREASONUI = `ShutdownReasonUI`;
export const REGSTR_PATH_RELIABILITY_POLICY_SNAPSHOT = `Snapshot`;
export const REGSTR_PATH_RELIABILITY_POLICY_REPORTSNAPSHOT = `ReportSnapshot`;
export const REGSTR_PATH_REINSTALL = `SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Reinstall`;
export const REGSTR_PATH_NT_CURRENTVERSION = `Software\\Microsoft\\Windows NT\\CurrentVersion`;
export const REGSTR_PATH_VOLUMECACHE = `Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\VolumeCaches`;
export const REGSTR_VAL_DISPLAY = `display`;
export const REGSTR_PATH_IDCONFIGDB = `System\\CurrentControlSet\\Control\\IDConfigDB`;
export const REGSTR_PATH_CRITICALDEVICEDATABASE = `System\\CurrentControlSet\\Control\\CriticalDeviceDatabase`;
export const REGSTR_PATH_CLASS = `System\\CurrentControlSet\\Services\\Class`;
export const REGSTR_PATH_DISPLAYSETTINGS = `Display\\Settings`;
export const REGSTR_PATH_FONTS = `Display\\Fonts`;
export const REGSTR_PATH_ENUM = `Enum`;
export const REGSTR_PATH_ROOT = `Enum\\Root`;
export const REGSTR_PATH_CURRENTCONTROLSET = `System\\CurrentControlSet`;
export const REGSTR_PATH_SYSTEMENUM = `System\\CurrentControlSet\\Enum`;
export const REGSTR_PATH_HWPROFILES = `System\\CurrentControlSet\\Hardware Profiles`;
export const REGSTR_PATH_HWPROFILESCURRENT = `System\\CurrentControlSet\\Hardware Profiles\\Current`;
export const REGSTR_PATH_CLASS_NT = `System\\CurrentControlSet\\Control\\Class`;
export const REGSTR_PATH_PER_HW_ID_STORAGE = `Software\\Microsoft\\Windows NT\\CurrentVersion\\PerHwIdStorage`;
export const REGSTR_PATH_DEVICE_CLASSES = `System\\CurrentControlSet\\Control\\DeviceClasses`;
export const REGSTR_PATH_CODEVICEINSTALLERS = `System\\CurrentControlSet\\Control\\CoDeviceInstallers`;
export const REGSTR_PATH_BUSINFORMATION = `System\\CurrentControlSet\\Control\\PnP\\BusInformation`;
export const REGSTR_PATH_SERVICES = `System\\CurrentControlSet\\Services`;
export const REGSTR_PATH_VXD = `System\\CurrentControlSet\\Services\\VxD`;
export const REGSTR_PATH_IOS = `System\\CurrentControlSet\\Services\\VxD\\IOS`;
export const REGSTR_PATH_VMM = `System\\CurrentControlSet\\Services\\VxD\\VMM`;
export const REGSTR_PATH_VPOWERD = `System\\CurrentControlSet\\Services\\VxD\\VPOWERD`;
export const REGSTR_PATH_VNETSUP = `System\\CurrentControlSet\\Services\\VxD\\VNETSUP`;
export const REGSTR_PATH_NWREDIR = `System\\CurrentControlSet\\Services\\VxD\\NWREDIR`;
export const REGSTR_PATH_NCPSERVER = `System\\CurrentControlSet\\Services\\NcpServer\\Parameters`;
export const REGSTR_PATH_VCOMM = `System\\CurrentControlSet\\Services\\VxD\\VCOMM`;
export const REGSTR_PATH_IOARB = `System\\CurrentControlSet\\Services\\Arbitrators\\IOArb`;
export const REGSTR_PATH_ADDRARB = `System\\CurrentControlSet\\Services\\Arbitrators\\AddrArb`;
export const REGSTR_PATH_DMAARB = `System\\CurrentControlSet\\Services\\Arbitrators\\DMAArb`;
export const REGSTR_PATH_IRQARB = `System\\CurrentControlSet\\Services\\Arbitrators\\IRQArb`;
export const REGSTR_PATH_CODEPAGE = `System\\CurrentControlSet\\Control\\Nls\\Codepage`;
export const REGSTR_PATH_FILESYSTEM = `System\\CurrentControlSet\\Control\\FileSystem`;
export const REGSTR_PATH_FILESYSTEM_NOVOLTRACK = `System\\CurrentControlSet\\Control\\FileSystem\\NoVolTrack`;
export const REGSTR_PATH_CDFS = `System\\CurrentControlSet\\Control\\FileSystem\\CDFS`;
export const REGSTR_PATH_WINBOOT = `System\\CurrentControlSet\\Control\\WinBoot`;
export const REGSTR_PATH_INSTALLEDFILES = `System\\CurrentControlSet\\Control\\InstalledFiles`;
export const REGSTR_PATH_VMM32FILES = `System\\CurrentControlSet\\Control\\VMM32Files`;
export const REGSTR_MAX_VALUE_LENGTH = 256;
export const REGSTR_KEY_DEVICE_PROPERTIES = `Properties`;
export const REGSTR_VAL_SERVICE = `Service`;
export const REGSTR_VAL_CLASSGUID = `ClassGUID`;
export const REGSTR_VAL_DISABLECOUNT = `DisableCount`;
export const REGSTR_VAL_DOCKSTATE = `DockState`;
export const REGSTR_VAL_DEVICE_INSTANCE = `DeviceInstance`;
export const REGSTR_VAL_SYMBOLIC_LINK = `SymbolicLink`;
export const REGSTR_VAL_DEFAULT = `Default`;
export const REGSTR_VAL_LOWERFILTERS = `LowerFilters`;
export const REGSTR_VAL_UPPERFILTERS = `UpperFilters`;
export const REGSTR_VAL_LOCATION_INFORMATION = `LocationInformation`;
export const REGSTR_VAL_UI_NUMBER = `UINumber`;
export const REGSTR_VAL_UI_NUMBER_DESC_FORMAT = `UINumberDescFormat`;
export const REGSTR_VAL_CAPABILITIES = `Capabilities`;
export const REGSTR_VAL_ADDRESS = `Address`;
export const REGSTR_VAL_DEVICE_TYPE = `DeviceType`;
export const REGSTR_VAL_DEVICE_CHARACTERISTICS = `DeviceCharacteristics`;
export const REGSTR_VAL_DEVICE_SECURITY_DESCRIPTOR = `Security`;
export const REGSTR_VAL_DEVICE_EXCLUSIVE = `Exclusive`;
export const REGSTR_VAL_RESOURCE_PICKER_TAGS = `ResourcePickerTags`;
export const REGSTR_VAL_RESOURCE_PICKER_EXCEPTIONS = `ResourcePickerExceptions`;
export const REGSTR_VAL_CUSTOM_PROPERTY_CACHE_DATE = `CustomPropertyCacheDate`;
export const REGSTR_VAL_CUSTOM_PROPERTY_HW_ID_KEY = `CustomPropertyHwIdKey`;
export const REGSTR_VAL_LAST_UPDATE_TIME = `LastUpdateTime`;
export const REGSTR_VAL_CONTAINERID = `ContainerID`;
export const REGSTR_VAL_EJECT_PRIORITY = `EjectPriority`;
export const REGSTR_KEY_CONTROL = `Control`;
export const REGSTR_VAL_ACTIVESERVICE = `ActiveService`;
export const REGSTR_VAL_LINKED = `Linked`;
export const REGSTR_VAL_PHYSICALDEVICEOBJECT = `PhysicalDeviceObject`;
export const REGSTR_VAL_REMOVAL_POLICY = `RemovalPolicy`;
export const REGSTR_KEY_FILTERS = `Filters`;
export const REGSTR_VAL_LOWER_FILTER_DEFAULT_LEVEL = `LowerFilterDefaultLevel`;
export const REGSTR_VAL_UPPER_FILTER_DEFAULT_LEVEL = `UpperFilterDefaultLevel`;
export const REGSTR_KEY_LOWER_FILTER_LEVEL_DEFAULT = `*Lower`;
export const REGSTR_KEY_UPPER_FILTER_LEVEL_DEFAULT = `*Upper`;
export const REGSTR_VAL_LOWER_FILTER_LEVELS = `LowerFilterLevels`;
export const REGSTR_VAL_UPPER_FILTER_LEVELS = `UpperFilterLevels`;
export const REGSTR_VAL_CURRENT_VERSION = `CurrentVersion`;
export const REGSTR_VAL_CURRENT_BUILD = `CurrentBuildNumber`;
export const REGSTR_VAL_CURRENT_CSDVERSION = `CSDVersion`;
export const REGSTR_VAL_CURRENT_TYPE = `CurrentType`;
export const REGSTR_VAL_BITSPERPIXEL = `BitsPerPixel`;
export const REGSTR_VAL_RESOLUTION = `Resolution`;
export const REGSTR_VAL_DPILOGICALX = `DPILogicalX`;
export const REGSTR_VAL_DPILOGICALY = `DPILogicalY`;
export const REGSTR_VAL_DPIPHYSICALX = `DPIPhysicalX`;
export const REGSTR_VAL_DPIPHYSICALY = `DPIPhysicalY`;
export const REGSTR_VAL_REFRESHRATE = `RefreshRate`;
export const REGSTR_VAL_DISPLAYFLAGS = `DisplayFlags`;
export const REGSTR_PATH_CONTROLPANEL = `Control Panel`;
export const REGSTR_PATH_CONTROLSFOLDER = `Software\\Microsoft\\Windows\\CurrentVersion\\Controls Folder`;
export const REGSTR_VAL_DOSCP = `OEMCP`;
export const REGSTR_VAL_WINCP = `ACP`;
export const REGSTR_VAL_DONTUSEMEM = `DontAllocLastMem`;
export const REGSTR_VAL_SYSTEMROOT = `SystemRoot`;
export const REGSTR_VAL_BOOTCOUNT = `BootCount`;
export const REGSTR_VAL_REALNETSTART = `RealNetStart`;
export const REGSTR_VAL_MEDIA = `MediaPath`;
export const REGSTR_VAL_CONFIG = `ConfigPath`;
export const REGSTR_VAL_DEVICEPATH = `DevicePath`;
export const REGSTR_VAL_SRCPATH = `SourcePath`;
export const REGSTR_VAL_DRIVERCACHEPATH = `DriverCachePath`;
export const REGSTR_VAL_OLDWINDIR = `OldWinDir`;
export const REGSTR_VAL_SETUPFLAGS = `SetupFlags`;
export const REGSTR_VAL_REGOWNER = `RegisteredOwner`;
export const REGSTR_VAL_REGORGANIZATION = `RegisteredOrganization`;
export const REGSTR_VAL_LICENSINGINFO = `LicensingInfo`;
export const REGSTR_VAL_OLDMSDOSVER = `OldMSDOSVer`;
export const REGSTR_VAL_FIRSTINSTALLDATETIME = `FirstInstallDateTime`;
export const REGSTR_VAL_INSTALLTYPE = `InstallType`;
export const IT_COMPACT = 0;
export const IT_TYPICAL = 1;
export const IT_PORTABLE = 2;
export const IT_CUSTOM = 3;
export const REGSTR_VAL_WRAPPER = `Wrapper`;
export const REGSTR_KEY_RUNHISTORY = `RunHistory`;
export const REGSTR_VAL_LASTALIVEINTERVAL = `TimeStampInterval`;
export const REGSTR_VAL_DIRTYSHUTDOWN = `DirtyShutdown`;
export const REGSTR_VAL_DIRTYSHUTDOWNTIME = `DirtyShutdownTime`;
export const REGSTR_VAL_BT = `6005BT`;
export const REGSTR_VAL_LASTCOMPUTERNAME = `LastComputerName`;
export const REGSTR_VAL_LASTALIVEBT = `LastAliveBT`;
export const REGSTR_VAL_LASTALIVESTAMP = `LastAliveStamp`;
export const REGSTR_VAL_LASTALIVESTAMPFORCED = `LastAliveStampForced`;
export const REGSTR_VAL_LASTALIVESTAMPINTERVAL = `LastAliveStampInterval`;
export const REGSTR_VAL_LASTALIVESTAMPPOLICYINTERVAL = `LastAliveStampPolicyInterval`;
export const REGSTR_VAL_LASTALIVEUPTIME = `LastAliveUptime`;
export const REGSTR_VAL_LASTALIVEPMPOLICY = `LastAlivePMPolicy`;
export const REGSTR_VAL_REASONCODE = `ReasonCode`;
export const REGSTR_VAL_COMMENT = `Comment`;
export const REGSTR_VAL_SHUTDOWNREASON = `ShutdownReason`;
export const REGSTR_VAL_SHUTDOWNREASON_CODE = `ShutdownReasonCode`;
export const REGSTR_VAL_SHUTDOWNREASON_COMMENT = `ShutdownReasonComment`;
export const REGSTR_VAL_SHUTDOWNREASON_PROCESS = `ShutdownReasonProcess`;
export const REGSTR_VAL_SHUTDOWNREASON_USERNAME = `ShutdownReasonUserName`;
export const REGSTR_VAL_SHOWREASONUI = `ShutdownReasonUI`;
export const REGSTR_VAL_SHUTDOWN_IGNORE_PREDEFINED = `ShutdownIgnorePredefinedReasons`;
export const REGSTR_VAL_SHUTDOWN_STATE_SNAPSHOT = `ShutdownStateSnapshot`;
export const REGSTR_KEY_SETUP = `\\Setup`;
export const REGSTR_VAL_BOOTDIR = `BootDir`;
export const REGSTR_VAL_WINBOOTDIR = `WinbootDir`;
export const REGSTR_VAL_WINDIR = `WinDir`;
export const REGSTR_VAL_APPINSTPATH = `AppInstallPath`;
export const REGSTR_KEY_EBDFILESLOCAL = `EBDFilesLocale`;
export const REGSTR_KEY_EBDFILESKEYBOARD = `EBDFilesKeyboard`;
export const REGSTR_KEY_EBDAUTOEXECBATLOCAL = `EBDAutoexecBatLocale`;
export const REGSTR_KEY_EBDAUTOEXECBATKEYBOARD = `EBDAutoexecBatKeyboard`;
export const REGSTR_KEY_EBDCONFIGSYSLOCAL = `EBDConfigSysLocale`;
export const REGSTR_KEY_EBDCONFIGSYSKEYBOARD = `EBDConfigSysKeyboard`;
export const REGSTR_VAL_POLICY = `Policy`;
export const REGSTR_VAL_BEHAVIOR_ON_FAILED_VERIFY = `BehaviorOnFailedVerify`;
export const DRIVERSIGN_NONE = 0;
export const DRIVERSIGN_WARNING = 1;
export const DRIVERSIGN_BLOCKING = 2;
export const REGSTR_VAL_MSDOSMODE = `MSDOSMode`;
export const REGSTR_VAL_MSDOSMODEDISCARD = `Discard`;
export const REGSTR_VAL_DOSOPTGLOBALFLAGS = `GlobalFlags`;
export const DOSOPTGF_DEFCLEAN = 1;
export const REGSTR_VAL_DOSOPTFLAGS = `Flags`;
export const REGSTR_VAL_OPTORDER = `Order`;
export const REGSTR_VAL_CONFIGSYS = `Config.Sys`;
export const REGSTR_VAL_AUTOEXEC = `Autoexec.Bat`;
export const REGSTR_VAL_STDDOSOPTION = `StdOption`;
export const REGSTR_VAL_DOSOPTTIP = `TipText`;
export const DOSOPTF_DEFAULT = 1;
export const DOSOPTF_SUPPORTED = 2;
export const DOSOPTF_ALWAYSUSE = 4;
export const DOSOPTF_USESPMODE = 8;
export const DOSOPTF_PROVIDESUMB = 16;
export const DOSOPTF_NEEDSETUP = 32;
export const DOSOPTF_INDOSSTART = 64;
export const DOSOPTF_MULTIPLE = 128;
export const SUF_FIRSTTIME = 1;
export const SUF_EXPRESS = 2;
export const SUF_BATCHINF = 4;
export const SUF_CLEAN = 8;
export const SUF_INSETUP = 16;
export const SUF_NETSETUP = 32;
export const SUF_NETHDBOOT = 64;
export const SUF_NETRPLBOOT = 128;
export const SUF_SBSCOPYOK = 256;
export const REGSTR_VAL_DOSPAGER = `DOSPager`;
export const REGSTR_VAL_VXDGROUPS = `VXDGroups`;
export const REGSTR_VAL_VPOWERDFLAGS = `Flags`;
export const VPDF_DISABLEPWRMGMT = 1;
export const VPDF_FORCEAPM10MODE = 2;
export const VPDF_SKIPINTELSLCHECK = 4;
export const VPDF_DISABLEPWRSTATUSPOLL = 8;
export const VPDF_DISABLERINGRESUME = 16;
export const VPDF_SHOWMULTIBATT = 32;
export const BIF_SHOWSIMILARDRIVERS = 1;
export const BIF_RAWDEVICENEEDSDRIVER = 2;
export const REGSTR_VAL_WORKGROUP = `Workgroup`;
export const REGSTR_VAL_DIRECTHOST = `DirectHost`;
export const REGSTR_VAL_FILESHARING = `FileSharing`;
export const REGSTR_VAL_PRINTSHARING = `PrintSharing`;
export const REGSTR_VAL_FIRSTNETDRIVE = `FirstNetworkDrive`;
export const REGSTR_VAL_MAXCONNECTIONS = `MaxConnections`;
export const REGSTR_VAL_APISUPPORT = `APISupport`;
export const REGSTR_VAL_MAXRETRY = `MaxRetry`;
export const REGSTR_VAL_MINRETRY = `MinRetry`;
export const REGSTR_VAL_SUPPORTLFN = `SupportLFN`;
export const REGSTR_VAL_SUPPORTBURST = `SupportBurst`;
export const REGSTR_VAL_SUPPORTTUNNELLING = `SupportTunnelling`;
export const REGSTR_VAL_FULLTRACE = `FullTrace`;
export const REGSTR_VAL_READCACHING = `ReadCaching`;
export const REGSTR_VAL_SHOWDOTS = `ShowDots`;
export const REGSTR_VAL_GAPTIME = `GapTime`;
export const REGSTR_VAL_SEARCHMODE = `SearchMode`;
export const REGSTR_VAL_SHELLVERSION = `ShellVersion`;
export const REGSTR_VAL_MAXLIP = `MaxLIP`;
export const REGSTR_VAL_PRESERVECASE = `PreserveCase`;
export const REGSTR_VAL_OPTIMIZESFN = `OptimizeSFN`;
export const REGSTR_VAL_NCP_BROWSEMASTER = `BrowseMaster`;
export const REGSTR_VAL_NCP_USEPEERBROWSING = `Use_PeerBrowsing`;
export const REGSTR_VAL_NCP_USESAP = `Use_Sap`;
export const REGSTR_VAL_PCCARD_POWER = `EnablePowerManagement`;
export const REGSTR_VAL_WIN31FILESYSTEM = `Win31FileSystem`;
export const REGSTR_VAL_PRESERVELONGNAMES = `PreserveLongNames`;
export const REGSTR_VAL_DRIVEWRITEBEHIND = `DriveWriteBehind`;
export const REGSTR_VAL_ASYNCFILECOMMIT = `AsyncFileCommit`;
export const REGSTR_VAL_PATHCACHECOUNT = `PathCache`;
export const REGSTR_VAL_NAMECACHECOUNT = `NameCache`;
export const REGSTR_VAL_CONTIGFILEALLOC = `ContigFileAllocSize`;
export const REGSTR_VAL_FREESPACERATIO = `FreeSpaceRatio`;
export const REGSTR_VAL_VOLIDLETIMEOUT = `VolumeIdleTimeout`;
export const REGSTR_VAL_BUFFIDLETIMEOUT = `BufferIdleTimeout`;
export const REGSTR_VAL_BUFFAGETIMEOUT = `BufferAgeTimeout`;
export const REGSTR_VAL_NAMENUMERICTAIL = `NameNumericTail`;
export const REGSTR_VAL_READAHEADTHRESHOLD = `ReadAheadThreshold`;
export const REGSTR_VAL_DOUBLEBUFFER = `DoubleBuffer`;
export const REGSTR_VAL_SOFTCOMPATMODE = `SoftCompatMode`;
export const REGSTR_VAL_DRIVESPINDOWN = `DriveSpinDown`;
export const REGSTR_VAL_FORCEPMIO = `ForcePMIO`;
export const REGSTR_VAL_FORCERMIO = `ForceRMIO`;
export const REGSTR_VAL_LASTBOOTPMDRVS = `LastBootPMDrvs`;
export const REGSTR_VAL_ACSPINDOWNPREVIOUS = `ACSpinDownPrevious`;
export const REGSTR_VAL_BATSPINDOWNPREVIOUS = `BatSpinDownPrevious`;
export const REGSTR_VAL_VIRTUALHDIRQ = `VirtualHDIRQ`;
export const REGSTR_VAL_SRVNAMECACHECOUNT = `ServerNameCacheMax`;
export const REGSTR_VAL_SRVNAMECACHE = `ServerNameCache`;
export const REGSTR_VAL_SRVNAMECACHENETPROV = `ServerNameCacheNumNets`;
export const REGSTR_VAL_AUTOMOUNT = `AutoMountDrives`;
export const REGSTR_VAL_COMPRESSIONMETHOD = `CompressionAlgorithm`;
export const REGSTR_VAL_COMPRESSIONTHRESHOLD = `CompressionThreshold`;
export const REGSTR_VAL_ACDRIVESPINDOWN = `ACDriveSpinDown`;
export const REGSTR_VAL_BATDRIVESPINDOWN = `BatDriveSpinDown`;
export const REGSTR_VAL_CDCACHESIZE = `CacheSize`;
export const REGSTR_VAL_CDPREFETCH = `Prefetch`;
export const REGSTR_VAL_CDPREFETCHTAIL = `PrefetchTail`;
export const REGSTR_VAL_CDRAWCACHE = `RawCache`;
export const REGSTR_VAL_CDEXTERRORS = `ExtendedErrors`;
export const REGSTR_VAL_CDSVDSENSE = `SVDSense`;
export const REGSTR_VAL_CDSHOWVERSIONS = `ShowVersions`;
export const REGSTR_VAL_CDCOMPATNAMES = `MSCDEXCompatNames`;
export const REGSTR_VAL_CDNOREADAHEAD = `NoReadAhead`;
export const REGSTR_VAL_SCSI = `SCSI\\`;
export const REGSTR_VAL_ESDI = `ESDI\\`;
export const REGSTR_VAL_FLOP = `FLOP\\`;
export const REGSTR_VAL_DISK = `GenDisk`;
export const REGSTR_VAL_CDROM = `GenCD`;
export const REGSTR_VAL_TAPE = `TAPE`;
export const REGSTR_VAL_SCANNER = `SCANNER`;
export const REGSTR_VAL_FLOPPY = `FLOPPY`;
export const REGSTR_VAL_SCSITID = `SCSITargetID`;
export const REGSTR_VAL_SCSILUN = `SCSILUN`;
export const REGSTR_VAL_REVLEVEL = `RevisionLevel`;
export const REGSTR_VAL_PRODUCTID = `ProductId`;
export const REGSTR_VAL_PRODUCTTYPE = `ProductType`;
export const REGSTR_VAL_DEVTYPE = `DeviceType`;
export const REGSTR_VAL_REMOVABLE = `Removable`;
export const REGSTR_VAL_CURDRVLET = `CurrentDriveLetterAssignment`;
export const REGSTR_VAL_USRDRVLET = `UserDriveLetterAssignment`;
export const REGSTR_VAL_SYNCDATAXFER = `SyncDataXfer`;
export const REGSTR_VAL_AUTOINSNOTE = `AutoInsertNotification`;
export const REGSTR_VAL_DISCONNECT = `Disconnect`;
export const REGSTR_VAL_INT13 = `Int13`;
export const REGSTR_VAL_PMODE_INT13 = `PModeInt13`;
export const REGSTR_VAL_USERSETTINGS = `AdapterSettings`;
export const REGSTR_VAL_NOIDE = `NoIDE`;
export const REGSTR_VAL_DISKCLASSNAME = `DiskDrive`;
export const REGSTR_VAL_CDROMCLASSNAME = `CDROM`;
export const REGSTR_VAL_FORCELOAD = `ForceLoadPD`;
export const REGSTR_VAL_FORCEFIFO = `ForceFIFO`;
export const REGSTR_VAL_FORCECL = `ForceChangeLine`;
export const REGSTR_VAL_NOUSECLASS = `NoUseClass`;
export const REGSTR_VAL_NOINSTALLCLASS = `NoInstallClass`;
export const REGSTR_VAL_NODISPLAYCLASS = `NoDisplayClass`;
export const REGSTR_VAL_SILENTINSTALL = `SilentInstall`;
export const REGSTR_VAL_FSFILTERCLASS = `FSFilterClass`;
export const REGSTR_KEY_PCMCIA_CLASS = `PCMCIA`;
export const REGSTR_KEY_SCSI_CLASS = `SCSIAdapter`;
export const REGSTR_KEY_PORTS_CLASS = `ports`;
export const REGSTR_KEY_MEDIA_CLASS = `MEDIA`;
export const REGSTR_KEY_DISPLAY_CLASS = `Display`;
export const REGSTR_KEY_KEYBOARD_CLASS = `Keyboard`;
export const REGSTR_KEY_MOUSE_CLASS = `Mouse`;
export const REGSTR_KEY_MONITOR_CLASS = `Monitor`;
export const REGSTR_KEY_MODEM_CLASS = `Modem`;
export const REGSTR_VAL_PCMCIA_OPT = `Options`;
export const PCMCIA_OPT_HAVE_SOCKET = 1;
export const PCMCIA_OPT_AUTOMEM = 4;
export const PCMCIA_OPT_NO_SOUND = 8;
export const PCMCIA_OPT_NO_AUDIO = 16;
export const PCMCIA_OPT_NO_APMREMOVE = 32;
export const REGSTR_VAL_PCMCIA_MEM = `Memory`;
export const PCMCIA_DEF_MEMBEGIN = 786432;
export const PCMCIA_DEF_MEMEND = 16777215;
export const PCMCIA_DEF_MEMLEN = 4096;
export const REGSTR_VAL_PCMCIA_ALLOC = `AllocMemWin`;
export const REGSTR_VAL_PCMCIA_ATAD = `ATADelay`;
export const REGSTR_VAL_PCMCIA_SIZ = `MinRegionSize`;
export const PCMCIA_DEF_MIN_REGION = 65536;
export const REGSTR_VAL_P1284MDL = `Model`;
export const REGSTR_VAL_P1284MFG = `Manufacturer`;
export const REGSTR_VAL_ISAPNP = `ISAPNP`;
export const REGSTR_VAL_ISAPNP_RDP_OVERRIDE = `RDPOverRide`;
export const REGSTR_VAL_PCI = `PCI`;
export const REGSTR_PCI_OPTIONS = `Options`;
export const REGSTR_PCI_DUAL_IDE = `PCIDualIDE`;
export const PCI_OPTIONS_USE_BIOS = 1;
export const PCI_OPTIONS_USE_IRQ_STEERING = 2;
export const AGP_FLAG_NO_1X_RATE = 1;
export const AGP_FLAG_NO_2X_RATE = 2;
export const AGP_FLAG_NO_4X_RATE = 4;
export const AGP_FLAG_NO_8X_RATE = 8;
export const AGP_FLAG_REVERSE_INITIALIZATION = 128;
export const AGP_FLAG_NO_SBA_ENABLE = 256;
export const AGP_FLAG_NO_FW_ENABLE = 512;
export const AGP_FLAG_SPECIAL_TARGET = 1048575;
export const AGP_FLAG_SPECIAL_RESERVE = 1015808;
export const REGSTR_KEY_CRASHES = `Crashes`;
export const REGSTR_KEY_DANGERS = `Dangers`;
export const REGSTR_KEY_DETMODVARS = `DetModVars`;
export const REGSTR_KEY_NDISINFO = `NDISInfo`;
export const REGSTR_VAL_PROTINIPATH = `ProtIniPath`;
export const REGSTR_VAL_RESOURCES = `Resources`;
export const REGSTR_VAL_CRASHFUNCS = `CrashFuncs`;
export const REGSTR_VAL_CLASS = `Class`;
export const REGSTR_VAL_CLASSDESC = `ClassDesc`;
export const REGSTR_VAL_DEVDESC = `DeviceDesc`;
export const REGSTR_VAL_BOOTCONFIG = `BootConfig`;
export const REGSTR_VAL_DETFUNC = `DetFunc`;
export const REGSTR_VAL_DETFLAGS = `DetFlags`;
export const REGSTR_VAL_COMPATIBLEIDS = `CompatibleIDs`;
export const REGSTR_VAL_DETCONFIG = `DetConfig`;
export const REGSTR_VAL_VERIFYKEY = `VerifyKey`;
export const REGSTR_VAL_COMINFO = `ComInfo`;
export const REGSTR_VAL_INFNAME = `InfName`;
export const REGSTR_VAL_CARDSPECIFIC = `CardSpecific`;
export const REGSTR_VAL_NETOSTYPE = `NetOSType`;
export const REGSTR_DATA_NETOS_NDIS = `NDIS`;
export const REGSTR_DATA_NETOS_ODI = `ODI`;
export const REGSTR_DATA_NETOS_IPX = `IPX`;
export const REGSTR_VAL_MFG = `Mfg`;
export const REGSTR_VAL_SCAN_ONLY_FIRST = `ScanOnlyFirstDrive`;
export const REGSTR_VAL_SHARE_IRQ = `ForceIRQSharing`;
export const REGSTR_VAL_NONSTANDARD_ATAPI = `NonStandardATAPI`;
export const REGSTR_VAL_IDE_FORCE_SERIALIZE = `ForceSerialization`;
export const REGSTR_VAL_MAX_HCID_LEN = 1024;
export const REGSTR_VAL_HWREV = `HWRevision`;
export const REGSTR_VAL_ENABLEINTS = `EnableInts`;
export const REGDF_NOTDETIO = 1;
export const REGDF_NOTDETMEM = 2;
export const REGDF_NOTDETIRQ = 4;
export const REGDF_NOTDETDMA = 8;
export const REGDF_NEEDFULLCONFIG = 16;
export const REGDF_GENFORCEDCONFIG = 32;
export const REGDF_NODETCONFIG = 32768;
export const REGDF_CONFLICTIO = 65536;
export const REGDF_CONFLICTMEM = 131072;
export const REGDF_CONFLICTIRQ = 262144;
export const REGDF_CONFLICTDMA = 524288;
export const REGDF_MAPIRQ2TO9 = 1048576;
export const REGDF_NOTVERIFIED = 2147483648;
export const REGSTR_VAL_APMBIOSVER = `APMBiosVer`;
export const REGSTR_VAL_APMFLAGS = `APMFlags`;
export const REGSTR_VAL_SLSUPPORT = `SLSupport`;
export const REGSTR_VAL_MACHINETYPE = `MachineType`;
export const REGSTR_VAL_SETUPMACHINETYPE = `SetupMachineType`;
export const REGSTR_MACHTYPE_UNKNOWN = `Unknown`;
export const REGSTR_MACHTYPE_IBMPC = `IBM PC`;
export const REGSTR_MACHTYPE_IBMPCJR = `IBM PCjr`;
export const REGSTR_MACHTYPE_IBMPCCONV = `IBM PC Convertible`;
export const REGSTR_MACHTYPE_IBMPCXT = `IBM PC/XT`;
export const REGSTR_MACHTYPE_IBMPCXT_286 = `IBM PC/XT 286`;
export const REGSTR_MACHTYPE_IBMPCAT = `IBM PC/AT`;
export const REGSTR_MACHTYPE_IBMPS2_25 = `IBM PS/2-25`;
export const REGSTR_MACHTYPE_IBMPS2_30_286 = `IBM PS/2-30 286`;
export const REGSTR_MACHTYPE_IBMPS2_30 = `IBM PS/2-30`;
export const REGSTR_MACHTYPE_IBMPS2_50 = `IBM PS/2-50`;
export const REGSTR_MACHTYPE_IBMPS2_50Z = `IBM PS/2-50Z`;
export const REGSTR_MACHTYPE_IBMPS2_55SX = `IBM PS/2-55SX`;
export const REGSTR_MACHTYPE_IBMPS2_60 = `IBM PS/2-60`;
export const REGSTR_MACHTYPE_IBMPS2_65SX = `IBM PS/2-65SX`;
export const REGSTR_MACHTYPE_IBMPS2_70 = `IBM PS/2-70`;
export const REGSTR_MACHTYPE_IBMPS2_P70 = `IBM PS/2-P70`;
export const REGSTR_MACHTYPE_IBMPS2_70_80 = `IBM PS/2-70/80`;
export const REGSTR_MACHTYPE_IBMPS2_80 = `IBM PS/2-80`;
export const REGSTR_MACHTYPE_IBMPS2_90 = `IBM PS/2-90`;
export const REGSTR_MACHTYPE_IBMPS1 = `IBM PS/1`;
export const REGSTR_MACHTYPE_PHOENIX_PCAT = `Phoenix PC/AT Compatible`;
export const REGSTR_MACHTYPE_HP_VECTRA = `HP Vectra`;
export const REGSTR_MACHTYPE_ATT_PC = `AT&T PC`;
export const REGSTR_MACHTYPE_ZENITH_PC = `Zenith PC`;
export const REGSTR_VAL_APMMENUSUSPEND = `APMMenuSuspend`;
export const APMMENUSUSPEND_DISABLED = 0;
export const APMMENUSUSPEND_ENABLED = 1;
export const APMMENUSUSPEND_UNDOCKED = 2;
export const APMMENUSUSPEND_NOCHANGE = 128;
export const REGSTR_VAL_APMACTIMEOUT = `APMACTimeout`;
export const REGSTR_VAL_APMBATTIMEOUT = `APMBatTimeout`;
export const APMTIMEOUT_DISABLED = 0;
export const REGSTR_VAL_APMSHUTDOWNPOWER = `APMShutDownPower`;
export const REGSTR_VAL_BUSTYPE = `BusType`;
export const REGSTR_VAL_CPU = `CPU`;
export const REGSTR_VAL_NDP = `NDP`;
export const REGSTR_VAL_PNPBIOSVER = `PnPBIOSVer`;
export const REGSTR_VAL_PNPSTRUCOFFSET = `PnPStrucOffset`;
export const REGSTR_VAL_PCIBIOSVER = `PCIBIOSVer`;
export const REGSTR_VAL_HWMECHANISM = `HWMechanism`;
export const REGSTR_VAL_LASTPCIBUSNUM = `LastPCIBusNum`;
export const REGSTR_VAL_CONVMEM = `ConvMem`;
export const REGSTR_VAL_EXTMEM = `ExtMem`;
export const REGSTR_VAL_COMPUTERNAME = `ComputerName`;
export const REGSTR_VAL_BIOSNAME = `BIOSName`;
export const REGSTR_VAL_BIOSVERSION = `BIOSVersion`;
export const REGSTR_VAL_BIOSDATE = `BIOSDate`;
export const REGSTR_VAL_MODEL = `Model`;
export const REGSTR_VAL_SUBMODEL = `Submodel`;
export const REGSTR_VAL_REVISION = `Revision`;
export const REGSTR_VAL_FIFODEPTH = `FIFODepth`;
export const REGSTR_VAL_RDINTTHRESHOLD = `RDIntThreshold`;
export const REGSTR_VAL_WRINTTHRESHOLD = `WRIntThreshold`;
export const REGSTR_VAL_PRIORITY = `Priority`;
export const REGSTR_VAL_DRIVER = `Driver`;
export const REGSTR_VAL_FUNCDESC = `FunctionDesc`;
export const REGSTR_VAL_FORCEDCONFIG = `ForcedConfig`;
export const REGSTR_VAL_CONFIGFLAGS = `ConfigFlags`;
export const REGSTR_VAL_CSCONFIGFLAGS = `CSConfigFlags`;
export const CONFIGFLAG_DISABLED = 1;
export const CONFIGFLAG_REMOVED = 2;
export const CONFIGFLAG_MANUAL_INSTALL = 4;
export const CONFIGFLAG_IGNORE_BOOT_LC = 8;
export const CONFIGFLAG_NET_BOOT = 16;
export const CONFIGFLAG_REINSTALL = 32;
export const CONFIGFLAG_FAILEDINSTALL = 64;
export const CONFIGFLAG_CANTSTOPACHILD = 128;
export const CONFIGFLAG_OKREMOVEROM = 256;
export const CONFIGFLAG_NOREMOVEEXIT = 512;
export const CONFIGFLAG_FINISH_INSTALL = 1024;
export const CONFIGFLAG_NEEDS_FORCED_CONFIG = 2048;
export const CONFIGFLAG_NETBOOT_CARD = 4096;
export const CONFIGFLAG_PARTIAL_LOG_CONF = 8192;
export const CONFIGFLAG_SUPPRESS_SURPRISE = 16384;
export const CONFIGFLAG_VERIFY_HARDWARE = 32768;
export const CONFIGFLAG_FINISHINSTALL_UI = 65536;
export const CONFIGFLAG_FINISHINSTALL_ACTION = 131072;
export const CONFIGFLAG_BOOT_DEVICE = 262144;
export const CONFIGFLAG_NEEDS_CLASS_CONFIG = 524288;
export const CSCONFIGFLAG_BITS = 7;
export const CSCONFIGFLAG_DISABLED = 1;
export const CSCONFIGFLAG_DO_NOT_CREATE = 2;
export const CSCONFIGFLAG_DO_NOT_START = 4;
export const DMSTATEFLAG_APPLYTOALL = 1;
export const REGSTR_VAL_ROOT_DEVNODE = `HTREE\\ROOT\\0`;
export const REGSTR_VAL_RESERVED_DEVNODE = `HTREE\\RESERVED\\0`;
export const REGSTR_PATH_MULTI_FUNCTION = `MF`;
export const REGSTR_VAL_RESOURCE_MAP = `ResourceMap`;
export const REGSTR_PATH_CHILD_PREFIX = `Child`;
export const NUM_RESOURCE_MAP = 256;
export const REGSTR_VAL_MF_FLAGS = `MFFlags`;
export const MF_FLAGS_EVEN_IF_NO_RESOURCE = 1;
export const MF_FLAGS_NO_CREATE_IF_NO_RESOURCE = 2;
export const MF_FLAGS_FILL_IN_UNKNOWN_RESOURCE = 4;
export const MF_FLAGS_CREATE_BUT_NO_SHOW_DISABLED = 8;
export const REGSTR_VAL_EISA_RANGES = `EISARanges`;
export const REGSTR_VAL_EISA_FUNCTIONS = `EISAFunctions`;
export const REGSTR_VAL_EISA_FUNCTIONS_MASK = `EISAFunctionsMask`;
export const REGSTR_VAL_EISA_FLAGS = `EISAFlags`;
export const REGSTR_VAL_EISA_SIMULATE_INT15 = `EISASimulateInt15`;
export const EISAFLAG_NO_IO_MERGE = 1;
export const EISAFLAG_SLOT_IO_FIRST = 2;
export const EISA_NO_MAX_FUNCTION = 255;
export const NUM_EISA_RANGES = 4;
export const REGSTR_VAL_DRVDESC = `DriverDesc`;
export const REGSTR_VAL_DEVLOADER = `DevLoader`;
export const REGSTR_VAL_STATICVXD = `StaticVxD`;
export const REGSTR_VAL_PROPERTIES = `Properties`;
export const REGSTR_VAL_MANUFACTURER = `Manufacturer`;
export const REGSTR_VAL_EXISTS = `Exists`;
export const REGSTR_VAL_CMENUMFLAGS = `CMEnumFlags`;
export const REGSTR_VAL_CMDRIVFLAGS = `CMDrivFlags`;
export const REGSTR_VAL_ENUMERATOR = `Enumerator`;
export const REGSTR_VAL_DEVICEDRIVER = `DeviceDriver`;
export const REGSTR_VAL_PORTNAME = `PortName`;
export const REGSTR_VAL_INFPATH = `InfPath`;
export const REGSTR_VAL_INFSECTION = `InfSection`;
export const REGSTR_VAL_INFSECTIONEXT = `InfSectionExt`;
export const REGSTR_VAL_POLLING = `Polling`;
export const REGSTR_VAL_DONTLOADIFCONFLICT = `DontLoadIfConflict`;
export const REGSTR_VAL_PORTSUBCLASS = `PortSubClass`;
export const REGSTR_VAL_NETCLEAN = `NetClean`;
export const REGSTR_VAL_IDE_NO_SERIALIZE = `IDENoSerialize`;
export const REGSTR_VAL_NOCMOSORFDPT = `NoCMOSorFDPT`;
export const REGSTR_VAL_COMVERIFYBASE = `COMVerifyBase`;
export const REGSTR_VAL_MATCHINGDEVID = `MatchingDeviceId`;
export const REGSTR_VAL_DRIVERDATE = `DriverDate`;
export const REGSTR_VAL_DRIVERDATEDATA = `DriverDateData`;
export const REGSTR_VAL_DRIVERVERSION = `DriverVersion`;
export const REGSTR_VAL_LOCATION_INFORMATION_OVERRIDE = `LocationInformationOverride`;
export const REGSTR_KEY_OVERRIDE = `Override`;
export const REGSTR_VAL_CONFIGMG = `CONFIGMG`;
export const REGSTR_VAL_SYSDM = `SysDM`;
export const REGSTR_VAL_SYSDMFUNC = `SysDMFunc`;
export const REGSTR_VAL_PRIVATE = `Private`;
export const REGSTR_VAL_PRIVATEFUNC = `PrivateFunc`;
export const REGSTR_VAL_DETECT = `Detect`;
export const REGSTR_VAL_DETECTFUNC = `DetectFunc`;
export const REGSTR_VAL_ASKFORCONFIG = `AskForConfig`;
export const REGSTR_VAL_ASKFORCONFIGFUNC = `AskForConfigFunc`;
export const REGSTR_VAL_WAITFORUNDOCK = `WaitForUndock`;
export const REGSTR_VAL_WAITFORUNDOCKFUNC = `WaitForUndockFunc`;
export const REGSTR_VAL_REMOVEROMOKAY = `RemoveRomOkay`;
export const REGSTR_VAL_REMOVEROMOKAYFUNC = `RemoveRomOkayFunc`;
export const REGSTR_VAL_CURCONFIG = `CurrentConfig`;
export const REGSTR_VAL_FRIENDLYNAME = `FriendlyName`;
export const REGSTR_VAL_CURRENTCONFIG = `CurrentConfig`;
export const REGSTR_VAL_MAP = `Map`;
export const REGSTR_VAL_ID = `CurrentID`;
export const REGSTR_VAL_DOCKED = `CurrentDockedState`;
export const REGSTR_VAL_CHECKSUM = `CurrentChecksum`;
export const REGSTR_VAL_HWDETECT = `HardwareDetect`;
export const REGSTR_VAL_INHIBITRESULTS = `InhibitResults`;
export const REGSTR_VAL_PROFILEFLAGS = `ProfileFlags`;
export const REGSTR_KEY_PCMCIA = `PCMCIA\\`;
export const REGSTR_KEY_PCUNKNOWN = `UNKNOWN_MANUFACTURER`;
export const REGSTR_VAL_PCSSDRIVER = `Driver`;
export const REGSTR_KEY_PCMTD = `MTD-`;
export const REGSTR_VAL_PCMTDRIVER = `MTD`;
export const REGSTR_VAL_HARDWAREID = `HardwareID`;
export const REGSTR_VAL_INSTALLER = `Installer`;
export const REGSTR_VAL_INSTALLER_32 = `Installer32`;
export const REGSTR_VAL_INSICON = `Icon`;
export const REGSTR_VAL_ENUMPROPPAGES = `EnumPropPages`;
export const REGSTR_VAL_ENUMPROPPAGES_32 = `EnumPropPages32`;
export const REGSTR_VAL_BASICPROPERTIES = `BasicProperties`;
export const REGSTR_VAL_BASICPROPERTIES_32 = `BasicProperties32`;
export const REGSTR_VAL_COINSTALLERS_32 = `CoInstallers32`;
export const REGSTR_VAL_PRIVATEPROBLEM = `PrivateProblem`;
export const REGSTR_KEY_CURRENT = `Current`;
export const REGSTR_KEY_DEFAULT = `Default`;
export const REGSTR_KEY_MODES = `Modes`;
export const REGSTR_VAL_MODE = `Mode`;
export const REGSTR_VAL_BPP = `BPP`;
export const REGSTR_VAL_HRES = `HRes`;
export const REGSTR_VAL_VRES = `VRes`;
export const REGSTR_VAL_FONTSIZE = `FontSize`;
export const REGSTR_VAL_DRV = `drv`;
export const REGSTR_VAL_GRB = `grb`;
export const REGSTR_VAL_VDD = `vdd`;
export const REGSTR_VAL_VER = `Ver`;
export const REGSTR_VAL_MAXRES = `MaxResolution`;
export const REGSTR_VAL_DPMS = `DPMS`;
export const REGSTR_VAL_RESUMERESET = `ResumeReset`;
export const REGSTR_KEY_SYSTEM = `System`;
export const REGSTR_KEY_USER = `User`;
export const REGSTR_VAL_DPI = `dpi`;
export const REGSTR_VAL_PCICOPTIONS = `PCICOptions`;
export const PCIC_DEFAULT_IRQMASK = 20152;
export const PCIC_DEFAULT_NUMSOCKETS = 0;
export const REGSTR_VAL_PCICIRQMAP = `PCICIRQMap`;
export const REGSTR_PATH_APPEARANCE = `Control Panel\\Appearance`;
export const REGSTR_PATH_LOOKSCHEMES = `Control Panel\\Appearance\\Schemes`;
export const REGSTR_VAL_CUSTOMCOLORS = `CustomColors`;
export const REGSTR_PATH_SCREENSAVE = `Control Panel\\Desktop`;
export const REGSTR_VALUE_USESCRPASSWORD = `ScreenSaveUsePassword`;
export const REGSTR_VALUE_SCRPASSWORD = `ScreenSave_Data`;
export const REGSTR_VALUE_LOWPOWERTIMEOUT = `ScreenSaveLowPowerTimeout`;
export const REGSTR_VALUE_POWEROFFTIMEOUT = `ScreenSavePowerOffTimeout`;
export const REGSTR_VALUE_LOWPOWERACTIVE = `ScreenSaveLowPowerActive`;
export const REGSTR_VALUE_POWEROFFACTIVE = `ScreenSavePowerOffActive`;
export const REGSTR_PATH_WINDOWSAPPLETS = `Software\\Microsoft\\Windows\\CurrentVersion\\Applets`;
export const REGSTR_PATH_SYSTRAY = `Software\\Microsoft\\Windows\\CurrentVersion\\Applets\\SysTray`;
export const REGSTR_VAL_SYSTRAYSVCS = `Services`;
export const REGSTR_VAL_SYSTRAYBATFLAGS = `PowerFlags`;
export const REGSTR_VAL_SYSTRAYPCCARDFLAGS = `PCMCIAFlags`;
export const REGSTR_PATH_NETWORK_USERSETTINGS = `Network`;
export const REGSTR_KEY_NETWORK_PERSISTENT = `\\Persistent`;
export const REGSTR_KEY_NETWORK_RECENT = `\\Recent`;
export const REGSTR_VAL_REMOTE_PATH = `RemotePath`;
export const REGSTR_VAL_USER_NAME = `UserName`;
export const REGSTR_VAL_PROVIDER_NAME = `ProviderName`;
export const REGSTR_VAL_CONNECTION_TYPE = `ConnectionType`;
export const REGSTR_VAL_UPGRADE = `Upgrade`;
export const REGSTR_KEY_LOGON = `\\Logon`;
export const REGSTR_VAL_MUSTBEVALIDATED = `MustBeValidated`;
export const REGSTR_VAL_RUNLOGINSCRIPT = `ProcessLoginScript`;
export const REGSTR_KEY_NETWORKPROVIDER = `\\NetworkProvider`;
export const REGSTR_VAL_AUTHENT_AGENT = `AuthenticatingAgent`;
export const REGSTR_VAL_PREFREDIR = `PreferredRedir`;
export const REGSTR_VAL_AUTOSTART = `AutoStart`;
export const REGSTR_VAL_AUTOLOGON = `AutoLogon`;
export const REGSTR_VAL_NETCARD = `Netcard`;
export const REGSTR_VAL_TRANSPORT = `Transport`;
export const REGSTR_VAL_DYNAMIC = `Dynamic`;
export const REGSTR_VAL_TRANSITION = `Transition`;
export const REGSTR_VAL_STATICDRIVE = `StaticDrive`;
export const REGSTR_VAL_LOADHI = `LoadHi`;
export const REGSTR_VAL_LOADRMDRIVERS = `LoadRMDrivers`;
export const REGSTR_VAL_SETUPN = `SetupN`;
export const REGSTR_VAL_SETUPNPATH = `SetupNPath`;
export const REGSTR_VAL_WRKGRP_FORCEMAPPING = `WrkgrpForceMapping`;
export const REGSTR_VAL_WRKGRP_REQUIRED = `WrkgrpRequired`;
export const REGSTR_PATH_CURRENT_CONTROL_SET = `System\\CurrentControlSet\\Control`;
export const REGSTR_VAL_CURRENT_USER = `Current User`;
export const REGSTR_PATH_PWDPROVIDER = `System\\CurrentControlSet\\Control\\PwdProvider`;
export const REGSTR_VAL_PWDPROVIDER_PATH = `ProviderPath`;
export const REGSTR_VAL_PWDPROVIDER_DESC = `Description`;
export const REGSTR_VAL_PWDPROVIDER_CHANGEPWD = `ChangePassword`;
export const REGSTR_VAL_PWDPROVIDER_CHANGEPWDHWND = `ChangePasswordHwnd`;
export const REGSTR_VAL_PWDPROVIDER_GETPWDSTATUS = `GetPasswordStatus`;
export const REGSTR_VAL_PWDPROVIDER_ISNP = `NetworkProvider`;
export const REGSTR_VAL_PWDPROVIDER_CHANGEORDER = `ChangeOrder`;
export const REGSTR_PATH_POLICIES = `Software\\Microsoft\\Windows\\CurrentVersion\\Policies`;
export const REGSTR_PATH_UPDATE = `System\\CurrentControlSet\\Control\\Update`;
export const REGSTR_VALUE_ENABLE = `Enable`;
export const REGSTR_VALUE_VERBOSE = `Verbose`;
export const REGSTR_VALUE_NETPATH = `NetworkPath`;
export const REGSTR_VALUE_DEFAULTLOC = `UseDefaultNetLocation`;
export const REGSTR_KEY_NETWORK = `Network`;
export const REGSTR_KEY_PRINTERS = `Printers`;
export const REGSTR_KEY_WINOLDAPP = `WinOldApp`;
export const REGSTR_KEY_EXPLORER = `Explorer`;
export const REGSTR_VAL_NOFILESHARING = `NoFileSharing`;
export const REGSTR_VAL_NOPRINTSHARING = `NoPrintSharing`;
export const REGSTR_VAL_NOFILESHARINGCTRL = `NoFileSharingControl`;
export const REGSTR_VAL_NOPRINTSHARINGCTRL = `NoPrintSharingControl`;
export const REGSTR_VAL_HIDESHAREPWDS = `HideSharePwds`;
export const REGSTR_VAL_DISABLEPWDCACHING = `DisablePwdCaching`;
export const REGSTR_VAL_ALPHANUMPWDS = `AlphanumPwds`;
export const REGSTR_VAL_NETSETUP_DISABLE = `NoNetSetup`;
export const REGSTR_VAL_NETSETUP_NOCONFIGPAGE = `NoNetSetupConfigPage`;
export const REGSTR_VAL_NETSETUP_NOIDPAGE = `NoNetSetupIDPage`;
export const REGSTR_VAL_NETSETUP_NOSECURITYPAGE = `NoNetSetupSecurityPage`;
export const REGSTR_VAL_SYSTEMCPL_NOVIRTMEMPAGE = `NoVirtMemPage`;
export const REGSTR_VAL_SYSTEMCPL_NODEVMGRPAGE = `NoDevMgrPage`;
export const REGSTR_VAL_SYSTEMCPL_NOCONFIGPAGE = `NoConfigPage`;
export const REGSTR_VAL_SYSTEMCPL_NOFILESYSPAGE = `NoFileSysPage`;
export const REGSTR_VAL_DISPCPL_NODISPCPL = `NoDispCPL`;
export const REGSTR_VAL_DISPCPL_NOBACKGROUNDPAGE = `NoDispBackgroundPage`;
export const REGSTR_VAL_DISPCPL_NOSCRSAVPAGE = `NoDispScrSavPage`;
export const REGSTR_VAL_DISPCPL_NOAPPEARANCEPAGE = `NoDispAppearancePage`;
export const REGSTR_VAL_DISPCPL_NOSETTINGSPAGE = `NoDispSettingsPage`;
export const REGSTR_VAL_SECCPL_NOSECCPL = `NoSecCPL`;
export const REGSTR_VAL_SECCPL_NOPWDPAGE = `NoPwdPage`;
export const REGSTR_VAL_SECCPL_NOADMINPAGE = `NoAdminPage`;
export const REGSTR_VAL_SECCPL_NOPROFILEPAGE = `NoProfilePage`;
export const REGSTR_VAL_PRINTERS_HIDETABS = `NoPrinterTabs`;
export const REGSTR_VAL_PRINTERS_NODELETE = `NoDeletePrinter`;
export const REGSTR_VAL_PRINTERS_NOADD = `NoAddPrinter`;
export const REGSTR_VAL_WINOLDAPP_DISABLED = `Disabled`;
export const REGSTR_VAL_WINOLDAPP_NOREALMODE = `NoRealMode`;
export const REGSTR_VAL_NOENTIRENETWORK = `NoEntireNetwork`;
export const REGSTR_VAL_NOWORKGROUPCONTENTS = `NoWorkgroupContents`;
export const REGSTR_VAL_UNDOCK_WITHOUT_LOGON = `UndockWithoutLogon`;
export const REGSTR_VAL_MINPWDLEN = `MinPwdLen`;
export const REGSTR_VAL_PWDEXPIRATION = `PwdExpiration`;
export const REGSTR_VAL_WIN31PROVIDER = `Win31Provider`;
export const REGSTR_VAL_DISABLEREGTOOLS = `DisableRegistryTools`;
export const REGSTR_PATH_WINLOGON = `Software\\Microsoft\\Windows\\CurrentVersion\\Winlogon`;
export const REGSTR_VAL_LEGALNOTICECAPTION = `LegalNoticeCaption`;
export const REGSTR_VAL_LEGALNOTICETEXT = `LegalNoticeText`;
export const REGSTR_VAL_DRIVE_SPINDOWN = `NoDispSpinDown`;
export const REGSTR_VAL_SHUTDOWN_FLAGS = `ShutdownFlags`;
export const REGSTR_VAL_RESTRICTRUN = `RestrictRun`;
export const REGSTR_KEY_POL_USERS = `Users`;
export const REGSTR_KEY_POL_COMPUTERS = `Computers`;
export const REGSTR_KEY_POL_USERGROUPS = `UserGroups`;
export const REGSTR_KEY_POL_DEFAULT = `.default`;
export const REGSTR_KEY_POL_USERGROUPDATA = `GroupData\\UserGroups\\Priority`;
export const REGSTR_PATH_TIMEZONE = `System\\CurrentControlSet\\Control\\TimeZoneInformation`;
export const REGSTR_VAL_TZBIAS = `Bias`;
export const REGSTR_VAL_TZDLTBIAS = `DaylightBias`;
export const REGSTR_VAL_TZSTDBIAS = `StandardBias`;
export const REGSTR_VAL_TZACTBIAS = `ActiveTimeBias`;
export const REGSTR_VAL_TZDLTFLAG = `DaylightFlag`;
export const REGSTR_VAL_TZSTDSTART = `StandardStart`;
export const REGSTR_VAL_TZDLTSTART = `DaylightStart`;
export const REGSTR_VAL_TZDLTNAME = `DaylightName`;
export const REGSTR_VAL_TZSTDNAME = `StandardName`;
export const REGSTR_VAL_TZNOCHANGESTART = `NoChangeStart`;
export const REGSTR_VAL_TZNOCHANGEEND = `NoChangeEnd`;
export const REGSTR_VAL_TZNOAUTOTIME = `DisableAutoDaylightTimeSet`;
export const REGSTR_PATH_FLOATINGPOINTPROCESSOR = `HARDWARE\\DESCRIPTION\\System\\FloatingPointProcessor`;
export const REGSTR_PATH_FLOATINGPOINTPROCESSOR0 = `HARDWARE\\DESCRIPTION\\System\\FloatingPointProcessor\\0`;
export const REGSTR_PATH_COMPUTRNAME = `System\\CurrentControlSet\\Control\\ComputerName\\ComputerName`;
export const REGSTR_VAL_COMPUTRNAME = `ComputerName`;
export const REGSTR_PATH_SHUTDOWN = `System\\CurrentControlSet\\Control\\Shutdown`;
export const REGSTR_VAL_FORCEREBOOT = `ForceReboot`;
export const REGSTR_VAL_SETUPPROGRAMRAN = `SetupProgramRan`;
export const REGSTR_VAL_DOES_POLLING = `PollingSupportNeeded`;
export const REGSTR_PATH_KNOWNDLLS = `System\\CurrentControlSet\\Control\\SessionManager\\KnownDLLs`;
export const REGSTR_PATH_KNOWN16DLLS = `System\\CurrentControlSet\\Control\\SessionManager\\Known16DLLs`;
export const REGSTR_PATH_CHECKVERDLLS = `System\\CurrentControlSet\\Control\\SessionManager\\CheckVerDLLs`;
export const REGSTR_PATH_WARNVERDLLS = `System\\CurrentControlSet\\Control\\SessionManager\\WarnVerDLLs`;
export const REGSTR_PATH_HACKINIFILE = `System\\CurrentControlSet\\Control\\SessionManager\\HackIniFiles`;
export const REGSTR_PATH_CHECKBADAPPS = `System\\CurrentControlSet\\Control\\SessionManager\\CheckBadApps`;
export const REGSTR_PATH_APPPATCH = `System\\CurrentControlSet\\Control\\SessionManager\\AppPatches`;
export const REGSTR_PATH_CHECKBADAPPS400 = `System\\CurrentControlSet\\Control\\SessionManager\\CheckBadApps400`;
export const REGSTR_PATH_KNOWNVXDS = `System\\CurrentControlSet\\Control\\SessionManager\\KnownVxDs`;
export const REGSTR_VAL_UNINSTALLER_DISPLAYNAME = `DisplayName`;
export const REGSTR_VAL_UNINSTALLER_COMMANDLINE = `UninstallString`;
export const REGSTR_VAL_REINSTALL_DISPLAYNAME = `DisplayName`;
export const REGSTR_VAL_REINSTALL_STRING = `ReinstallString`;
export const REGSTR_VAL_REINSTALL_DEVICEINSTANCEIDS = `DeviceInstanceIds`;
export const REGSTR_PATH_DESKTOP = `Control Panel\\Desktop`;
export const REGSTR_PATH_MOUSE = `Control Panel\\Mouse`;
export const REGSTR_PATH_KEYBOARD = `Control Panel\\Keyboard`;
export const REGSTR_PATH_COLORS = `Control Panel\\Colors`;
export const REGSTR_PATH_SOUND = `Control Panel\\Sound`;
export const REGSTR_PATH_METRICS = `Control Panel\\Desktop\\WindowMetrics`;
export const REGSTR_PATH_ICONS = `Control Panel\\Icons`;
export const REGSTR_PATH_CURSORS = `Control Panel\\Cursors`;
export const REGSTR_PATH_CHECKDISK = `Software\\Microsoft\\Windows\\CurrentVersion\\Applets\\Check Drive`;
export const REGSTR_PATH_CHECKDISKSET = `Settings`;
export const REGSTR_PATH_CHECKDISKUDRVS = `NoUnknownDDErrDrvs`;
export const REGSTR_PATH_FAULT = `Software\\Microsoft\\Windows\\CurrentVersion\\Fault`;
export const REGSTR_VAL_FAULT_LOGFILE = `LogFile`;
export const REGSTR_PATH_AEDEBUG = `Software\\Microsoft\\Windows NT\\CurrentVersion\\AeDebug`;
export const REGSTR_VAL_AEDEBUG_DEBUGGER = `Debugger`;
export const REGSTR_VAL_AEDEBUG_AUTO = `Auto`;
export const REGSTR_PATH_GRPCONV = `Software\\Microsoft\\Windows\\CurrentVersion\\GrpConv`;
export const REGSTR_VAL_REGITEMDELETEMESSAGE = `Removal Message`;
export const REGSTR_PATH_LASTCHECK = `Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\LastCheck`;
export const REGSTR_PATH_LASTOPTIMIZE = `Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\LastOptimize`;
export const REGSTR_PATH_LASTBACKUP = `Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\LastBackup`;
export const REGSTR_PATH_CHKLASTCHECK = `Software\\Microsoft\\Windows\\CurrentVersion\\Applets\\Check Drive\\LastCheck`;
export const REGSTR_PATH_CHKLASTSURFAN = `Software\\Microsoft\\Windows\\CurrentVersion\\Applets\\Check Drive\\LastSurfaceAnalysis`;
export const DTRESULTOK = 0;
export const DTRESULTFIX = 1;
export const DTRESULTPROB = 2;
export const DTRESULTPART = 3;
export const REGSTR_KEY_SHARES = `Software\\Microsoft\\Windows\\CurrentVersion\\Network\\LanMan`;
export const REGSTR_VAL_SHARES_FLAGS = `Flags`;
export const REGSTR_VAL_SHARES_TYPE = `Type`;
export const REGSTR_VAL_SHARES_PATH = `Path`;
export const REGSTR_VAL_SHARES_REMARK = `Remark`;
export const REGSTR_VAL_SHARES_RW_PASS = `Parm1`;
export const REGSTR_VAL_SHARES_RO_PASS = `Parm2`;
export const REGSTR_PATH_PRINT = `System\\CurrentControlSet\\Control\\Print`;
export const REGSTR_PATH_PRINTERS = `System\\CurrentControlSet\\Control\\Print\\Printers`;
export const REGSTR_PATH_PROVIDERS = `System\\CurrentControlSet\\Control\\Print\\Providers`;
export const REGSTR_PATH_MONITORS = `System\\CurrentControlSet\\Control\\Print\\Monitors`;
export const REGSTR_PATH_ENVIRONMENTS = `System\\CurrentControlSet\\Control\\Print\\Environments`;
export const REGSTR_VAL_START_ON_BOOT = `StartOnBoot`;
export const REGSTR_VAL_PRINTERS_MASK = `PrintersMask`;
export const REGSTR_VAL_DOS_SPOOL_MASK = `DOSSpoolMask`;
export const REGSTR_KEY_CURRENT_ENV = `\\Windows 4.0`;
export const REGSTR_KEY_DRIVERS = `\\Drivers`;
export const REGSTR_KEY_PRINT_PROC = `\\Print Processors`;
export const REGSTR_PATH_EVENTLABELS = `AppEvents\\EventLabels`;
export const REGSTR_PATH_SCHEMES = `AppEvents\\Schemes`;
export const REGSTR_PATH_MULTIMEDIA_AUDIO = `Software\\Microsoft\\Multimedia\\Audio`;
export const REGSTR_KEY_JOYCURR = `CurrentJoystickSettings`;
export const REGSTR_KEY_JOYSETTINGS = `JoystickSettings`;
export const REGSTR_VAL_JOYUSERVALUES = `JoystickUserValues`;
export const REGSTR_VAL_JOYCALLOUT = `JoystickCallout`;
export const REGSTR_VAL_JOYNCONFIG = `Joystick%dConfiguration`;
export const REGSTR_VAL_JOYNOEMNAME = `Joystick%dOEMName`;
export const REGSTR_VAL_JOYNOEMCALLOUT = `Joystick%dOEMCallout`;
export const REGSTR_VAL_JOYOEMCALLOUT = `OEMCallout`;
export const REGSTR_VAL_JOYOEMNAME = `OEMName`;
export const REGSTR_VAL_JOYOEMDATA = `OEMData`;
export const REGSTR_VAL_JOYOEMXYLABEL = `OEMXYLabel`;
export const REGSTR_VAL_JOYOEMZLABEL = `OEMZLabel`;
export const REGSTR_VAL_JOYOEMRLABEL = `OEMRLabel`;
export const REGSTR_VAL_JOYOEMPOVLABEL = `OEMPOVLabel`;
export const REGSTR_VAL_JOYOEMULABEL = `OEMULabel`;
export const REGSTR_VAL_JOYOEMVLABEL = `OEMVLabel`;
export const REGSTR_VAL_JOYOEMTESTMOVEDESC = `OEMTestMoveDesc`;
export const REGSTR_VAL_JOYOEMTESTBUTTONDESC = `OEMTestButtonDesc`;
export const REGSTR_VAL_JOYOEMTESTMOVECAP = `OEMTestMoveCap`;
export const REGSTR_VAL_JOYOEMTESTBUTTONCAP = `OEMTestButtonCap`;
export const REGSTR_VAL_JOYOEMTESTWINCAP = `OEMTestWinCap`;
export const REGSTR_VAL_JOYOEMCALCAP = `OEMCalCap`;
export const REGSTR_VAL_JOYOEMCALWINCAP = `OEMCalWinCap`;
export const REGSTR_VAL_JOYOEMCAL1 = `OEMCal1`;
export const REGSTR_VAL_JOYOEMCAL2 = `OEMCal2`;
export const REGSTR_VAL_JOYOEMCAL3 = `OEMCal3`;
export const REGSTR_VAL_JOYOEMCAL4 = `OEMCal4`;
export const REGSTR_VAL_JOYOEMCAL5 = `OEMCal5`;
export const REGSTR_VAL_JOYOEMCAL6 = `OEMCal6`;
export const REGSTR_VAL_JOYOEMCAL7 = `OEMCal7`;
export const REGSTR_VAL_JOYOEMCAL8 = `OEMCal8`;
export const REGSTR_VAL_JOYOEMCAL9 = `OEMCal9`;
export const REGSTR_VAL_JOYOEMCAL10 = `OEMCal10`;
export const REGSTR_VAL_JOYOEMCAL11 = `OEMCal11`;
export const REGSTR_VAL_JOYOEMCAL12 = `OEMCal12`;
export const REGSTR_VAL_AUDIO_BITMAP = `bitmap`;
export const REGSTR_VAL_AUDIO_ICON = `icon`;
export const REGSTR_PATH_DEVICEINSTALLER = `Software\\Microsoft\\Windows\\CurrentVersion\\Device Installer`;
export const REGSTR_PATH_DIFX = `Software\\Microsoft\\Windows\\CurrentVersion\\DIFX`;
export const REGSTR_VAL_SEARCHOPTIONS = `SearchOptions`;
export const REGSTR_PATH_BIOSINFO = `System\\CurrentControlSet\\Control\\BiosInfo`;
export const REGSTR_PATH_PCIIR = `System\\CurrentControlSet\\Control\\Pnp\\PciIrqRouting`;
export const REGSTR_VAL_OPTIONS = `Options`;
export const REGSTR_VAL_STAT = `Status`;
export const REGSTR_VAL_TABLE_STAT = `TableStatus`;
export const REGSTR_VAL_MINIPORT_STAT = `MiniportStatus`;
export const PIR_OPTION_ENABLED = 1;
export const PIR_OPTION_REGISTRY = 2;
export const PIR_OPTION_MSSPEC = 4;
export const PIR_OPTION_REALMODE = 8;
export const PIR_OPTION_DEFAULT = 15;
export const PIR_STATUS_ERROR = 0;
export const PIR_STATUS_ENABLED = 1;
export const PIR_STATUS_DISABLED = 2;
export const PIR_STATUS_MAX = 3;
export const PIR_STATUS_TABLE_REGISTRY = 0;
export const PIR_STATUS_TABLE_MSSPEC = 1;
export const PIR_STATUS_TABLE_REALMODE = 2;
export const PIR_STATUS_TABLE_NONE = 3;
export const PIR_STATUS_TABLE_ERROR = 4;
export const PIR_STATUS_TABLE_BAD = 5;
export const PIR_STATUS_TABLE_SUCCESS = 6;
export const PIR_STATUS_TABLE_MAX = 7;
export const PIR_STATUS_MINIPORT_NORMAL = 0;
export const PIR_STATUS_MINIPORT_COMPATIBLE = 1;
export const PIR_STATUS_MINIPORT_OVERRIDE = 2;
export const PIR_STATUS_MINIPORT_NONE = 3;
export const PIR_STATUS_MINIPORT_ERROR = 4;
export const PIR_STATUS_MINIPORT_NOKEY = 5;
export const PIR_STATUS_MINIPORT_SUCCESS = 6;
export const PIR_STATUS_MINIPORT_INVALID = 7;
export const PIR_STATUS_MINIPORT_MAX = 8;
export const REGSTR_PATH_LASTGOOD = `System\\LastKnownGoodRecovery\\LastGood`;
export const REGSTR_PATH_LASTGOODTMP = `System\\LastKnownGoodRecovery\\LastGood.Tmp`;
export const LASTGOOD_OPERATION = 255;
export const LASTGOOD_OPERATION_NOPOSTPROC = 0;
export const LASTGOOD_OPERATION_DELETE = 1;
export const REG_NONE = 0;
export const REG_SZ = 1;
export const REG_EXPAND_SZ = 2;
export const REG_BINARY = 3;
export const REG_DWORD = 4;
export const REG_DWORD_LITTLE_ENDIAN = 4;
export const REG_DWORD_BIG_ENDIAN = 5;
export const REG_LINK = 6;
export const REG_MULTI_SZ = 7;
export const REG_RESOURCE_LIST = 8;
export const REG_FULL_RESOURCE_DESCRIPTOR = 9;
export const REG_RESOURCE_REQUIREMENTS_LIST = 10;
export const REG_QWORD = 11;
export const REG_QWORD_LITTLE_ENDIAN = 11;
export const KEY_QUERY_VALUE = 1;
export const KEY_SET_VALUE = 2;
export const KEY_CREATE_SUB_KEY = 4;
export const KEY_ENUMERATE_SUB_KEYS = 8;
export const KEY_NOTIFY = 16;
export const KEY_CREATE_LINK = 32;
export const KEY_WOW64_32KEY = 512;
export const KEY_WOW64_64KEY = 256;
export const KEY_WOW64_RES = 768;
export const KEY_READ = 131097;
export const KEY_WRITE = 131078;
export const KEY_EXECUTE = 131097;
export const KEY_ALL_ACCESS = 983103;
export const REG_OPTION_RESERVED = 0;
export const REG_OPTION_NON_VOLATILE = 0;
export const REG_OPTION_VOLATILE = 1;
export const REG_OPTION_CREATE_LINK = 2;
export const REG_OPTION_BACKUP_RESTORE = 4;
export const REG_OPTION_OPEN_LINK = 8;
export const REG_OPTION_DONT_VIRTUALIZE = 16;
export const REG_CREATED_NEW_KEY = 1;
export const REG_OPENED_EXISTING_KEY = 2;
export const REG_STANDARD_FORMAT = 1;
export const REG_LATEST_FORMAT = 2;
export const REG_NO_COMPRESSION = 4;
export const REG_FORCE_RESTORE = 8;
export const REG_WHOLE_HIVE_VOLATILE = 1;
export const REG_NOTIFY_CHANGE_NAME = 1;
export const REG_NOTIFY_CHANGE_ATTRIBUTES = 2;
export const REG_NOTIFY_CHANGE_LAST_SET = 4;
export const REG_NOTIFY_CHANGE_SECURITY = 8;
export const REG_NOTIFY_THREAD_AGNOSTIC = 268435456;
export const RRF_RT_ANY = 65535;
export const RRF_RT_DWORD = 24;
export const RRF_RT_QWORD = 72;
export const RRF_RT_REG_BINARY = 8;
export const RRF_RT_REG_DWORD = 16;
export const RRF_RT_REG_EXPAND_SZ = 4;
export const RRF_RT_REG_MULTI_SZ = 32;
export const RRF_RT_REG_NONE = 1;
export const RRF_RT_REG_QWORD = 64;
export const RRF_RT_REG_SZ = 2;
export const NO_ERROR = 0;
export const WAIT_OBJECT_0 = 0;
export const WAIT_ABANDONED = 128;
export const WAIT_ABANDONED_0 = 128;
export const WAIT_IO_COMPLETION = 192;
export const WAIT_TIMEOUT = 258;
export const WAIT_FAILED = 4294967295;
export const ERROR_SUCCESS = 0;
export const ERROR_INVALID_FUNCTION = 1;
export const ERROR_FILE_NOT_FOUND = 2;
export const ERROR_PATH_NOT_FOUND = 3;
export const ERROR_TOO_MANY_OPEN_FILES = 4;
export const ERROR_ACCESS_DENIED = 5;
export const ERROR_INVALID_HANDLE = 6;
export const ERROR_ARENA_TRASHED = 7;
export const ERROR_NOT_ENOUGH_MEMORY = 8;
export const ERROR_INVALID_BLOCK = 9;
export const ERROR_BAD_ENVIRONMENT = 10;
export const ERROR_BAD_FORMAT = 11;
export const ERROR_INVALID_ACCESS = 12;
export const ERROR_INVALID_DATA = 13;
export const ERROR_OUTOFMEMORY = 14;
export const ERROR_INVALID_DRIVE = 15;
export const ERROR_CURRENT_DIRECTORY = 16;
export const ERROR_NOT_SAME_DEVICE = 17;
export const ERROR_NO_MORE_FILES = 18;
export const ERROR_WRITE_PROTECT = 19;
export const ERROR_BAD_UNIT = 20;
export const ERROR_NOT_READY = 21;
export const ERROR_BAD_COMMAND = 22;
export const ERROR_CRC = 23;
export const ERROR_BAD_LENGTH = 24;
export const ERROR_SEEK = 25;
export const ERROR_NOT_DOS_DISK = 26;
export const ERROR_SECTOR_NOT_FOUND = 27;
export const ERROR_OUT_OF_PAPER = 28;
export const ERROR_WRITE_FAULT = 29;
export const ERROR_READ_FAULT = 30;
export const ERROR_GEN_FAILURE = 31;
export const ERROR_SHARING_VIOLATION = 32;
export const ERROR_LOCK_VIOLATION = 33;
export const ERROR_WRONG_DISK = 34;
export const ERROR_SHARING_BUFFER_EXCEEDED = 36;
export const ERROR_HANDLE_EOF = 38;
export const ERROR_HANDLE_DISK_FULL = 39;
export const ERROR_NOT_SUPPORTED = 50;
export const ERROR_REM_NOT_LIST = 51;
export const ERROR_DUP_NAME = 52;
export const ERROR_BAD_NETPATH = 53;
export const ERROR_NETWORK_BUSY = 54;
export const ERROR_DEV_NOT_EXIST = 55;
export const ERROR_TOO_MANY_CMDS = 56;
export const ERROR_ADAP_HDW_ERR = 57;
export const ERROR_BAD_NET_RESP = 58;
export const ERROR_UNEXP_NET_ERR = 59;
export const ERROR_BAD_REM_ADAP = 60;
export const ERROR_PRINTQ_FULL = 61;
export const ERROR_NO_SPOOL_SPACE = 62;
export const ERROR_PRINT_CANCELLED = 63;
export const ERROR_NETNAME_DELETED = 64;
export const ERROR_NETWORK_ACCESS_DENIED = 65;
export const ERROR_BAD_DEV_TYPE = 66;
export const ERROR_BAD_NET_NAME = 67;
export const ERROR_TOO_MANY_NAMES = 68;
export const ERROR_TOO_MANY_SESS = 69;
export const ERROR_SHARING_PAUSED = 70;
export const ERROR_REQ_NOT_ACCEP = 71;
export const ERROR_REDIR_PAUSED = 72;
export const ERROR_FILE_EXISTS = 80;
export const ERROR_CANNOT_MAKE = 82;
export const ERROR_FAIL_I24 = 83;
export const ERROR_OUT_OF_STRUCTURES = 84;
export const ERROR_ALREADY_ASSIGNED = 85;
export const ERROR_INVALID_PASSWORD = 86;
export const ERROR_INVALID_PARAMETER = 87;
export const ERROR_NET_WRITE_FAULT = 88;
export const ERROR_NO_PROC_SLOTS = 89;
export const ERROR_TOO_MANY_SEMAPHORES = 100;
export const ERROR_EXCL_SEM_ALREADY_OWNED = 101;
export const ERROR_SEM_IS_SET = 102;
export const ERROR_TOO_MANY_SEM_REQUESTS = 103;
export const ERROR_INVALID_AT_INTERRUPT_TIME = 104;
export const ERROR_SEM_OWNER_DIED = 105;
export const ERROR_SEM_USER_LIMIT = 106;
export const ERROR_DISK_CHANGE = 107;
export const ERROR_DRIVE_LOCKED = 108;
export const ERROR_BROKEN_PIPE = 109;
export const ERROR_OPEN_FAILED = 110;
export const ERROR_BUFFER_OVERFLOW = 111;
export const ERROR_DISK_FULL = 112;
export const ERROR_NO_MORE_SEARCH_HANDLES = 113;
export const ERROR_INVALID_TARGET_HANDLE = 114;
export const ERROR_INVALID_CATEGORY = 117;
export const ERROR_INVALID_VERIFY_SWITCH = 118;
export const ERROR_BAD_DRIVER_LEVEL = 119;
export const ERROR_CALL_NOT_IMPLEMENTED = 120;
export const ERROR_SEM_TIMEOUT = 121;
export const ERROR_INSUFFICIENT_BUFFER = 122;
export const ERROR_INVALID_NAME = 123;
export const ERROR_INVALID_LEVEL = 124;
export const ERROR_NO_VOLUME_LABEL = 125;
export const ERROR_MOD_NOT_FOUND = 126;
export const ERROR_PROC_NOT_FOUND = 127;
export const ERROR_WAIT_NO_CHILDREN = 128;
export const ERROR_CHILD_NOT_COMPLETE = 129;
export const ERROR_DIRECT_ACCESS_HANDLE = 130;
export const ERROR_NEGATIVE_SEEK = 131;
export const ERROR_SEEK_ON_DEVICE = 132;
export const ERROR_IS_JOIN_TARGET = 133;
export const ERROR_IS_JOINED = 134;
export const ERROR_IS_SUBSTED = 135;
export const ERROR_NOT_JOINED = 136;
export const ERROR_NOT_SUBSTED = 137;
export const ERROR_JOIN_TO_JOIN = 138;
export const ERROR_SUBST_TO_SUBST = 139;
export const ERROR_JOIN_TO_SUBST = 140;
export const ERROR_SUBST_TO_JOIN = 141;
export const ERROR_BUSY_DRIVE = 142;
export const ERROR_SAME_DRIVE = 143;
export const ERROR_DIR_NOT_ROOT = 144;
export const ERROR_DIR_NOT_EMPTY = 145;
export const ERROR_IS_SUBST_PATH = 146;
export const ERROR_IS_JOIN_PATH = 147;
export const ERROR_PATH_BUSY = 148;
export const ERROR_IS_SUBST_TARGET = 149;
export const ERROR_SYSTEM_TRACE = 150;
export const ERROR_INVALID_EVENT_COUNT = 151;
export const ERROR_TOO_MANY_MUXWAITERS = 152;
export const ERROR_INVALID_LIST_FORMAT = 153;
export const ERROR_LABEL_TOO_LONG = 154;
export const ERROR_TOO_MANY_TCBS = 155;
export const ERROR_SIGNAL_REFUSED = 156;
export const ERROR_DISCARDED = 157;
export const ERROR_NOT_LOCKED = 158;
export const ERROR_BAD_THREADID_ADDR = 159;
export const ERROR_BAD_ARGUMENTS = 160;
export const ERROR_BAD_PATHNAME = 161;
export const ERROR_SIGNAL_PENDING = 162;
export const ERROR_MAX_THRDS_REACHED = 164;
export const ERROR_LOCK_FAILED = 167;
export const ERROR_BUSY = 170;
export const ERROR_DEVICE_SUPPORT_IN_PROGRESS = 171;
export const ERROR_CANCEL_VIOLATION = 173;
export const ERROR_ATOMIC_LOCKS_NOT_SUPPORTED = 174;
export const ERROR_INVALID_SEGMENT_NUMBER = 180;
export const ERROR_INVALID_ORDINAL = 182;
export const ERROR_ALREADY_EXISTS = 183;
export const ERROR_INVALID_FLAG_NUMBER = 186;
export const ERROR_SEM_NOT_FOUND = 187;
export const ERROR_INVALID_STARTING_CODESEG = 188;
export const ERROR_INVALID_STACKSEG = 189;
export const ERROR_INVALID_MODULETYPE = 190;
export const ERROR_INVALID_EXE_SIGNATURE = 191;
export const ERROR_EXE_MARKED_INVALID = 192;
export const ERROR_BAD_EXE_FORMAT = 193;
export const ERROR_ITERATED_DATA_EXCEEDS_64k = 194;
export const ERROR_INVALID_MINALLOCSIZE = 195;
export const ERROR_DYNLINK_FROM_INVALID_RING = 196;
export const ERROR_IOPL_NOT_ENABLED = 197;
export const ERROR_INVALID_SEGDPL = 198;
export const ERROR_AUTODATASEG_EXCEEDS_64k = 199;
export const ERROR_RING2SEG_MUST_BE_MOVABLE = 200;
export const ERROR_RELOC_CHAIN_XEEDS_SEGLIM = 201;
export const ERROR_INFLOOP_IN_RELOC_CHAIN = 202;
export const ERROR_ENVVAR_NOT_FOUND = 203;
export const ERROR_NO_SIGNAL_SENT = 205;
export const ERROR_FILENAME_EXCED_RANGE = 206;
export const ERROR_RING2_STACK_IN_USE = 207;
export const ERROR_META_EXPANSION_TOO_LONG = 208;
export const ERROR_INVALID_SIGNAL_NUMBER = 209;
export const ERROR_THREAD_1_INACTIVE = 210;
export const ERROR_LOCKED = 212;
export const ERROR_TOO_MANY_MODULES = 214;
export const ERROR_NESTING_NOT_ALLOWED = 215;
export const ERROR_EXE_MACHINE_TYPE_MISMATCH = 216;
export const ERROR_EXE_CANNOT_MODIFY_SIGNED_BINARY = 217;
export const ERROR_EXE_CANNOT_MODIFY_STRONG_SIGNED_BINARY = 218;
export const ERROR_FILE_CHECKED_OUT = 220;
export const ERROR_CHECKOUT_REQUIRED = 221;
export const ERROR_BAD_FILE_TYPE = 222;
export const ERROR_FILE_TOO_LARGE = 223;
export const ERROR_FORMS_AUTH_REQUIRED = 224;
export const ERROR_VIRUS_INFECTED = 225;
export const ERROR_VIRUS_DELETED = 226;
export const ERROR_PIPE_LOCAL = 229;
export const ERROR_BAD_PIPE = 230;
export const ERROR_PIPE_BUSY = 231;
export const ERROR_NO_DATA = 232;
export const ERROR_PIPE_NOT_CONNECTED = 233;
export const ERROR_MORE_DATA = 234;
export const ERROR_NO_WORK_DONE = 235;
export const ERROR_VC_DISCONNECTED = 240;
export const ERROR_INVALID_EA_NAME = 254;
export const ERROR_EA_LIST_INCONSISTENT = 255;
export const ERROR_NO_MORE_ITEMS = 259;
export const ERROR_CANNOT_COPY = 266;
export const ERROR_DIRECTORY = 267;
export const ERROR_EAS_DIDNT_FIT = 275;
export const ERROR_EA_FILE_CORRUPT = 276;
export const ERROR_EA_TABLE_FULL = 277;
export const ERROR_INVALID_EA_HANDLE = 278;
export const ERROR_EAS_NOT_SUPPORTED = 282;
export const ERROR_NOT_OWNER = 288;
export const ERROR_TOO_MANY_POSTS = 298;
export const ERROR_PARTIAL_COPY = 299;
export const ERROR_OPLOCK_NOT_GRANTED = 300;
export const ERROR_INVALID_OPLOCK_PROTOCOL = 301;
export const ERROR_DISK_TOO_FRAGMENTED = 302;
export const ERROR_DELETE_PENDING = 303;
export const ERROR_INCOMPATIBLE_WITH_GLOBAL_SHORT_NAME_REGISTRY_SETTING = 304;
export const ERROR_SHORT_NAMES_NOT_ENABLED_ON_VOLUME = 305;
export const ERROR_SECURITY_STREAM_IS_INCONSISTENT = 306;
export const ERROR_INVALID_LOCK_RANGE = 307;
export const ERROR_IMAGE_SUBSYSTEM_NOT_PRESENT = 308;
export const ERROR_NOTIFICATION_GUID_ALREADY_DEFINED = 309;
export const ERROR_INVALID_EXCEPTION_HANDLER = 310;
export const ERROR_DUPLICATE_PRIVILEGES = 311;
export const ERROR_NO_RANGES_PROCESSED = 312;
export const ERROR_NOT_ALLOWED_ON_SYSTEM_FILE = 313;
export const ERROR_DISK_RESOURCES_EXHAUSTED = 314;
export const ERROR_INVALID_TOKEN = 315;
export const ERROR_DEVICE_FEATURE_NOT_SUPPORTED = 316;
export const ERROR_MR_MID_NOT_FOUND = 317;
export const ERROR_SCOPE_NOT_FOUND = 318;
export const ERROR_UNDEFINED_SCOPE = 319;
export const ERROR_INVALID_CAP = 320;
export const ERROR_DEVICE_UNREACHABLE = 321;
export const ERROR_DEVICE_NO_RESOURCES = 322;
export const ERROR_DATA_CHECKSUM_ERROR = 323;
export const ERROR_INTERMIXED_KERNEL_EA_OPERATION = 324;
export const ERROR_FILE_LEVEL_TRIM_NOT_SUPPORTED = 326;
export const ERROR_OFFSET_ALIGNMENT_VIOLATION = 327;
export const ERROR_INVALID_FIELD_IN_PARAMETER_LIST = 328;
export const ERROR_OPERATION_IN_PROGRESS = 329;
export const ERROR_BAD_DEVICE_PATH = 330;
export const ERROR_TOO_MANY_DESCRIPTORS = 331;
export const ERROR_SCRUB_DATA_DISABLED = 332;
export const ERROR_NOT_REDUNDANT_STORAGE = 333;
export const ERROR_RESIDENT_FILE_NOT_SUPPORTED = 334;
export const ERROR_COMPRESSED_FILE_NOT_SUPPORTED = 335;
export const ERROR_DIRECTORY_NOT_SUPPORTED = 336;
export const ERROR_NOT_READ_FROM_COPY = 337;
export const ERROR_FT_WRITE_FAILURE = 338;
export const ERROR_FT_DI_SCAN_REQUIRED = 339;
export const ERROR_INVALID_KERNEL_INFO_VERSION = 340;
export const ERROR_INVALID_PEP_INFO_VERSION = 341;
export const ERROR_OBJECT_NOT_EXTERNALLY_BACKED = 342;
export const ERROR_EXTERNAL_BACKING_PROVIDER_UNKNOWN = 343;
export const ERROR_COMPRESSION_NOT_BENEFICIAL = 344;
export const ERROR_STORAGE_TOPOLOGY_ID_MISMATCH = 345;
export const ERROR_BLOCKED_BY_PARENTAL_CONTROLS = 346;
export const ERROR_BLOCK_TOO_MANY_REFERENCES = 347;
export const ERROR_MARKED_TO_DISALLOW_WRITES = 348;
export const ERROR_ENCLAVE_FAILURE = 349;
export const ERROR_FAIL_NOACTION_REBOOT = 350;
export const ERROR_FAIL_SHUTDOWN = 351;
export const ERROR_FAIL_RESTART = 352;
export const ERROR_MAX_SESSIONS_REACHED = 353;
export const ERROR_NETWORK_ACCESS_DENIED_EDP = 354;
export const ERROR_DEVICE_HINT_NAME_BUFFER_TOO_SMALL = 355;
export const ERROR_EDP_POLICY_DENIES_OPERATION = 356;
export const ERROR_EDP_DPL_POLICY_CANT_BE_SATISFIED = 357;
export const ERROR_CLOUD_FILE_SYNC_ROOT_METADATA_CORRUPT = 358;
export const ERROR_DEVICE_IN_MAINTENANCE = 359;
export const ERROR_NOT_SUPPORTED_ON_DAX = 360;
export const ERROR_DAX_MAPPING_EXISTS = 361;
export const ERROR_CLOUD_FILE_PROVIDER_NOT_RUNNING = 362;
export const ERROR_CLOUD_FILE_METADATA_CORRUPT = 363;
export const ERROR_CLOUD_FILE_METADATA_TOO_LARGE = 364;
export const ERROR_CLOUD_FILE_PROPERTY_BLOB_TOO_LARGE = 365;
export const ERROR_CLOUD_FILE_PROPERTY_BLOB_CHECKSUM_MISMATCH = 366;
export const ERROR_CHILD_PROCESS_BLOCKED = 367;
export const ERROR_STORAGE_LOST_DATA_PERSISTENCE = 368;
export const ERROR_FILE_SYSTEM_VIRTUALIZATION_UNAVAILABLE = 369;
export const ERROR_FILE_SYSTEM_VIRTUALIZATION_METADATA_CORRUPT = 370;
export const ERROR_FILE_SYSTEM_VIRTUALIZATION_BUSY = 371;
export const ERROR_FILE_SYSTEM_VIRTUALIZATION_PROVIDER_UNKNOWN = 372;
export const ERROR_GDI_HANDLE_LEAK = 373;
export const ERROR_CLOUD_FILE_TOO_MANY_PROPERTY_BLOBS = 374;
export const ERROR_CLOUD_FILE_PROPERTY_VERSION_NOT_SUPPORTED = 375;
export const ERROR_NOT_A_CLOUD_FILE = 376;
export const ERROR_CLOUD_FILE_NOT_IN_SYNC = 377;
export const ERROR_CLOUD_FILE_ALREADY_CONNECTED = 378;
export const ERROR_CLOUD_FILE_NOT_SUPPORTED = 379;
export const ERROR_CLOUD_FILE_INVALID_REQUEST = 380;
export const ERROR_CLOUD_FILE_READ_ONLY_VOLUME = 381;
export const ERROR_CLOUD_FILE_CONNECTED_PROVIDER_ONLY = 382;
export const ERROR_CLOUD_FILE_VALIDATION_FAILED = 383;
export const ERROR_SMB1_NOT_AVAILABLE = 384;
export const ERROR_FILE_SYSTEM_VIRTUALIZATION_INVALID_OPERATION = 385;
export const ERROR_CLOUD_FILE_AUTHENTICATION_FAILED = 386;
export const ERROR_CLOUD_FILE_INSUFFICIENT_RESOURCES = 387;
export const ERROR_CLOUD_FILE_NETWORK_UNAVAILABLE = 388;
export const ERROR_CLOUD_FILE_UNSUCCESSFUL = 389;
export const ERROR_CLOUD_FILE_NOT_UNDER_SYNC_ROOT = 390;
export const ERROR_CLOUD_FILE_IN_USE = 391;
export const ERROR_CLOUD_FILE_PINNED = 392;
export const ERROR_CLOUD_FILE_REQUEST_ABORTED = 393;
export const ERROR_CLOUD_FILE_PROPERTY_CORRUPT = 394;
export const ERROR_CLOUD_FILE_ACCESS_DENIED = 395;
export const ERROR_CLOUD_FILE_INCOMPATIBLE_HARDLINKS = 396;
export const ERROR_CLOUD_FILE_PROPERTY_LOCK_CONFLICT = 397;
export const ERROR_CLOUD_FILE_REQUEST_CANCELED = 398;
export const ERROR_EXTERNAL_SYSKEY_NOT_SUPPORTED = 399;
export const ERROR_THREAD_MODE_ALREADY_BACKGROUND = 400;
export const ERROR_THREAD_MODE_NOT_BACKGROUND = 401;
export const ERROR_PROCESS_MODE_ALREADY_BACKGROUND = 402;
export const ERROR_PROCESS_MODE_NOT_BACKGROUND = 403;
export const ERROR_CLOUD_FILE_PROVIDER_TERMINATED = 404;
export const ERROR_NOT_A_CLOUD_SYNC_ROOT = 405;
export const ERROR_FILE_PROTECTED_UNDER_DPL = 406;
export const ERROR_VOLUME_NOT_CLUSTER_ALIGNED = 407;
export const ERROR_NO_PHYSICALLY_ALIGNED_FREE_SPACE_FOUND = 408;
export const ERROR_APPX_FILE_NOT_ENCRYPTED = 409;
export const ERROR_RWRAW_ENCRYPTED_FILE_NOT_ENCRYPTED = 410;
export const ERROR_RWRAW_ENCRYPTED_INVALID_EDATAINFO_FILEOFFSET = 411;
export const ERROR_RWRAW_ENCRYPTED_INVALID_EDATAINFO_FILERANGE = 412;
export const ERROR_RWRAW_ENCRYPTED_INVALID_EDATAINFO_PARAMETER = 413;
export const ERROR_LINUX_SUBSYSTEM_NOT_PRESENT = 414;
export const ERROR_FT_READ_FAILURE = 415;
export const ERROR_STORAGE_RESERVE_ID_INVALID = 416;
export const ERROR_STORAGE_RESERVE_DOES_NOT_EXIST = 417;
export const ERROR_STORAGE_RESERVE_ALREADY_EXISTS = 418;
export const ERROR_STORAGE_RESERVE_NOT_EMPTY = 419;
export const ERROR_NOT_A_DAX_VOLUME = 420;
export const ERROR_NOT_DAX_MAPPABLE = 421;
export const ERROR_TIME_SENSITIVE_THREAD = 422;
export const ERROR_DPL_NOT_SUPPORTED_FOR_USER = 423;
export const ERROR_CASE_DIFFERING_NAMES_IN_DIR = 424;
export const ERROR_FILE_NOT_SUPPORTED = 425;
export const ERROR_CLOUD_FILE_REQUEST_TIMEOUT = 426;
export const ERROR_NO_TASK_QUEUE = 427;
export const ERROR_SRC_SRV_DLL_LOAD_FAILED = 428;
export const ERROR_NOT_SUPPORTED_WITH_BTT = 429;
export const ERROR_ENCRYPTION_DISABLED = 430;
export const ERROR_ENCRYPTING_METADATA_DISALLOWED = 431;
export const ERROR_CANT_CLEAR_ENCRYPTION_FLAG = 432;
export const ERROR_NO_SUCH_DEVICE = 433;
export const ERROR_CLOUD_FILE_DEHYDRATION_DISALLOWED = 434;
export const ERROR_FILE_SNAP_IN_PROGRESS = 435;
export const ERROR_FILE_SNAP_USER_SECTION_NOT_SUPPORTED = 436;
export const ERROR_FILE_SNAP_MODIFY_NOT_SUPPORTED = 437;
export const ERROR_FILE_SNAP_IO_NOT_COORDINATED = 438;
export const ERROR_FILE_SNAP_UNEXPECTED_ERROR = 439;
export const ERROR_FILE_SNAP_INVALID_PARAMETER = 440;
export const ERROR_UNSATISFIED_DEPENDENCIES = 441;
export const ERROR_CASE_SENSITIVE_PATH = 442;
export const ERROR_UNEXPECTED_NTCACHEMANAGER_ERROR = 443;
export const ERROR_LINUX_SUBSYSTEM_UPDATE_REQUIRED = 444;
export const ERROR_DLP_POLICY_WARNS_AGAINST_OPERATION = 445;
export const ERROR_DLP_POLICY_DENIES_OPERATION = 446;
export const ERROR_SECURITY_DENIES_OPERATION = 447;
export const ERROR_UNTRUSTED_MOUNT_POINT = 448;
export const ERROR_DLP_POLICY_SILENTLY_FAIL = 449;
export const ERROR_CAPAUTHZ_NOT_DEVUNLOCKED = 450;
export const ERROR_CAPAUTHZ_CHANGE_TYPE = 451;
export const ERROR_CAPAUTHZ_NOT_PROVISIONED = 452;
export const ERROR_CAPAUTHZ_NOT_AUTHORIZED = 453;
export const ERROR_CAPAUTHZ_NO_POLICY = 454;
export const ERROR_CAPAUTHZ_DB_CORRUPTED = 455;
export const ERROR_CAPAUTHZ_SCCD_INVALID_CATALOG = 456;
export const ERROR_CAPAUTHZ_SCCD_NO_AUTH_ENTITY = 457;
export const ERROR_CAPAUTHZ_SCCD_PARSE_ERROR = 458;
export const ERROR_CAPAUTHZ_SCCD_DEV_MODE_REQUIRED = 459;
export const ERROR_CAPAUTHZ_SCCD_NO_CAPABILITY_MATCH = 460;
export const ERROR_CIMFS_IMAGE_CORRUPT = 470;
export const ERROR_CIMFS_IMAGE_VERSION_NOT_SUPPORTED = 471;
export const ERROR_STORAGE_STACK_ACCESS_DENIED = 472;
export const ERROR_INSUFFICIENT_VIRTUAL_ADDR_RESOURCES = 473;
export const ERROR_INDEX_OUT_OF_BOUNDS = 474;
export const ERROR_PNP_QUERY_REMOVE_DEVICE_TIMEOUT = 480;
export const ERROR_PNP_QUERY_REMOVE_RELATED_DEVICE_TIMEOUT = 481;
export const ERROR_PNP_QUERY_REMOVE_UNRELATED_DEVICE_TIMEOUT = 482;
export const ERROR_DEVICE_HARDWARE_ERROR = 483;
export const ERROR_INVALID_ADDRESS = 487;
export const ERROR_HAS_SYSTEM_CRITICAL_FILES = 488;
export const ERROR_ENCRYPTED_FILE_NOT_SUPPORTED = 489;
export const ERROR_SPARSE_FILE_NOT_SUPPORTED = 490;
export const ERROR_PAGEFILE_NOT_SUPPORTED = 491;
export const ERROR_VOLUME_NOT_SUPPORTED = 492;
export const ERROR_NOT_SUPPORTED_WITH_BYPASSIO = 493;
export const ERROR_NO_BYPASSIO_DRIVER_SUPPORT = 494;
export const ERROR_NOT_SUPPORTED_WITH_ENCRYPTION = 495;
export const ERROR_NOT_SUPPORTED_WITH_COMPRESSION = 496;
export const ERROR_NOT_SUPPORTED_WITH_REPLICATION = 497;
export const ERROR_NOT_SUPPORTED_WITH_DEDUPLICATION = 498;
export const ERROR_NOT_SUPPORTED_WITH_AUDITING = 499;
export const ERROR_USER_PROFILE_LOAD = 500;
export const ERROR_SESSION_KEY_TOO_SHORT = 501;
export const ERROR_ACCESS_DENIED_APPDATA = 502;
export const ERROR_NOT_SUPPORTED_WITH_MONITORING = 503;
export const ERROR_NOT_SUPPORTED_WITH_SNAPSHOT = 504;
export const ERROR_NOT_SUPPORTED_WITH_VIRTUALIZATION = 505;
export const ERROR_BYPASSIO_FLT_NOT_SUPPORTED = 506;
export const ERROR_DEVICE_RESET_REQUIRED = 507;
export const ERROR_VOLUME_WRITE_ACCESS_DENIED = 508;
export const ERROR_ARITHMETIC_OVERFLOW = 534;
export const ERROR_PIPE_CONNECTED = 535;
export const ERROR_PIPE_LISTENING = 536;
export const ERROR_VERIFIER_STOP = 537;
export const ERROR_ABIOS_ERROR = 538;
export const ERROR_WX86_WARNING = 539;
export const ERROR_WX86_ERROR = 540;
export const ERROR_TIMER_NOT_CANCELED = 541;
export const ERROR_UNWIND = 542;
export const ERROR_BAD_STACK = 543;
export const ERROR_INVALID_UNWIND_TARGET = 544;
export const ERROR_INVALID_PORT_ATTRIBUTES = 545;
export const ERROR_PORT_MESSAGE_TOO_LONG = 546;
export const ERROR_INVALID_QUOTA_LOWER = 547;
export const ERROR_DEVICE_ALREADY_ATTACHED = 548;
export const ERROR_INSTRUCTION_MISALIGNMENT = 549;
export const ERROR_PROFILING_NOT_STARTED = 550;
export const ERROR_PROFILING_NOT_STOPPED = 551;
export const ERROR_COULD_NOT_INTERPRET = 552;
export const ERROR_PROFILING_AT_LIMIT = 553;
export const ERROR_CANT_WAIT = 554;
export const ERROR_CANT_TERMINATE_SELF = 555;
export const ERROR_UNEXPECTED_MM_CREATE_ERR = 556;
export const ERROR_UNEXPECTED_MM_MAP_ERROR = 557;
export const ERROR_UNEXPECTED_MM_EXTEND_ERR = 558;
export const ERROR_BAD_FUNCTION_TABLE = 559;
export const ERROR_NO_GUID_TRANSLATION = 560;
export const ERROR_INVALID_LDT_SIZE = 561;
export const ERROR_INVALID_LDT_OFFSET = 563;
export const ERROR_INVALID_LDT_DESCRIPTOR = 564;
export const ERROR_TOO_MANY_THREADS = 565;
export const ERROR_THREAD_NOT_IN_PROCESS = 566;
export const ERROR_PAGEFILE_QUOTA_EXCEEDED = 567;
export const ERROR_LOGON_SERVER_CONFLICT = 568;
export const ERROR_SYNCHRONIZATION_REQUIRED = 569;
export const ERROR_NET_OPEN_FAILED = 570;
export const ERROR_IO_PRIVILEGE_FAILED = 571;
export const ERROR_CONTROL_C_EXIT = 572;
export const ERROR_MISSING_SYSTEMFILE = 573;
export const ERROR_UNHANDLED_EXCEPTION = 574;
export const ERROR_APP_INIT_FAILURE = 575;
export const ERROR_PAGEFILE_CREATE_FAILED = 576;
export const ERROR_INVALID_IMAGE_HASH = 577;
export const ERROR_NO_PAGEFILE = 578;
export const ERROR_ILLEGAL_FLOAT_CONTEXT = 579;
export const ERROR_NO_EVENT_PAIR = 580;
export const ERROR_DOMAIN_CTRLR_CONFIG_ERROR = 581;
export const ERROR_ILLEGAL_CHARACTER = 582;
export const ERROR_UNDEFINED_CHARACTER = 583;
export const ERROR_FLOPPY_VOLUME = 584;
export const ERROR_BIOS_FAILED_TO_CONNECT_INTERRUPT = 585;
export const ERROR_BACKUP_CONTROLLER = 586;
export const ERROR_MUTANT_LIMIT_EXCEEDED = 587;
export const ERROR_FS_DRIVER_REQUIRED = 588;
export const ERROR_CANNOT_LOAD_REGISTRY_FILE = 589;
export const ERROR_DEBUG_ATTACH_FAILED = 590;
export const ERROR_SYSTEM_PROCESS_TERMINATED = 591;
export const ERROR_DATA_NOT_ACCEPTED = 592;
export const ERROR_VDM_HARD_ERROR = 593;
export const ERROR_DRIVER_CANCEL_TIMEOUT = 594;
export const ERROR_REPLY_MESSAGE_MISMATCH = 595;
export const ERROR_LOST_WRITEBEHIND_DATA = 596;
export const ERROR_CLIENT_SERVER_PARAMETERS_INVALID = 597;
export const ERROR_NOT_TINY_STREAM = 598;
export const ERROR_STACK_OVERFLOW_READ = 599;
export const ERROR_CONVERT_TO_LARGE = 600;
export const ERROR_FOUND_OUT_OF_SCOPE = 601;
export const ERROR_ALLOCATE_BUCKET = 602;
export const ERROR_MARSHALL_OVERFLOW = 603;
export const ERROR_INVALID_VARIANT = 604;
export const ERROR_BAD_COMPRESSION_BUFFER = 605;
export const ERROR_AUDIT_FAILED = 606;
export const ERROR_TIMER_RESOLUTION_NOT_SET = 607;
export const ERROR_INSUFFICIENT_LOGON_INFO = 608;
export const ERROR_BAD_DLL_ENTRYPOINT = 609;
export const ERROR_BAD_SERVICE_ENTRYPOINT = 610;
export const ERROR_IP_ADDRESS_CONFLICT1 = 611;
export const ERROR_IP_ADDRESS_CONFLICT2 = 612;
export const ERROR_REGISTRY_QUOTA_LIMIT = 613;
export const ERROR_NO_CALLBACK_ACTIVE = 614;
export const ERROR_PWD_TOO_SHORT = 615;
export const ERROR_PWD_TOO_RECENT = 616;
export const ERROR_PWD_HISTORY_CONFLICT = 617;
export const ERROR_UNSUPPORTED_COMPRESSION = 618;
export const ERROR_INVALID_HW_PROFILE = 619;
export const ERROR_INVALID_PLUGPLAY_DEVICE_PATH = 620;
export const ERROR_QUOTA_LIST_INCONSISTENT = 621;
export const ERROR_EVALUATION_EXPIRATION = 622;
export const ERROR_ILLEGAL_DLL_RELOCATION = 623;
export const ERROR_DLL_INIT_FAILED_LOGOFF = 624;
export const ERROR_VALIDATE_CONTINUE = 625;
export const ERROR_NO_MORE_MATCHES = 626;
export const ERROR_RANGE_LIST_CONFLICT = 627;
export const ERROR_SERVER_SID_MISMATCH = 628;
export const ERROR_CANT_ENABLE_DENY_ONLY = 629;
export const ERROR_FLOAT_MULTIPLE_FAULTS = 630;
export const ERROR_FLOAT_MULTIPLE_TRAPS = 631;
export const ERROR_NOINTERFACE = 632;
export const ERROR_DRIVER_FAILED_SLEEP = 633;
export const ERROR_CORRUPT_SYSTEM_FILE = 634;
export const ERROR_COMMITMENT_MINIMUM = 635;
export const ERROR_PNP_RESTART_ENUMERATION = 636;
export const ERROR_SYSTEM_IMAGE_BAD_SIGNATURE = 637;
export const ERROR_PNP_REBOOT_REQUIRED = 638;
export const ERROR_INSUFFICIENT_POWER = 639;
export const ERROR_MULTIPLE_FAULT_VIOLATION = 640;
export const ERROR_SYSTEM_SHUTDOWN = 641;
export const ERROR_PORT_NOT_SET = 642;
export const ERROR_DS_VERSION_CHECK_FAILURE = 643;
export const ERROR_RANGE_NOT_FOUND = 644;
export const ERROR_NOT_SAFE_MODE_DRIVER = 646;
export const ERROR_FAILED_DRIVER_ENTRY = 647;
export const ERROR_DEVICE_ENUMERATION_ERROR = 648;
export const ERROR_MOUNT_POINT_NOT_RESOLVED = 649;
export const ERROR_INVALID_DEVICE_OBJECT_PARAMETER = 650;
export const ERROR_MCA_OCCURED = 651;
export const ERROR_DRIVER_DATABASE_ERROR = 652;
export const ERROR_SYSTEM_HIVE_TOO_LARGE = 653;
export const ERROR_DRIVER_FAILED_PRIOR_UNLOAD = 654;
export const ERROR_VOLSNAP_PREPARE_HIBERNATE = 655;
export const ERROR_HIBERNATION_FAILURE = 656;
export const ERROR_PWD_TOO_LONG = 657;
export const ERROR_FILE_SYSTEM_LIMITATION = 665;
export const ERROR_ASSERTION_FAILURE = 668;
export const ERROR_ACPI_ERROR = 669;
export const ERROR_WOW_ASSERTION = 670;
export const ERROR_PNP_BAD_MPS_TABLE = 671;
export const ERROR_PNP_TRANSLATION_FAILED = 672;
export const ERROR_PNP_IRQ_TRANSLATION_FAILED = 673;
export const ERROR_PNP_INVALID_ID = 674;
export const ERROR_WAKE_SYSTEM_DEBUGGER = 675;
export const ERROR_HANDLES_CLOSED = 676;
export const ERROR_EXTRANEOUS_INFORMATION = 677;
export const ERROR_RXACT_COMMIT_NECESSARY = 678;
export const ERROR_MEDIA_CHECK = 679;
export const ERROR_GUID_SUBSTITUTION_MADE = 680;
export const ERROR_STOPPED_ON_SYMLINK = 681;
export const ERROR_LONGJUMP = 682;
export const ERROR_PLUGPLAY_QUERY_VETOED = 683;
export const ERROR_UNWIND_CONSOLIDATE = 684;
export const ERROR_REGISTRY_HIVE_RECOVERED = 685;
export const ERROR_DLL_MIGHT_BE_INSECURE = 686;
export const ERROR_DLL_MIGHT_BE_INCOMPATIBLE = 687;
export const ERROR_DBG_EXCEPTION_NOT_HANDLED = 688;
export const ERROR_DBG_REPLY_LATER = 689;
export const ERROR_DBG_UNABLE_TO_PROVIDE_HANDLE = 690;
export const ERROR_DBG_TERMINATE_THREAD = 691;
export const ERROR_DBG_TERMINATE_PROCESS = 692;
export const ERROR_DBG_CONTROL_C = 693;
export const ERROR_DBG_PRINTEXCEPTION_C = 694;
export const ERROR_DBG_RIPEXCEPTION = 695;
export const ERROR_DBG_CONTROL_BREAK = 696;
export const ERROR_DBG_COMMAND_EXCEPTION = 697;
export const ERROR_OBJECT_NAME_EXISTS = 698;
export const ERROR_THREAD_WAS_SUSPENDED = 699;
export const ERROR_IMAGE_NOT_AT_BASE = 700;
export const ERROR_RXACT_STATE_CREATED = 701;
export const ERROR_SEGMENT_NOTIFICATION = 702;
export const ERROR_BAD_CURRENT_DIRECTORY = 703;
export const ERROR_FT_READ_RECOVERY_FROM_BACKUP = 704;
export const ERROR_FT_WRITE_RECOVERY = 705;
export const ERROR_IMAGE_MACHINE_TYPE_MISMATCH = 706;
export const ERROR_RECEIVE_PARTIAL = 707;
export const ERROR_RECEIVE_EXPEDITED = 708;
export const ERROR_RECEIVE_PARTIAL_EXPEDITED = 709;
export const ERROR_EVENT_DONE = 710;
export const ERROR_EVENT_PENDING = 711;
export const ERROR_CHECKING_FILE_SYSTEM = 712;
export const ERROR_FATAL_APP_EXIT = 713;
export const ERROR_PREDEFINED_HANDLE = 714;
export const ERROR_WAS_UNLOCKED = 715;
export const ERROR_SERVICE_NOTIFICATION = 716;
export const ERROR_WAS_LOCKED = 717;
export const ERROR_LOG_HARD_ERROR = 718;
export const ERROR_ALREADY_WIN32 = 719;
export const ERROR_IMAGE_MACHINE_TYPE_MISMATCH_EXE = 720;
export const ERROR_NO_YIELD_PERFORMED = 721;
export const ERROR_TIMER_RESUME_IGNORED = 722;
export const ERROR_ARBITRATION_UNHANDLED = 723;
export const ERROR_CARDBUS_NOT_SUPPORTED = 724;
export const ERROR_MP_PROCESSOR_MISMATCH = 725;
export const ERROR_HIBERNATED = 726;
export const ERROR_RESUME_HIBERNATION = 727;
export const ERROR_FIRMWARE_UPDATED = 728;
export const ERROR_DRIVERS_LEAKING_LOCKED_PAGES = 729;
export const ERROR_WAKE_SYSTEM = 730;
export const ERROR_WAIT_1 = 731;
export const ERROR_WAIT_2 = 732;
export const ERROR_WAIT_3 = 733;
export const ERROR_WAIT_63 = 734;
export const ERROR_ABANDONED_WAIT_0 = 735;
export const ERROR_ABANDONED_WAIT_63 = 736;
export const ERROR_USER_APC = 737;
export const ERROR_KERNEL_APC = 738;
export const ERROR_ALERTED = 739;
export const ERROR_ELEVATION_REQUIRED = 740;
export const ERROR_REPARSE = 741;
export const ERROR_OPLOCK_BREAK_IN_PROGRESS = 742;
export const ERROR_VOLUME_MOUNTED = 743;
export const ERROR_RXACT_COMMITTED = 744;
export const ERROR_NOTIFY_CLEANUP = 745;
export const ERROR_PRIMARY_TRANSPORT_CONNECT_FAILED = 746;
export const ERROR_PAGE_FAULT_TRANSITION = 747;
export const ERROR_PAGE_FAULT_DEMAND_ZERO = 748;
export const ERROR_PAGE_FAULT_COPY_ON_WRITE = 749;
export const ERROR_PAGE_FAULT_GUARD_PAGE = 750;
export const ERROR_PAGE_FAULT_PAGING_FILE = 751;
export const ERROR_CACHE_PAGE_LOCKED = 752;
export const ERROR_CRASH_DUMP = 753;
export const ERROR_BUFFER_ALL_ZEROS = 754;
export const ERROR_REPARSE_OBJECT = 755;
export const ERROR_RESOURCE_REQUIREMENTS_CHANGED = 756;
export const ERROR_TRANSLATION_COMPLETE = 757;
export const ERROR_NOTHING_TO_TERMINATE = 758;
export const ERROR_PROCESS_NOT_IN_JOB = 759;
export const ERROR_PROCESS_IN_JOB = 760;
export const ERROR_VOLSNAP_HIBERNATE_READY = 761;
export const ERROR_FSFILTER_OP_COMPLETED_SUCCESSFULLY = 762;
export const ERROR_INTERRUPT_VECTOR_ALREADY_CONNECTED = 763;
export const ERROR_INTERRUPT_STILL_CONNECTED = 764;
export const ERROR_WAIT_FOR_OPLOCK = 765;
export const ERROR_DBG_EXCEPTION_HANDLED = 766;
export const ERROR_DBG_CONTINUE = 767;
export const ERROR_CALLBACK_POP_STACK = 768;
export const ERROR_COMPRESSION_DISABLED = 769;
export const ERROR_CANTFETCHBACKWARDS = 770;
export const ERROR_CANTSCROLLBACKWARDS = 771;
export const ERROR_ROWSNOTRELEASED = 772;
export const ERROR_BAD_ACCESSOR_FLAGS = 773;
export const ERROR_ERRORS_ENCOUNTERED = 774;
export const ERROR_NOT_CAPABLE = 775;
export const ERROR_REQUEST_OUT_OF_SEQUENCE = 776;
export const ERROR_VERSION_PARSE_ERROR = 777;
export const ERROR_BADSTARTPOSITION = 778;
export const ERROR_MEMORY_HARDWARE = 779;
export const ERROR_DISK_REPAIR_DISABLED = 780;
export const ERROR_INSUFFICIENT_RESOURCE_FOR_SPECIFIED_SHARED_SECTION_SIZE = 781;
export const ERROR_SYSTEM_POWERSTATE_TRANSITION = 782;
export const ERROR_SYSTEM_POWERSTATE_COMPLEX_TRANSITION = 783;
export const ERROR_MCA_EXCEPTION = 784;
export const ERROR_ACCESS_AUDIT_BY_POLICY = 785;
export const ERROR_ACCESS_DISABLED_NO_SAFER_UI_BY_POLICY = 786;
export const ERROR_ABANDON_HIBERFILE = 787;
export const ERROR_LOST_WRITEBEHIND_DATA_NETWORK_DISCONNECTED = 788;
export const ERROR_LOST_WRITEBEHIND_DATA_NETWORK_SERVER_ERROR = 789;
export const ERROR_LOST_WRITEBEHIND_DATA_LOCAL_DISK_ERROR = 790;
export const ERROR_BAD_MCFG_TABLE = 791;
export const ERROR_DISK_REPAIR_REDIRECTED = 792;
export const ERROR_DISK_REPAIR_UNSUCCESSFUL = 793;
export const ERROR_CORRUPT_LOG_OVERFULL = 794;
export const ERROR_CORRUPT_LOG_CORRUPTED = 795;
export const ERROR_CORRUPT_LOG_UNAVAILABLE = 796;
export const ERROR_CORRUPT_LOG_DELETED_FULL = 797;
export const ERROR_CORRUPT_LOG_CLEARED = 798;
export const ERROR_ORPHAN_NAME_EXHAUSTED = 799;
export const ERROR_OPLOCK_SWITCHED_TO_NEW_HANDLE = 800;
export const ERROR_CANNOT_GRANT_REQUESTED_OPLOCK = 801;
export const ERROR_CANNOT_BREAK_OPLOCK = 802;
export const ERROR_OPLOCK_HANDLE_CLOSED = 803;
export const ERROR_NO_ACE_CONDITION = 804;
export const ERROR_INVALID_ACE_CONDITION = 805;
export const ERROR_FILE_HANDLE_REVOKED = 806;
export const ERROR_IMAGE_AT_DIFFERENT_BASE = 807;
export const ERROR_ENCRYPTED_IO_NOT_POSSIBLE = 808;
export const ERROR_FILE_METADATA_OPTIMIZATION_IN_PROGRESS = 809;
export const ERROR_QUOTA_ACTIVITY = 810;
export const ERROR_HANDLE_REVOKED = 811;
export const ERROR_CALLBACK_INVOKE_INLINE = 812;
export const ERROR_CPU_SET_INVALID = 813;
export const ERROR_ENCLAVE_NOT_TERMINATED = 814;
export const ERROR_ENCLAVE_VIOLATION = 815;
export const ERROR_SERVER_TRANSPORT_CONFLICT = 816;
export const ERROR_CERTIFICATE_VALIDATION_PREFERENCE_CONFLICT = 817;
export const ERROR_FT_READ_FROM_COPY_FAILURE = 818;
export const ERROR_SECTION_DIRECT_MAP_ONLY = 819;
export const ERROR_EA_ACCESS_DENIED = 994;
export const ERROR_OPERATION_ABORTED = 995;
export const ERROR_IO_INCOMPLETE = 996;
export const ERROR_IO_PENDING = 997;
export const ERROR_NOACCESS = 998;
export const ERROR_SWAPERROR = 999;
export const ERROR_STACK_OVERFLOW = 1001;
export const ERROR_INVALID_MESSAGE = 1002;
export const ERROR_CAN_NOT_COMPLETE = 1003;
export const ERROR_INVALID_FLAGS = 1004;
export const ERROR_UNRECOGNIZED_VOLUME = 1005;
export const ERROR_FILE_INVALID = 1006;
export const ERROR_FULLSCREEN_MODE = 1007;
export const ERROR_NO_TOKEN = 1008;
export const ERROR_BADDB = 1009;
export const ERROR_BADKEY = 1010;
export const ERROR_CANTOPEN = 1011;
export const ERROR_CANTREAD = 1012;
export const ERROR_CANTWRITE = 1013;
export const ERROR_REGISTRY_RECOVERED = 1014;
export const ERROR_REGISTRY_CORRUPT = 1015;
export const ERROR_REGISTRY_IO_FAILED = 1016;
export const ERROR_NOT_REGISTRY_FILE = 1017;
export const ERROR_KEY_DELETED = 1018;
export const ERROR_NO_LOG_SPACE = 1019;
export const ERROR_KEY_HAS_CHILDREN = 1020;
export const ERROR_CHILD_MUST_BE_VOLATILE = 1021;
export const ERROR_NOTIFY_ENUM_DIR = 1022;
export const ERROR_DEPENDENT_SERVICES_RUNNING = 1051;
export const ERROR_INVALID_SERVICE_CONTROL = 1052;
export const ERROR_SERVICE_REQUEST_TIMEOUT = 1053;
export const ERROR_SERVICE_NO_THREAD = 1054;
export const ERROR_SERVICE_DATABASE_LOCKED = 1055;
export const ERROR_SERVICE_ALREADY_RUNNING = 1056;
export const ERROR_INVALID_SERVICE_ACCOUNT = 1057;
export const ERROR_SERVICE_DISABLED = 1058;
export const ERROR_CIRCULAR_DEPENDENCY = 1059;
export const ERROR_SERVICE_DOES_NOT_EXIST = 1060;
export const ERROR_SERVICE_CANNOT_ACCEPT_CTRL = 1061;
export const ERROR_SERVICE_NOT_ACTIVE = 1062;
export const ERROR_FAILED_SERVICE_CONTROLLER_CONNECT = 1063;
export const ERROR_EXCEPTION_IN_SERVICE = 1064;
export const ERROR_DATABASE_DOES_NOT_EXIST = 1065;
export const ERROR_SERVICE_SPECIFIC_ERROR = 1066;
export const ERROR_PROCESS_ABORTED = 1067;
export const ERROR_SERVICE_DEPENDENCY_FAIL = 1068;
export const ERROR_SERVICE_LOGON_FAILED = 1069;
export const ERROR_SERVICE_START_HANG = 1070;
export const ERROR_INVALID_SERVICE_LOCK = 1071;
export const ERROR_SERVICE_MARKED_FOR_DELETE = 1072;
export const ERROR_SERVICE_EXISTS = 1073;
export const ERROR_ALREADY_RUNNING_LKG = 1074;
export const ERROR_SERVICE_DEPENDENCY_DELETED = 1075;
export const ERROR_BOOT_ALREADY_ACCEPTED = 1076;
export const ERROR_SERVICE_NEVER_STARTED = 1077;
export const ERROR_DUPLICATE_SERVICE_NAME = 1078;
export const ERROR_DIFFERENT_SERVICE_ACCOUNT = 1079;
export const ERROR_CANNOT_DETECT_DRIVER_FAILURE = 1080;
export const ERROR_CANNOT_DETECT_PROCESS_ABORT = 1081;
export const ERROR_NO_RECOVERY_PROGRAM = 1082;
export const ERROR_SERVICE_NOT_IN_EXE = 1083;
export const ERROR_NOT_SAFEBOOT_SERVICE = 1084;
export const ERROR_END_OF_MEDIA = 1100;
export const ERROR_FILEMARK_DETECTED = 1101;
export const ERROR_BEGINNING_OF_MEDIA = 1102;
export const ERROR_SETMARK_DETECTED = 1103;
export const ERROR_NO_DATA_DETECTED = 1104;
export const ERROR_PARTITION_FAILURE = 1105;
export const ERROR_INVALID_BLOCK_LENGTH = 1106;
export const ERROR_DEVICE_NOT_PARTITIONED = 1107;
export const ERROR_UNABLE_TO_LOCK_MEDIA = 1108;
export const ERROR_UNABLE_TO_UNLOAD_MEDIA = 1109;
export const ERROR_MEDIA_CHANGED = 1110;
export const ERROR_BUS_RESET = 1111;
export const ERROR_NO_MEDIA_IN_DRIVE = 1112;
export const ERROR_NO_UNICODE_TRANSLATION = 1113;
export const ERROR_DLL_INIT_FAILED = 1114;
export const ERROR_SHUTDOWN_IN_PROGRESS = 1115;
export const ERROR_NO_SHUTDOWN_IN_PROGRESS = 1116;
export const ERROR_IO_DEVICE = 1117;
export const ERROR_SERIAL_NO_DEVICE = 1118;
export const ERROR_IRQ_BUSY = 1119;
export const ERROR_MORE_WRITES = 1120;
export const ERROR_COUNTER_TIMEOUT = 1121;
export const ERROR_FLOPPY_ID_MARK_NOT_FOUND = 1122;
export const ERROR_FLOPPY_WRONG_CYLINDER = 1123;
export const ERROR_FLOPPY_UNKNOWN_ERROR = 1124;
export const ERROR_FLOPPY_BAD_REGISTERS = 1125;
export const ERROR_DISK_RECALIBRATE_FAILED = 1126;
export const ERROR_DISK_OPERATION_FAILED = 1127;
export const ERROR_DISK_RESET_FAILED = 1128;
export const ERROR_EOM_OVERFLOW = 1129;
export const ERROR_NOT_ENOUGH_SERVER_MEMORY = 1130;
export const ERROR_POSSIBLE_DEADLOCK = 1131;
export const ERROR_MAPPED_ALIGNMENT = 1132;
export const ERROR_SET_POWER_STATE_VETOED = 1140;
export const ERROR_SET_POWER_STATE_FAILED = 1141;
export const ERROR_TOO_MANY_LINKS = 1142;
export const ERROR_OLD_WIN_VERSION = 1150;
export const ERROR_APP_WRONG_OS = 1151;
export const ERROR_SINGLE_INSTANCE_APP = 1152;
export const ERROR_RMODE_APP = 1153;
export const ERROR_INVALID_DLL = 1154;
export const ERROR_NO_ASSOCIATION = 1155;
export const ERROR_DDE_FAIL = 1156;
export const ERROR_DLL_NOT_FOUND = 1157;
export const ERROR_NO_MORE_USER_HANDLES = 1158;
export const ERROR_MESSAGE_SYNC_ONLY = 1159;
export const ERROR_SOURCE_ELEMENT_EMPTY = 1160;
export const ERROR_DESTINATION_ELEMENT_FULL = 1161;
export const ERROR_ILLEGAL_ELEMENT_ADDRESS = 1162;
export const ERROR_MAGAZINE_NOT_PRESENT = 1163;
export const ERROR_DEVICE_REINITIALIZATION_NEEDED = 1164;
export const ERROR_DEVICE_REQUIRES_CLEANING = 1165;
export const ERROR_DEVICE_DOOR_OPEN = 1166;
export const ERROR_DEVICE_NOT_CONNECTED = 1167;
export const ERROR_NOT_FOUND = 1168;
export const ERROR_NO_MATCH = 1169;
export const ERROR_SET_NOT_FOUND = 1170;
export const ERROR_POINT_NOT_FOUND = 1171;
export const ERROR_NO_TRACKING_SERVICE = 1172;
export const ERROR_NO_VOLUME_ID = 1173;
export const ERROR_UNABLE_TO_REMOVE_REPLACED = 1175;
export const ERROR_UNABLE_TO_MOVE_REPLACEMENT = 1176;
export const ERROR_UNABLE_TO_MOVE_REPLACEMENT_2 = 1177;
export const ERROR_JOURNAL_DELETE_IN_PROGRESS = 1178;
export const ERROR_JOURNAL_NOT_ACTIVE = 1179;
export const ERROR_POTENTIAL_FILE_FOUND = 1180;
export const ERROR_JOURNAL_ENTRY_DELETED = 1181;
export const ERROR_PARTITION_TERMINATING = 1184;
export const ERROR_SHUTDOWN_IS_SCHEDULED = 1190;
export const ERROR_SHUTDOWN_USERS_LOGGED_ON = 1191;
export const ERROR_SHUTDOWN_DISKS_NOT_IN_MAINTENANCE_MODE = 1192;
export const ERROR_BAD_DEVICE = 1200;
export const ERROR_CONNECTION_UNAVAIL = 1201;
export const ERROR_DEVICE_ALREADY_REMEMBERED = 1202;
export const ERROR_NO_NET_OR_BAD_PATH = 1203;
export const ERROR_BAD_PROVIDER = 1204;
export const ERROR_CANNOT_OPEN_PROFILE = 1205;
export const ERROR_BAD_PROFILE = 1206;
export const ERROR_NOT_CONTAINER = 1207;
export const ERROR_EXTENDED_ERROR = 1208;
export const ERROR_INVALID_GROUPNAME = 1209;
export const ERROR_INVALID_COMPUTERNAME = 1210;
export const ERROR_INVALID_EVENTNAME = 1211;
export const ERROR_INVALID_DOMAINNAME = 1212;
export const ERROR_INVALID_SERVICENAME = 1213;
export const ERROR_INVALID_NETNAME = 1214;
export const ERROR_INVALID_SHARENAME = 1215;
export const ERROR_INVALID_PASSWORDNAME = 1216;
export const ERROR_INVALID_MESSAGENAME = 1217;
export const ERROR_INVALID_MESSAGEDEST = 1218;
export const ERROR_SESSION_CREDENTIAL_CONFLICT = 1219;
export const ERROR_REMOTE_SESSION_LIMIT_EXCEEDED = 1220;
export const ERROR_DUP_DOMAINNAME = 1221;
export const ERROR_NO_NETWORK = 1222;
export const ERROR_CANCELLED = 1223;
export const ERROR_USER_MAPPED_FILE = 1224;
export const ERROR_CONNECTION_REFUSED = 1225;
export const ERROR_GRACEFUL_DISCONNECT = 1226;
export const ERROR_ADDRESS_ALREADY_ASSOCIATED = 1227;
export const ERROR_ADDRESS_NOT_ASSOCIATED = 1228;
export const ERROR_CONNECTION_INVALID = 1229;
export const ERROR_CONNECTION_ACTIVE = 1230;
export const ERROR_NETWORK_UNREACHABLE = 1231;
export const ERROR_HOST_UNREACHABLE = 1232;
export const ERROR_PROTOCOL_UNREACHABLE = 1233;
export const ERROR_PORT_UNREACHABLE = 1234;
export const ERROR_REQUEST_ABORTED = 1235;
export const ERROR_CONNECTION_ABORTED = 1236;
export const ERROR_RETRY = 1237;
export const ERROR_CONNECTION_COUNT_LIMIT = 1238;
export const ERROR_LOGIN_TIME_RESTRICTION = 1239;
export const ERROR_LOGIN_WKSTA_RESTRICTION = 1240;
export const ERROR_INCORRECT_ADDRESS = 1241;
export const ERROR_ALREADY_REGISTERED = 1242;
export const ERROR_SERVICE_NOT_FOUND = 1243;
export const ERROR_NOT_AUTHENTICATED = 1244;
export const ERROR_NOT_LOGGED_ON = 1245;
export const ERROR_CONTINUE = 1246;
export const ERROR_ALREADY_INITIALIZED = 1247;
export const ERROR_NO_MORE_DEVICES = 1248;
export const ERROR_NO_SUCH_SITE = 1249;
export const ERROR_DOMAIN_CONTROLLER_EXISTS = 1250;
export const ERROR_ONLY_IF_CONNECTED = 1251;
export const ERROR_OVERRIDE_NOCHANGES = 1252;
export const ERROR_BAD_USER_PROFILE = 1253;
export const ERROR_NOT_SUPPORTED_ON_SBS = 1254;
export const ERROR_SERVER_SHUTDOWN_IN_PROGRESS = 1255;
export const ERROR_HOST_DOWN = 1256;
export const ERROR_NON_ACCOUNT_SID = 1257;
export const ERROR_NON_DOMAIN_SID = 1258;
export const ERROR_APPHELP_BLOCK = 1259;
export const ERROR_ACCESS_DISABLED_BY_POLICY = 1260;
export const ERROR_REG_NAT_CONSUMPTION = 1261;
export const ERROR_CSCSHARE_OFFLINE = 1262;
export const ERROR_PKINIT_FAILURE = 1263;
export const ERROR_SMARTCARD_SUBSYSTEM_FAILURE = 1264;
export const ERROR_DOWNGRADE_DETECTED = 1265;
export const ERROR_MACHINE_LOCKED = 1271;
export const ERROR_SMB_GUEST_LOGON_BLOCKED = 1272;
export const ERROR_CALLBACK_SUPPLIED_INVALID_DATA = 1273;
export const ERROR_SYNC_FOREGROUND_REFRESH_REQUIRED = 1274;
export const ERROR_DRIVER_BLOCKED = 1275;
export const ERROR_INVALID_IMPORT_OF_NON_DLL = 1276;
export const ERROR_ACCESS_DISABLED_WEBBLADE = 1277;
export const ERROR_ACCESS_DISABLED_WEBBLADE_TAMPER = 1278;
export const ERROR_RECOVERY_FAILURE = 1279;
export const ERROR_ALREADY_FIBER = 1280;
export const ERROR_ALREADY_THREAD = 1281;
export const ERROR_STACK_BUFFER_OVERRUN = 1282;
export const ERROR_PARAMETER_QUOTA_EXCEEDED = 1283;
export const ERROR_DEBUGGER_INACTIVE = 1284;
export const ERROR_DELAY_LOAD_FAILED = 1285;
export const ERROR_VDM_DISALLOWED = 1286;
export const ERROR_UNIDENTIFIED_ERROR = 1287;
export const ERROR_INVALID_CRUNTIME_PARAMETER = 1288;
export const ERROR_BEYOND_VDL = 1289;
export const ERROR_INCOMPATIBLE_SERVICE_SID_TYPE = 1290;
export const ERROR_DRIVER_PROCESS_TERMINATED = 1291;
export const ERROR_IMPLEMENTATION_LIMIT = 1292;
export const ERROR_PROCESS_IS_PROTECTED = 1293;
export const ERROR_SERVICE_NOTIFY_CLIENT_LAGGING = 1294;
export const ERROR_DISK_QUOTA_EXCEEDED = 1295;
export const ERROR_CONTENT_BLOCKED = 1296;
export const ERROR_INCOMPATIBLE_SERVICE_PRIVILEGE = 1297;
export const ERROR_APP_HANG = 1298;
export const ERROR_INVALID_LABEL = 1299;
export const ERROR_NOT_ALL_ASSIGNED = 1300;
export const ERROR_SOME_NOT_MAPPED = 1301;
export const ERROR_NO_QUOTAS_FOR_ACCOUNT = 1302;
export const ERROR_LOCAL_USER_SESSION_KEY = 1303;
export const ERROR_NULL_LM_PASSWORD = 1304;
export const ERROR_UNKNOWN_REVISION = 1305;
export const ERROR_REVISION_MISMATCH = 1306;
export const ERROR_INVALID_OWNER = 1307;
export const ERROR_INVALID_PRIMARY_GROUP = 1308;
export const ERROR_NO_IMPERSONATION_TOKEN = 1309;
export const ERROR_CANT_DISABLE_MANDATORY = 1310;
export const ERROR_NO_LOGON_SERVERS = 1311;
export const ERROR_NO_SUCH_LOGON_SESSION = 1312;
export const ERROR_NO_SUCH_PRIVILEGE = 1313;
export const ERROR_PRIVILEGE_NOT_HELD = 1314;
export const ERROR_INVALID_ACCOUNT_NAME = 1315;
export const ERROR_USER_EXISTS = 1316;
export const ERROR_NO_SUCH_USER = 1317;
export const ERROR_GROUP_EXISTS = 1318;
export const ERROR_NO_SUCH_GROUP = 1319;
export const ERROR_MEMBER_IN_GROUP = 1320;
export const ERROR_MEMBER_NOT_IN_GROUP = 1321;
export const ERROR_LAST_ADMIN = 1322;
export const ERROR_WRONG_PASSWORD = 1323;
export const ERROR_ILL_FORMED_PASSWORD = 1324;
export const ERROR_PASSWORD_RESTRICTION = 1325;
export const ERROR_LOGON_FAILURE = 1326;
export const ERROR_ACCOUNT_RESTRICTION = 1327;
export const ERROR_INVALID_LOGON_HOURS = 1328;
export const ERROR_INVALID_WORKSTATION = 1329;
export const ERROR_PASSWORD_EXPIRED = 1330;
export const ERROR_ACCOUNT_DISABLED = 1331;
export const ERROR_NONE_MAPPED = 1332;
export const ERROR_TOO_MANY_LUIDS_REQUESTED = 1333;
export const ERROR_LUIDS_EXHAUSTED = 1334;
export const ERROR_INVALID_SUB_AUTHORITY = 1335;
export const ERROR_INVALID_ACL = 1336;
export const ERROR_INVALID_SID = 1337;
export const ERROR_INVALID_SECURITY_DESCR = 1338;
export const ERROR_BAD_INHERITANCE_ACL = 1340;
export const ERROR_SERVER_DISABLED = 1341;
export const ERROR_SERVER_NOT_DISABLED = 1342;
export const ERROR_INVALID_ID_AUTHORITY = 1343;
export const ERROR_ALLOTTED_SPACE_EXCEEDED = 1344;
export const ERROR_INVALID_GROUP_ATTRIBUTES = 1345;
export const ERROR_BAD_IMPERSONATION_LEVEL = 1346;
export const ERROR_CANT_OPEN_ANONYMOUS = 1347;
export const ERROR_BAD_VALIDATION_CLASS = 1348;
export const ERROR_BAD_TOKEN_TYPE = 1349;
export const ERROR_NO_SECURITY_ON_OBJECT = 1350;
export const ERROR_CANT_ACCESS_DOMAIN_INFO = 1351;
export const ERROR_INVALID_SERVER_STATE = 1352;
export const ERROR_INVALID_DOMAIN_STATE = 1353;
export const ERROR_INVALID_DOMAIN_ROLE = 1354;
export const ERROR_NO_SUCH_DOMAIN = 1355;
export const ERROR_DOMAIN_EXISTS = 1356;
export const ERROR_DOMAIN_LIMIT_EXCEEDED = 1357;
export const ERROR_INTERNAL_DB_CORRUPTION = 1358;
export const ERROR_INTERNAL_ERROR = 1359;
export const ERROR_GENERIC_NOT_MAPPED = 1360;
export const ERROR_BAD_DESCRIPTOR_FORMAT = 1361;
export const ERROR_NOT_LOGON_PROCESS = 1362;
export const ERROR_LOGON_SESSION_EXISTS = 1363;
export const ERROR_NO_SUCH_PACKAGE = 1364;
export const ERROR_BAD_LOGON_SESSION_STATE = 1365;
export const ERROR_LOGON_SESSION_COLLISION = 1366;
export const ERROR_INVALID_LOGON_TYPE = 1367;
export const ERROR_CANNOT_IMPERSONATE = 1368;
export const ERROR_RXACT_INVALID_STATE = 1369;
export const ERROR_RXACT_COMMIT_FAILURE = 1370;
export const ERROR_SPECIAL_ACCOUNT = 1371;
export const ERROR_SPECIAL_GROUP = 1372;
export const ERROR_SPECIAL_USER = 1373;
export const ERROR_MEMBERS_PRIMARY_GROUP = 1374;
export const ERROR_TOKEN_ALREADY_IN_USE = 1375;
export const ERROR_NO_SUCH_ALIAS = 1376;
export const ERROR_MEMBER_NOT_IN_ALIAS = 1377;
export const ERROR_MEMBER_IN_ALIAS = 1378;
export const ERROR_ALIAS_EXISTS = 1379;
export const ERROR_LOGON_NOT_GRANTED = 1380;
export const ERROR_TOO_MANY_SECRETS = 1381;
export const ERROR_SECRET_TOO_LONG = 1382;
export const ERROR_INTERNAL_DB_ERROR = 1383;
export const ERROR_TOO_MANY_CONTEXT_IDS = 1384;
export const ERROR_LOGON_TYPE_NOT_GRANTED = 1385;
export const ERROR_NT_CROSS_ENCRYPTION_REQUIRED = 1386;
export const ERROR_NO_SUCH_MEMBER = 1387;
export const ERROR_INVALID_MEMBER = 1388;
export const ERROR_TOO_MANY_SIDS = 1389;
export const ERROR_LM_CROSS_ENCRYPTION_REQUIRED = 1390;
export const ERROR_NO_INHERITANCE = 1391;
export const ERROR_FILE_CORRUPT = 1392;
export const ERROR_DISK_CORRUPT = 1393;
export const ERROR_NO_USER_SESSION_KEY = 1394;
export const ERROR_LICENSE_QUOTA_EXCEEDED = 1395;
export const ERROR_WRONG_TARGET_NAME = 1396;
export const ERROR_MUTUAL_AUTH_FAILED = 1397;
export const ERROR_TIME_SKEW = 1398;
export const ERROR_CURRENT_DOMAIN_NOT_ALLOWED = 1399;
export const ERROR_INVALID_WINDOW_HANDLE = 1400;
export const ERROR_INVALID_MENU_HANDLE = 1401;
export const ERROR_INVALID_CURSOR_HANDLE = 1402;
export const ERROR_INVALID_ACCEL_HANDLE = 1403;
export const ERROR_INVALID_HOOK_HANDLE = 1404;
export const ERROR_INVALID_DWP_HANDLE = 1405;
export const ERROR_TLW_WITH_WSCHILD = 1406;
export const ERROR_CANNOT_FIND_WND_CLASS = 1407;
export const ERROR_WINDOW_OF_OTHER_THREAD = 1408;
export const ERROR_HOTKEY_ALREADY_REGISTERED = 1409;
export const ERROR_CLASS_ALREADY_EXISTS = 1410;
export const ERROR_CLASS_DOES_NOT_EXIST = 1411;
export const ERROR_CLASS_HAS_WINDOWS = 1412;
export const ERROR_INVALID_INDEX = 1413;
export const ERROR_INVALID_ICON_HANDLE = 1414;
export const ERROR_PRIVATE_DIALOG_INDEX = 1415;
export const ERROR_LISTBOX_ID_NOT_FOUND = 1416;
export const ERROR_NO_WILDCARD_CHARACTERS = 1417;
export const ERROR_CLIPBOARD_NOT_OPEN = 1418;
export const ERROR_HOTKEY_NOT_REGISTERED = 1419;
export const ERROR_WINDOW_NOT_DIALOG = 1420;
export const ERROR_CONTROL_ID_NOT_FOUND = 1421;
export const ERROR_INVALID_COMBOBOX_MESSAGE = 1422;
export const ERROR_WINDOW_NOT_COMBOBOX = 1423;
export const ERROR_INVALID_EDIT_HEIGHT = 1424;
export const ERROR_DC_NOT_FOUND = 1425;
export const ERROR_INVALID_HOOK_FILTER = 1426;
export const ERROR_INVALID_FILTER_PROC = 1427;
export const ERROR_HOOK_NEEDS_HMOD = 1428;
export const ERROR_GLOBAL_ONLY_HOOK = 1429;
export const ERROR_JOURNAL_HOOK_SET = 1430;
export const ERROR_HOOK_NOT_INSTALLED = 1431;
export const ERROR_INVALID_LB_MESSAGE = 1432;
export const ERROR_SETCOUNT_ON_BAD_LB = 1433;
export const ERROR_LB_WITHOUT_TABSTOPS = 1434;
export const ERROR_DESTROY_OBJECT_OF_OTHER_THREAD = 1435;
export const ERROR_CHILD_WINDOW_MENU = 1436;
export const ERROR_NO_SYSTEM_MENU = 1437;
export const ERROR_INVALID_MSGBOX_STYLE = 1438;
export const ERROR_INVALID_SPI_VALUE = 1439;
export const ERROR_SCREEN_ALREADY_LOCKED = 1440;
export const ERROR_HWNDS_HAVE_DIFF_PARENT = 1441;
export const ERROR_NOT_CHILD_WINDOW = 1442;
export const ERROR_INVALID_GW_COMMAND = 1443;
export const ERROR_INVALID_THREAD_ID = 1444;
export const ERROR_NON_MDICHILD_WINDOW = 1445;
export const ERROR_POPUP_ALREADY_ACTIVE = 1446;
export const ERROR_NO_SCROLLBARS = 1447;
export const ERROR_INVALID_SCROLLBAR_RANGE = 1448;
export const ERROR_INVALID_SHOWWIN_COMMAND = 1449;
export const ERROR_NO_SYSTEM_RESOURCES = 1450;
export const ERROR_NONPAGED_SYSTEM_RESOURCES = 1451;
export const ERROR_PAGED_SYSTEM_RESOURCES = 1452;
export const ERROR_WORKING_SET_QUOTA = 1453;
export const ERROR_PAGEFILE_QUOTA = 1454;
export const ERROR_COMMITMENT_LIMIT = 1455;
export const ERROR_MENU_ITEM_NOT_FOUND = 1456;
export const ERROR_INVALID_KEYBOARD_HANDLE = 1457;
export const ERROR_HOOK_TYPE_NOT_ALLOWED = 1458;
export const ERROR_REQUIRES_INTERACTIVE_WINDOWSTATION = 1459;
export const ERROR_TIMEOUT = 1460;
export const ERROR_INVALID_MONITOR_HANDLE = 1461;
export const ERROR_INCORRECT_SIZE = 1462;
export const ERROR_SYMLINK_CLASS_DISABLED = 1463;
export const ERROR_SYMLINK_NOT_SUPPORTED = 1464;
export const ERROR_XML_PARSE_ERROR = 1465;
export const ERROR_XMLDSIG_ERROR = 1466;
export const ERROR_RESTART_APPLICATION = 1467;
export const ERROR_WRONG_COMPARTMENT = 1468;
export const ERROR_AUTHIP_FAILURE = 1469;
export const ERROR_NO_NVRAM_RESOURCES = 1470;
export const ERROR_NOT_GUI_PROCESS = 1471;
export const ERROR_EVENTLOG_FILE_CORRUPT = 1500;
export const ERROR_EVENTLOG_CANT_START = 1501;
export const ERROR_LOG_FILE_FULL = 1502;
export const ERROR_EVENTLOG_FILE_CHANGED = 1503;
export const ERROR_CONTAINER_ASSIGNED = 1504;
export const ERROR_JOB_NO_CONTAINER = 1505;
export const ERROR_INVALID_TASK_NAME = 1550;
export const ERROR_INVALID_TASK_INDEX = 1551;
export const ERROR_THREAD_ALREADY_IN_TASK = 1552;
export const ERROR_INSTALL_SERVICE_FAILURE = 1601;
export const ERROR_INSTALL_USEREXIT = 1602;
export const ERROR_INSTALL_FAILURE = 1603;
export const ERROR_INSTALL_SUSPEND = 1604;
export const ERROR_UNKNOWN_PRODUCT = 1605;
export const ERROR_UNKNOWN_FEATURE = 1606;
export const ERROR_UNKNOWN_COMPONENT = 1607;
export const ERROR_UNKNOWN_PROPERTY = 1608;
export const ERROR_INVALID_HANDLE_STATE = 1609;
export const ERROR_BAD_CONFIGURATION = 1610;
export const ERROR_INDEX_ABSENT = 1611;
export const ERROR_INSTALL_SOURCE_ABSENT = 1612;
export const ERROR_INSTALL_PACKAGE_VERSION = 1613;
export const ERROR_PRODUCT_UNINSTALLED = 1614;
export const ERROR_BAD_QUERY_SYNTAX = 1615;
export const ERROR_INVALID_FIELD = 1616;
export const ERROR_DEVICE_REMOVED = 1617;
export const ERROR_INSTALL_ALREADY_RUNNING = 1618;
export const ERROR_INSTALL_PACKAGE_OPEN_FAILED = 1619;
export const ERROR_INSTALL_PACKAGE_INVALID = 1620;
export const ERROR_INSTALL_UI_FAILURE = 1621;
export const ERROR_INSTALL_LOG_FAILURE = 1622;
export const ERROR_INSTALL_LANGUAGE_UNSUPPORTED = 1623;
export const ERROR_INSTALL_TRANSFORM_FAILURE = 1624;
export const ERROR_INSTALL_PACKAGE_REJECTED = 1625;
export const ERROR_FUNCTION_NOT_CALLED = 1626;
export const ERROR_FUNCTION_FAILED = 1627;
export const ERROR_INVALID_TABLE = 1628;
export const ERROR_DATATYPE_MISMATCH = 1629;
export const ERROR_UNSUPPORTED_TYPE = 1630;
export const ERROR_CREATE_FAILED = 1631;
export const ERROR_INSTALL_TEMP_UNWRITABLE = 1632;
export const ERROR_INSTALL_PLATFORM_UNSUPPORTED = 1633;
export const ERROR_INSTALL_NOTUSED = 1634;
export const ERROR_PATCH_PACKAGE_OPEN_FAILED = 1635;
export const ERROR_PATCH_PACKAGE_INVALID = 1636;
export const ERROR_PATCH_PACKAGE_UNSUPPORTED = 1637;
export const ERROR_PRODUCT_VERSION = 1638;
export const ERROR_INVALID_COMMAND_LINE = 1639;
export const ERROR_INSTALL_REMOTE_DISALLOWED = 1640;
export const ERROR_SUCCESS_REBOOT_INITIATED = 1641;
export const ERROR_PATCH_TARGET_NOT_FOUND = 1642;
export const ERROR_PATCH_PACKAGE_REJECTED = 1643;
export const ERROR_INSTALL_TRANSFORM_REJECTED = 1644;
export const ERROR_INSTALL_REMOTE_PROHIBITED = 1645;
export const ERROR_PATCH_REMOVAL_UNSUPPORTED = 1646;
export const ERROR_UNKNOWN_PATCH = 1647;
export const ERROR_PATCH_NO_SEQUENCE = 1648;
export const ERROR_PATCH_REMOVAL_DISALLOWED = 1649;
export const ERROR_INVALID_PATCH_XML = 1650;
export const ERROR_PATCH_MANAGED_ADVERTISED_PRODUCT = 1651;
export const ERROR_INSTALL_SERVICE_SAFEBOOT = 1652;
export const ERROR_FAIL_FAST_EXCEPTION = 1653;
export const ERROR_INSTALL_REJECTED = 1654;
export const ERROR_DYNAMIC_CODE_BLOCKED = 1655;
export const ERROR_NOT_SAME_OBJECT = 1656;
export const ERROR_STRICT_CFG_VIOLATION = 1657;
export const ERROR_SET_CONTEXT_DENIED = 1660;
export const ERROR_CROSS_PARTITION_VIOLATION = 1661;
export const ERROR_RETURN_ADDRESS_HIJACK_ATTEMPT = 1662;
export const ERROR_INVALID_USER_BUFFER = 1784;
export const ERROR_UNRECOGNIZED_MEDIA = 1785;
export const ERROR_NO_TRUST_LSA_SECRET = 1786;
export const ERROR_NO_TRUST_SAM_ACCOUNT = 1787;
export const ERROR_TRUSTED_DOMAIN_FAILURE = 1788;
export const ERROR_TRUSTED_RELATIONSHIP_FAILURE = 1789;
export const ERROR_TRUST_FAILURE = 1790;
export const ERROR_NETLOGON_NOT_STARTED = 1792;
export const ERROR_ACCOUNT_EXPIRED = 1793;
export const ERROR_REDIRECTOR_HAS_OPEN_HANDLES = 1794;
export const ERROR_PRINTER_DRIVER_ALREADY_INSTALLED = 1795;
export const ERROR_UNKNOWN_PORT = 1796;
export const ERROR_UNKNOWN_PRINTER_DRIVER = 1797;
export const ERROR_UNKNOWN_PRINTPROCESSOR = 1798;
export const ERROR_INVALID_SEPARATOR_FILE = 1799;
export const ERROR_INVALID_PRIORITY = 1800;
export const ERROR_INVALID_PRINTER_NAME = 1801;
export const ERROR_PRINTER_ALREADY_EXISTS = 1802;
export const ERROR_INVALID_PRINTER_COMMAND = 1803;
export const ERROR_INVALID_DATATYPE = 1804;
export const ERROR_INVALID_ENVIRONMENT = 1805;
export const ERROR_NOLOGON_INTERDOMAIN_TRUST_ACCOUNT = 1807;
export const ERROR_NOLOGON_WORKSTATION_TRUST_ACCOUNT = 1808;
export const ERROR_NOLOGON_SERVER_TRUST_ACCOUNT = 1809;
export const ERROR_DOMAIN_TRUST_INCONSISTENT = 1810;
export const ERROR_SERVER_HAS_OPEN_HANDLES = 1811;
export const ERROR_RESOURCE_DATA_NOT_FOUND = 1812;
export const ERROR_RESOURCE_TYPE_NOT_FOUND = 1813;
export const ERROR_RESOURCE_NAME_NOT_FOUND = 1814;
export const ERROR_RESOURCE_LANG_NOT_FOUND = 1815;
export const ERROR_NOT_ENOUGH_QUOTA = 1816;
export const ERROR_INVALID_TIME = 1901;
export const ERROR_INVALID_FORM_NAME = 1902;
export const ERROR_INVALID_FORM_SIZE = 1903;
export const ERROR_ALREADY_WAITING = 1904;
export const ERROR_PRINTER_DELETED = 1905;
export const ERROR_INVALID_PRINTER_STATE = 1906;
export const ERROR_PASSWORD_MUST_CHANGE = 1907;
export const ERROR_DOMAIN_CONTROLLER_NOT_FOUND = 1908;
export const ERROR_ACCOUNT_LOCKED_OUT = 1909;
export const ERROR_NO_SITENAME = 1919;
export const ERROR_CANT_ACCESS_FILE = 1920;
export const ERROR_CANT_RESOLVE_FILENAME = 1921;
export const ERROR_KM_DRIVER_BLOCKED = 1930;
export const ERROR_CONTEXT_EXPIRED = 1931;
export const ERROR_PER_USER_TRUST_QUOTA_EXCEEDED = 1932;
export const ERROR_ALL_USER_TRUST_QUOTA_EXCEEDED = 1933;
export const ERROR_USER_DELETE_TRUST_QUOTA_EXCEEDED = 1934;
export const ERROR_AUTHENTICATION_FIREWALL_FAILED = 1935;
export const ERROR_REMOTE_PRINT_CONNECTIONS_BLOCKED = 1936;
export const ERROR_NTLM_BLOCKED = 1937;
export const ERROR_PASSWORD_CHANGE_REQUIRED = 1938;
export const ERROR_LOST_MODE_LOGON_RESTRICTION = 1939;
export const ERROR_INVALID_PIXEL_FORMAT = 2000;
export const ERROR_BAD_DRIVER = 2001;
export const ERROR_INVALID_WINDOW_STYLE = 2002;
export const ERROR_METAFILE_NOT_SUPPORTED = 2003;
export const ERROR_TRANSFORM_NOT_SUPPORTED = 2004;
export const ERROR_CLIPPING_NOT_SUPPORTED = 2005;
export const ERROR_INVALID_CMM = 2010;
export const ERROR_INVALID_PROFILE = 2011;
export const ERROR_TAG_NOT_FOUND = 2012;
export const ERROR_TAG_NOT_PRESENT = 2013;
export const ERROR_DUPLICATE_TAG = 2014;
export const ERROR_PROFILE_NOT_ASSOCIATED_WITH_DEVICE = 2015;
export const ERROR_PROFILE_NOT_FOUND = 2016;
export const ERROR_INVALID_COLORSPACE = 2017;
export const ERROR_ICM_NOT_ENABLED = 2018;
export const ERROR_DELETING_ICM_XFORM = 2019;
export const ERROR_INVALID_TRANSFORM = 2020;
export const ERROR_COLORSPACE_MISMATCH = 2021;
export const ERROR_INVALID_COLORINDEX = 2022;
export const ERROR_PROFILE_DOES_NOT_MATCH_DEVICE = 2023;
export const ERROR_CONNECTED_OTHER_PASSWORD = 2108;
export const ERROR_CONNECTED_OTHER_PASSWORD_DEFAULT = 2109;
export const ERROR_BAD_USERNAME = 2202;
export const ERROR_NOT_CONNECTED = 2250;
export const ERROR_OPEN_FILES = 2401;
export const ERROR_ACTIVE_CONNECTIONS = 2402;
export const ERROR_DEVICE_IN_USE = 2404;
export const ERROR_UNKNOWN_PRINT_MONITOR = 3000;
export const ERROR_PRINTER_DRIVER_IN_USE = 3001;
export const ERROR_SPOOL_FILE_NOT_FOUND = 3002;
export const ERROR_SPL_NO_STARTDOC = 3003;
export const ERROR_SPL_NO_ADDJOB = 3004;
export const ERROR_PRINT_PROCESSOR_ALREADY_INSTALLED = 3005;
export const ERROR_PRINT_MONITOR_ALREADY_INSTALLED = 3006;
export const ERROR_INVALID_PRINT_MONITOR = 3007;
export const ERROR_PRINT_MONITOR_IN_USE = 3008;
export const ERROR_PRINTER_HAS_JOBS_QUEUED = 3009;
export const ERROR_SUCCESS_REBOOT_REQUIRED = 3010;
export const ERROR_SUCCESS_RESTART_REQUIRED = 3011;
export const ERROR_PRINTER_NOT_FOUND = 3012;
export const ERROR_PRINTER_DRIVER_WARNED = 3013;
export const ERROR_PRINTER_DRIVER_BLOCKED = 3014;
export const ERROR_PRINTER_DRIVER_PACKAGE_IN_USE = 3015;
export const ERROR_CORE_DRIVER_PACKAGE_NOT_FOUND = 3016;
export const ERROR_FAIL_REBOOT_REQUIRED = 3017;
export const ERROR_FAIL_REBOOT_INITIATED = 3018;
export const ERROR_PRINTER_DRIVER_DOWNLOAD_NEEDED = 3019;
export const ERROR_PRINT_JOB_RESTART_REQUIRED = 3020;
export const ERROR_INVALID_PRINTER_DRIVER_MANIFEST = 3021;
export const ERROR_PRINTER_NOT_SHAREABLE = 3022;
export const ERROR_REQUEST_PAUSED = 3050;
export const ERROR_APPEXEC_CONDITION_NOT_SATISFIED = 3060;
export const ERROR_APPEXEC_HANDLE_INVALIDATED = 3061;
export const ERROR_APPEXEC_INVALID_HOST_GENERATION = 3062;
export const ERROR_APPEXEC_UNEXPECTED_PROCESS_REGISTRATION = 3063;
export const ERROR_APPEXEC_INVALID_HOST_STATE = 3064;
export const ERROR_APPEXEC_NO_DONOR = 3065;
export const ERROR_APPEXEC_HOST_ID_MISMATCH = 3066;
export const ERROR_APPEXEC_UNKNOWN_USER = 3067;
export const ERROR_APPEXEC_APP_COMPAT_BLOCK = 3068;
export const ERROR_APPEXEC_CALLER_WAIT_TIMEOUT = 3069;
export const ERROR_APPEXEC_CALLER_WAIT_TIMEOUT_TERMINATION = 3070;
export const ERROR_APPEXEC_CALLER_WAIT_TIMEOUT_LICENSING = 3071;
export const ERROR_APPEXEC_CALLER_WAIT_TIMEOUT_RESOURCES = 3072;
export const ERROR_VRF_VOLATILE_CFG_AND_IO_ENABLED = 3080;
export const ERROR_VRF_VOLATILE_NOT_STOPPABLE = 3081;
export const ERROR_VRF_VOLATILE_SAFE_MODE = 3082;
export const ERROR_VRF_VOLATILE_NOT_RUNNABLE_SYSTEM = 3083;
export const ERROR_VRF_VOLATILE_NOT_SUPPORTED_RULECLASS = 3084;
export const ERROR_VRF_VOLATILE_PROTECTED_DRIVER = 3085;
export const ERROR_VRF_VOLATILE_NMI_REGISTERED = 3086;
export const ERROR_VRF_VOLATILE_SETTINGS_CONFLICT = 3087;
export const ERROR_DIF_IOCALLBACK_NOT_REPLACED = 3190;
export const ERROR_DIF_LIVEDUMP_LIMIT_EXCEEDED = 3191;
export const ERROR_DIF_VOLATILE_SECTION_NOT_LOCKED = 3192;
export const ERROR_DIF_VOLATILE_DRIVER_HOTPATCHED = 3193;
export const ERROR_DIF_VOLATILE_INVALID_INFO = 3194;
export const ERROR_DIF_VOLATILE_DRIVER_IS_NOT_RUNNING = 3195;
export const ERROR_DIF_VOLATILE_PLUGIN_IS_NOT_RUNNING = 3196;
export const ERROR_DIF_VOLATILE_PLUGIN_CHANGE_NOT_ALLOWED = 3197;
export const ERROR_DIF_VOLATILE_NOT_ALLOWED = 3198;
export const ERROR_DIF_BINDING_API_NOT_FOUND = 3199;
export const ERROR_IO_REISSUE_AS_CACHED = 3950;
export const ERROR_WINS_INTERNAL = 4000;
export const ERROR_CAN_NOT_DEL_LOCAL_WINS = 4001;
export const ERROR_STATIC_INIT = 4002;
export const ERROR_INC_BACKUP = 4003;
export const ERROR_FULL_BACKUP = 4004;
export const ERROR_REC_NON_EXISTENT = 4005;
export const ERROR_RPL_NOT_ALLOWED = 4006;
export const ERROR_DHCP_ADDRESS_CONFLICT = 4100;
export const ERROR_WMI_GUID_NOT_FOUND = 4200;
export const ERROR_WMI_INSTANCE_NOT_FOUND = 4201;
export const ERROR_WMI_ITEMID_NOT_FOUND = 4202;
export const ERROR_WMI_TRY_AGAIN = 4203;
export const ERROR_WMI_DP_NOT_FOUND = 4204;
export const ERROR_WMI_UNRESOLVED_INSTANCE_REF = 4205;
export const ERROR_WMI_ALREADY_ENABLED = 4206;
export const ERROR_WMI_GUID_DISCONNECTED = 4207;
export const ERROR_WMI_SERVER_UNAVAILABLE = 4208;
export const ERROR_WMI_DP_FAILED = 4209;
export const ERROR_WMI_INVALID_MOF = 4210;
export const ERROR_WMI_INVALID_REGINFO = 4211;
export const ERROR_WMI_ALREADY_DISABLED = 4212;
export const ERROR_WMI_READ_ONLY = 4213;
export const ERROR_WMI_SET_FAILURE = 4214;
export const ERROR_NOT_APPCONTAINER = 4250;
export const ERROR_APPCONTAINER_REQUIRED = 4251;
export const ERROR_NOT_SUPPORTED_IN_APPCONTAINER = 4252;
export const ERROR_INVALID_PACKAGE_SID_LENGTH = 4253;
export const ERROR_INVALID_MEDIA = 4300;
export const ERROR_INVALID_LIBRARY = 4301;
export const ERROR_INVALID_MEDIA_POOL = 4302;
export const ERROR_DRIVE_MEDIA_MISMATCH = 4303;
export const ERROR_MEDIA_OFFLINE = 4304;
export const ERROR_LIBRARY_OFFLINE = 4305;
export const ERROR_EMPTY = 4306;
export const ERROR_NOT_EMPTY = 4307;
export const ERROR_MEDIA_UNAVAILABLE = 4308;
export const ERROR_RESOURCE_DISABLED = 4309;
export const ERROR_INVALID_CLEANER = 4310;
export const ERROR_UNABLE_TO_CLEAN = 4311;
export const ERROR_OBJECT_NOT_FOUND = 4312;
export const ERROR_DATABASE_FAILURE = 4313;
export const ERROR_DATABASE_FULL = 4314;
export const ERROR_MEDIA_INCOMPATIBLE = 4315;
export const ERROR_RESOURCE_NOT_PRESENT = 4316;
export const ERROR_INVALID_OPERATION = 4317;
export const ERROR_MEDIA_NOT_AVAILABLE = 4318;
export const ERROR_DEVICE_NOT_AVAILABLE = 4319;
export const ERROR_REQUEST_REFUSED = 4320;
export const ERROR_INVALID_DRIVE_OBJECT = 4321;
export const ERROR_LIBRARY_FULL = 4322;
export const ERROR_MEDIUM_NOT_ACCESSIBLE = 4323;
export const ERROR_UNABLE_TO_LOAD_MEDIUM = 4324;
export const ERROR_UNABLE_TO_INVENTORY_DRIVE = 4325;
export const ERROR_UNABLE_TO_INVENTORY_SLOT = 4326;
export const ERROR_UNABLE_TO_INVENTORY_TRANSPORT = 4327;
export const ERROR_TRANSPORT_FULL = 4328;
export const ERROR_CONTROLLING_IEPORT = 4329;
export const ERROR_UNABLE_TO_EJECT_MOUNTED_MEDIA = 4330;
export const ERROR_CLEANER_SLOT_SET = 4331;
export const ERROR_CLEANER_SLOT_NOT_SET = 4332;
export const ERROR_CLEANER_CARTRIDGE_SPENT = 4333;
export const ERROR_UNEXPECTED_OMID = 4334;
export const ERROR_CANT_DELETE_LAST_ITEM = 4335;
export const ERROR_MESSAGE_EXCEEDS_MAX_SIZE = 4336;
export const ERROR_VOLUME_CONTAINS_SYS_FILES = 4337;
export const ERROR_INDIGENOUS_TYPE = 4338;
export const ERROR_NO_SUPPORTING_DRIVES = 4339;
export const ERROR_CLEANER_CARTRIDGE_INSTALLED = 4340;
export const ERROR_IEPORT_FULL = 4341;
export const ERROR_FILE_OFFLINE = 4350;
export const ERROR_REMOTE_STORAGE_NOT_ACTIVE = 4351;
export const ERROR_REMOTE_STORAGE_MEDIA_ERROR = 4352;
export const ERROR_NOT_A_REPARSE_POINT = 4390;
export const ERROR_REPARSE_ATTRIBUTE_CONFLICT = 4391;
export const ERROR_INVALID_REPARSE_DATA = 4392;
export const ERROR_REPARSE_TAG_INVALID = 4393;
export const ERROR_REPARSE_TAG_MISMATCH = 4394;
export const ERROR_REPARSE_POINT_ENCOUNTERED = 4395;
export const ERROR_APP_DATA_NOT_FOUND = 4400;
export const ERROR_APP_DATA_EXPIRED = 4401;
export const ERROR_APP_DATA_CORRUPT = 4402;
export const ERROR_APP_DATA_LIMIT_EXCEEDED = 4403;
export const ERROR_APP_DATA_REBOOT_REQUIRED = 4404;
export const ERROR_SECUREBOOT_ROLLBACK_DETECTED = 4420;
export const ERROR_SECUREBOOT_POLICY_VIOLATION = 4421;
export const ERROR_SECUREBOOT_INVALID_POLICY = 4422;
export const ERROR_SECUREBOOT_POLICY_PUBLISHER_NOT_FOUND = 4423;
export const ERROR_SECUREBOOT_POLICY_NOT_SIGNED = 4424;
export const ERROR_SECUREBOOT_NOT_ENABLED = 4425;
export const ERROR_SECUREBOOT_FILE_REPLACED = 4426;
export const ERROR_SECUREBOOT_POLICY_NOT_AUTHORIZED = 4427;
export const ERROR_SECUREBOOT_POLICY_UNKNOWN = 4428;
export const ERROR_SECUREBOOT_POLICY_MISSING_ANTIROLLBACKVERSION = 4429;
export const ERROR_SECUREBOOT_PLATFORM_ID_MISMATCH = 4430;
export const ERROR_SECUREBOOT_POLICY_ROLLBACK_DETECTED = 4431;
export const ERROR_SECUREBOOT_POLICY_UPGRADE_MISMATCH = 4432;
export const ERROR_SECUREBOOT_REQUIRED_POLICY_FILE_MISSING = 4433;
export const ERROR_SECUREBOOT_NOT_BASE_POLICY = 4434;
export const ERROR_SECUREBOOT_NOT_SUPPLEMENTAL_POLICY = 4435;
export const ERROR_OFFLOAD_READ_FLT_NOT_SUPPORTED = 4440;
export const ERROR_OFFLOAD_WRITE_FLT_NOT_SUPPORTED = 4441;
export const ERROR_OFFLOAD_READ_FILE_NOT_SUPPORTED = 4442;
export const ERROR_OFFLOAD_WRITE_FILE_NOT_SUPPORTED = 4443;
export const ERROR_ALREADY_HAS_STREAM_ID = 4444;
export const ERROR_SMR_GARBAGE_COLLECTION_REQUIRED = 4445;
export const ERROR_WOF_WIM_HEADER_CORRUPT = 4446;
export const ERROR_WOF_WIM_RESOURCE_TABLE_CORRUPT = 4447;
export const ERROR_WOF_FILE_RESOURCE_TABLE_CORRUPT = 4448;
export const ERROR_OBJECT_IS_IMMUTABLE = 4449;
export const ERROR_VOLUME_NOT_SIS_ENABLED = 4500;
export const ERROR_SYSTEM_INTEGRITY_ROLLBACK_DETECTED = 4550;
export const ERROR_SYSTEM_INTEGRITY_POLICY_VIOLATION = 4551;
export const ERROR_SYSTEM_INTEGRITY_INVALID_POLICY = 4552;
export const ERROR_SYSTEM_INTEGRITY_POLICY_NOT_SIGNED = 4553;
export const ERROR_SYSTEM_INTEGRITY_TOO_MANY_POLICIES = 4554;
export const ERROR_SYSTEM_INTEGRITY_SUPPLEMENTAL_POLICY_NOT_AUTHORIZED = 4555;
export const ERROR_SYSTEM_INTEGRITY_REPUTATION_MALICIOUS = 4556;
export const ERROR_SYSTEM_INTEGRITY_REPUTATION_PUA = 4557;
export const ERROR_SYSTEM_INTEGRITY_REPUTATION_DANGEROUS_EXT = 4558;
export const ERROR_SYSTEM_INTEGRITY_REPUTATION_OFFLINE = 4559;
export const ERROR_VSM_NOT_INITIALIZED = 4560;
export const ERROR_VSM_DMA_PROTECTION_NOT_IN_USE = 4561;
export const ERROR_PLATFORM_MANIFEST_NOT_AUTHORIZED = 4570;
export const ERROR_PLATFORM_MANIFEST_INVALID = 4571;
export const ERROR_PLATFORM_MANIFEST_FILE_NOT_AUTHORIZED = 4572;
export const ERROR_PLATFORM_MANIFEST_CATALOG_NOT_AUTHORIZED = 4573;
export const ERROR_PLATFORM_MANIFEST_BINARY_ID_NOT_FOUND = 4574;
export const ERROR_PLATFORM_MANIFEST_NOT_ACTIVE = 4575;
export const ERROR_PLATFORM_MANIFEST_NOT_SIGNED = 4576;
export const ERROR_DEPENDENT_RESOURCE_EXISTS = 5001;
export const ERROR_DEPENDENCY_NOT_FOUND = 5002;
export const ERROR_DEPENDENCY_ALREADY_EXISTS = 5003;
export const ERROR_RESOURCE_NOT_ONLINE = 5004;
export const ERROR_HOST_NODE_NOT_AVAILABLE = 5005;
export const ERROR_RESOURCE_NOT_AVAILABLE = 5006;
export const ERROR_RESOURCE_NOT_FOUND = 5007;
export const ERROR_SHUTDOWN_CLUSTER = 5008;
export const ERROR_CANT_EVICT_ACTIVE_NODE = 5009;
export const ERROR_OBJECT_ALREADY_EXISTS = 5010;
export const ERROR_OBJECT_IN_LIST = 5011;
export const ERROR_GROUP_NOT_AVAILABLE = 5012;
export const ERROR_GROUP_NOT_FOUND = 5013;
export const ERROR_GROUP_NOT_ONLINE = 5014;
export const ERROR_HOST_NODE_NOT_RESOURCE_OWNER = 5015;
export const ERROR_HOST_NODE_NOT_GROUP_OWNER = 5016;
export const ERROR_RESMON_CREATE_FAILED = 5017;
export const ERROR_RESMON_ONLINE_FAILED = 5018;
export const ERROR_RESOURCE_ONLINE = 5019;
export const ERROR_QUORUM_RESOURCE = 5020;
export const ERROR_NOT_QUORUM_CAPABLE = 5021;
export const ERROR_CLUSTER_SHUTTING_DOWN = 5022;
export const ERROR_INVALID_STATE = 5023;
export const ERROR_RESOURCE_PROPERTIES_STORED = 5024;
export const ERROR_NOT_QUORUM_CLASS = 5025;
export const ERROR_CORE_RESOURCE = 5026;
export const ERROR_QUORUM_RESOURCE_ONLINE_FAILED = 5027;
export const ERROR_QUORUMLOG_OPEN_FAILED = 5028;
export const ERROR_CLUSTERLOG_CORRUPT = 5029;
export const ERROR_CLUSTERLOG_RECORD_EXCEEDS_MAXSIZE = 5030;
export const ERROR_CLUSTERLOG_EXCEEDS_MAXSIZE = 5031;
export const ERROR_CLUSTERLOG_CHKPOINT_NOT_FOUND = 5032;
export const ERROR_CLUSTERLOG_NOT_ENOUGH_SPACE = 5033;
export const ERROR_QUORUM_OWNER_ALIVE = 5034;
export const ERROR_NETWORK_NOT_AVAILABLE = 5035;
export const ERROR_NODE_NOT_AVAILABLE = 5036;
export const ERROR_ALL_NODES_NOT_AVAILABLE = 5037;
export const ERROR_RESOURCE_FAILED = 5038;
export const ERROR_CLUSTER_INVALID_NODE = 5039;
export const ERROR_CLUSTER_NODE_EXISTS = 5040;
export const ERROR_CLUSTER_JOIN_IN_PROGRESS = 5041;
export const ERROR_CLUSTER_NODE_NOT_FOUND = 5042;
export const ERROR_CLUSTER_LOCAL_NODE_NOT_FOUND = 5043;
export const ERROR_CLUSTER_NETWORK_EXISTS = 5044;
export const ERROR_CLUSTER_NETWORK_NOT_FOUND = 5045;
export const ERROR_CLUSTER_NETINTERFACE_EXISTS = 5046;
export const ERROR_CLUSTER_NETINTERFACE_NOT_FOUND = 5047;
export const ERROR_CLUSTER_INVALID_REQUEST = 5048;
export const ERROR_CLUSTER_INVALID_NETWORK_PROVIDER = 5049;
export const ERROR_CLUSTER_NODE_DOWN = 5050;
export const ERROR_CLUSTER_NODE_UNREACHABLE = 5051;
export const ERROR_CLUSTER_NODE_NOT_MEMBER = 5052;
export const ERROR_CLUSTER_JOIN_NOT_IN_PROGRESS = 5053;
export const ERROR_CLUSTER_INVALID_NETWORK = 5054;
export const ERROR_CLUSTER_NODE_UP = 5056;
export const ERROR_CLUSTER_IPADDR_IN_USE = 5057;
export const ERROR_CLUSTER_NODE_NOT_PAUSED = 5058;
export const ERROR_CLUSTER_NO_SECURITY_CONTEXT = 5059;
export const ERROR_CLUSTER_NETWORK_NOT_INTERNAL = 5060;
export const ERROR_CLUSTER_NODE_ALREADY_UP = 5061;
export const ERROR_CLUSTER_NODE_ALREADY_DOWN = 5062;
export const ERROR_CLUSTER_NETWORK_ALREADY_ONLINE = 5063;
export const ERROR_CLUSTER_NETWORK_ALREADY_OFFLINE = 5064;
export const ERROR_CLUSTER_NODE_ALREADY_MEMBER = 5065;
export const ERROR_CLUSTER_LAST_INTERNAL_NETWORK = 5066;
export const ERROR_CLUSTER_NETWORK_HAS_DEPENDENTS = 5067;
export const ERROR_INVALID_OPERATION_ON_QUORUM = 5068;
export const ERROR_DEPENDENCY_NOT_ALLOWED = 5069;
export const ERROR_CLUSTER_NODE_PAUSED = 5070;
export const ERROR_NODE_CANT_HOST_RESOURCE = 5071;
export const ERROR_CLUSTER_NODE_NOT_READY = 5072;
export const ERROR_CLUSTER_NODE_SHUTTING_DOWN = 5073;
export const ERROR_CLUSTER_JOIN_ABORTED = 5074;
export const ERROR_CLUSTER_INCOMPATIBLE_VERSIONS = 5075;
export const ERROR_CLUSTER_MAXNUM_OF_RESOURCES_EXCEEDED = 5076;
export const ERROR_CLUSTER_SYSTEM_CONFIG_CHANGED = 5077;
export const ERROR_CLUSTER_RESOURCE_TYPE_NOT_FOUND = 5078;
export const ERROR_CLUSTER_RESTYPE_NOT_SUPPORTED = 5079;
export const ERROR_CLUSTER_RESNAME_NOT_FOUND = 5080;
export const ERROR_CLUSTER_NO_RPC_PACKAGES_REGISTERED = 5081;
export const ERROR_CLUSTER_OWNER_NOT_IN_PREFLIST = 5082;
export const ERROR_CLUSTER_DATABASE_SEQMISMATCH = 5083;
export const ERROR_RESMON_INVALID_STATE = 5084;
export const ERROR_CLUSTER_GUM_NOT_LOCKER = 5085;
export const ERROR_QUORUM_DISK_NOT_FOUND = 5086;
export const ERROR_DATABASE_BACKUP_CORRUPT = 5087;
export const ERROR_CLUSTER_NODE_ALREADY_HAS_DFS_ROOT = 5088;
export const ERROR_RESOURCE_PROPERTY_UNCHANGEABLE = 5089;
export const ERROR_NO_ADMIN_ACCESS_POINT = 5090;
export const ERROR_CLUSTER_MEMBERSHIP_INVALID_STATE = 5890;
export const ERROR_CLUSTER_QUORUMLOG_NOT_FOUND = 5891;
export const ERROR_CLUSTER_MEMBERSHIP_HALT = 5892;
export const ERROR_CLUSTER_INSTANCE_ID_MISMATCH = 5893;
export const ERROR_CLUSTER_NETWORK_NOT_FOUND_FOR_IP = 5894;
export const ERROR_CLUSTER_PROPERTY_DATA_TYPE_MISMATCH = 5895;
export const ERROR_CLUSTER_EVICT_WITHOUT_CLEANUP = 5896;
export const ERROR_CLUSTER_PARAMETER_MISMATCH = 5897;
export const ERROR_NODE_CANNOT_BE_CLUSTERED = 5898;
export const ERROR_CLUSTER_WRONG_OS_VERSION = 5899;
export const ERROR_CLUSTER_CANT_CREATE_DUP_CLUSTER_NAME = 5900;
export const ERROR_CLUSCFG_ALREADY_COMMITTED = 5901;
export const ERROR_CLUSCFG_ROLLBACK_FAILED = 5902;
export const ERROR_CLUSCFG_SYSTEM_DISK_DRIVE_LETTER_CONFLICT = 5903;
export const ERROR_CLUSTER_OLD_VERSION = 5904;
export const ERROR_CLUSTER_MISMATCHED_COMPUTER_ACCT_NAME = 5905;
export const ERROR_CLUSTER_NO_NET_ADAPTERS = 5906;
export const ERROR_CLUSTER_POISONED = 5907;
export const ERROR_CLUSTER_GROUP_MOVING = 5908;
export const ERROR_CLUSTER_RESOURCE_TYPE_BUSY = 5909;
export const ERROR_RESOURCE_CALL_TIMED_OUT = 5910;
export const ERROR_INVALID_CLUSTER_IPV6_ADDRESS = 5911;
export const ERROR_CLUSTER_INTERNAL_INVALID_FUNCTION = 5912;
export const ERROR_CLUSTER_PARAMETER_OUT_OF_BOUNDS = 5913;
export const ERROR_CLUSTER_PARTIAL_SEND = 5914;
export const ERROR_CLUSTER_REGISTRY_INVALID_FUNCTION = 5915;
export const ERROR_CLUSTER_INVALID_STRING_TERMINATION = 5916;
export const ERROR_CLUSTER_INVALID_STRING_FORMAT = 5917;
export const ERROR_CLUSTER_DATABASE_TRANSACTION_IN_PROGRESS = 5918;
export const ERROR_CLUSTER_DATABASE_TRANSACTION_NOT_IN_PROGRESS = 5919;
export const ERROR_CLUSTER_NULL_DATA = 5920;
export const ERROR_CLUSTER_PARTIAL_READ = 5921;
export const ERROR_CLUSTER_PARTIAL_WRITE = 5922;
export const ERROR_CLUSTER_CANT_DESERIALIZE_DATA = 5923;
export const ERROR_DEPENDENT_RESOURCE_PROPERTY_CONFLICT = 5924;
export const ERROR_CLUSTER_NO_QUORUM = 5925;
export const ERROR_CLUSTER_INVALID_IPV6_NETWORK = 5926;
export const ERROR_CLUSTER_INVALID_IPV6_TUNNEL_NETWORK = 5927;
export const ERROR_QUORUM_NOT_ALLOWED_IN_THIS_GROUP = 5928;
export const ERROR_DEPENDENCY_TREE_TOO_COMPLEX = 5929;
export const ERROR_EXCEPTION_IN_RESOURCE_CALL = 5930;
export const ERROR_CLUSTER_RHS_FAILED_INITIALIZATION = 5931;
export const ERROR_CLUSTER_NOT_INSTALLED = 5932;
export const ERROR_CLUSTER_RESOURCES_MUST_BE_ONLINE_ON_THE_SAME_NODE = 5933;
export const ERROR_CLUSTER_MAX_NODES_IN_CLUSTER = 5934;
export const ERROR_CLUSTER_TOO_MANY_NODES = 5935;
export const ERROR_CLUSTER_OBJECT_ALREADY_USED = 5936;
export const ERROR_NONCORE_GROUPS_FOUND = 5937;
export const ERROR_FILE_SHARE_RESOURCE_CONFLICT = 5938;
export const ERROR_CLUSTER_EVICT_INVALID_REQUEST = 5939;
export const ERROR_CLUSTER_SINGLETON_RESOURCE = 5940;
export const ERROR_CLUSTER_GROUP_SINGLETON_RESOURCE = 5941;
export const ERROR_CLUSTER_RESOURCE_PROVIDER_FAILED = 5942;
export const ERROR_CLUSTER_RESOURCE_CONFIGURATION_ERROR = 5943;
export const ERROR_CLUSTER_GROUP_BUSY = 5944;
export const ERROR_CLUSTER_NOT_SHARED_VOLUME = 5945;
export const ERROR_CLUSTER_INVALID_SECURITY_DESCRIPTOR = 5946;
export const ERROR_CLUSTER_SHARED_VOLUMES_IN_USE = 5947;
export const ERROR_CLUSTER_USE_SHARED_VOLUMES_API = 5948;
export const ERROR_CLUSTER_BACKUP_IN_PROGRESS = 5949;
export const ERROR_NON_CSV_PATH = 5950;
export const ERROR_CSV_VOLUME_NOT_LOCAL = 5951;
export const ERROR_CLUSTER_WATCHDOG_TERMINATING = 5952;
export const ERROR_CLUSTER_RESOURCE_VETOED_MOVE_INCOMPATIBLE_NODES = 5953;
export const ERROR_CLUSTER_INVALID_NODE_WEIGHT = 5954;
export const ERROR_CLUSTER_RESOURCE_VETOED_CALL = 5955;
export const ERROR_RESMON_SYSTEM_RESOURCES_LACKING = 5956;
export const ERROR_CLUSTER_RESOURCE_VETOED_MOVE_NOT_ENOUGH_RESOURCES_ON_DESTINATION = 5957;
export const ERROR_CLUSTER_RESOURCE_VETOED_MOVE_NOT_ENOUGH_RESOURCES_ON_SOURCE = 5958;
export const ERROR_CLUSTER_GROUP_QUEUED = 5959;
export const ERROR_CLUSTER_RESOURCE_LOCKED_STATUS = 5960;
export const ERROR_CLUSTER_SHARED_VOLUME_FAILOVER_NOT_ALLOWED = 5961;
export const ERROR_CLUSTER_NODE_DRAIN_IN_PROGRESS = 5962;
export const ERROR_CLUSTER_DISK_NOT_CONNECTED = 5963;
export const ERROR_DISK_NOT_CSV_CAPABLE = 5964;
export const ERROR_RESOURCE_NOT_IN_AVAILABLE_STORAGE = 5965;
export const ERROR_CLUSTER_SHARED_VOLUME_REDIRECTED = 5966;
export const ERROR_CLUSTER_SHARED_VOLUME_NOT_REDIRECTED = 5967;
export const ERROR_CLUSTER_CANNOT_RETURN_PROPERTIES = 5968;
export const ERROR_CLUSTER_RESOURCE_CONTAINS_UNSUPPORTED_DIFF_AREA_FOR_SHARED_VOLUMES = 5969;
export const ERROR_CLUSTER_RESOURCE_IS_IN_MAINTENANCE_MODE = 5970;
export const ERROR_CLUSTER_AFFINITY_CONFLICT = 5971;
export const ERROR_CLUSTER_RESOURCE_IS_REPLICA_VIRTUAL_MACHINE = 5972;
export const ERROR_CLUSTER_UPGRADE_INCOMPATIBLE_VERSIONS = 5973;
export const ERROR_CLUSTER_UPGRADE_FIX_QUORUM_NOT_SUPPORTED = 5974;
export const ERROR_CLUSTER_UPGRADE_RESTART_REQUIRED = 5975;
export const ERROR_CLUSTER_UPGRADE_IN_PROGRESS = 5976;
export const ERROR_CLUSTER_UPGRADE_INCOMPLETE = 5977;
export const ERROR_CLUSTER_NODE_IN_GRACE_PERIOD = 5978;
export const ERROR_CLUSTER_CSV_IO_PAUSE_TIMEOUT = 5979;
export const ERROR_NODE_NOT_ACTIVE_CLUSTER_MEMBER = 5980;
export const ERROR_CLUSTER_RESOURCE_NOT_MONITORED = 5981;
export const ERROR_CLUSTER_RESOURCE_DOES_NOT_SUPPORT_UNMONITORED = 5982;
export const ERROR_CLUSTER_RESOURCE_IS_REPLICATED = 5983;
export const ERROR_CLUSTER_NODE_ISOLATED = 5984;
export const ERROR_CLUSTER_NODE_QUARANTINED = 5985;
export const ERROR_CLUSTER_DATABASE_UPDATE_CONDITION_FAILED = 5986;
export const ERROR_CLUSTER_SPACE_DEGRADED = 5987;
export const ERROR_CLUSTER_TOKEN_DELEGATION_NOT_SUPPORTED = 5988;
export const ERROR_CLUSTER_CSV_INVALID_HANDLE = 5989;
export const ERROR_CLUSTER_CSV_SUPPORTED_ONLY_ON_COORDINATOR = 5990;
export const ERROR_GROUPSET_NOT_AVAILABLE = 5991;
export const ERROR_GROUPSET_NOT_FOUND = 5992;
export const ERROR_GROUPSET_CANT_PROVIDE = 5993;
export const ERROR_CLUSTER_FAULT_DOMAIN_PARENT_NOT_FOUND = 5994;
export const ERROR_CLUSTER_FAULT_DOMAIN_INVALID_HIERARCHY = 5995;
export const ERROR_CLUSTER_FAULT_DOMAIN_FAILED_S2D_VALIDATION = 5996;
export const ERROR_CLUSTER_FAULT_DOMAIN_S2D_CONNECTIVITY_LOSS = 5997;
export const ERROR_CLUSTER_INVALID_INFRASTRUCTURE_FILESERVER_NAME = 5998;
export const ERROR_CLUSTERSET_MANAGEMENT_CLUSTER_UNREACHABLE = 5999;
export const ERROR_ENCRYPTION_FAILED = 6000;
export const ERROR_DECRYPTION_FAILED = 6001;
export const ERROR_FILE_ENCRYPTED = 6002;
export const ERROR_NO_RECOVERY_POLICY = 6003;
export const ERROR_NO_EFS = 6004;
export const ERROR_WRONG_EFS = 6005;
export const ERROR_NO_USER_KEYS = 6006;
export const ERROR_FILE_NOT_ENCRYPTED = 6007;
export const ERROR_NOT_EXPORT_FORMAT = 6008;
export const ERROR_FILE_READ_ONLY = 6009;
export const ERROR_DIR_EFS_DISALLOWED = 6010;
export const ERROR_EFS_SERVER_NOT_TRUSTED = 6011;
export const ERROR_BAD_RECOVERY_POLICY = 6012;
export const ERROR_EFS_ALG_BLOB_TOO_BIG = 6013;
export const ERROR_VOLUME_NOT_SUPPORT_EFS = 6014;
export const ERROR_EFS_DISABLED = 6015;
export const ERROR_EFS_VERSION_NOT_SUPPORT = 6016;
export const ERROR_CS_ENCRYPTION_INVALID_SERVER_RESPONSE = 6017;
export const ERROR_CS_ENCRYPTION_UNSUPPORTED_SERVER = 6018;
export const ERROR_CS_ENCRYPTION_EXISTING_ENCRYPTED_FILE = 6019;
export const ERROR_CS_ENCRYPTION_NEW_ENCRYPTED_FILE = 6020;
export const ERROR_CS_ENCRYPTION_FILE_NOT_CSE = 6021;
export const ERROR_ENCRYPTION_POLICY_DENIES_OPERATION = 6022;
export const ERROR_WIP_ENCRYPTION_FAILED = 6023;
export const ERROR_NO_BROWSER_SERVERS_FOUND = 6118;
export const ERROR_CLUSTER_OBJECT_IS_CLUSTER_SET_VM = 6250;
export const ERROR_LOG_SECTOR_INVALID = 6600;
export const ERROR_LOG_SECTOR_PARITY_INVALID = 6601;
export const ERROR_LOG_SECTOR_REMAPPED = 6602;
export const ERROR_LOG_BLOCK_INCOMPLETE = 6603;
export const ERROR_LOG_INVALID_RANGE = 6604;
export const ERROR_LOG_BLOCKS_EXHAUSTED = 6605;
export const ERROR_LOG_READ_CONTEXT_INVALID = 6606;
export const ERROR_LOG_RESTART_INVALID = 6607;
export const ERROR_LOG_BLOCK_VERSION = 6608;
export const ERROR_LOG_BLOCK_INVALID = 6609;
export const ERROR_LOG_READ_MODE_INVALID = 6610;
export const ERROR_LOG_NO_RESTART = 6611;
export const ERROR_LOG_METADATA_CORRUPT = 6612;
export const ERROR_LOG_METADATA_INVALID = 6613;
export const ERROR_LOG_METADATA_INCONSISTENT = 6614;
export const ERROR_LOG_RESERVATION_INVALID = 6615;
export const ERROR_LOG_CANT_DELETE = 6616;
export const ERROR_LOG_CONTAINER_LIMIT_EXCEEDED = 6617;
export const ERROR_LOG_START_OF_LOG = 6618;
export const ERROR_LOG_POLICY_ALREADY_INSTALLED = 6619;
export const ERROR_LOG_POLICY_NOT_INSTALLED = 6620;
export const ERROR_LOG_POLICY_INVALID = 6621;
export const ERROR_LOG_POLICY_CONFLICT = 6622;
export const ERROR_LOG_PINNED_ARCHIVE_TAIL = 6623;
export const ERROR_LOG_RECORD_NONEXISTENT = 6624;
export const ERROR_LOG_RECORDS_RESERVED_INVALID = 6625;
export const ERROR_LOG_SPACE_RESERVED_INVALID = 6626;
export const ERROR_LOG_TAIL_INVALID = 6627;
export const ERROR_LOG_FULL = 6628;
export const ERROR_COULD_NOT_RESIZE_LOG = 6629;
export const ERROR_LOG_MULTIPLEXED = 6630;
export const ERROR_LOG_DEDICATED = 6631;
export const ERROR_LOG_ARCHIVE_NOT_IN_PROGRESS = 6632;
export const ERROR_LOG_ARCHIVE_IN_PROGRESS = 6633;
export const ERROR_LOG_EPHEMERAL = 6634;
export const ERROR_LOG_NOT_ENOUGH_CONTAINERS = 6635;
export const ERROR_LOG_CLIENT_ALREADY_REGISTERED = 6636;
export const ERROR_LOG_CLIENT_NOT_REGISTERED = 6637;
export const ERROR_LOG_FULL_HANDLER_IN_PROGRESS = 6638;
export const ERROR_LOG_CONTAINER_READ_FAILED = 6639;
export const ERROR_LOG_CONTAINER_WRITE_FAILED = 6640;
export const ERROR_LOG_CONTAINER_OPEN_FAILED = 6641;
export const ERROR_LOG_CONTAINER_STATE_INVALID = 6642;
export const ERROR_LOG_STATE_INVALID = 6643;
export const ERROR_LOG_PINNED = 6644;
export const ERROR_LOG_METADATA_FLUSH_FAILED = 6645;
export const ERROR_LOG_INCONSISTENT_SECURITY = 6646;
export const ERROR_LOG_APPENDED_FLUSH_FAILED = 6647;
export const ERROR_LOG_PINNED_RESERVATION = 6648;
export const ERROR_INVALID_TRANSACTION = 6700;
export const ERROR_TRANSACTION_NOT_ACTIVE = 6701;
export const ERROR_TRANSACTION_REQUEST_NOT_VALID = 6702;
export const ERROR_TRANSACTION_NOT_REQUESTED = 6703;
export const ERROR_TRANSACTION_ALREADY_ABORTED = 6704;
export const ERROR_TRANSACTION_ALREADY_COMMITTED = 6705;
export const ERROR_TM_INITIALIZATION_FAILED = 6706;
export const ERROR_RESOURCEMANAGER_READ_ONLY = 6707;
export const ERROR_TRANSACTION_NOT_JOINED = 6708;
export const ERROR_TRANSACTION_SUPERIOR_EXISTS = 6709;
export const ERROR_CRM_PROTOCOL_ALREADY_EXISTS = 6710;
export const ERROR_TRANSACTION_PROPAGATION_FAILED = 6711;
export const ERROR_CRM_PROTOCOL_NOT_FOUND = 6712;
export const ERROR_TRANSACTION_INVALID_MARSHALL_BUFFER = 6713;
export const ERROR_CURRENT_TRANSACTION_NOT_VALID = 6714;
export const ERROR_TRANSACTION_NOT_FOUND = 6715;
export const ERROR_RESOURCEMANAGER_NOT_FOUND = 6716;
export const ERROR_ENLISTMENT_NOT_FOUND = 6717;
export const ERROR_TRANSACTIONMANAGER_NOT_FOUND = 6718;
export const ERROR_TRANSACTIONMANAGER_NOT_ONLINE = 6719;
export const ERROR_TRANSACTIONMANAGER_RECOVERY_NAME_COLLISION = 6720;
export const ERROR_TRANSACTION_NOT_ROOT = 6721;
export const ERROR_TRANSACTION_OBJECT_EXPIRED = 6722;
export const ERROR_TRANSACTION_RESPONSE_NOT_ENLISTED = 6723;
export const ERROR_TRANSACTION_RECORD_TOO_LONG = 6724;
export const ERROR_IMPLICIT_TRANSACTION_NOT_SUPPORTED = 6725;
export const ERROR_TRANSACTION_INTEGRITY_VIOLATED = 6726;
export const ERROR_TRANSACTIONMANAGER_IDENTITY_MISMATCH = 6727;
export const ERROR_RM_CANNOT_BE_FROZEN_FOR_SNAPSHOT = 6728;
export const ERROR_TRANSACTION_MUST_WRITETHROUGH = 6729;
export const ERROR_TRANSACTION_NO_SUPERIOR = 6730;
export const ERROR_HEURISTIC_DAMAGE_POSSIBLE = 6731;
export const ERROR_TRANSACTIONAL_CONFLICT = 6800;
export const ERROR_RM_NOT_ACTIVE = 6801;
export const ERROR_RM_METADATA_CORRUPT = 6802;
export const ERROR_DIRECTORY_NOT_RM = 6803;
export const ERROR_TRANSACTIONS_UNSUPPORTED_REMOTE = 6805;
export const ERROR_LOG_RESIZE_INVALID_SIZE = 6806;
export const ERROR_OBJECT_NO_LONGER_EXISTS = 6807;
export const ERROR_STREAM_MINIVERSION_NOT_FOUND = 6808;
export const ERROR_STREAM_MINIVERSION_NOT_VALID = 6809;
export const ERROR_MINIVERSION_INACCESSIBLE_FROM_SPECIFIED_TRANSACTION = 6810;
export const ERROR_CANT_OPEN_MINIVERSION_WITH_MODIFY_INTENT = 6811;
export const ERROR_CANT_CREATE_MORE_STREAM_MINIVERSIONS = 6812;
export const ERROR_REMOTE_FILE_VERSION_MISMATCH = 6814;
export const ERROR_HANDLE_NO_LONGER_VALID = 6815;
export const ERROR_NO_TXF_METADATA = 6816;
export const ERROR_LOG_CORRUPTION_DETECTED = 6817;
export const ERROR_CANT_RECOVER_WITH_HANDLE_OPEN = 6818;
export const ERROR_RM_DISCONNECTED = 6819;
export const ERROR_ENLISTMENT_NOT_SUPERIOR = 6820;
export const ERROR_RECOVERY_NOT_NEEDED = 6821;
export const ERROR_RM_ALREADY_STARTED = 6822;
export const ERROR_FILE_IDENTITY_NOT_PERSISTENT = 6823;
export const ERROR_CANT_BREAK_TRANSACTIONAL_DEPENDENCY = 6824;
export const ERROR_CANT_CROSS_RM_BOUNDARY = 6825;
export const ERROR_TXF_DIR_NOT_EMPTY = 6826;
export const ERROR_INDOUBT_TRANSACTIONS_EXIST = 6827;
export const ERROR_TM_VOLATILE = 6828;
export const ERROR_ROLLBACK_TIMER_EXPIRED = 6829;
export const ERROR_TXF_ATTRIBUTE_CORRUPT = 6830;
export const ERROR_EFS_NOT_ALLOWED_IN_TRANSACTION = 6831;
export const ERROR_TRANSACTIONAL_OPEN_NOT_ALLOWED = 6832;
export const ERROR_LOG_GROWTH_FAILED = 6833;
export const ERROR_TRANSACTED_MAPPING_UNSUPPORTED_REMOTE = 6834;
export const ERROR_TXF_METADATA_ALREADY_PRESENT = 6835;
export const ERROR_TRANSACTION_SCOPE_CALLBACKS_NOT_SET = 6836;
export const ERROR_TRANSACTION_REQUIRED_PROMOTION = 6837;
export const ERROR_CANNOT_EXECUTE_FILE_IN_TRANSACTION = 6838;
export const ERROR_TRANSACTIONS_NOT_FROZEN = 6839;
export const ERROR_TRANSACTION_FREEZE_IN_PROGRESS = 6840;
export const ERROR_NOT_SNAPSHOT_VOLUME = 6841;
export const ERROR_NO_SAVEPOINT_WITH_OPEN_FILES = 6842;
export const ERROR_DATA_LOST_REPAIR = 6843;
export const ERROR_SPARSE_NOT_ALLOWED_IN_TRANSACTION = 6844;
export const ERROR_TM_IDENTITY_MISMATCH = 6845;
export const ERROR_FLOATED_SECTION = 6846;
export const ERROR_CANNOT_ACCEPT_TRANSACTED_WORK = 6847;
export const ERROR_CANNOT_ABORT_TRANSACTIONS = 6848;
export const ERROR_BAD_CLUSTERS = 6849;
export const ERROR_COMPRESSION_NOT_ALLOWED_IN_TRANSACTION = 6850;
export const ERROR_VOLUME_DIRTY = 6851;
export const ERROR_NO_LINK_TRACKING_IN_TRANSACTION = 6852;
export const ERROR_OPERATION_NOT_SUPPORTED_IN_TRANSACTION = 6853;
export const ERROR_EXPIRED_HANDLE = 6854;
export const ERROR_TRANSACTION_NOT_ENLISTED = 6855;
export const ERROR_CTX_WINSTATION_NAME_INVALID = 7001;
export const ERROR_CTX_INVALID_PD = 7002;
export const ERROR_CTX_PD_NOT_FOUND = 7003;
export const ERROR_CTX_WD_NOT_FOUND = 7004;
export const ERROR_CTX_CANNOT_MAKE_EVENTLOG_ENTRY = 7005;
export const ERROR_CTX_SERVICE_NAME_COLLISION = 7006;
export const ERROR_CTX_CLOSE_PENDING = 7007;
export const ERROR_CTX_NO_OUTBUF = 7008;
export const ERROR_CTX_MODEM_INF_NOT_FOUND = 7009;
export const ERROR_CTX_INVALID_MODEMNAME = 7010;
export const ERROR_CTX_MODEM_RESPONSE_ERROR = 7011;
export const ERROR_CTX_MODEM_RESPONSE_TIMEOUT = 7012;
export const ERROR_CTX_MODEM_RESPONSE_NO_CARRIER = 7013;
export const ERROR_CTX_MODEM_RESPONSE_NO_DIALTONE = 7014;
export const ERROR_CTX_MODEM_RESPONSE_BUSY = 7015;
export const ERROR_CTX_MODEM_RESPONSE_VOICE = 7016;
export const ERROR_CTX_TD_ERROR = 7017;
export const ERROR_CTX_WINSTATION_NOT_FOUND = 7022;
export const ERROR_CTX_WINSTATION_ALREADY_EXISTS = 7023;
export const ERROR_CTX_WINSTATION_BUSY = 7024;
export const ERROR_CTX_BAD_VIDEO_MODE = 7025;
export const ERROR_CTX_GRAPHICS_INVALID = 7035;
export const ERROR_CTX_LOGON_DISABLED = 7037;
export const ERROR_CTX_NOT_CONSOLE = 7038;
export const ERROR_CTX_CLIENT_QUERY_TIMEOUT = 7040;
export const ERROR_CTX_CONSOLE_DISCONNECT = 7041;
export const ERROR_CTX_CONSOLE_CONNECT = 7042;
export const ERROR_CTX_SHADOW_DENIED = 7044;
export const ERROR_CTX_WINSTATION_ACCESS_DENIED = 7045;
export const ERROR_CTX_INVALID_WD = 7049;
export const ERROR_CTX_SHADOW_INVALID = 7050;
export const ERROR_CTX_SHADOW_DISABLED = 7051;
export const ERROR_CTX_CLIENT_LICENSE_IN_USE = 7052;
export const ERROR_CTX_CLIENT_LICENSE_NOT_SET = 7053;
export const ERROR_CTX_LICENSE_NOT_AVAILABLE = 7054;
export const ERROR_CTX_LICENSE_CLIENT_INVALID = 7055;
export const ERROR_CTX_LICENSE_EXPIRED = 7056;
export const ERROR_CTX_SHADOW_NOT_RUNNING = 7057;
export const ERROR_CTX_SHADOW_ENDED_BY_MODE_CHANGE = 7058;
export const ERROR_ACTIVATION_COUNT_EXCEEDED = 7059;
export const ERROR_CTX_WINSTATIONS_DISABLED = 7060;
export const ERROR_CTX_ENCRYPTION_LEVEL_REQUIRED = 7061;
export const ERROR_CTX_SESSION_IN_USE = 7062;
export const ERROR_CTX_NO_FORCE_LOGOFF = 7063;
export const ERROR_CTX_ACCOUNT_RESTRICTION = 7064;
export const ERROR_RDP_PROTOCOL_ERROR = 7065;
export const ERROR_CTX_CDM_CONNECT = 7066;
export const ERROR_CTX_CDM_DISCONNECT = 7067;
export const ERROR_CTX_SECURITY_LAYER_ERROR = 7068;
export const ERROR_TS_INCOMPATIBLE_SESSIONS = 7069;
export const ERROR_TS_VIDEO_SUBSYSTEM_ERROR = 7070;
export const ERROR_DS_NOT_INSTALLED = 8200;
export const ERROR_DS_MEMBERSHIP_EVALUATED_LOCALLY = 8201;
export const ERROR_DS_NO_ATTRIBUTE_OR_VALUE = 8202;
export const ERROR_DS_INVALID_ATTRIBUTE_SYNTAX = 8203;
export const ERROR_DS_ATTRIBUTE_TYPE_UNDEFINED = 8204;
export const ERROR_DS_ATTRIBUTE_OR_VALUE_EXISTS = 8205;
export const ERROR_DS_BUSY = 8206;
export const ERROR_DS_UNAVAILABLE = 8207;
export const ERROR_DS_NO_RIDS_ALLOCATED = 8208;
export const ERROR_DS_NO_MORE_RIDS = 8209;
export const ERROR_DS_INCORRECT_ROLE_OWNER = 8210;
export const ERROR_DS_RIDMGR_INIT_ERROR = 8211;
export const ERROR_DS_OBJ_CLASS_VIOLATION = 8212;
export const ERROR_DS_CANT_ON_NON_LEAF = 8213;
export const ERROR_DS_CANT_ON_RDN = 8214;
export const ERROR_DS_CANT_MOD_OBJ_CLASS = 8215;
export const ERROR_DS_CROSS_DOM_MOVE_ERROR = 8216;
export const ERROR_DS_GC_NOT_AVAILABLE = 8217;
export const ERROR_SHARED_POLICY = 8218;
export const ERROR_POLICY_OBJECT_NOT_FOUND = 8219;
export const ERROR_POLICY_ONLY_IN_DS = 8220;
export const ERROR_PROMOTION_ACTIVE = 8221;
export const ERROR_NO_PROMOTION_ACTIVE = 8222;
export const ERROR_DS_OPERATIONS_ERROR = 8224;
export const ERROR_DS_PROTOCOL_ERROR = 8225;
export const ERROR_DS_TIMELIMIT_EXCEEDED = 8226;
export const ERROR_DS_SIZELIMIT_EXCEEDED = 8227;
export const ERROR_DS_ADMIN_LIMIT_EXCEEDED = 8228;
export const ERROR_DS_COMPARE_FALSE = 8229;
export const ERROR_DS_COMPARE_TRUE = 8230;
export const ERROR_DS_AUTH_METHOD_NOT_SUPPORTED = 8231;
export const ERROR_DS_STRONG_AUTH_REQUIRED = 8232;
export const ERROR_DS_INAPPROPRIATE_AUTH = 8233;
export const ERROR_DS_AUTH_UNKNOWN = 8234;
export const ERROR_DS_REFERRAL = 8235;
export const ERROR_DS_UNAVAILABLE_CRIT_EXTENSION = 8236;
export const ERROR_DS_CONFIDENTIALITY_REQUIRED = 8237;
export const ERROR_DS_INAPPROPRIATE_MATCHING = 8238;
export const ERROR_DS_CONSTRAINT_VIOLATION = 8239;
export const ERROR_DS_NO_SUCH_OBJECT = 8240;
export const ERROR_DS_ALIAS_PROBLEM = 8241;
export const ERROR_DS_INVALID_DN_SYNTAX = 8242;
export const ERROR_DS_IS_LEAF = 8243;
export const ERROR_DS_ALIAS_DEREF_PROBLEM = 8244;
export const ERROR_DS_UNWILLING_TO_PERFORM = 8245;
export const ERROR_DS_LOOP_DETECT = 8246;
export const ERROR_DS_NAMING_VIOLATION = 8247;
export const ERROR_DS_OBJECT_RESULTS_TOO_LARGE = 8248;
export const ERROR_DS_AFFECTS_MULTIPLE_DSAS = 8249;
export const ERROR_DS_SERVER_DOWN = 8250;
export const ERROR_DS_LOCAL_ERROR = 8251;
export const ERROR_DS_ENCODING_ERROR = 8252;
export const ERROR_DS_DECODING_ERROR = 8253;
export const ERROR_DS_FILTER_UNKNOWN = 8254;
export const ERROR_DS_PARAM_ERROR = 8255;
export const ERROR_DS_NOT_SUPPORTED = 8256;
export const ERROR_DS_NO_RESULTS_RETURNED = 8257;
export const ERROR_DS_CONTROL_NOT_FOUND = 8258;
export const ERROR_DS_CLIENT_LOOP = 8259;
export const ERROR_DS_REFERRAL_LIMIT_EXCEEDED = 8260;
export const ERROR_DS_SORT_CONTROL_MISSING = 8261;
export const ERROR_DS_OFFSET_RANGE_ERROR = 8262;
export const ERROR_DS_RIDMGR_DISABLED = 8263;
export const ERROR_DS_ROOT_MUST_BE_NC = 8301;
export const ERROR_DS_ADD_REPLICA_INHIBITED = 8302;
export const ERROR_DS_ATT_NOT_DEF_IN_SCHEMA = 8303;
export const ERROR_DS_MAX_OBJ_SIZE_EXCEEDED = 8304;
export const ERROR_DS_OBJ_STRING_NAME_EXISTS = 8305;
export const ERROR_DS_NO_RDN_DEFINED_IN_SCHEMA = 8306;
export const ERROR_DS_RDN_DOESNT_MATCH_SCHEMA = 8307;
export const ERROR_DS_NO_REQUESTED_ATTS_FOUND = 8308;
export const ERROR_DS_USER_BUFFER_TO_SMALL = 8309;
export const ERROR_DS_ATT_IS_NOT_ON_OBJ = 8310;
export const ERROR_DS_ILLEGAL_MOD_OPERATION = 8311;
export const ERROR_DS_OBJ_TOO_LARGE = 8312;
export const ERROR_DS_BAD_INSTANCE_TYPE = 8313;
export const ERROR_DS_MASTERDSA_REQUIRED = 8314;
export const ERROR_DS_OBJECT_CLASS_REQUIRED = 8315;
export const ERROR_DS_MISSING_REQUIRED_ATT = 8316;
export const ERROR_DS_ATT_NOT_DEF_FOR_CLASS = 8317;
export const ERROR_DS_ATT_ALREADY_EXISTS = 8318;
export const ERROR_DS_CANT_ADD_ATT_VALUES = 8320;
export const ERROR_DS_SINGLE_VALUE_CONSTRAINT = 8321;
export const ERROR_DS_RANGE_CONSTRAINT = 8322;
export const ERROR_DS_ATT_VAL_ALREADY_EXISTS = 8323;
export const ERROR_DS_CANT_REM_MISSING_ATT = 8324;
export const ERROR_DS_CANT_REM_MISSING_ATT_VAL = 8325;
export const ERROR_DS_ROOT_CANT_BE_SUBREF = 8326;
export const ERROR_DS_NO_CHAINING = 8327;
export const ERROR_DS_NO_CHAINED_EVAL = 8328;
export const ERROR_DS_NO_PARENT_OBJECT = 8329;
export const ERROR_DS_PARENT_IS_AN_ALIAS = 8330;
export const ERROR_DS_CANT_MIX_MASTER_AND_REPS = 8331;
export const ERROR_DS_CHILDREN_EXIST = 8332;
export const ERROR_DS_OBJ_NOT_FOUND = 8333;
export const ERROR_DS_ALIASED_OBJ_MISSING = 8334;
export const ERROR_DS_BAD_NAME_SYNTAX = 8335;
export const ERROR_DS_ALIAS_POINTS_TO_ALIAS = 8336;
export const ERROR_DS_CANT_DEREF_ALIAS = 8337;
export const ERROR_DS_OUT_OF_SCOPE = 8338;
export const ERROR_DS_OBJECT_BEING_REMOVED = 8339;
export const ERROR_DS_CANT_DELETE_DSA_OBJ = 8340;
export const ERROR_DS_GENERIC_ERROR = 8341;
export const ERROR_DS_DSA_MUST_BE_INT_MASTER = 8342;
export const ERROR_DS_CLASS_NOT_DSA = 8343;
export const ERROR_DS_INSUFF_ACCESS_RIGHTS = 8344;
export const ERROR_DS_ILLEGAL_SUPERIOR = 8345;
export const ERROR_DS_ATTRIBUTE_OWNED_BY_SAM = 8346;
export const ERROR_DS_NAME_TOO_MANY_PARTS = 8347;
export const ERROR_DS_NAME_TOO_LONG = 8348;
export const ERROR_DS_NAME_VALUE_TOO_LONG = 8349;
export const ERROR_DS_NAME_UNPARSEABLE = 8350;
export const ERROR_DS_NAME_TYPE_UNKNOWN = 8351;
export const ERROR_DS_NOT_AN_OBJECT = 8352;
export const ERROR_DS_SEC_DESC_TOO_SHORT = 8353;
export const ERROR_DS_SEC_DESC_INVALID = 8354;
export const ERROR_DS_NO_DELETED_NAME = 8355;
export const ERROR_DS_SUBREF_MUST_HAVE_PARENT = 8356;
export const ERROR_DS_NCNAME_MUST_BE_NC = 8357;
export const ERROR_DS_CANT_ADD_SYSTEM_ONLY = 8358;
export const ERROR_DS_CLASS_MUST_BE_CONCRETE = 8359;
export const ERROR_DS_INVALID_DMD = 8360;
export const ERROR_DS_OBJ_GUID_EXISTS = 8361;
export const ERROR_DS_NOT_ON_BACKLINK = 8362;
export const ERROR_DS_NO_CROSSREF_FOR_NC = 8363;
export const ERROR_DS_SHUTTING_DOWN = 8364;
export const ERROR_DS_UNKNOWN_OPERATION = 8365;
export const ERROR_DS_INVALID_ROLE_OWNER = 8366;
export const ERROR_DS_COULDNT_CONTACT_FSMO = 8367;
export const ERROR_DS_CROSS_NC_DN_RENAME = 8368;
export const ERROR_DS_CANT_MOD_SYSTEM_ONLY = 8369;
export const ERROR_DS_REPLICATOR_ONLY = 8370;
export const ERROR_DS_OBJ_CLASS_NOT_DEFINED = 8371;
export const ERROR_DS_OBJ_CLASS_NOT_SUBCLASS = 8372;
export const ERROR_DS_NAME_REFERENCE_INVALID = 8373;
export const ERROR_DS_CROSS_REF_EXISTS = 8374;
export const ERROR_DS_CANT_DEL_MASTER_CROSSREF = 8375;
export const ERROR_DS_SUBTREE_NOTIFY_NOT_NC_HEAD = 8376;
export const ERROR_DS_NOTIFY_FILTER_TOO_COMPLEX = 8377;
export const ERROR_DS_DUP_RDN = 8378;
export const ERROR_DS_DUP_OID = 8379;
export const ERROR_DS_DUP_MAPI_ID = 8380;
export const ERROR_DS_DUP_SCHEMA_ID_GUID = 8381;
export const ERROR_DS_DUP_LDAP_DISPLAY_NAME = 8382;
export const ERROR_DS_SEMANTIC_ATT_TEST = 8383;
export const ERROR_DS_SYNTAX_MISMATCH = 8384;
export const ERROR_DS_EXISTS_IN_MUST_HAVE = 8385;
export const ERROR_DS_EXISTS_IN_MAY_HAVE = 8386;
export const ERROR_DS_NONEXISTENT_MAY_HAVE = 8387;
export const ERROR_DS_NONEXISTENT_MUST_HAVE = 8388;
export const ERROR_DS_AUX_CLS_TEST_FAIL = 8389;
export const ERROR_DS_NONEXISTENT_POSS_SUP = 8390;
export const ERROR_DS_SUB_CLS_TEST_FAIL = 8391;
export const ERROR_DS_BAD_RDN_ATT_ID_SYNTAX = 8392;
export const ERROR_DS_EXISTS_IN_AUX_CLS = 8393;
export const ERROR_DS_EXISTS_IN_SUB_CLS = 8394;
export const ERROR_DS_EXISTS_IN_POSS_SUP = 8395;
export const ERROR_DS_RECALCSCHEMA_FAILED = 8396;
export const ERROR_DS_TREE_DELETE_NOT_FINISHED = 8397;
export const ERROR_DS_CANT_DELETE = 8398;
export const ERROR_DS_ATT_SCHEMA_REQ_ID = 8399;
export const ERROR_DS_BAD_ATT_SCHEMA_SYNTAX = 8400;
export const ERROR_DS_CANT_CACHE_ATT = 8401;
export const ERROR_DS_CANT_CACHE_CLASS = 8402;
export const ERROR_DS_CANT_REMOVE_ATT_CACHE = 8403;
export const ERROR_DS_CANT_REMOVE_CLASS_CACHE = 8404;
export const ERROR_DS_CANT_RETRIEVE_DN = 8405;
export const ERROR_DS_MISSING_SUPREF = 8406;
export const ERROR_DS_CANT_RETRIEVE_INSTANCE = 8407;
export const ERROR_DS_CODE_INCONSISTENCY = 8408;
export const ERROR_DS_DATABASE_ERROR = 8409;
export const ERROR_DS_GOVERNSID_MISSING = 8410;
export const ERROR_DS_MISSING_EXPECTED_ATT = 8411;
export const ERROR_DS_NCNAME_MISSING_CR_REF = 8412;
export const ERROR_DS_SECURITY_CHECKING_ERROR = 8413;
export const ERROR_DS_SCHEMA_NOT_LOADED = 8414;
export const ERROR_DS_SCHEMA_ALLOC_FAILED = 8415;
export const ERROR_DS_ATT_SCHEMA_REQ_SYNTAX = 8416;
export const ERROR_DS_GCVERIFY_ERROR = 8417;
export const ERROR_DS_DRA_SCHEMA_MISMATCH = 8418;
export const ERROR_DS_CANT_FIND_DSA_OBJ = 8419;
export const ERROR_DS_CANT_FIND_EXPECTED_NC = 8420;
export const ERROR_DS_CANT_FIND_NC_IN_CACHE = 8421;
export const ERROR_DS_CANT_RETRIEVE_CHILD = 8422;
export const ERROR_DS_SECURITY_ILLEGAL_MODIFY = 8423;
export const ERROR_DS_CANT_REPLACE_HIDDEN_REC = 8424;
export const ERROR_DS_BAD_HIERARCHY_FILE = 8425;
export const ERROR_DS_BUILD_HIERARCHY_TABLE_FAILED = 8426;
export const ERROR_DS_CONFIG_PARAM_MISSING = 8427;
export const ERROR_DS_COUNTING_AB_INDICES_FAILED = 8428;
export const ERROR_DS_HIERARCHY_TABLE_MALLOC_FAILED = 8429;
export const ERROR_DS_INTERNAL_FAILURE = 8430;
export const ERROR_DS_UNKNOWN_ERROR = 8431;
export const ERROR_DS_ROOT_REQUIRES_CLASS_TOP = 8432;
export const ERROR_DS_REFUSING_FSMO_ROLES = 8433;
export const ERROR_DS_MISSING_FSMO_SETTINGS = 8434;
export const ERROR_DS_UNABLE_TO_SURRENDER_ROLES = 8435;
export const ERROR_DS_DRA_GENERIC = 8436;
export const ERROR_DS_DRA_INVALID_PARAMETER = 8437;
export const ERROR_DS_DRA_BUSY = 8438;
export const ERROR_DS_DRA_BAD_DN = 8439;
export const ERROR_DS_DRA_BAD_NC = 8440;
export const ERROR_DS_DRA_DN_EXISTS = 8441;
export const ERROR_DS_DRA_INTERNAL_ERROR = 8442;
export const ERROR_DS_DRA_INCONSISTENT_DIT = 8443;
export const ERROR_DS_DRA_CONNECTION_FAILED = 8444;
export const ERROR_DS_DRA_BAD_INSTANCE_TYPE = 8445;
export const ERROR_DS_DRA_OUT_OF_MEM = 8446;
export const ERROR_DS_DRA_MAIL_PROBLEM = 8447;
export const ERROR_DS_DRA_REF_ALREADY_EXISTS = 8448;
export const ERROR_DS_DRA_REF_NOT_FOUND = 8449;
export const ERROR_DS_DRA_OBJ_IS_REP_SOURCE = 8450;
export const ERROR_DS_DRA_DB_ERROR = 8451;
export const ERROR_DS_DRA_NO_REPLICA = 8452;
export const ERROR_DS_DRA_ACCESS_DENIED = 8453;
export const ERROR_DS_DRA_NOT_SUPPORTED = 8454;
export const ERROR_DS_DRA_RPC_CANCELLED = 8455;
export const ERROR_DS_DRA_SOURCE_DISABLED = 8456;
export const ERROR_DS_DRA_SINK_DISABLED = 8457;
export const ERROR_DS_DRA_NAME_COLLISION = 8458;
export const ERROR_DS_DRA_SOURCE_REINSTALLED = 8459;
export const ERROR_DS_DRA_MISSING_PARENT = 8460;
export const ERROR_DS_DRA_PREEMPTED = 8461;
export const ERROR_DS_DRA_ABANDON_SYNC = 8462;
export const ERROR_DS_DRA_SHUTDOWN = 8463;
export const ERROR_DS_DRA_INCOMPATIBLE_PARTIAL_SET = 8464;
export const ERROR_DS_DRA_SOURCE_IS_PARTIAL_REPLICA = 8465;
export const ERROR_DS_DRA_EXTN_CONNECTION_FAILED = 8466;
export const ERROR_DS_INSTALL_SCHEMA_MISMATCH = 8467;
export const ERROR_DS_DUP_LINK_ID = 8468;
export const ERROR_DS_NAME_ERROR_RESOLVING = 8469;
export const ERROR_DS_NAME_ERROR_NOT_FOUND = 8470;
export const ERROR_DS_NAME_ERROR_NOT_UNIQUE = 8471;
export const ERROR_DS_NAME_ERROR_NO_MAPPING = 8472;
export const ERROR_DS_NAME_ERROR_DOMAIN_ONLY = 8473;
export const ERROR_DS_NAME_ERROR_NO_SYNTACTICAL_MAPPING = 8474;
export const ERROR_DS_CONSTRUCTED_ATT_MOD = 8475;
export const ERROR_DS_WRONG_OM_OBJ_CLASS = 8476;
export const ERROR_DS_DRA_REPL_PENDING = 8477;
export const ERROR_DS_DS_REQUIRED = 8478;
export const ERROR_DS_INVALID_LDAP_DISPLAY_NAME = 8479;
export const ERROR_DS_NON_BASE_SEARCH = 8480;
export const ERROR_DS_CANT_RETRIEVE_ATTS = 8481;
export const ERROR_DS_BACKLINK_WITHOUT_LINK = 8482;
export const ERROR_DS_EPOCH_MISMATCH = 8483;
export const ERROR_DS_SRC_NAME_MISMATCH = 8484;
export const ERROR_DS_SRC_AND_DST_NC_IDENTICAL = 8485;
export const ERROR_DS_DST_NC_MISMATCH = 8486;
export const ERROR_DS_NOT_AUTHORITIVE_FOR_DST_NC = 8487;
export const ERROR_DS_SRC_GUID_MISMATCH = 8488;
export const ERROR_DS_CANT_MOVE_DELETED_OBJECT = 8489;
export const ERROR_DS_PDC_OPERATION_IN_PROGRESS = 8490;
export const ERROR_DS_CROSS_DOMAIN_CLEANUP_REQD = 8491;
export const ERROR_DS_ILLEGAL_XDOM_MOVE_OPERATION = 8492;
export const ERROR_DS_CANT_WITH_ACCT_GROUP_MEMBERSHPS = 8493;
export const ERROR_DS_NC_MUST_HAVE_NC_PARENT = 8494;
export const ERROR_DS_CR_IMPOSSIBLE_TO_VALIDATE = 8495;
export const ERROR_DS_DST_DOMAIN_NOT_NATIVE = 8496;
export const ERROR_DS_MISSING_INFRASTRUCTURE_CONTAINER = 8497;
export const ERROR_DS_CANT_MOVE_ACCOUNT_GROUP = 8498;
export const ERROR_DS_CANT_MOVE_RESOURCE_GROUP = 8499;
export const ERROR_DS_INVALID_SEARCH_FLAG = 8500;
export const ERROR_DS_NO_TREE_DELETE_ABOVE_NC = 8501;
export const ERROR_DS_COULDNT_LOCK_TREE_FOR_DELETE = 8502;
export const ERROR_DS_COULDNT_IDENTIFY_OBJECTS_FOR_TREE_DELETE = 8503;
export const ERROR_DS_SAM_INIT_FAILURE = 8504;
export const ERROR_DS_SENSITIVE_GROUP_VIOLATION = 8505;
export const ERROR_DS_CANT_MOD_PRIMARYGROUPID = 8506;
export const ERROR_DS_ILLEGAL_BASE_SCHEMA_MOD = 8507;
export const ERROR_DS_NONSAFE_SCHEMA_CHANGE = 8508;
export const ERROR_DS_SCHEMA_UPDATE_DISALLOWED = 8509;
export const ERROR_DS_CANT_CREATE_UNDER_SCHEMA = 8510;
export const ERROR_DS_INSTALL_NO_SRC_SCH_VERSION = 8511;
export const ERROR_DS_INSTALL_NO_SCH_VERSION_IN_INIFILE = 8512;
export const ERROR_DS_INVALID_GROUP_TYPE = 8513;
export const ERROR_DS_NO_NEST_GLOBALGROUP_IN_MIXEDDOMAIN = 8514;
export const ERROR_DS_NO_NEST_LOCALGROUP_IN_MIXEDDOMAIN = 8515;
export const ERROR_DS_GLOBAL_CANT_HAVE_LOCAL_MEMBER = 8516;
export const ERROR_DS_GLOBAL_CANT_HAVE_UNIVERSAL_MEMBER = 8517;
export const ERROR_DS_UNIVERSAL_CANT_HAVE_LOCAL_MEMBER = 8518;
export const ERROR_DS_GLOBAL_CANT_HAVE_CROSSDOMAIN_MEMBER = 8519;
export const ERROR_DS_LOCAL_CANT_HAVE_CROSSDOMAIN_LOCAL_MEMBER = 8520;
export const ERROR_DS_HAVE_PRIMARY_MEMBERS = 8521;
export const ERROR_DS_STRING_SD_CONVERSION_FAILED = 8522;
export const ERROR_DS_NAMING_MASTER_GC = 8523;
export const ERROR_DS_DNS_LOOKUP_FAILURE = 8524;
export const ERROR_DS_COULDNT_UPDATE_SPNS = 8525;
export const ERROR_DS_CANT_RETRIEVE_SD = 8526;
export const ERROR_DS_KEY_NOT_UNIQUE = 8527;
export const ERROR_DS_WRONG_LINKED_ATT_SYNTAX = 8528;
export const ERROR_DS_SAM_NEED_BOOTKEY_PASSWORD = 8529;
export const ERROR_DS_SAM_NEED_BOOTKEY_FLOPPY = 8530;
export const ERROR_DS_CANT_START = 8531;
export const ERROR_DS_INIT_FAILURE = 8532;
export const ERROR_DS_NO_PKT_PRIVACY_ON_CONNECTION = 8533;
export const ERROR_DS_SOURCE_DOMAIN_IN_FOREST = 8534;
export const ERROR_DS_DESTINATION_DOMAIN_NOT_IN_FOREST = 8535;
export const ERROR_DS_DESTINATION_AUDITING_NOT_ENABLED = 8536;
export const ERROR_DS_CANT_FIND_DC_FOR_SRC_DOMAIN = 8537;
export const ERROR_DS_SRC_OBJ_NOT_GROUP_OR_USER = 8538;
export const ERROR_DS_SRC_SID_EXISTS_IN_FOREST = 8539;
export const ERROR_DS_SRC_AND_DST_OBJECT_CLASS_MISMATCH = 8540;
export const ERROR_SAM_INIT_FAILURE = 8541;
export const ERROR_DS_DRA_SCHEMA_INFO_SHIP = 8542;
export const ERROR_DS_DRA_SCHEMA_CONFLICT = 8543;
export const ERROR_DS_DRA_EARLIER_SCHEMA_CONFLICT = 8544;
export const ERROR_DS_DRA_OBJ_NC_MISMATCH = 8545;
export const ERROR_DS_NC_STILL_HAS_DSAS = 8546;
export const ERROR_DS_GC_REQUIRED = 8547;
export const ERROR_DS_LOCAL_MEMBER_OF_LOCAL_ONLY = 8548;
export const ERROR_DS_NO_FPO_IN_UNIVERSAL_GROUPS = 8549;
export const ERROR_DS_CANT_ADD_TO_GC = 8550;
export const ERROR_DS_NO_CHECKPOINT_WITH_PDC = 8551;
export const ERROR_DS_SOURCE_AUDITING_NOT_ENABLED = 8552;
export const ERROR_DS_CANT_CREATE_IN_NONDOMAIN_NC = 8553;
export const ERROR_DS_INVALID_NAME_FOR_SPN = 8554;
export const ERROR_DS_FILTER_USES_CONTRUCTED_ATTRS = 8555;
export const ERROR_DS_UNICODEPWD_NOT_IN_QUOTES = 8556;
export const ERROR_DS_MACHINE_ACCOUNT_QUOTA_EXCEEDED = 8557;
export const ERROR_DS_MUST_BE_RUN_ON_DST_DC = 8558;
export const ERROR_DS_SRC_DC_MUST_BE_SP4_OR_GREATER = 8559;
export const ERROR_DS_CANT_TREE_DELETE_CRITICAL_OBJ = 8560;
export const ERROR_DS_INIT_FAILURE_CONSOLE = 8561;
export const ERROR_DS_SAM_INIT_FAILURE_CONSOLE = 8562;
export const ERROR_DS_FOREST_VERSION_TOO_HIGH = 8563;
export const ERROR_DS_DOMAIN_VERSION_TOO_HIGH = 8564;
export const ERROR_DS_FOREST_VERSION_TOO_LOW = 8565;
export const ERROR_DS_DOMAIN_VERSION_TOO_LOW = 8566;
export const ERROR_DS_INCOMPATIBLE_VERSION = 8567;
export const ERROR_DS_LOW_DSA_VERSION = 8568;
export const ERROR_DS_NO_BEHAVIOR_VERSION_IN_MIXEDDOMAIN = 8569;
export const ERROR_DS_NOT_SUPPORTED_SORT_ORDER = 8570;
export const ERROR_DS_NAME_NOT_UNIQUE = 8571;
export const ERROR_DS_MACHINE_ACCOUNT_CREATED_PRENT4 = 8572;
export const ERROR_DS_OUT_OF_VERSION_STORE = 8573;
export const ERROR_DS_INCOMPATIBLE_CONTROLS_USED = 8574;
export const ERROR_DS_NO_REF_DOMAIN = 8575;
export const ERROR_DS_RESERVED_LINK_ID = 8576;
export const ERROR_DS_LINK_ID_NOT_AVAILABLE = 8577;
export const ERROR_DS_AG_CANT_HAVE_UNIVERSAL_MEMBER = 8578;
export const ERROR_DS_MODIFYDN_DISALLOWED_BY_INSTANCE_TYPE = 8579;
export const ERROR_DS_NO_OBJECT_MOVE_IN_SCHEMA_NC = 8580;
export const ERROR_DS_MODIFYDN_DISALLOWED_BY_FLAG = 8581;
export const ERROR_DS_MODIFYDN_WRONG_GRANDPARENT = 8582;
export const ERROR_DS_NAME_ERROR_TRUST_REFERRAL = 8583;
export const ERROR_NOT_SUPPORTED_ON_STANDARD_SERVER = 8584;
export const ERROR_DS_CANT_ACCESS_REMOTE_PART_OF_AD = 8585;
export const ERROR_DS_CR_IMPOSSIBLE_TO_VALIDATE_V2 = 8586;
export const ERROR_DS_THREAD_LIMIT_EXCEEDED = 8587;
export const ERROR_DS_NOT_CLOSEST = 8588;
export const ERROR_DS_CANT_DERIVE_SPN_WITHOUT_SERVER_REF = 8589;
export const ERROR_DS_SINGLE_USER_MODE_FAILED = 8590;
export const ERROR_DS_NTDSCRIPT_SYNTAX_ERROR = 8591;
export const ERROR_DS_NTDSCRIPT_PROCESS_ERROR = 8592;
export const ERROR_DS_DIFFERENT_REPL_EPOCHS = 8593;
export const ERROR_DS_DRS_EXTENSIONS_CHANGED = 8594;
export const ERROR_DS_REPLICA_SET_CHANGE_NOT_ALLOWED_ON_DISABLED_CR = 8595;
export const ERROR_DS_NO_MSDS_INTID = 8596;
export const ERROR_DS_DUP_MSDS_INTID = 8597;
export const ERROR_DS_EXISTS_IN_RDNATTID = 8598;
export const ERROR_DS_AUTHORIZATION_FAILED = 8599;
export const ERROR_DS_INVALID_SCRIPT = 8600;
export const ERROR_DS_REMOTE_CROSSREF_OP_FAILED = 8601;
export const ERROR_DS_CROSS_REF_BUSY = 8602;
export const ERROR_DS_CANT_DERIVE_SPN_FOR_DELETED_DOMAIN = 8603;
export const ERROR_DS_CANT_DEMOTE_WITH_WRITEABLE_NC = 8604;
export const ERROR_DS_DUPLICATE_ID_FOUND = 8605;
export const ERROR_DS_INSUFFICIENT_ATTR_TO_CREATE_OBJECT = 8606;
export const ERROR_DS_GROUP_CONVERSION_ERROR = 8607;
export const ERROR_DS_CANT_MOVE_APP_BASIC_GROUP = 8608;
export const ERROR_DS_CANT_MOVE_APP_QUERY_GROUP = 8609;
export const ERROR_DS_ROLE_NOT_VERIFIED = 8610;
export const ERROR_DS_WKO_CONTAINER_CANNOT_BE_SPECIAL = 8611;
export const ERROR_DS_DOMAIN_RENAME_IN_PROGRESS = 8612;
export const ERROR_DS_EXISTING_AD_CHILD_NC = 8613;
export const ERROR_DS_REPL_LIFETIME_EXCEEDED = 8614;
export const ERROR_DS_DISALLOWED_IN_SYSTEM_CONTAINER = 8615;
export const ERROR_DS_LDAP_SEND_QUEUE_FULL = 8616;
export const ERROR_DS_DRA_OUT_SCHEDULE_WINDOW = 8617;
export const ERROR_DS_POLICY_NOT_KNOWN = 8618;
export const ERROR_NO_SITE_SETTINGS_OBJECT = 8619;
export const ERROR_NO_SECRETS = 8620;
export const ERROR_NO_WRITABLE_DC_FOUND = 8621;
export const ERROR_DS_NO_SERVER_OBJECT = 8622;
export const ERROR_DS_NO_NTDSA_OBJECT = 8623;
export const ERROR_DS_NON_ASQ_SEARCH = 8624;
export const ERROR_DS_AUDIT_FAILURE = 8625;
export const ERROR_DS_INVALID_SEARCH_FLAG_SUBTREE = 8626;
export const ERROR_DS_INVALID_SEARCH_FLAG_TUPLE = 8627;
export const ERROR_DS_HIERARCHY_TABLE_TOO_DEEP = 8628;
export const ERROR_DS_DRA_CORRUPT_UTD_VECTOR = 8629;
export const ERROR_DS_DRA_SECRETS_DENIED = 8630;
export const ERROR_DS_RESERVED_MAPI_ID = 8631;
export const ERROR_DS_MAPI_ID_NOT_AVAILABLE = 8632;
export const ERROR_DS_DRA_MISSING_KRBTGT_SECRET = 8633;
export const ERROR_DS_DOMAIN_NAME_EXISTS_IN_FOREST = 8634;
export const ERROR_DS_FLAT_NAME_EXISTS_IN_FOREST = 8635;
export const ERROR_INVALID_USER_PRINCIPAL_NAME = 8636;
export const ERROR_DS_OID_MAPPED_GROUP_CANT_HAVE_MEMBERS = 8637;
export const ERROR_DS_OID_NOT_FOUND = 8638;
export const ERROR_DS_DRA_RECYCLED_TARGET = 8639;
export const ERROR_DS_DISALLOWED_NC_REDIRECT = 8640;
export const ERROR_DS_HIGH_ADLDS_FFL = 8641;
export const ERROR_DS_HIGH_DSA_VERSION = 8642;
export const ERROR_DS_LOW_ADLDS_FFL = 8643;
export const ERROR_DOMAIN_SID_SAME_AS_LOCAL_WORKSTATION = 8644;
export const ERROR_DS_UNDELETE_SAM_VALIDATION_FAILED = 8645;
export const ERROR_INCORRECT_ACCOUNT_TYPE = 8646;
export const ERROR_DS_SPN_VALUE_NOT_UNIQUE_IN_FOREST = 8647;
export const ERROR_DS_UPN_VALUE_NOT_UNIQUE_IN_FOREST = 8648;
export const ERROR_DS_MISSING_FOREST_TRUST = 8649;
export const ERROR_DS_VALUE_KEY_NOT_UNIQUE = 8650;
export const ERROR_WEAK_WHFBKEY_BLOCKED = 8651;
export const DNS_ERROR_RESPONSE_CODES_BASE = 9000;
export const DNS_ERROR_RCODE_NO_ERROR = 0;
export const DNS_ERROR_MASK = 9000;
export const DNS_ERROR_RCODE_FORMAT_ERROR = 9001;
export const DNS_ERROR_RCODE_SERVER_FAILURE = 9002;
export const DNS_ERROR_RCODE_NAME_ERROR = 9003;
export const DNS_ERROR_RCODE_NOT_IMPLEMENTED = 9004;
export const DNS_ERROR_RCODE_REFUSED = 9005;
export const DNS_ERROR_RCODE_YXDOMAIN = 9006;
export const DNS_ERROR_RCODE_YXRRSET = 9007;
export const DNS_ERROR_RCODE_NXRRSET = 9008;
export const DNS_ERROR_RCODE_NOTAUTH = 9009;
export const DNS_ERROR_RCODE_NOTZONE = 9010;
export const DNS_ERROR_RCODE_BADSIG = 9016;
export const DNS_ERROR_RCODE_BADKEY = 9017;
export const DNS_ERROR_RCODE_BADTIME = 9018;
export const DNS_ERROR_RCODE_LAST = 9018;
export const DNS_ERROR_DNSSEC_BASE = 9100;
export const DNS_ERROR_KEYMASTER_REQUIRED = 9101;
export const DNS_ERROR_NOT_ALLOWED_ON_SIGNED_ZONE = 9102;
export const DNS_ERROR_NSEC3_INCOMPATIBLE_WITH_RSA_SHA1 = 9103;
export const DNS_ERROR_NOT_ENOUGH_SIGNING_KEY_DESCRIPTORS = 9104;
export const DNS_ERROR_UNSUPPORTED_ALGORITHM = 9105;
export const DNS_ERROR_INVALID_KEY_SIZE = 9106;
export const DNS_ERROR_SIGNING_KEY_NOT_ACCESSIBLE = 9107;
export const DNS_ERROR_KSP_DOES_NOT_SUPPORT_PROTECTION = 9108;
export const DNS_ERROR_UNEXPECTED_DATA_PROTECTION_ERROR = 9109;
export const DNS_ERROR_UNEXPECTED_CNG_ERROR = 9110;
export const DNS_ERROR_UNKNOWN_SIGNING_PARAMETER_VERSION = 9111;
export const DNS_ERROR_KSP_NOT_ACCESSIBLE = 9112;
export const DNS_ERROR_TOO_MANY_SKDS = 9113;
export const DNS_ERROR_INVALID_ROLLOVER_PERIOD = 9114;
export const DNS_ERROR_INVALID_INITIAL_ROLLOVER_OFFSET = 9115;
export const DNS_ERROR_ROLLOVER_IN_PROGRESS = 9116;
export const DNS_ERROR_STANDBY_KEY_NOT_PRESENT = 9117;
export const DNS_ERROR_NOT_ALLOWED_ON_ZSK = 9118;
export const DNS_ERROR_NOT_ALLOWED_ON_ACTIVE_SKD = 9119;
export const DNS_ERROR_ROLLOVER_ALREADY_QUEUED = 9120;
export const DNS_ERROR_NOT_ALLOWED_ON_UNSIGNED_ZONE = 9121;
export const DNS_ERROR_BAD_KEYMASTER = 9122;
export const DNS_ERROR_INVALID_SIGNATURE_VALIDITY_PERIOD = 9123;
export const DNS_ERROR_INVALID_NSEC3_ITERATION_COUNT = 9124;
export const DNS_ERROR_DNSSEC_IS_DISABLED = 9125;
export const DNS_ERROR_INVALID_XML = 9126;
export const DNS_ERROR_NO_VALID_TRUST_ANCHORS = 9127;
export const DNS_ERROR_ROLLOVER_NOT_POKEABLE = 9128;
export const DNS_ERROR_NSEC3_NAME_COLLISION = 9129;
export const DNS_ERROR_NSEC_INCOMPATIBLE_WITH_NSEC3_RSA_SHA1 = 9130;
export const DNS_ERROR_PACKET_FMT_BASE = 9500;
export const DNS_ERROR_BAD_PACKET = 9502;
export const DNS_ERROR_NO_PACKET = 9503;
export const DNS_ERROR_RCODE = 9504;
export const DNS_ERROR_UNSECURE_PACKET = 9505;
export const DNS_ERROR_NO_MEMORY = 14;
export const DNS_ERROR_INVALID_NAME = 123;
export const DNS_ERROR_INVALID_DATA = 13;
export const DNS_ERROR_GENERAL_API_BASE = 9550;
export const DNS_ERROR_INVALID_TYPE = 9551;
export const DNS_ERROR_INVALID_IP_ADDRESS = 9552;
export const DNS_ERROR_INVALID_PROPERTY = 9553;
export const DNS_ERROR_TRY_AGAIN_LATER = 9554;
export const DNS_ERROR_NOT_UNIQUE = 9555;
export const DNS_ERROR_NON_RFC_NAME = 9556;
export const DNS_ERROR_INVALID_NAME_CHAR = 9560;
export const DNS_ERROR_NUMERIC_NAME = 9561;
export const DNS_ERROR_NOT_ALLOWED_ON_ROOT_SERVER = 9562;
export const DNS_ERROR_NOT_ALLOWED_UNDER_DELEGATION = 9563;
export const DNS_ERROR_CANNOT_FIND_ROOT_HINTS = 9564;
export const DNS_ERROR_INCONSISTENT_ROOT_HINTS = 9565;
export const DNS_ERROR_DWORD_VALUE_TOO_SMALL = 9566;
export const DNS_ERROR_DWORD_VALUE_TOO_LARGE = 9567;
export const DNS_ERROR_BACKGROUND_LOADING = 9568;
export const DNS_ERROR_NOT_ALLOWED_ON_RODC = 9569;
export const DNS_ERROR_NOT_ALLOWED_UNDER_DNAME = 9570;
export const DNS_ERROR_DELEGATION_REQUIRED = 9571;
export const DNS_ERROR_INVALID_POLICY_TABLE = 9572;
export const DNS_ERROR_ADDRESS_REQUIRED = 9573;
export const DNS_ERROR_ZONE_BASE = 9600;
export const DNS_ERROR_ZONE_DOES_NOT_EXIST = 9601;
export const DNS_ERROR_NO_ZONE_INFO = 9602;
export const DNS_ERROR_INVALID_ZONE_OPERATION = 9603;
export const DNS_ERROR_ZONE_CONFIGURATION_ERROR = 9604;
export const DNS_ERROR_ZONE_HAS_NO_SOA_RECORD = 9605;
export const DNS_ERROR_ZONE_HAS_NO_NS_RECORDS = 9606;
export const DNS_ERROR_ZONE_LOCKED = 9607;
export const DNS_ERROR_ZONE_CREATION_FAILED = 9608;
export const DNS_ERROR_ZONE_ALREADY_EXISTS = 9609;
export const DNS_ERROR_AUTOZONE_ALREADY_EXISTS = 9610;
export const DNS_ERROR_INVALID_ZONE_TYPE = 9611;
export const DNS_ERROR_SECONDARY_REQUIRES_MASTER_IP = 9612;
export const DNS_ERROR_ZONE_NOT_SECONDARY = 9613;
export const DNS_ERROR_NEED_SECONDARY_ADDRESSES = 9614;
export const DNS_ERROR_WINS_INIT_FAILED = 9615;
export const DNS_ERROR_NEED_WINS_SERVERS = 9616;
export const DNS_ERROR_NBSTAT_INIT_FAILED = 9617;
export const DNS_ERROR_SOA_DELETE_INVALID = 9618;
export const DNS_ERROR_FORWARDER_ALREADY_EXISTS = 9619;
export const DNS_ERROR_ZONE_REQUIRES_MASTER_IP = 9620;
export const DNS_ERROR_ZONE_IS_SHUTDOWN = 9621;
export const DNS_ERROR_ZONE_LOCKED_FOR_SIGNING = 9622;
export const DNS_ERROR_DATAFILE_BASE = 9650;
export const DNS_ERROR_PRIMARY_REQUIRES_DATAFILE = 9651;
export const DNS_ERROR_INVALID_DATAFILE_NAME = 9652;
export const DNS_ERROR_DATAFILE_OPEN_FAILURE = 9653;
export const DNS_ERROR_FILE_WRITEBACK_FAILED = 9654;
export const DNS_ERROR_DATAFILE_PARSING = 9655;
export const DNS_ERROR_DATABASE_BASE = 9700;
export const DNS_ERROR_RECORD_DOES_NOT_EXIST = 9701;
export const DNS_ERROR_RECORD_FORMAT = 9702;
export const DNS_ERROR_NODE_CREATION_FAILED = 9703;
export const DNS_ERROR_UNKNOWN_RECORD_TYPE = 9704;
export const DNS_ERROR_RECORD_TIMED_OUT = 9705;
export const DNS_ERROR_NAME_NOT_IN_ZONE = 9706;
export const DNS_ERROR_CNAME_LOOP = 9707;
export const DNS_ERROR_NODE_IS_CNAME = 9708;
export const DNS_ERROR_CNAME_COLLISION = 9709;
export const DNS_ERROR_RECORD_ONLY_AT_ZONE_ROOT = 9710;
export const DNS_ERROR_RECORD_ALREADY_EXISTS = 9711;
export const DNS_ERROR_SECONDARY_DATA = 9712;
export const DNS_ERROR_NO_CREATE_CACHE_DATA = 9713;
export const DNS_ERROR_NAME_DOES_NOT_EXIST = 9714;
export const DNS_ERROR_DS_UNAVAILABLE = 9717;
export const DNS_ERROR_DS_ZONE_ALREADY_EXISTS = 9718;
export const DNS_ERROR_NO_BOOTFILE_IF_DS_ZONE = 9719;
export const DNS_ERROR_NODE_IS_DNAME = 9720;
export const DNS_ERROR_DNAME_COLLISION = 9721;
export const DNS_ERROR_ALIAS_LOOP = 9722;
export const DNS_ERROR_OPERATION_BASE = 9750;
export const DNS_ERROR_AXFR = 9752;
export const DNS_ERROR_SECURE_BASE = 9800;
export const DNS_ERROR_SETUP_BASE = 9850;
export const DNS_ERROR_NO_TCPIP = 9851;
export const DNS_ERROR_NO_DNS_SERVERS = 9852;
export const DNS_ERROR_DP_BASE = 9900;
export const DNS_ERROR_DP_DOES_NOT_EXIST = 9901;
export const DNS_ERROR_DP_ALREADY_EXISTS = 9902;
export const DNS_ERROR_DP_NOT_ENLISTED = 9903;
export const DNS_ERROR_DP_ALREADY_ENLISTED = 9904;
export const DNS_ERROR_DP_NOT_AVAILABLE = 9905;
export const DNS_ERROR_DP_FSMO_ERROR = 9906;
export const DNS_ERROR_RRL_NOT_ENABLED = 9911;
export const DNS_ERROR_RRL_INVALID_WINDOW_SIZE = 9912;
export const DNS_ERROR_RRL_INVALID_IPV4_PREFIX = 9913;
export const DNS_ERROR_RRL_INVALID_IPV6_PREFIX = 9914;
export const DNS_ERROR_RRL_INVALID_TC_RATE = 9915;
export const DNS_ERROR_RRL_INVALID_LEAK_RATE = 9916;
export const DNS_ERROR_RRL_LEAK_RATE_LESSTHAN_TC_RATE = 9917;
export const DNS_ERROR_VIRTUALIZATION_INSTANCE_ALREADY_EXISTS = 9921;
export const DNS_ERROR_VIRTUALIZATION_INSTANCE_DOES_NOT_EXIST = 9922;
export const DNS_ERROR_VIRTUALIZATION_TREE_LOCKED = 9923;
export const DNS_ERROR_INVAILD_VIRTUALIZATION_INSTANCE_NAME = 9924;
export const DNS_ERROR_DEFAULT_VIRTUALIZATION_INSTANCE = 9925;
export const DNS_ERROR_ZONESCOPE_ALREADY_EXISTS = 9951;
export const DNS_ERROR_ZONESCOPE_DOES_NOT_EXIST = 9952;
export const DNS_ERROR_DEFAULT_ZONESCOPE = 9953;
export const DNS_ERROR_INVALID_ZONESCOPE_NAME = 9954;
export const DNS_ERROR_NOT_ALLOWED_WITH_ZONESCOPES = 9955;
export const DNS_ERROR_LOAD_ZONESCOPE_FAILED = 9956;
export const DNS_ERROR_ZONESCOPE_FILE_WRITEBACK_FAILED = 9957;
export const DNS_ERROR_INVALID_SCOPE_NAME = 9958;
export const DNS_ERROR_SCOPE_DOES_NOT_EXIST = 9959;
export const DNS_ERROR_DEFAULT_SCOPE = 9960;
export const DNS_ERROR_INVALID_SCOPE_OPERATION = 9961;
export const DNS_ERROR_SCOPE_LOCKED = 9962;
export const DNS_ERROR_SCOPE_ALREADY_EXISTS = 9963;
export const DNS_ERROR_POLICY_ALREADY_EXISTS = 9971;
export const DNS_ERROR_POLICY_DOES_NOT_EXIST = 9972;
export const DNS_ERROR_POLICY_INVALID_CRITERIA = 9973;
export const DNS_ERROR_POLICY_INVALID_SETTINGS = 9974;
export const DNS_ERROR_CLIENT_SUBNET_IS_ACCESSED = 9975;
export const DNS_ERROR_CLIENT_SUBNET_DOES_NOT_EXIST = 9976;
export const DNS_ERROR_CLIENT_SUBNET_ALREADY_EXISTS = 9977;
export const DNS_ERROR_SUBNET_DOES_NOT_EXIST = 9978;
export const DNS_ERROR_SUBNET_ALREADY_EXISTS = 9979;
export const DNS_ERROR_POLICY_LOCKED = 9980;
export const DNS_ERROR_POLICY_INVALID_WEIGHT = 9981;
export const DNS_ERROR_POLICY_INVALID_NAME = 9982;
export const DNS_ERROR_POLICY_MISSING_CRITERIA = 9983;
export const DNS_ERROR_INVALID_CLIENT_SUBNET_NAME = 9984;
export const DNS_ERROR_POLICY_PROCESSING_ORDER_INVALID = 9985;
export const DNS_ERROR_POLICY_SCOPE_MISSING = 9986;
export const DNS_ERROR_POLICY_SCOPE_NOT_ALLOWED = 9987;
export const DNS_ERROR_SERVERSCOPE_IS_REFERENCED = 9988;
export const DNS_ERROR_ZONESCOPE_IS_REFERENCED = 9989;
export const DNS_ERROR_POLICY_INVALID_CRITERIA_CLIENT_SUBNET = 9990;
export const DNS_ERROR_POLICY_INVALID_CRITERIA_TRANSPORT_PROTOCOL = 9991;
export const DNS_ERROR_POLICY_INVALID_CRITERIA_NETWORK_PROTOCOL = 9992;
export const DNS_ERROR_POLICY_INVALID_CRITERIA_INTERFACE = 9993;
export const DNS_ERROR_POLICY_INVALID_CRITERIA_FQDN = 9994;
export const DNS_ERROR_POLICY_INVALID_CRITERIA_QUERY_TYPE = 9995;
export const DNS_ERROR_POLICY_INVALID_CRITERIA_TIME_OF_DAY = 9996;
export const ERROR_IPSEC_QM_POLICY_EXISTS = 13000;
export const ERROR_IPSEC_QM_POLICY_NOT_FOUND = 13001;
export const ERROR_IPSEC_QM_POLICY_IN_USE = 13002;
export const ERROR_IPSEC_MM_POLICY_EXISTS = 13003;
export const ERROR_IPSEC_MM_POLICY_NOT_FOUND = 13004;
export const ERROR_IPSEC_MM_POLICY_IN_USE = 13005;
export const ERROR_IPSEC_MM_FILTER_EXISTS = 13006;
export const ERROR_IPSEC_MM_FILTER_NOT_FOUND = 13007;
export const ERROR_IPSEC_TRANSPORT_FILTER_EXISTS = 13008;
export const ERROR_IPSEC_TRANSPORT_FILTER_NOT_FOUND = 13009;
export const ERROR_IPSEC_MM_AUTH_EXISTS = 13010;
export const ERROR_IPSEC_MM_AUTH_NOT_FOUND = 13011;
export const ERROR_IPSEC_MM_AUTH_IN_USE = 13012;
export const ERROR_IPSEC_DEFAULT_MM_POLICY_NOT_FOUND = 13013;
export const ERROR_IPSEC_DEFAULT_MM_AUTH_NOT_FOUND = 13014;
export const ERROR_IPSEC_DEFAULT_QM_POLICY_NOT_FOUND = 13015;
export const ERROR_IPSEC_TUNNEL_FILTER_EXISTS = 13016;
export const ERROR_IPSEC_TUNNEL_FILTER_NOT_FOUND = 13017;
export const ERROR_IPSEC_MM_FILTER_PENDING_DELETION = 13018;
export const ERROR_IPSEC_TRANSPORT_FILTER_PENDING_DELETION = 13019;
export const ERROR_IPSEC_TUNNEL_FILTER_PENDING_DELETION = 13020;
export const ERROR_IPSEC_MM_POLICY_PENDING_DELETION = 13021;
export const ERROR_IPSEC_MM_AUTH_PENDING_DELETION = 13022;
export const ERROR_IPSEC_QM_POLICY_PENDING_DELETION = 13023;
export const ERROR_IPSEC_IKE_NEG_STATUS_BEGIN = 13800;
export const ERROR_IPSEC_IKE_AUTH_FAIL = 13801;
export const ERROR_IPSEC_IKE_ATTRIB_FAIL = 13802;
export const ERROR_IPSEC_IKE_NEGOTIATION_PENDING = 13803;
export const ERROR_IPSEC_IKE_GENERAL_PROCESSING_ERROR = 13804;
export const ERROR_IPSEC_IKE_TIMED_OUT = 13805;
export const ERROR_IPSEC_IKE_NO_CERT = 13806;
export const ERROR_IPSEC_IKE_SA_DELETED = 13807;
export const ERROR_IPSEC_IKE_SA_REAPED = 13808;
export const ERROR_IPSEC_IKE_MM_ACQUIRE_DROP = 13809;
export const ERROR_IPSEC_IKE_QM_ACQUIRE_DROP = 13810;
export const ERROR_IPSEC_IKE_QUEUE_DROP_MM = 13811;
export const ERROR_IPSEC_IKE_QUEUE_DROP_NO_MM = 13812;
export const ERROR_IPSEC_IKE_DROP_NO_RESPONSE = 13813;
export const ERROR_IPSEC_IKE_MM_DELAY_DROP = 13814;
export const ERROR_IPSEC_IKE_QM_DELAY_DROP = 13815;
export const ERROR_IPSEC_IKE_ERROR = 13816;
export const ERROR_IPSEC_IKE_CRL_FAILED = 13817;
export const ERROR_IPSEC_IKE_INVALID_KEY_USAGE = 13818;
export const ERROR_IPSEC_IKE_INVALID_CERT_TYPE = 13819;
export const ERROR_IPSEC_IKE_NO_PRIVATE_KEY = 13820;
export const ERROR_IPSEC_IKE_SIMULTANEOUS_REKEY = 13821;
export const ERROR_IPSEC_IKE_DH_FAIL = 13822;
export const ERROR_IPSEC_IKE_CRITICAL_PAYLOAD_NOT_RECOGNIZED = 13823;
export const ERROR_IPSEC_IKE_INVALID_HEADER = 13824;
export const ERROR_IPSEC_IKE_NO_POLICY = 13825;
export const ERROR_IPSEC_IKE_INVALID_SIGNATURE = 13826;
export const ERROR_IPSEC_IKE_KERBEROS_ERROR = 13827;
export const ERROR_IPSEC_IKE_NO_PUBLIC_KEY = 13828;
export const ERROR_IPSEC_IKE_PROCESS_ERR = 13829;
export const ERROR_IPSEC_IKE_PROCESS_ERR_SA = 13830;
export const ERROR_IPSEC_IKE_PROCESS_ERR_PROP = 13831;
export const ERROR_IPSEC_IKE_PROCESS_ERR_TRANS = 13832;
export const ERROR_IPSEC_IKE_PROCESS_ERR_KE = 13833;
export const ERROR_IPSEC_IKE_PROCESS_ERR_ID = 13834;
export const ERROR_IPSEC_IKE_PROCESS_ERR_CERT = 13835;
export const ERROR_IPSEC_IKE_PROCESS_ERR_CERT_REQ = 13836;
export const ERROR_IPSEC_IKE_PROCESS_ERR_HASH = 13837;
export const ERROR_IPSEC_IKE_PROCESS_ERR_SIG = 13838;
export const ERROR_IPSEC_IKE_PROCESS_ERR_NONCE = 13839;
export const ERROR_IPSEC_IKE_PROCESS_ERR_NOTIFY = 13840;
export const ERROR_IPSEC_IKE_PROCESS_ERR_DELETE = 13841;
export const ERROR_IPSEC_IKE_PROCESS_ERR_VENDOR = 13842;
export const ERROR_IPSEC_IKE_INVALID_PAYLOAD = 13843;
export const ERROR_IPSEC_IKE_LOAD_SOFT_SA = 13844;
export const ERROR_IPSEC_IKE_SOFT_SA_TORN_DOWN = 13845;
export const ERROR_IPSEC_IKE_INVALID_COOKIE = 13846;
export const ERROR_IPSEC_IKE_NO_PEER_CERT = 13847;
export const ERROR_IPSEC_IKE_PEER_CRL_FAILED = 13848;
export const ERROR_IPSEC_IKE_POLICY_CHANGE = 13849;
export const ERROR_IPSEC_IKE_NO_MM_POLICY = 13850;
export const ERROR_IPSEC_IKE_NOTCBPRIV = 13851;
export const ERROR_IPSEC_IKE_SECLOADFAIL = 13852;
export const ERROR_IPSEC_IKE_FAILSSPINIT = 13853;
export const ERROR_IPSEC_IKE_FAILQUERYSSP = 13854;
export const ERROR_IPSEC_IKE_SRVACQFAIL = 13855;
export const ERROR_IPSEC_IKE_SRVQUERYCRED = 13856;
export const ERROR_IPSEC_IKE_GETSPIFAIL = 13857;
export const ERROR_IPSEC_IKE_INVALID_FILTER = 13858;
export const ERROR_IPSEC_IKE_OUT_OF_MEMORY = 13859;
export const ERROR_IPSEC_IKE_ADD_UPDATE_KEY_FAILED = 13860;
export const ERROR_IPSEC_IKE_INVALID_POLICY = 13861;
export const ERROR_IPSEC_IKE_UNKNOWN_DOI = 13862;
export const ERROR_IPSEC_IKE_INVALID_SITUATION = 13863;
export const ERROR_IPSEC_IKE_DH_FAILURE = 13864;
export const ERROR_IPSEC_IKE_INVALID_GROUP = 13865;
export const ERROR_IPSEC_IKE_ENCRYPT = 13866;
export const ERROR_IPSEC_IKE_DECRYPT = 13867;
export const ERROR_IPSEC_IKE_POLICY_MATCH = 13868;
export const ERROR_IPSEC_IKE_UNSUPPORTED_ID = 13869;
export const ERROR_IPSEC_IKE_INVALID_HASH = 13870;
export const ERROR_IPSEC_IKE_INVALID_HASH_ALG = 13871;
export const ERROR_IPSEC_IKE_INVALID_HASH_SIZE = 13872;
export const ERROR_IPSEC_IKE_INVALID_ENCRYPT_ALG = 13873;
export const ERROR_IPSEC_IKE_INVALID_AUTH_ALG = 13874;
export const ERROR_IPSEC_IKE_INVALID_SIG = 13875;
export const ERROR_IPSEC_IKE_LOAD_FAILED = 13876;
export const ERROR_IPSEC_IKE_RPC_DELETE = 13877;
export const ERROR_IPSEC_IKE_BENIGN_REINIT = 13878;
export const ERROR_IPSEC_IKE_INVALID_RESPONDER_LIFETIME_NOTIFY = 13879;
export const ERROR_IPSEC_IKE_INVALID_MAJOR_VERSION = 13880;
export const ERROR_IPSEC_IKE_INVALID_CERT_KEYLEN = 13881;
export const ERROR_IPSEC_IKE_MM_LIMIT = 13882;
export const ERROR_IPSEC_IKE_NEGOTIATION_DISABLED = 13883;
export const ERROR_IPSEC_IKE_QM_LIMIT = 13884;
export const ERROR_IPSEC_IKE_MM_EXPIRED = 13885;
export const ERROR_IPSEC_IKE_PEER_MM_ASSUMED_INVALID = 13886;
export const ERROR_IPSEC_IKE_CERT_CHAIN_POLICY_MISMATCH = 13887;
export const ERROR_IPSEC_IKE_UNEXPECTED_MESSAGE_ID = 13888;
export const ERROR_IPSEC_IKE_INVALID_AUTH_PAYLOAD = 13889;
export const ERROR_IPSEC_IKE_DOS_COOKIE_SENT = 13890;
export const ERROR_IPSEC_IKE_SHUTTING_DOWN = 13891;
export const ERROR_IPSEC_IKE_CGA_AUTH_FAILED = 13892;
export const ERROR_IPSEC_IKE_PROCESS_ERR_NATOA = 13893;
export const ERROR_IPSEC_IKE_INVALID_MM_FOR_QM = 13894;
export const ERROR_IPSEC_IKE_QM_EXPIRED = 13895;
export const ERROR_IPSEC_IKE_TOO_MANY_FILTERS = 13896;
export const ERROR_IPSEC_IKE_NEG_STATUS_END = 13897;
export const ERROR_IPSEC_IKE_KILL_DUMMY_NAP_TUNNEL = 13898;
export const ERROR_IPSEC_IKE_INNER_IP_ASSIGNMENT_FAILURE = 13899;
export const ERROR_IPSEC_IKE_REQUIRE_CP_PAYLOAD_MISSING = 13900;
export const ERROR_IPSEC_KEY_MODULE_IMPERSONATION_NEGOTIATION_PENDING = 13901;
export const ERROR_IPSEC_IKE_COEXISTENCE_SUPPRESS = 13902;
export const ERROR_IPSEC_IKE_RATELIMIT_DROP = 13903;
export const ERROR_IPSEC_IKE_PEER_DOESNT_SUPPORT_MOBIKE = 13904;
export const ERROR_IPSEC_IKE_AUTHORIZATION_FAILURE = 13905;
export const ERROR_IPSEC_IKE_STRONG_CRED_AUTHORIZATION_FAILURE = 13906;
export const ERROR_IPSEC_IKE_AUTHORIZATION_FAILURE_WITH_OPTIONAL_RETRY = 13907;
export const ERROR_IPSEC_IKE_STRONG_CRED_AUTHORIZATION_AND_CERTMAP_FAILURE = 13908;
export const ERROR_IPSEC_IKE_NEG_STATUS_EXTENDED_END = 13909;
export const ERROR_IPSEC_BAD_SPI = 13910;
export const ERROR_IPSEC_SA_LIFETIME_EXPIRED = 13911;
export const ERROR_IPSEC_WRONG_SA = 13912;
export const ERROR_IPSEC_REPLAY_CHECK_FAILED = 13913;
export const ERROR_IPSEC_INVALID_PACKET = 13914;
export const ERROR_IPSEC_INTEGRITY_CHECK_FAILED = 13915;
export const ERROR_IPSEC_CLEAR_TEXT_DROP = 13916;
export const ERROR_IPSEC_AUTH_FIREWALL_DROP = 13917;
export const ERROR_IPSEC_THROTTLE_DROP = 13918;
export const ERROR_IPSEC_DOSP_BLOCK = 13925;
export const ERROR_IPSEC_DOSP_RECEIVED_MULTICAST = 13926;
export const ERROR_IPSEC_DOSP_INVALID_PACKET = 13927;
export const ERROR_IPSEC_DOSP_STATE_LOOKUP_FAILED = 13928;
export const ERROR_IPSEC_DOSP_MAX_ENTRIES = 13929;
export const ERROR_IPSEC_DOSP_KEYMOD_NOT_ALLOWED = 13930;
export const ERROR_IPSEC_DOSP_NOT_INSTALLED = 13931;
export const ERROR_IPSEC_DOSP_MAX_PER_IP_RATELIMIT_QUEUES = 13932;
export const ERROR_SXS_SECTION_NOT_FOUND = 14000;
export const ERROR_SXS_CANT_GEN_ACTCTX = 14001;
export const ERROR_SXS_INVALID_ACTCTXDATA_FORMAT = 14002;
export const ERROR_SXS_ASSEMBLY_NOT_FOUND = 14003;
export const ERROR_SXS_MANIFEST_FORMAT_ERROR = 14004;
export const ERROR_SXS_MANIFEST_PARSE_ERROR = 14005;
export const ERROR_SXS_ACTIVATION_CONTEXT_DISABLED = 14006;
export const ERROR_SXS_KEY_NOT_FOUND = 14007;
export const ERROR_SXS_VERSION_CONFLICT = 14008;
export const ERROR_SXS_WRONG_SECTION_TYPE = 14009;
export const ERROR_SXS_THREAD_QUERIES_DISABLED = 14010;
export const ERROR_SXS_PROCESS_DEFAULT_ALREADY_SET = 14011;
export const ERROR_SXS_UNKNOWN_ENCODING_GROUP = 14012;
export const ERROR_SXS_UNKNOWN_ENCODING = 14013;
export const ERROR_SXS_INVALID_XML_NAMESPACE_URI = 14014;
export const ERROR_SXS_ROOT_MANIFEST_DEPENDENCY_NOT_INSTALLED = 14015;
export const ERROR_SXS_LEAF_MANIFEST_DEPENDENCY_NOT_INSTALLED = 14016;
export const ERROR_SXS_INVALID_ASSEMBLY_IDENTITY_ATTRIBUTE = 14017;
export const ERROR_SXS_MANIFEST_MISSING_REQUIRED_DEFAULT_NAMESPACE = 14018;
export const ERROR_SXS_MANIFEST_INVALID_REQUIRED_DEFAULT_NAMESPACE = 14019;
export const ERROR_SXS_PRIVATE_MANIFEST_CROSS_PATH_WITH_REPARSE_POINT = 14020;
export const ERROR_SXS_DUPLICATE_DLL_NAME = 14021;
export const ERROR_SXS_DUPLICATE_WINDOWCLASS_NAME = 14022;
export const ERROR_SXS_DUPLICATE_CLSID = 14023;
export const ERROR_SXS_DUPLICATE_IID = 14024;
export const ERROR_SXS_DUPLICATE_TLBID = 14025;
export const ERROR_SXS_DUPLICATE_PROGID = 14026;
export const ERROR_SXS_DUPLICATE_ASSEMBLY_NAME = 14027;
export const ERROR_SXS_FILE_HASH_MISMATCH = 14028;
export const ERROR_SXS_POLICY_PARSE_ERROR = 14029;
export const ERROR_SXS_XML_E_MISSINGQUOTE = 14030;
export const ERROR_SXS_XML_E_COMMENTSYNTAX = 14031;
export const ERROR_SXS_XML_E_BADSTARTNAMECHAR = 14032;
export const ERROR_SXS_XML_E_BADNAMECHAR = 14033;
export const ERROR_SXS_XML_E_BADCHARINSTRING = 14034;
export const ERROR_SXS_XML_E_XMLDECLSYNTAX = 14035;
export const ERROR_SXS_XML_E_BADCHARDATA = 14036;
export const ERROR_SXS_XML_E_MISSINGWHITESPACE = 14037;
export const ERROR_SXS_XML_E_EXPECTINGTAGEND = 14038;
export const ERROR_SXS_XML_E_MISSINGSEMICOLON = 14039;
export const ERROR_SXS_XML_E_UNBALANCEDPAREN = 14040;
export const ERROR_SXS_XML_E_INTERNALERROR = 14041;
export const ERROR_SXS_XML_E_UNEXPECTED_WHITESPACE = 14042;
export const ERROR_SXS_XML_E_INCOMPLETE_ENCODING = 14043;
export const ERROR_SXS_XML_E_MISSING_PAREN = 14044;
export const ERROR_SXS_XML_E_EXPECTINGCLOSEQUOTE = 14045;
export const ERROR_SXS_XML_E_MULTIPLE_COLONS = 14046;
export const ERROR_SXS_XML_E_INVALID_DECIMAL = 14047;
export const ERROR_SXS_XML_E_INVALID_HEXIDECIMAL = 14048;
export const ERROR_SXS_XML_E_INVALID_UNICODE = 14049;
export const ERROR_SXS_XML_E_WHITESPACEORQUESTIONMARK = 14050;
export const ERROR_SXS_XML_E_UNEXPECTEDENDTAG = 14051;
export const ERROR_SXS_XML_E_UNCLOSEDTAG = 14052;
export const ERROR_SXS_XML_E_DUPLICATEATTRIBUTE = 14053;
export const ERROR_SXS_XML_E_MULTIPLEROOTS = 14054;
export const ERROR_SXS_XML_E_INVALIDATROOTLEVEL = 14055;
export const ERROR_SXS_XML_E_BADXMLDECL = 14056;
export const ERROR_SXS_XML_E_MISSINGROOT = 14057;
export const ERROR_SXS_XML_E_UNEXPECTEDEOF = 14058;
export const ERROR_SXS_XML_E_BADPEREFINSUBSET = 14059;
export const ERROR_SXS_XML_E_UNCLOSEDSTARTTAG = 14060;
export const ERROR_SXS_XML_E_UNCLOSEDENDTAG = 14061;
export const ERROR_SXS_XML_E_UNCLOSEDSTRING = 14062;
export const ERROR_SXS_XML_E_UNCLOSEDCOMMENT = 14063;
export const ERROR_SXS_XML_E_UNCLOSEDDECL = 14064;
export const ERROR_SXS_XML_E_UNCLOSEDCDATA = 14065;
export const ERROR_SXS_XML_E_RESERVEDNAMESPACE = 14066;
export const ERROR_SXS_XML_E_INVALIDENCODING = 14067;
export const ERROR_SXS_XML_E_INVALIDSWITCH = 14068;
export const ERROR_SXS_XML_E_BADXMLCASE = 14069;
export const ERROR_SXS_XML_E_INVALID_STANDALONE = 14070;
export const ERROR_SXS_XML_E_UNEXPECTED_STANDALONE = 14071;
export const ERROR_SXS_XML_E_INVALID_VERSION = 14072;
export const ERROR_SXS_XML_E_MISSINGEQUALS = 14073;
export const ERROR_SXS_PROTECTION_RECOVERY_FAILED = 14074;
export const ERROR_SXS_PROTECTION_PUBLIC_KEY_TOO_SHORT = 14075;
export const ERROR_SXS_PROTECTION_CATALOG_NOT_VALID = 14076;
export const ERROR_SXS_UNTRANSLATABLE_HRESULT = 14077;
export const ERROR_SXS_PROTECTION_CATALOG_FILE_MISSING = 14078;
export const ERROR_SXS_MISSING_ASSEMBLY_IDENTITY_ATTRIBUTE = 14079;
export const ERROR_SXS_INVALID_ASSEMBLY_IDENTITY_ATTRIBUTE_NAME = 14080;
export const ERROR_SXS_ASSEMBLY_MISSING = 14081;
export const ERROR_SXS_CORRUPT_ACTIVATION_STACK = 14082;
export const ERROR_SXS_CORRUPTION = 14083;
export const ERROR_SXS_EARLY_DEACTIVATION = 14084;
export const ERROR_SXS_INVALID_DEACTIVATION = 14085;
export const ERROR_SXS_MULTIPLE_DEACTIVATION = 14086;
export const ERROR_SXS_PROCESS_TERMINATION_REQUESTED = 14087;
export const ERROR_SXS_RELEASE_ACTIVATION_CONTEXT = 14088;
export const ERROR_SXS_SYSTEM_DEFAULT_ACTIVATION_CONTEXT_EMPTY = 14089;
export const ERROR_SXS_INVALID_IDENTITY_ATTRIBUTE_VALUE = 14090;
export const ERROR_SXS_INVALID_IDENTITY_ATTRIBUTE_NAME = 14091;
export const ERROR_SXS_IDENTITY_DUPLICATE_ATTRIBUTE = 14092;
export const ERROR_SXS_IDENTITY_PARSE_ERROR = 14093;
export const ERROR_MALFORMED_SUBSTITUTION_STRING = 14094;
export const ERROR_SXS_INCORRECT_PUBLIC_KEY_TOKEN = 14095;
export const ERROR_UNMAPPED_SUBSTITUTION_STRING = 14096;
export const ERROR_SXS_ASSEMBLY_NOT_LOCKED = 14097;
export const ERROR_SXS_COMPONENT_STORE_CORRUPT = 14098;
export const ERROR_ADVANCED_INSTALLER_FAILED = 14099;
export const ERROR_XML_ENCODING_MISMATCH = 14100;
export const ERROR_SXS_MANIFEST_IDENTITY_SAME_BUT_CONTENTS_DIFFERENT = 14101;
export const ERROR_SXS_IDENTITIES_DIFFERENT = 14102;
export const ERROR_SXS_ASSEMBLY_IS_NOT_A_DEPLOYMENT = 14103;
export const ERROR_SXS_FILE_NOT_PART_OF_ASSEMBLY = 14104;
export const ERROR_SXS_MANIFEST_TOO_BIG = 14105;
export const ERROR_SXS_SETTING_NOT_REGISTERED = 14106;
export const ERROR_SXS_TRANSACTION_CLOSURE_INCOMPLETE = 14107;
export const ERROR_SMI_PRIMITIVE_INSTALLER_FAILED = 14108;
export const ERROR_GENERIC_COMMAND_FAILED = 14109;
export const ERROR_SXS_FILE_HASH_MISSING = 14110;
export const ERROR_SXS_DUPLICATE_ACTIVATABLE_CLASS = 14111;
export const ERROR_EVT_INVALID_CHANNEL_PATH = 15000;
export const ERROR_EVT_INVALID_QUERY = 15001;
export const ERROR_EVT_PUBLISHER_METADATA_NOT_FOUND = 15002;
export const ERROR_EVT_EVENT_TEMPLATE_NOT_FOUND = 15003;
export const ERROR_EVT_INVALID_PUBLISHER_NAME = 15004;
export const ERROR_EVT_INVALID_EVENT_DATA = 15005;
export const ERROR_EVT_CHANNEL_NOT_FOUND = 15007;
export const ERROR_EVT_MALFORMED_XML_TEXT = 15008;
export const ERROR_EVT_SUBSCRIPTION_TO_DIRECT_CHANNEL = 15009;
export const ERROR_EVT_CONFIGURATION_ERROR = 15010;
export const ERROR_EVT_QUERY_RESULT_STALE = 15011;
export const ERROR_EVT_QUERY_RESULT_INVALID_POSITION = 15012;
export const ERROR_EVT_NON_VALIDATING_MSXML = 15013;
export const ERROR_EVT_FILTER_ALREADYSCOPED = 15014;
export const ERROR_EVT_FILTER_NOTELTSET = 15015;
export const ERROR_EVT_FILTER_INVARG = 15016;
export const ERROR_EVT_FILTER_INVTEST = 15017;
export const ERROR_EVT_FILTER_INVTYPE = 15018;
export const ERROR_EVT_FILTER_PARSEERR = 15019;
export const ERROR_EVT_FILTER_UNSUPPORTEDOP = 15020;
export const ERROR_EVT_FILTER_UNEXPECTEDTOKEN = 15021;
export const ERROR_EVT_INVALID_OPERATION_OVER_ENABLED_DIRECT_CHANNEL = 15022;
export const ERROR_EVT_INVALID_CHANNEL_PROPERTY_VALUE = 15023;
export const ERROR_EVT_INVALID_PUBLISHER_PROPERTY_VALUE = 15024;
export const ERROR_EVT_CHANNEL_CANNOT_ACTIVATE = 15025;
export const ERROR_EVT_FILTER_TOO_COMPLEX = 15026;
export const ERROR_EVT_MESSAGE_NOT_FOUND = 15027;
export const ERROR_EVT_MESSAGE_ID_NOT_FOUND = 15028;
export const ERROR_EVT_UNRESOLVED_VALUE_INSERT = 15029;
export const ERROR_EVT_UNRESOLVED_PARAMETER_INSERT = 15030;
export const ERROR_EVT_MAX_INSERTS_REACHED = 15031;
export const ERROR_EVT_EVENT_DEFINITION_NOT_FOUND = 15032;
export const ERROR_EVT_MESSAGE_LOCALE_NOT_FOUND = 15033;
export const ERROR_EVT_VERSION_TOO_OLD = 15034;
export const ERROR_EVT_VERSION_TOO_NEW = 15035;
export const ERROR_EVT_CANNOT_OPEN_CHANNEL_OF_QUERY = 15036;
export const ERROR_EVT_PUBLISHER_DISABLED = 15037;
export const ERROR_EVT_FILTER_OUT_OF_RANGE = 15038;
export const ERROR_EC_SUBSCRIPTION_CANNOT_ACTIVATE = 15080;
export const ERROR_EC_LOG_DISABLED = 15081;
export const ERROR_EC_CIRCULAR_FORWARDING = 15082;
export const ERROR_EC_CREDSTORE_FULL = 15083;
export const ERROR_EC_CRED_NOT_FOUND = 15084;
export const ERROR_EC_NO_ACTIVE_CHANNEL = 15085;
export const ERROR_MUI_FILE_NOT_FOUND = 15100;
export const ERROR_MUI_INVALID_FILE = 15101;
export const ERROR_MUI_INVALID_RC_CONFIG = 15102;
export const ERROR_MUI_INVALID_LOCALE_NAME = 15103;
export const ERROR_MUI_INVALID_ULTIMATEFALLBACK_NAME = 15104;
export const ERROR_MUI_FILE_NOT_LOADED = 15105;
export const ERROR_RESOURCE_ENUM_USER_STOP = 15106;
export const ERROR_MUI_INTLSETTINGS_UILANG_NOT_INSTALLED = 15107;
export const ERROR_MUI_INTLSETTINGS_INVALID_LOCALE_NAME = 15108;
export const ERROR_MRM_RUNTIME_NO_DEFAULT_OR_NEUTRAL_RESOURCE = 15110;
export const ERROR_MRM_INVALID_PRICONFIG = 15111;
export const ERROR_MRM_INVALID_FILE_TYPE = 15112;
export const ERROR_MRM_UNKNOWN_QUALIFIER = 15113;
export const ERROR_MRM_INVALID_QUALIFIER_VALUE = 15114;
export const ERROR_MRM_NO_CANDIDATE = 15115;
export const ERROR_MRM_NO_MATCH_OR_DEFAULT_CANDIDATE = 15116;
export const ERROR_MRM_RESOURCE_TYPE_MISMATCH = 15117;
export const ERROR_MRM_DUPLICATE_MAP_NAME = 15118;
export const ERROR_MRM_DUPLICATE_ENTRY = 15119;
export const ERROR_MRM_INVALID_RESOURCE_IDENTIFIER = 15120;
export const ERROR_MRM_FILEPATH_TOO_LONG = 15121;
export const ERROR_MRM_UNSUPPORTED_DIRECTORY_TYPE = 15122;
export const ERROR_MRM_INVALID_PRI_FILE = 15126;
export const ERROR_MRM_NAMED_RESOURCE_NOT_FOUND = 15127;
export const ERROR_MRM_MAP_NOT_FOUND = 15135;
export const ERROR_MRM_UNSUPPORTED_PROFILE_TYPE = 15136;
export const ERROR_MRM_INVALID_QUALIFIER_OPERATOR = 15137;
export const ERROR_MRM_INDETERMINATE_QUALIFIER_VALUE = 15138;
export const ERROR_MRM_AUTOMERGE_ENABLED = 15139;
export const ERROR_MRM_TOO_MANY_RESOURCES = 15140;
export const ERROR_MRM_UNSUPPORTED_FILE_TYPE_FOR_MERGE = 15141;
export const ERROR_MRM_UNSUPPORTED_FILE_TYPE_FOR_LOAD_UNLOAD_PRI_FILE = 15142;
export const ERROR_MRM_NO_CURRENT_VIEW_ON_THREAD = 15143;
export const ERROR_DIFFERENT_PROFILE_RESOURCE_MANAGER_EXIST = 15144;
export const ERROR_OPERATION_NOT_ALLOWED_FROM_SYSTEM_COMPONENT = 15145;
export const ERROR_MRM_DIRECT_REF_TO_NON_DEFAULT_RESOURCE = 15146;
export const ERROR_MRM_GENERATION_COUNT_MISMATCH = 15147;
export const ERROR_PRI_MERGE_VERSION_MISMATCH = 15148;
export const ERROR_PRI_MERGE_MISSING_SCHEMA = 15149;
export const ERROR_PRI_MERGE_LOAD_FILE_FAILED = 15150;
export const ERROR_PRI_MERGE_ADD_FILE_FAILED = 15151;
export const ERROR_PRI_MERGE_WRITE_FILE_FAILED = 15152;
export const ERROR_PRI_MERGE_MULTIPLE_PACKAGE_FAMILIES_NOT_ALLOWED = 15153;
export const ERROR_PRI_MERGE_MULTIPLE_MAIN_PACKAGES_NOT_ALLOWED = 15154;
export const ERROR_PRI_MERGE_BUNDLE_PACKAGES_NOT_ALLOWED = 15155;
export const ERROR_PRI_MERGE_MAIN_PACKAGE_REQUIRED = 15156;
export const ERROR_PRI_MERGE_RESOURCE_PACKAGE_REQUIRED = 15157;
export const ERROR_PRI_MERGE_INVALID_FILE_NAME = 15158;
export const ERROR_MRM_PACKAGE_NOT_FOUND = 15159;
export const ERROR_MRM_MISSING_DEFAULT_LANGUAGE = 15160;
export const ERROR_MCA_INVALID_CAPABILITIES_STRING = 15200;
export const ERROR_MCA_INVALID_VCP_VERSION = 15201;
export const ERROR_MCA_MONITOR_VIOLATES_MCCS_SPECIFICATION = 15202;
export const ERROR_MCA_MCCS_VERSION_MISMATCH = 15203;
export const ERROR_MCA_UNSUPPORTED_MCCS_VERSION = 15204;
export const ERROR_MCA_INTERNAL_ERROR = 15205;
export const ERROR_MCA_INVALID_TECHNOLOGY_TYPE_RETURNED = 15206;
export const ERROR_MCA_UNSUPPORTED_COLOR_TEMPERATURE = 15207;
export const ERROR_AMBIGUOUS_SYSTEM_DEVICE = 15250;
export const ERROR_SYSTEM_DEVICE_NOT_FOUND = 15299;
export const ERROR_HASH_NOT_SUPPORTED = 15300;
export const ERROR_HASH_NOT_PRESENT = 15301;
export const ERROR_SECONDARY_IC_PROVIDER_NOT_REGISTERED = 15321;
export const ERROR_GPIO_CLIENT_INFORMATION_INVALID = 15322;
export const ERROR_GPIO_VERSION_NOT_SUPPORTED = 15323;
export const ERROR_GPIO_INVALID_REGISTRATION_PACKET = 15324;
export const ERROR_GPIO_OPERATION_DENIED = 15325;
export const ERROR_GPIO_INCOMPATIBLE_CONNECT_MODE = 15326;
export const ERROR_GPIO_INTERRUPT_ALREADY_UNMASKED = 15327;
export const ERROR_CANNOT_SWITCH_RUNLEVEL = 15400;
export const ERROR_INVALID_RUNLEVEL_SETTING = 15401;
export const ERROR_RUNLEVEL_SWITCH_TIMEOUT = 15402;
export const ERROR_RUNLEVEL_SWITCH_AGENT_TIMEOUT = 15403;
export const ERROR_RUNLEVEL_SWITCH_IN_PROGRESS = 15404;
export const ERROR_SERVICES_FAILED_AUTOSTART = 15405;
export const ERROR_COM_TASK_STOP_PENDING = 15501;
export const ERROR_INSTALL_OPEN_PACKAGE_FAILED = 15600;
export const ERROR_INSTALL_PACKAGE_NOT_FOUND = 15601;
export const ERROR_INSTALL_INVALID_PACKAGE = 15602;
export const ERROR_INSTALL_RESOLVE_DEPENDENCY_FAILED = 15603;
export const ERROR_INSTALL_OUT_OF_DISK_SPACE = 15604;
export const ERROR_INSTALL_NETWORK_FAILURE = 15605;
export const ERROR_INSTALL_REGISTRATION_FAILURE = 15606;
export const ERROR_INSTALL_DEREGISTRATION_FAILURE = 15607;
export const ERROR_INSTALL_CANCEL = 15608;
export const ERROR_INSTALL_FAILED = 15609;
export const ERROR_REMOVE_FAILED = 15610;
export const ERROR_PACKAGE_ALREADY_EXISTS = 15611;
export const ERROR_NEEDS_REMEDIATION = 15612;
export const ERROR_INSTALL_PREREQUISITE_FAILED = 15613;
export const ERROR_PACKAGE_REPOSITORY_CORRUPTED = 15614;
export const ERROR_INSTALL_POLICY_FAILURE = 15615;
export const ERROR_PACKAGE_UPDATING = 15616;
export const ERROR_DEPLOYMENT_BLOCKED_BY_POLICY = 15617;
export const ERROR_PACKAGES_IN_USE = 15618;
export const ERROR_RECOVERY_FILE_CORRUPT = 15619;
export const ERROR_INVALID_STAGED_SIGNATURE = 15620;
export const ERROR_DELETING_EXISTING_APPLICATIONDATA_STORE_FAILED = 15621;
export const ERROR_INSTALL_PACKAGE_DOWNGRADE = 15622;
export const ERROR_SYSTEM_NEEDS_REMEDIATION = 15623;
export const ERROR_APPX_INTEGRITY_FAILURE_CLR_NGEN = 15624;
export const ERROR_RESILIENCY_FILE_CORRUPT = 15625;
export const ERROR_INSTALL_FIREWALL_SERVICE_NOT_RUNNING = 15626;
export const ERROR_PACKAGE_MOVE_FAILED = 15627;
export const ERROR_INSTALL_VOLUME_NOT_EMPTY = 15628;
export const ERROR_INSTALL_VOLUME_OFFLINE = 15629;
export const ERROR_INSTALL_VOLUME_CORRUPT = 15630;
export const ERROR_NEEDS_REGISTRATION = 15631;
export const ERROR_INSTALL_WRONG_PROCESSOR_ARCHITECTURE = 15632;
export const ERROR_DEV_SIDELOAD_LIMIT_EXCEEDED = 15633;
export const ERROR_INSTALL_OPTIONAL_PACKAGE_REQUIRES_MAIN_PACKAGE = 15634;
export const ERROR_PACKAGE_NOT_SUPPORTED_ON_FILESYSTEM = 15635;
export const ERROR_PACKAGE_MOVE_BLOCKED_BY_STREAMING = 15636;
export const ERROR_INSTALL_OPTIONAL_PACKAGE_APPLICATIONID_NOT_UNIQUE = 15637;
export const ERROR_PACKAGE_STAGING_ONHOLD = 15638;
export const ERROR_INSTALL_INVALID_RELATED_SET_UPDATE = 15639;
export const ERROR_INSTALL_OPTIONAL_PACKAGE_REQUIRES_MAIN_PACKAGE_FULLTRUST_CAPABILITY = 15640;
export const ERROR_DEPLOYMENT_BLOCKED_BY_USER_LOG_OFF = 15641;
export const ERROR_PROVISION_OPTIONAL_PACKAGE_REQUIRES_MAIN_PACKAGE_PROVISIONED = 15642;
export const ERROR_PACKAGES_REPUTATION_CHECK_FAILED = 15643;
export const ERROR_PACKAGES_REPUTATION_CHECK_TIMEDOUT = 15644;
export const ERROR_DEPLOYMENT_OPTION_NOT_SUPPORTED = 15645;
export const ERROR_APPINSTALLER_ACTIVATION_BLOCKED = 15646;
export const ERROR_REGISTRATION_FROM_REMOTE_DRIVE_NOT_SUPPORTED = 15647;
export const ERROR_APPX_RAW_DATA_WRITE_FAILED = 15648;
export const ERROR_DEPLOYMENT_BLOCKED_BY_VOLUME_POLICY_PACKAGE = 15649;
export const ERROR_DEPLOYMENT_BLOCKED_BY_VOLUME_POLICY_MACHINE = 15650;
export const ERROR_DEPLOYMENT_BLOCKED_BY_PROFILE_POLICY = 15651;
export const ERROR_DEPLOYMENT_FAILED_CONFLICTING_MUTABLE_PACKAGE_DIRECTORY = 15652;
export const ERROR_SINGLETON_RESOURCE_INSTALLED_IN_ACTIVE_USER = 15653;
export const ERROR_DIFFERENT_VERSION_OF_PACKAGED_SERVICE_INSTALLED = 15654;
export const ERROR_SERVICE_EXISTS_AS_NON_PACKAGED_SERVICE = 15655;
export const ERROR_PACKAGED_SERVICE_REQUIRES_ADMIN_PRIVILEGES = 15656;
export const ERROR_REDIRECTION_TO_DEFAULT_ACCOUNT_NOT_ALLOWED = 15657;
export const ERROR_PACKAGE_LACKS_CAPABILITY_TO_DEPLOY_ON_HOST = 15658;
export const ERROR_UNSIGNED_PACKAGE_INVALID_CONTENT = 15659;
export const ERROR_UNSIGNED_PACKAGE_INVALID_PUBLISHER_NAMESPACE = 15660;
export const ERROR_SIGNED_PACKAGE_INVALID_PUBLISHER_NAMESPACE = 15661;
export const ERROR_PACKAGE_EXTERNAL_LOCATION_NOT_ALLOWED = 15662;
export const ERROR_INSTALL_FULLTRUST_HOSTRUNTIME_REQUIRES_MAIN_PACKAGE_FULLTRUST_CAPABILITY = 15663;
export const ERROR_PACKAGE_LACKS_CAPABILITY_FOR_MANDATORY_STARTUPTASKS = 15664;
export const ERROR_INSTALL_RESOLVE_HOSTRUNTIME_DEPENDENCY_FAILED = 15665;
export const ERROR_MACHINE_SCOPE_NOT_ALLOWED = 15666;
export const ERROR_CLASSIC_COMPAT_MODE_NOT_ALLOWED = 15667;
export const ERROR_STAGEFROMUPDATEAGENT_PACKAGE_NOT_APPLICABLE = 15668;
export const ERROR_PACKAGE_NOT_REGISTERED_FOR_USER = 15669;
export const ERROR_STATE_LOAD_STORE_FAILED = 15800;
export const ERROR_STATE_GET_VERSION_FAILED = 15801;
export const ERROR_STATE_SET_VERSION_FAILED = 15802;
export const ERROR_STATE_STRUCTURED_RESET_FAILED = 15803;
export const ERROR_STATE_OPEN_CONTAINER_FAILED = 15804;
export const ERROR_STATE_CREATE_CONTAINER_FAILED = 15805;
export const ERROR_STATE_DELETE_CONTAINER_FAILED = 15806;
export const ERROR_STATE_READ_SETTING_FAILED = 15807;
export const ERROR_STATE_WRITE_SETTING_FAILED = 15808;
export const ERROR_STATE_DELETE_SETTING_FAILED = 15809;
export const ERROR_STATE_QUERY_SETTING_FAILED = 15810;
export const ERROR_STATE_READ_COMPOSITE_SETTING_FAILED = 15811;
export const ERROR_STATE_WRITE_COMPOSITE_SETTING_FAILED = 15812;
export const ERROR_STATE_ENUMERATE_CONTAINER_FAILED = 15813;
export const ERROR_STATE_ENUMERATE_SETTINGS_FAILED = 15814;
export const ERROR_STATE_COMPOSITE_SETTING_VALUE_SIZE_LIMIT_EXCEEDED = 15815;
export const ERROR_STATE_SETTING_VALUE_SIZE_LIMIT_EXCEEDED = 15816;
export const ERROR_STATE_SETTING_NAME_SIZE_LIMIT_EXCEEDED = 15817;
export const ERROR_STATE_CONTAINER_NAME_SIZE_LIMIT_EXCEEDED = 15818;
export const ERROR_API_UNAVAILABLE = 15841;
export const ERROR_NDIS_INTERFACE_CLOSING = 2150891522;
export const ERROR_NDIS_BAD_VERSION = 2150891524;
export const ERROR_NDIS_BAD_CHARACTERISTICS = 2150891525;
export const ERROR_NDIS_ADAPTER_NOT_FOUND = 2150891526;
export const ERROR_NDIS_OPEN_FAILED = 2150891527;
export const ERROR_NDIS_DEVICE_FAILED = 2150891528;
export const ERROR_NDIS_MULTICAST_FULL = 2150891529;
export const ERROR_NDIS_MULTICAST_EXISTS = 2150891530;
export const ERROR_NDIS_MULTICAST_NOT_FOUND = 2150891531;
export const ERROR_NDIS_REQUEST_ABORTED = 2150891532;
export const ERROR_NDIS_RESET_IN_PROGRESS = 2150891533;
export const ERROR_NDIS_NOT_SUPPORTED = 2150891707;
export const ERROR_NDIS_INVALID_PACKET = 2150891535;
export const ERROR_NDIS_ADAPTER_NOT_READY = 2150891537;
export const ERROR_NDIS_INVALID_LENGTH = 2150891540;
export const ERROR_NDIS_INVALID_DATA = 2150891541;
export const ERROR_NDIS_BUFFER_TOO_SHORT = 2150891542;
export const ERROR_NDIS_INVALID_OID = 2150891543;
export const ERROR_NDIS_ADAPTER_REMOVED = 2150891544;
export const ERROR_NDIS_UNSUPPORTED_MEDIA = 2150891545;
export const ERROR_NDIS_GROUP_ADDRESS_IN_USE = 2150891546;
export const ERROR_NDIS_FILE_NOT_FOUND = 2150891547;
export const ERROR_NDIS_ERROR_READING_FILE = 2150891548;
export const ERROR_NDIS_ALREADY_MAPPED = 2150891549;
export const ERROR_NDIS_RESOURCE_CONFLICT = 2150891550;
export const ERROR_NDIS_MEDIA_DISCONNECTED = 2150891551;
export const ERROR_NDIS_INVALID_ADDRESS = 2150891554;
export const ERROR_NDIS_INVALID_DEVICE_REQUEST = 2150891536;
export const ERROR_NDIS_PAUSED = 2150891562;
export const ERROR_NDIS_INTERFACE_NOT_FOUND = 2150891563;
export const ERROR_NDIS_UNSUPPORTED_REVISION = 2150891564;
export const ERROR_NDIS_INVALID_PORT = 2150891565;
export const ERROR_NDIS_INVALID_PORT_STATE = 2150891566;
export const ERROR_NDIS_LOW_POWER_STATE = 2150891567;
export const ERROR_NDIS_REINIT_REQUIRED = 2150891568;
export const ERROR_NDIS_NO_QUEUES = 2150891569;
export const ERROR_NDIS_DOT11_AUTO_CONFIG_ENABLED = 2150899712;
export const ERROR_NDIS_DOT11_MEDIA_IN_USE = 2150899713;
export const ERROR_NDIS_DOT11_POWER_STATE_INVALID = 2150899714;
export const ERROR_NDIS_PM_WOL_PATTERN_LIST_FULL = 2150899715;
export const ERROR_NDIS_PM_PROTOCOL_OFFLOAD_LIST_FULL = 2150899716;
export const ERROR_NDIS_DOT11_AP_CHANNEL_CURRENTLY_NOT_AVAILABLE = 2150899717;
export const ERROR_NDIS_DOT11_AP_BAND_CURRENTLY_NOT_AVAILABLE = 2150899718;
export const ERROR_NDIS_DOT11_AP_CHANNEL_NOT_ALLOWED = 2150899719;
export const ERROR_NDIS_DOT11_AP_BAND_NOT_ALLOWED = 2150899720;
export const ERROR_NDIS_INDICATION_REQUIRED = 3407873;
export const ERROR_NDIS_OFFLOAD_POLICY = 3224637455;
export const ERROR_NDIS_OFFLOAD_CONNECTION_REJECTED = 3224637458;
export const ERROR_NDIS_OFFLOAD_PATH_REJECTED = 3224637459;
export const ERROR_HV_INVALID_HYPERCALL_CODE = 3224698882;
export const ERROR_HV_INVALID_HYPERCALL_INPUT = 3224698883;
export const ERROR_HV_INVALID_ALIGNMENT = 3224698884;
export const ERROR_HV_INVALID_PARAMETER = 3224698885;
export const ERROR_HV_ACCESS_DENIED = 3224698886;
export const ERROR_HV_INVALID_PARTITION_STATE = 3224698887;
export const ERROR_HV_OPERATION_DENIED = 3224698888;
export const ERROR_HV_UNKNOWN_PROPERTY = 3224698889;
export const ERROR_HV_PROPERTY_VALUE_OUT_OF_RANGE = 3224698890;
export const ERROR_HV_INSUFFICIENT_MEMORY = 3224698891;
export const ERROR_HV_PARTITION_TOO_DEEP = 3224698892;
export const ERROR_HV_INVALID_PARTITION_ID = 3224698893;
export const ERROR_HV_INVALID_VP_INDEX = 3224698894;
export const ERROR_HV_INVALID_PORT_ID = 3224698897;
export const ERROR_HV_INVALID_CONNECTION_ID = 3224698898;
export const ERROR_HV_INSUFFICIENT_BUFFERS = 3224698899;
export const ERROR_HV_NOT_ACKNOWLEDGED = 3224698900;
export const ERROR_HV_INVALID_VP_STATE = 3224698901;
export const ERROR_HV_ACKNOWLEDGED = 3224698902;
export const ERROR_HV_INVALID_SAVE_RESTORE_STATE = 3224698903;
export const ERROR_HV_INVALID_SYNIC_STATE = 3224698904;
export const ERROR_HV_OBJECT_IN_USE = 3224698905;
export const ERROR_HV_INVALID_PROXIMITY_DOMAIN_INFO = 3224698906;
export const ERROR_HV_NO_DATA = 3224698907;
export const ERROR_HV_INACTIVE = 3224698908;
export const ERROR_HV_NO_RESOURCES = 3224698909;
export const ERROR_HV_FEATURE_UNAVAILABLE = 3224698910;
export const ERROR_HV_INSUFFICIENT_BUFFER = 3224698931;
export const ERROR_HV_INSUFFICIENT_DEVICE_DOMAINS = 3224698936;
export const ERROR_HV_CPUID_FEATURE_VALIDATION = 3224698940;
export const ERROR_HV_CPUID_XSAVE_FEATURE_VALIDATION = 3224698941;
export const ERROR_HV_PROCESSOR_STARTUP_TIMEOUT = 3224698942;
export const ERROR_HV_SMX_ENABLED = 3224698943;
export const ERROR_HV_INVALID_LP_INDEX = 3224698945;
export const ERROR_HV_INVALID_REGISTER_VALUE = 3224698960;
export const ERROR_HV_INVALID_VTL_STATE = 3224698961;
export const ERROR_HV_NX_NOT_DETECTED = 3224698965;
export const ERROR_HV_INVALID_DEVICE_ID = 3224698967;
export const ERROR_HV_INVALID_DEVICE_STATE = 3224698968;
export const ERROR_HV_PENDING_PAGE_REQUESTS = 3473497;
export const ERROR_HV_PAGE_REQUEST_INVALID = 3224698976;
export const ERROR_HV_INVALID_CPU_GROUP_ID = 3224698991;
export const ERROR_HV_INVALID_CPU_GROUP_STATE = 3224698992;
export const ERROR_HV_OPERATION_FAILED = 3224698993;
export const ERROR_HV_NOT_ALLOWED_WITH_NESTED_VIRT_ACTIVE = 3224698994;
export const ERROR_HV_INSUFFICIENT_ROOT_MEMORY = 3224698995;
export const ERROR_HV_EVENT_BUFFER_ALREADY_FREED = 3224698996;
export const ERROR_HV_INSUFFICIENT_CONTIGUOUS_MEMORY = 3224698997;
export const ERROR_HV_DEVICE_NOT_IN_DOMAIN = 3224698998;
export const ERROR_HV_NESTED_VM_EXIT = 3224698999;
export const ERROR_HV_MSR_ACCESS_FAILED = 3224699008;
export const ERROR_HV_NOT_PRESENT = 3224702976;
export const ERROR_VID_DUPLICATE_HANDLER = 3224829953;
export const ERROR_VID_TOO_MANY_HANDLERS = 3224829954;
export const ERROR_VID_QUEUE_FULL = 3224829955;
export const ERROR_VID_HANDLER_NOT_PRESENT = 3224829956;
export const ERROR_VID_INVALID_OBJECT_NAME = 3224829957;
export const ERROR_VID_PARTITION_NAME_TOO_LONG = 3224829958;
export const ERROR_VID_MESSAGE_QUEUE_NAME_TOO_LONG = 3224829959;
export const ERROR_VID_PARTITION_ALREADY_EXISTS = 3224829960;
export const ERROR_VID_PARTITION_DOES_NOT_EXIST = 3224829961;
export const ERROR_VID_PARTITION_NAME_NOT_FOUND = 3224829962;
export const ERROR_VID_MESSAGE_QUEUE_ALREADY_EXISTS = 3224829963;
export const ERROR_VID_EXCEEDED_MBP_ENTRY_MAP_LIMIT = 3224829964;
export const ERROR_VID_MB_STILL_REFERENCED = 3224829965;
export const ERROR_VID_CHILD_GPA_PAGE_SET_CORRUPTED = 3224829966;
export const ERROR_VID_INVALID_NUMA_SETTINGS = 3224829967;
export const ERROR_VID_INVALID_NUMA_NODE_INDEX = 3224829968;
export const ERROR_VID_NOTIFICATION_QUEUE_ALREADY_ASSOCIATED = 3224829969;
export const ERROR_VID_INVALID_MEMORY_BLOCK_HANDLE = 3224829970;
export const ERROR_VID_PAGE_RANGE_OVERFLOW = 3224829971;
export const ERROR_VID_INVALID_MESSAGE_QUEUE_HANDLE = 3224829972;
export const ERROR_VID_INVALID_GPA_RANGE_HANDLE = 3224829973;
export const ERROR_VID_NO_MEMORY_BLOCK_NOTIFICATION_QUEUE = 3224829974;
export const ERROR_VID_MEMORY_BLOCK_LOCK_COUNT_EXCEEDED = 3224829975;
export const ERROR_VID_INVALID_PPM_HANDLE = 3224829976;
export const ERROR_VID_MBPS_ARE_LOCKED = 3224829977;
export const ERROR_VID_MESSAGE_QUEUE_CLOSED = 3224829978;
export const ERROR_VID_VIRTUAL_PROCESSOR_LIMIT_EXCEEDED = 3224829979;
export const ERROR_VID_STOP_PENDING = 3224829980;
export const ERROR_VID_INVALID_PROCESSOR_STATE = 3224829981;
export const ERROR_VID_EXCEEDED_KM_CONTEXT_COUNT_LIMIT = 3224829982;
export const ERROR_VID_KM_INTERFACE_ALREADY_INITIALIZED = 3224829983;
export const ERROR_VID_MB_PROPERTY_ALREADY_SET_RESET = 3224829984;
export const ERROR_VID_MMIO_RANGE_DESTROYED = 3224829985;
export const ERROR_VID_INVALID_CHILD_GPA_PAGE_SET = 3224829986;
export const ERROR_VID_RESERVE_PAGE_SET_IS_BEING_USED = 3224829987;
export const ERROR_VID_RESERVE_PAGE_SET_TOO_SMALL = 3224829988;
export const ERROR_VID_MBP_ALREADY_LOCKED_USING_RESERVED_PAGE = 3224829989;
export const ERROR_VID_MBP_COUNT_EXCEEDED_LIMIT = 3224829990;
export const ERROR_VID_SAVED_STATE_CORRUPT = 3224829991;
export const ERROR_VID_SAVED_STATE_UNRECOGNIZED_ITEM = 3224829992;
export const ERROR_VID_SAVED_STATE_INCOMPATIBLE = 3224829993;
export const ERROR_VID_VTL_ACCESS_DENIED = 3224829994;
export const ERROR_VMCOMPUTE_TERMINATED_DURING_START = 3224830208;
export const ERROR_VMCOMPUTE_IMAGE_MISMATCH = 3224830209;
export const ERROR_VMCOMPUTE_HYPERV_NOT_INSTALLED = 3224830210;
export const ERROR_VMCOMPUTE_OPERATION_PENDING = 3224830211;
export const ERROR_VMCOMPUTE_TOO_MANY_NOTIFICATIONS = 3224830212;
export const ERROR_VMCOMPUTE_INVALID_STATE = 3224830213;
export const ERROR_VMCOMPUTE_UNEXPECTED_EXIT = 3224830214;
export const ERROR_VMCOMPUTE_TERMINATED = 3224830215;
export const ERROR_VMCOMPUTE_CONNECT_FAILED = 3224830216;
export const ERROR_VMCOMPUTE_TIMEOUT = 3224830217;
export const ERROR_VMCOMPUTE_CONNECTION_CLOSED = 3224830218;
export const ERROR_VMCOMPUTE_UNKNOWN_MESSAGE = 3224830219;
export const ERROR_VMCOMPUTE_UNSUPPORTED_PROTOCOL_VERSION = 3224830220;
export const ERROR_VMCOMPUTE_INVALID_JSON = 3224830221;
export const ERROR_VMCOMPUTE_SYSTEM_NOT_FOUND = 3224830222;
export const ERROR_VMCOMPUTE_SYSTEM_ALREADY_EXISTS = 3224830223;
export const ERROR_VMCOMPUTE_SYSTEM_ALREADY_STOPPED = 3224830224;
export const ERROR_VMCOMPUTE_PROTOCOL_ERROR = 3224830225;
export const ERROR_VMCOMPUTE_INVALID_LAYER = 3224830226;
export const ERROR_VMCOMPUTE_WINDOWS_INSIDER_REQUIRED = 3224830227;
export const ERROR_VNET_VIRTUAL_SWITCH_NAME_NOT_FOUND = 3224830464;
export const ERROR_VID_REMOTE_NODE_PARENT_GPA_PAGES_USED = 2151088129;
export const ERROR_VSMB_SAVED_STATE_FILE_NOT_FOUND = 3224830976;
export const ERROR_VSMB_SAVED_STATE_CORRUPT = 3224830977;
export const ERROR_VOLMGR_INCOMPLETE_REGENERATION = 2151153665;
export const ERROR_VOLMGR_INCOMPLETE_DISK_MIGRATION = 2151153666;
export const ERROR_VOLMGR_DATABASE_FULL = 3224895489;
export const ERROR_VOLMGR_DISK_CONFIGURATION_CORRUPTED = 3224895490;
export const ERROR_VOLMGR_DISK_CONFIGURATION_NOT_IN_SYNC = 3224895491;
export const ERROR_VOLMGR_PACK_CONFIG_UPDATE_FAILED = 3224895492;
export const ERROR_VOLMGR_DISK_CONTAINS_NON_SIMPLE_VOLUME = 3224895493;
export const ERROR_VOLMGR_DISK_DUPLICATE = 3224895494;
export const ERROR_VOLMGR_DISK_DYNAMIC = 3224895495;
export const ERROR_VOLMGR_DISK_ID_INVALID = 3224895496;
export const ERROR_VOLMGR_DISK_INVALID = 3224895497;
export const ERROR_VOLMGR_DISK_LAST_VOTER = 3224895498;
export const ERROR_VOLMGR_DISK_LAYOUT_INVALID = 3224895499;
export const ERROR_VOLMGR_DISK_LAYOUT_NON_BASIC_BETWEEN_BASIC_PARTITIONS = 3224895500;
export const ERROR_VOLMGR_DISK_LAYOUT_NOT_CYLINDER_ALIGNED = 3224895501;
export const ERROR_VOLMGR_DISK_LAYOUT_PARTITIONS_TOO_SMALL = 3224895502;
export const ERROR_VOLMGR_DISK_LAYOUT_PRIMARY_BETWEEN_LOGICAL_PARTITIONS = 3224895503;
export const ERROR_VOLMGR_DISK_LAYOUT_TOO_MANY_PARTITIONS = 3224895504;
export const ERROR_VOLMGR_DISK_MISSING = 3224895505;
export const ERROR_VOLMGR_DISK_NOT_EMPTY = 3224895506;
export const ERROR_VOLMGR_DISK_NOT_ENOUGH_SPACE = 3224895507;
export const ERROR_VOLMGR_DISK_REVECTORING_FAILED = 3224895508;
export const ERROR_VOLMGR_DISK_SECTOR_SIZE_INVALID = 3224895509;
export const ERROR_VOLMGR_DISK_SET_NOT_CONTAINED = 3224895510;
export const ERROR_VOLMGR_DISK_USED_BY_MULTIPLE_MEMBERS = 3224895511;
export const ERROR_VOLMGR_DISK_USED_BY_MULTIPLE_PLEXES = 3224895512;
export const ERROR_VOLMGR_DYNAMIC_DISK_NOT_SUPPORTED = 3224895513;
export const ERROR_VOLMGR_EXTENT_ALREADY_USED = 3224895514;
export const ERROR_VOLMGR_EXTENT_NOT_CONTIGUOUS = 3224895515;
export const ERROR_VOLMGR_EXTENT_NOT_IN_PUBLIC_REGION = 3224895516;
export const ERROR_VOLMGR_EXTENT_NOT_SECTOR_ALIGNED = 3224895517;
export const ERROR_VOLMGR_EXTENT_OVERLAPS_EBR_PARTITION = 3224895518;
export const ERROR_VOLMGR_EXTENT_VOLUME_LENGTHS_DO_NOT_MATCH = 3224895519;
export const ERROR_VOLMGR_FAULT_TOLERANT_NOT_SUPPORTED = 3224895520;
export const ERROR_VOLMGR_INTERLEAVE_LENGTH_INVALID = 3224895521;
export const ERROR_VOLMGR_MAXIMUM_REGISTERED_USERS = 3224895522;
export const ERROR_VOLMGR_MEMBER_IN_SYNC = 3224895523;
export const ERROR_VOLMGR_MEMBER_INDEX_DUPLICATE = 3224895524;
export const ERROR_VOLMGR_MEMBER_INDEX_INVALID = 3224895525;
export const ERROR_VOLMGR_MEMBER_MISSING = 3224895526;
export const ERROR_VOLMGR_MEMBER_NOT_DETACHED = 3224895527;
export const ERROR_VOLMGR_MEMBER_REGENERATING = 3224895528;
export const ERROR_VOLMGR_ALL_DISKS_FAILED = 3224895529;
export const ERROR_VOLMGR_NO_REGISTERED_USERS = 3224895530;
export const ERROR_VOLMGR_NO_SUCH_USER = 3224895531;
export const ERROR_VOLMGR_NOTIFICATION_RESET = 3224895532;
export const ERROR_VOLMGR_NUMBER_OF_MEMBERS_INVALID = 3224895533;
export const ERROR_VOLMGR_NUMBER_OF_PLEXES_INVALID = 3224895534;
export const ERROR_VOLMGR_PACK_DUPLICATE = 3224895535;
export const ERROR_VOLMGR_PACK_ID_INVALID = 3224895536;
export const ERROR_VOLMGR_PACK_INVALID = 3224895537;
export const ERROR_VOLMGR_PACK_NAME_INVALID = 3224895538;
export const ERROR_VOLMGR_PACK_OFFLINE = 3224895539;
export const ERROR_VOLMGR_PACK_HAS_QUORUM = 3224895540;
export const ERROR_VOLMGR_PACK_WITHOUT_QUORUM = 3224895541;
export const ERROR_VOLMGR_PARTITION_STYLE_INVALID = 3224895542;
export const ERROR_VOLMGR_PARTITION_UPDATE_FAILED = 3224895543;
export const ERROR_VOLMGR_PLEX_IN_SYNC = 3224895544;
export const ERROR_VOLMGR_PLEX_INDEX_DUPLICATE = 3224895545;
export const ERROR_VOLMGR_PLEX_INDEX_INVALID = 3224895546;
export const ERROR_VOLMGR_PLEX_LAST_ACTIVE = 3224895547;
export const ERROR_VOLMGR_PLEX_MISSING = 3224895548;
export const ERROR_VOLMGR_PLEX_REGENERATING = 3224895549;
export const ERROR_VOLMGR_PLEX_TYPE_INVALID = 3224895550;
export const ERROR_VOLMGR_PLEX_NOT_RAID5 = 3224895551;
export const ERROR_VOLMGR_PLEX_NOT_SIMPLE = 3224895552;
export const ERROR_VOLMGR_STRUCTURE_SIZE_INVALID = 3224895553;
export const ERROR_VOLMGR_TOO_MANY_NOTIFICATION_REQUESTS = 3224895554;
export const ERROR_VOLMGR_TRANSACTION_IN_PROGRESS = 3224895555;
export const ERROR_VOLMGR_UNEXPECTED_DISK_LAYOUT_CHANGE = 3224895556;
export const ERROR_VOLMGR_VOLUME_CONTAINS_MISSING_DISK = 3224895557;
export const ERROR_VOLMGR_VOLUME_ID_INVALID = 3224895558;
export const ERROR_VOLMGR_VOLUME_LENGTH_INVALID = 3224895559;
export const ERROR_VOLMGR_VOLUME_LENGTH_NOT_SECTOR_SIZE_MULTIPLE = 3224895560;
export const ERROR_VOLMGR_VOLUME_NOT_MIRRORED = 3224895561;
export const ERROR_VOLMGR_VOLUME_NOT_RETAINED = 3224895562;
export const ERROR_VOLMGR_VOLUME_OFFLINE = 3224895563;
export const ERROR_VOLMGR_VOLUME_RETAINED = 3224895564;
export const ERROR_VOLMGR_NUMBER_OF_EXTENTS_INVALID = 3224895565;
export const ERROR_VOLMGR_DIFFERENT_SECTOR_SIZE = 3224895566;
export const ERROR_VOLMGR_BAD_BOOT_DISK = 3224895567;
export const ERROR_VOLMGR_PACK_CONFIG_OFFLINE = 3224895568;
export const ERROR_VOLMGR_PACK_CONFIG_ONLINE = 3224895569;
export const ERROR_VOLMGR_NOT_PRIMARY_PACK = 3224895570;
export const ERROR_VOLMGR_PACK_LOG_UPDATE_FAILED = 3224895571;
export const ERROR_VOLMGR_NUMBER_OF_DISKS_IN_PLEX_INVALID = 3224895572;
export const ERROR_VOLMGR_NUMBER_OF_DISKS_IN_MEMBER_INVALID = 3224895573;
export const ERROR_VOLMGR_VOLUME_MIRRORED = 3224895574;
export const ERROR_VOLMGR_PLEX_NOT_SIMPLE_SPANNED = 3224895575;
export const ERROR_VOLMGR_NO_VALID_LOG_COPIES = 3224895576;
export const ERROR_VOLMGR_PRIMARY_PACK_PRESENT = 3224895577;
export const ERROR_VOLMGR_NUMBER_OF_DISKS_INVALID = 3224895578;
export const ERROR_VOLMGR_MIRROR_NOT_SUPPORTED = 3224895579;
export const ERROR_VOLMGR_RAID5_NOT_SUPPORTED = 3224895580;
export const ERROR_BCD_NOT_ALL_ENTRIES_IMPORTED = 2151219201;
export const ERROR_BCD_TOO_MANY_ELEMENTS = 3224961026;
export const ERROR_BCD_NOT_ALL_ENTRIES_SYNCHRONIZED = 2151219203;
export const ERROR_VHD_DRIVE_FOOTER_MISSING = 3225026561;
export const ERROR_VHD_DRIVE_FOOTER_CHECKSUM_MISMATCH = 3225026562;
export const ERROR_VHD_DRIVE_FOOTER_CORRUPT = 3225026563;
export const ERROR_VHD_FORMAT_UNKNOWN = 3225026564;
export const ERROR_VHD_FORMAT_UNSUPPORTED_VERSION = 3225026565;
export const ERROR_VHD_SPARSE_HEADER_CHECKSUM_MISMATCH = 3225026566;
export const ERROR_VHD_SPARSE_HEADER_UNSUPPORTED_VERSION = 3225026567;
export const ERROR_VHD_SPARSE_HEADER_CORRUPT = 3225026568;
export const ERROR_VHD_BLOCK_ALLOCATION_FAILURE = 3225026569;
export const ERROR_VHD_BLOCK_ALLOCATION_TABLE_CORRUPT = 3225026570;
export const ERROR_VHD_INVALID_BLOCK_SIZE = 3225026571;
export const ERROR_VHD_BITMAP_MISMATCH = 3225026572;
export const ERROR_VHD_PARENT_VHD_NOT_FOUND = 3225026573;
export const ERROR_VHD_CHILD_PARENT_ID_MISMATCH = 3225026574;
export const ERROR_VHD_CHILD_PARENT_TIMESTAMP_MISMATCH = 3225026575;
export const ERROR_VHD_METADATA_READ_FAILURE = 3225026576;
export const ERROR_VHD_METADATA_WRITE_FAILURE = 3225026577;
export const ERROR_VHD_INVALID_SIZE = 3225026578;
export const ERROR_VHD_INVALID_FILE_SIZE = 3225026579;
export const ERROR_VIRTDISK_PROVIDER_NOT_FOUND = 3225026580;
export const ERROR_VIRTDISK_NOT_VIRTUAL_DISK = 3225026581;
export const ERROR_VHD_PARENT_VHD_ACCESS_DENIED = 3225026582;
export const ERROR_VHD_CHILD_PARENT_SIZE_MISMATCH = 3225026583;
export const ERROR_VHD_DIFFERENCING_CHAIN_CYCLE_DETECTED = 3225026584;
export const ERROR_VHD_DIFFERENCING_CHAIN_ERROR_IN_PARENT = 3225026585;
export const ERROR_VIRTUAL_DISK_LIMITATION = 3225026586;
export const ERROR_VHD_INVALID_TYPE = 3225026587;
export const ERROR_VHD_INVALID_STATE = 3225026588;
export const ERROR_VIRTDISK_UNSUPPORTED_DISK_SECTOR_SIZE = 3225026589;
export const ERROR_VIRTDISK_DISK_ALREADY_OWNED = 3225026590;
export const ERROR_VIRTDISK_DISK_ONLINE_AND_WRITABLE = 3225026591;
export const ERROR_CTLOG_TRACKING_NOT_INITIALIZED = 3225026592;
export const ERROR_CTLOG_LOGFILE_SIZE_EXCEEDED_MAXSIZE = 3225026593;
export const ERROR_CTLOG_VHD_CHANGED_OFFLINE = 3225026594;
export const ERROR_CTLOG_INVALID_TRACKING_STATE = 3225026595;
export const ERROR_CTLOG_INCONSISTENT_TRACKING_FILE = 3225026596;
export const ERROR_VHD_RESIZE_WOULD_TRUNCATE_DATA = 3225026597;
export const ERROR_VHD_COULD_NOT_COMPUTE_MINIMUM_VIRTUAL_SIZE = 3225026598;
export const ERROR_VHD_ALREADY_AT_OR_BELOW_MINIMUM_VIRTUAL_SIZE = 3225026599;
export const ERROR_VHD_METADATA_FULL = 3225026600;
export const ERROR_VHD_INVALID_CHANGE_TRACKING_ID = 3225026601;
export const ERROR_VHD_CHANGE_TRACKING_DISABLED = 3225026602;
export const ERROR_VHD_MISSING_CHANGE_TRACKING_INFORMATION = 3225026608;
export const ERROR_QUERY_STORAGE_ERROR = 2151284737;

// Structs

export type HKEY = Deno.PointerValue;

/**
 * Windows.Win32.System.Registry.val_context (size: 24)
 */
export interface val_context {
  /** i32 */
  valuelen: number;
  /** ptr */
  value_context: Deno.PointerValue | Uint8Array | null;
  /** ptr */
  val_buff_ptr: Deno.PointerValue | Uint8Array | null;
}

export const sizeofVal_context = 24;

export function allocVal_context(data?: Partial<val_context>): Uint8Array {
  const buf = new Uint8Array(sizeofVal_context);
  const view = new DataView(buf.buffer);
  // 0x00: i32
  if (data?.valuelen !== undefined) view.setInt32(0, Number(data.valuelen), true);
  // 0x04: pad4
  // 0x08: pointer
  if (data?.value_context !== undefined) view.setBigUint64(8, data.value_context === null ? 0n : BigInt(util.toPointer(data.value_context)), true);
  // 0x10: pointer
  if (data?.val_buff_ptr !== undefined) view.setBigUint64(16, data.val_buff_ptr === null ? 0n : BigInt(util.toPointer(data.val_buff_ptr)), true);
  return buf;
}

export type PSTR = Deno.PointerValue | Uint8Array | null;

/**
 * Windows.Win32.System.Registry.PVALUEA (size: 32)
 */
export interface PVALUEA {
  /** Windows.Win32.Foundation.PSTR */
  pv_valuename: string | null;
  /** i32 */
  pv_valuelen: number;
  /** ptr */
  pv_value_context: Deno.PointerValue | Uint8Array | null;
  /** u32 */
  pv_type: number;
}

export const sizeofPVALUEA = 32;

export function allocPVALUEA(data?: Partial<PVALUEA>): Uint8Array {
  const buf = new Uint8Array(sizeofPVALUEA);
  const view = new DataView(buf.buffer);
  // 0x00: buffer
  if (data?.pv_valuename !== undefined) {
    (buf as any)._f0 = util.pstrToFfi(data.pv_valuename);
    view.setBigUint64(0, (buf as any)._f0 === null ? 0n : BigInt(Deno.UnsafePointer.of((buf as any)._f0)), true);
  }
  // 0x08: i32
  if (data?.pv_valuelen !== undefined) view.setInt32(8, Number(data.pv_valuelen), true);
  // 0x0c: pad4
  // 0x10: pointer
  if (data?.pv_value_context !== undefined) view.setBigUint64(16, data.pv_value_context === null ? 0n : BigInt(util.toPointer(data.pv_value_context)), true);
  // 0x18: u32
  if (data?.pv_type !== undefined) view.setUint32(24, Number(data.pv_type), true);
  // 0x1c: pad4
  return buf;
}

export type PWSTR = Deno.PointerValue | Uint8Array | null;

/**
 * Windows.Win32.System.Registry.PVALUEW (size: 32)
 */
export interface PVALUEW {
  /** Windows.Win32.Foundation.PWSTR */
  pv_valuename: string | null;
  /** i32 */
  pv_valuelen: number;
  /** ptr */
  pv_value_context: Deno.PointerValue | Uint8Array | null;
  /** u32 */
  pv_type: number;
}

export const sizeofPVALUEW = 32;

export function allocPVALUEW(data?: Partial<PVALUEW>): Uint8Array {
  const buf = new Uint8Array(sizeofPVALUEW);
  const view = new DataView(buf.buffer);
  // 0x00: buffer
  if (data?.pv_valuename !== undefined) {
    (buf as any)._f0 = util.pwstrToFfi(data.pv_valuename);
    view.setBigUint64(0, (buf as any)._f0 === null ? 0n : BigInt(Deno.UnsafePointer.of((buf as any)._f0)), true);
  }
  // 0x08: i32
  if (data?.pv_valuelen !== undefined) view.setInt32(8, Number(data.pv_valuelen), true);
  // 0x0c: pad4
  // 0x10: pointer
  if (data?.pv_value_context !== undefined) view.setBigUint64(16, data.pv_value_context === null ? 0n : BigInt(util.toPointer(data.pv_value_context)), true);
  // 0x18: u32
  if (data?.pv_type !== undefined) view.setUint32(24, Number(data.pv_type), true);
  // 0x1c: pad4
  return buf;
}

/**
 * Windows.Win32.System.Registry.REG_PROVIDER (size: 48)
 */
export interface REG_PROVIDER {
  /** Windows.Win32.System.Registry.PQUERYHANDLER */
  pi_R0_1val: Uint8Array | Deno.PointerValue | null;
  /** Windows.Win32.System.Registry.PQUERYHANDLER */
  pi_R0_allvals: Uint8Array | Deno.PointerValue | null;
  /** Windows.Win32.System.Registry.PQUERYHANDLER */
  pi_R3_1val: Uint8Array | Deno.PointerValue | null;
  /** Windows.Win32.System.Registry.PQUERYHANDLER */
  pi_R3_allvals: Uint8Array | Deno.PointerValue | null;
  /** u32 */
  pi_flags: number;
  /** ptr */
  pi_key_context: Deno.PointerValue | Uint8Array | null;
}

export const sizeofREG_PROVIDER = 48;

export function allocREG_PROVIDER(data?: Partial<REG_PROVIDER>): Uint8Array {
  const buf = new Uint8Array(sizeofREG_PROVIDER);
  const view = new DataView(buf.buffer);
  // 0x00: pointer
  if (data?.pi_R0_1val !== undefined) view.setBigUint64(0, data.pi_R0_1val === null ? 0n : BigInt(util.toPointer(data.pi_R0_1val)), true);
  // 0x08: pointer
  if (data?.pi_R0_allvals !== undefined) view.setBigUint64(8, data.pi_R0_allvals === null ? 0n : BigInt(util.toPointer(data.pi_R0_allvals)), true);
  // 0x10: pointer
  if (data?.pi_R3_1val !== undefined) view.setBigUint64(16, data.pi_R3_1val === null ? 0n : BigInt(util.toPointer(data.pi_R3_1val)), true);
  // 0x18: pointer
  if (data?.pi_R3_allvals !== undefined) view.setBigUint64(24, data.pi_R3_allvals === null ? 0n : BigInt(util.toPointer(data.pi_R3_allvals)), true);
  // 0x20: u32
  if (data?.pi_flags !== undefined) view.setUint32(32, Number(data.pi_flags), true);
  // 0x24: pad4
  // 0x28: pointer
  if (data?.pi_key_context !== undefined) view.setBigUint64(40, data.pi_key_context === null ? 0n : BigInt(util.toPointer(data.pi_key_context)), true);
  return buf;
}

/**
 * Windows.Win32.System.Registry.VALENTA (size: 32)
 */
export interface VALENTA {
  /** Windows.Win32.Foundation.PSTR */
  ve_valuename: string | null;
  /** u32 */
  ve_valuelen: number;
  /** usize */
  ve_valueptr: Deno.PointerValue;
  /** Windows.Win32.System.Registry.REG_VALUE_TYPE */
  ve_type: REG_VALUE_TYPE;
}

export const sizeofVALENTA = 32;

export function allocVALENTA(data?: Partial<VALENTA>): Uint8Array {
  const buf = new Uint8Array(sizeofVALENTA);
  const view = new DataView(buf.buffer);
  // 0x00: buffer
  if (data?.ve_valuename !== undefined) {
    (buf as any)._f0 = util.pstrToFfi(data.ve_valuename);
    view.setBigUint64(0, (buf as any)._f0 === null ? 0n : BigInt(Deno.UnsafePointer.of((buf as any)._f0)), true);
  }
  // 0x08: u32
  if (data?.ve_valuelen !== undefined) view.setUint32(8, Number(data.ve_valuelen), true);
  // 0x0c: pad4
  // 0x10: usize
  if (data?.ve_valueptr !== undefined) view.setBigUint64(16, BigInt(data.ve_valueptr), true);
  // 0x18: u32
  if (data?.ve_type !== undefined) view.setUint32(24, Number(data.ve_type), true);
  // 0x1c: pad4
  return buf;
}

/**
 * Windows.Win32.System.Registry.VALENTW (size: 32)
 */
export interface VALENTW {
  /** Windows.Win32.Foundation.PWSTR */
  ve_valuename: string | null;
  /** u32 */
  ve_valuelen: number;
  /** usize */
  ve_valueptr: Deno.PointerValue;
  /** Windows.Win32.System.Registry.REG_VALUE_TYPE */
  ve_type: REG_VALUE_TYPE;
}

export const sizeofVALENTW = 32;

export function allocVALENTW(data?: Partial<VALENTW>): Uint8Array {
  const buf = new Uint8Array(sizeofVALENTW);
  const view = new DataView(buf.buffer);
  // 0x00: buffer
  if (data?.ve_valuename !== undefined) {
    (buf as any)._f0 = util.pwstrToFfi(data.ve_valuename);
    view.setBigUint64(0, (buf as any)._f0 === null ? 0n : BigInt(Deno.UnsafePointer.of((buf as any)._f0)), true);
  }
  // 0x08: u32
  if (data?.ve_valuelen !== undefined) view.setUint32(8, Number(data.ve_valuelen), true);
  // 0x0c: pad4
  // 0x10: usize
  if (data?.ve_valueptr !== undefined) view.setBigUint64(16, BigInt(data.ve_valueptr), true);
  // 0x18: u32
  if (data?.ve_type !== undefined) view.setUint32(24, Number(data.ve_type), true);
  // 0x1c: pad4
  return buf;
}

/**
 * Windows.Win32.System.Registry.DSKTLSYSTEMTIME (size: 24)
 */
export interface DSKTLSYSTEMTIME {
  /** u16 */
  wYear: number;
  /** u16 */
  wMonth: number;
  /** u16 */
  wDayOfWeek: number;
  /** u16 */
  wDay: number;
  /** u16 */
  wHour: number;
  /** u16 */
  wMinute: number;
  /** u16 */
  wSecond: number;
  /** u16 */
  wMilliseconds: number;
  /** u16 */
  wResult: number;
}

export const sizeofDSKTLSYSTEMTIME = 24;

export function allocDSKTLSYSTEMTIME(data?: Partial<DSKTLSYSTEMTIME>): Uint8Array {
  const buf = new Uint8Array(sizeofDSKTLSYSTEMTIME);
  const view = new DataView(buf.buffer);
  // 0x00: u16
  if (data?.wYear !== undefined) view.setUint16(0, Number(data.wYear), true);
  // 0x02: u16
  if (data?.wMonth !== undefined) view.setUint16(2, Number(data.wMonth), true);
  // 0x04: u16
  if (data?.wDayOfWeek !== undefined) view.setUint16(4, Number(data.wDayOfWeek), true);
  // 0x06: u16
  if (data?.wDay !== undefined) view.setUint16(6, Number(data.wDay), true);
  // 0x08: u16
  if (data?.wHour !== undefined) view.setUint16(8, Number(data.wHour), true);
  // 0x0a: u16
  if (data?.wMinute !== undefined) view.setUint16(10, Number(data.wMinute), true);
  // 0x0c: u16
  if (data?.wSecond !== undefined) view.setUint16(12, Number(data.wSecond), true);
  // 0x0e: u16
  if (data?.wMilliseconds !== undefined) view.setUint16(14, Number(data.wMilliseconds), true);
  // 0x10: u16
  if (data?.wResult !== undefined) view.setUint16(16, Number(data.wResult), true);
  // 0x12: pad6
  return buf;
}

export type HANDLE = Deno.PointerValue;

export type PSECURITY_DESCRIPTOR = Deno.PointerValue | Uint8Array | null;

export type BOOL = number;

// Native Libraries

try {
  var libADVAPI32_dll = Deno.dlopen("ADVAPI32.dll", {
    RegCloseKey: {
      parameters: ["pointer"],
      result: "u32",
    },
    RegOverridePredefKey: {
      parameters: ["pointer", "pointer"],
      result: "u32",
    },
    RegOpenUserClassesRoot: {
      parameters: ["pointer", "u32", "u32", "pointer"],
      result: "u32",
    },
    RegOpenCurrentUser: {
      parameters: ["u32", "pointer"],
      result: "u32",
    },
    RegDisablePredefinedCache: {
      parameters: [],
      result: "u32",
    },
    RegDisablePredefinedCacheEx: {
      parameters: [],
      result: "u32",
    },
    RegConnectRegistryA: {
      parameters: ["buffer", "pointer", "pointer"],
      result: "u32",
    },
    RegConnectRegistryW: {
      parameters: ["buffer", "pointer", "pointer"],
      result: "u32",
    },
    RegConnectRegistryExA: {
      parameters: ["buffer", "pointer", "u32", "pointer"],
      result: "i32",
    },
    RegConnectRegistryExW: {
      parameters: ["buffer", "pointer", "u32", "pointer"],
      result: "i32",
    },
    RegCreateKeyA: {
      parameters: ["pointer", "buffer", "pointer"],
      result: "u32",
    },
    RegCreateKeyW: {
      parameters: ["pointer", "buffer", "pointer"],
      result: "u32",
    },
    RegCreateKeyExA: {
      parameters: ["pointer", "buffer", "u32", "buffer", "u32", "u32", "pointer", "pointer", "pointer"],
      result: "u32",
    },
    RegCreateKeyExW: {
      parameters: ["pointer", "buffer", "u32", "buffer", "u32", "u32", "pointer", "pointer", "pointer"],
      result: "u32",
    },
    RegCreateKeyTransactedA: {
      parameters: ["pointer", "buffer", "u32", "buffer", "u32", "u32", "pointer", "pointer", "pointer", "pointer", "pointer"],
      result: "u32",
    },
    RegCreateKeyTransactedW: {
      parameters: ["pointer", "buffer", "u32", "buffer", "u32", "u32", "pointer", "pointer", "pointer", "pointer", "pointer"],
      result: "u32",
    },
    RegDeleteKeyA: {
      parameters: ["pointer", "buffer"],
      result: "u32",
    },
    RegDeleteKeyW: {
      parameters: ["pointer", "buffer"],
      result: "u32",
    },
    RegDeleteKeyExA: {
      parameters: ["pointer", "buffer", "u32", "u32"],
      result: "u32",
    },
    RegDeleteKeyExW: {
      parameters: ["pointer", "buffer", "u32", "u32"],
      result: "u32",
    },
    RegDeleteKeyTransactedA: {
      parameters: ["pointer", "buffer", "u32", "u32", "pointer", "pointer"],
      result: "u32",
    },
    RegDeleteKeyTransactedW: {
      parameters: ["pointer", "buffer", "u32", "u32", "pointer", "pointer"],
      result: "u32",
    },
    RegDisableReflectionKey: {
      parameters: ["pointer"],
      result: "u32",
    },
    RegEnableReflectionKey: {
      parameters: ["pointer"],
      result: "u32",
    },
    RegQueryReflectionKey: {
      parameters: ["pointer", "pointer"],
      result: "u32",
    },
    RegDeleteValueA: {
      parameters: ["pointer", "buffer"],
      result: "u32",
    },
    RegDeleteValueW: {
      parameters: ["pointer", "buffer"],
      result: "u32",
    },
    RegEnumKeyA: {
      parameters: ["pointer", "u32", "buffer", "u32"],
      result: "u32",
    },
    RegEnumKeyW: {
      parameters: ["pointer", "u32", "buffer", "u32"],
      result: "u32",
    },
    RegEnumKeyExA: {
      parameters: ["pointer", "u32", "buffer", "pointer", "pointer", "buffer", "pointer", "pointer"],
      result: "u32",
    },
    RegEnumKeyExW: {
      parameters: ["pointer", "u32", "buffer", "pointer", "pointer", "buffer", "pointer", "pointer"],
      result: "u32",
    },
    RegEnumValueA: {
      parameters: ["pointer", "u32", "buffer", "pointer", "pointer", "pointer", "pointer", "pointer"],
      result: "u32",
    },
    RegEnumValueW: {
      parameters: ["pointer", "u32", "buffer", "pointer", "pointer", "pointer", "pointer", "pointer"],
      result: "u32",
    },
    RegFlushKey: {
      parameters: ["pointer"],
      result: "u32",
    },
    RegGetKeySecurity: {
      parameters: ["pointer", "u32", "pointer", "pointer"],
      result: "u32",
    },
    RegLoadKeyA: {
      parameters: ["pointer", "buffer", "buffer"],
      result: "u32",
    },
    RegLoadKeyW: {
      parameters: ["pointer", "buffer", "buffer"],
      result: "u32",
    },
    RegNotifyChangeKeyValue: {
      parameters: ["pointer", "i32", "u32", "pointer", "i32"],
      result: "u32",
    },
    RegOpenKeyA: {
      parameters: ["pointer", "buffer", "pointer"],
      result: "u32",
    },
    RegOpenKeyW: {
      parameters: ["pointer", "buffer", "pointer"],
      result: "u32",
    },
    RegOpenKeyExA: {
      parameters: ["pointer", "buffer", "u32", "u32", "pointer"],
      result: "u32",
    },
    RegOpenKeyExW: {
      parameters: ["pointer", "buffer", "u32", "u32", "pointer"],
      result: "u32",
    },
    RegOpenKeyTransactedA: {
      parameters: ["pointer", "buffer", "u32", "u32", "pointer", "pointer", "pointer"],
      result: "u32",
    },
    RegOpenKeyTransactedW: {
      parameters: ["pointer", "buffer", "u32", "u32", "pointer", "pointer", "pointer"],
      result: "u32",
    },
    RegQueryInfoKeyA: {
      parameters: ["pointer", "buffer", "pointer", "pointer", "pointer", "pointer", "pointer", "pointer", "pointer", "pointer", "pointer", "pointer"],
      result: "u32",
    },
    RegQueryInfoKeyW: {
      parameters: ["pointer", "buffer", "pointer", "pointer", "pointer", "pointer", "pointer", "pointer", "pointer", "pointer", "pointer", "pointer"],
      result: "u32",
    },
    RegQueryValueA: {
      parameters: ["pointer", "buffer", "buffer", "pointer"],
      result: "u32",
    },
    RegQueryValueW: {
      parameters: ["pointer", "buffer", "buffer", "pointer"],
      result: "u32",
    },
    RegQueryMultipleValuesA: {
      parameters: ["pointer", "pointer", "u32", "buffer", "pointer"],
      result: "u32",
    },
    RegQueryMultipleValuesW: {
      parameters: ["pointer", "pointer", "u32", "buffer", "pointer"],
      result: "u32",
    },
    RegQueryValueExA: {
      parameters: ["pointer", "buffer", "pointer", "pointer", "pointer", "pointer"],
      result: "u32",
    },
    RegQueryValueExW: {
      parameters: ["pointer", "buffer", "pointer", "pointer", "pointer", "pointer"],
      result: "u32",
    },
    RegReplaceKeyA: {
      parameters: ["pointer", "buffer", "buffer", "buffer"],
      result: "u32",
    },
    RegReplaceKeyW: {
      parameters: ["pointer", "buffer", "buffer", "buffer"],
      result: "u32",
    },
    RegRestoreKeyA: {
      parameters: ["pointer", "buffer", "i32"],
      result: "u32",
    },
    RegRestoreKeyW: {
      parameters: ["pointer", "buffer", "i32"],
      result: "u32",
    },
    RegRenameKey: {
      parameters: ["pointer", "buffer", "buffer"],
      result: "u32",
    },
    RegSaveKeyA: {
      parameters: ["pointer", "buffer", "pointer"],
      result: "u32",
    },
    RegSaveKeyW: {
      parameters: ["pointer", "buffer", "pointer"],
      result: "u32",
    },
    RegSetKeySecurity: {
      parameters: ["pointer", "u32", "pointer"],
      result: "u32",
    },
    RegSetValueA: {
      parameters: ["pointer", "buffer", "u32", "buffer", "u32"],
      result: "u32",
    },
    RegSetValueW: {
      parameters: ["pointer", "buffer", "u32", "buffer", "u32"],
      result: "u32",
    },
    RegSetValueExA: {
      parameters: ["pointer", "buffer", "u32", "u32", "pointer", "u32"],
      result: "u32",
    },
    RegSetValueExW: {
      parameters: ["pointer", "buffer", "u32", "u32", "pointer", "u32"],
      result: "u32",
    },
    RegUnLoadKeyA: {
      parameters: ["pointer", "buffer"],
      result: "u32",
    },
    RegUnLoadKeyW: {
      parameters: ["pointer", "buffer"],
      result: "u32",
    },
    RegDeleteKeyValueA: {
      parameters: ["pointer", "buffer", "buffer"],
      result: "u32",
    },
    RegDeleteKeyValueW: {
      parameters: ["pointer", "buffer", "buffer"],
      result: "u32",
    },
    RegSetKeyValueA: {
      parameters: ["pointer", "buffer", "buffer", "u32", "pointer", "u32"],
      result: "u32",
    },
    RegSetKeyValueW: {
      parameters: ["pointer", "buffer", "buffer", "u32", "pointer", "u32"],
      result: "u32",
    },
    RegDeleteTreeA: {
      parameters: ["pointer", "buffer"],
      result: "u32",
    },
    RegDeleteTreeW: {
      parameters: ["pointer", "buffer"],
      result: "u32",
    },
    RegCopyTreeA: {
      parameters: ["pointer", "buffer", "pointer"],
      result: "u32",
    },
    RegGetValueA: {
      parameters: ["pointer", "buffer", "buffer", "u32", "pointer", "pointer", "pointer"],
      result: "u32",
    },
    RegGetValueW: {
      parameters: ["pointer", "buffer", "buffer", "u32", "pointer", "pointer", "pointer"],
      result: "u32",
    },
    RegCopyTreeW: {
      parameters: ["pointer", "buffer", "pointer"],
      result: "u32",
    },
    RegLoadMUIStringA: {
      parameters: ["pointer", "buffer", "buffer", "u32", "pointer", "u32", "buffer"],
      result: "u32",
    },
    RegLoadMUIStringW: {
      parameters: ["pointer", "buffer", "buffer", "u32", "pointer", "u32", "buffer"],
      result: "u32",
    },
    RegLoadAppKeyA: {
      parameters: ["buffer", "pointer", "u32", "u32", "u32"],
      result: "u32",
    },
    RegLoadAppKeyW: {
      parameters: ["buffer", "pointer", "u32", "u32", "u32"],
      result: "u32",
    },
    RegSaveKeyExA: {
      parameters: ["pointer", "buffer", "pointer", "u32"],
      result: "u32",
    },
    RegSaveKeyExW: {
      parameters: ["pointer", "buffer", "pointer", "u32"],
      result: "u32",
    },
  }).symbols;
} catch(e) { /* ignore */ }

try {
  var libapi_ms_win_core_state_helpers_l1_1_0_dll = Deno.dlopen("api-ms-win-core-state-helpers-l1-1-0.dll", {
    GetRegistryValueWithFallbackW: {
      parameters: ["pointer", "buffer", "pointer", "buffer", "buffer", "u32", "pointer", "pointer", "u32", "pointer"],
      result: "u32",
    },
  }).symbols;
} catch(e) { /* ignore */ }

// Symbols

export function RegCloseKey(
  hKey: Uint8Array | Deno.PointerValue | null /* Windows.Win32.System.Registry.HKEY */,
): WIN32_ERROR /* Windows.Win32.Foundation.WIN32_ERROR */ {
  return libADVAPI32_dll.RegCloseKey(util.toPointer(hKey));
}

export function RegOverridePredefKey(
  hKey: Uint8Array | Deno.PointerValue | null /* Windows.Win32.System.Registry.HKEY */,
  hNewHKey: Uint8Array | Deno.PointerValue | null /* Windows.Win32.System.Registry.HKEY */,
): WIN32_ERROR /* Windows.Win32.Foundation.WIN32_ERROR */ {
  return libADVAPI32_dll.RegOverridePredefKey(util.toPointer(hKey), util.toPointer(hNewHKey));
}

export function RegOpenUserClassesRoot(
  hToken: Uint8Array | Deno.PointerValue | null /* Windows.Win32.Foundation.HANDLE */,
  dwOptions: number /* u32 */,
  samDesired: number /* u32 */,
  phkResult: Deno.PointerValue | Uint8Array | null /* ptr */,
): WIN32_ERROR /* Windows.Win32.Foundation.WIN32_ERROR */ {
  return libADVAPI32_dll.RegOpenUserClassesRoot(util.toPointer(hToken), dwOptions, samDesired, util.toPointer(phkResult));
}

export function RegOpenCurrentUser(
  samDesired: number /* u32 */,
  phkResult: Deno.PointerValue | Uint8Array | null /* ptr */,
): WIN32_ERROR /* Windows.Win32.Foundation.WIN32_ERROR */ {
  return libADVAPI32_dll.RegOpenCurrentUser(samDesired, util.toPointer(phkResult));
}

export function RegDisablePredefinedCache(): WIN32_ERROR /* Windows.Win32.Foundation.WIN32_ERROR */ {
  return libADVAPI32_dll.RegDisablePredefinedCache();
}

export function RegDisablePredefinedCacheEx(): WIN32_ERROR /* Windows.Win32.Foundation.WIN32_ERROR */ {
  return libADVAPI32_dll.RegDisablePredefinedCacheEx();
}

export function RegConnectRegistryA(
  lpMachineName: string | null /* Windows.Win32.Foundation.PSTR */,
  hKey: Uint8Array | Deno.PointerValue | null /* Windows.Win32.System.Registry.HKEY */,
  phkResult: Deno.PointerValue | Uint8Array | null /* ptr */,
): WIN32_ERROR /* Windows.Win32.Foundation.WIN32_ERROR */ {
  return libADVAPI32_dll.RegConnectRegistryA(util.pstrToFfi(lpMachineName), util.toPointer(hKey), util.toPointer(phkResult));
}

export function RegConnectRegistryW(
  lpMachineName: string | null /* Windows.Win32.Foundation.PWSTR */,
  hKey: Uint8Array | Deno.PointerValue | null /* Windows.Win32.System.Registry.HKEY */,
  phkResult: Deno.PointerValue | Uint8Array | null /* ptr */,
): WIN32_ERROR /* Windows.Win32.Foundation.WIN32_ERROR */ {
  return libADVAPI32_dll.RegConnectRegistryW(util.pwstrToFfi(lpMachineName), util.toPointer(hKey), util.toPointer(phkResult));
}

export function RegConnectRegistryExA(
  lpMachineName: string | null /* Windows.Win32.Foundation.PSTR */,
  hKey: Uint8Array | Deno.PointerValue | null /* Windows.Win32.System.Registry.HKEY */,
  Flags: number /* u32 */,
  phkResult: Deno.PointerValue | Uint8Array | null /* ptr */,
): number /* i32 */ {
  return libADVAPI32_dll.RegConnectRegistryExA(util.pstrToFfi(lpMachineName), util.toPointer(hKey), Flags, util.toPointer(phkResult));
}

export function RegConnectRegistryExW(
  lpMachineName: string | null /* Windows.Win32.Foundation.PWSTR */,
  hKey: Uint8Array | Deno.PointerValue | null /* Windows.Win32.System.Registry.HKEY */,
  Flags: number /* u32 */,
  phkResult: Deno.PointerValue | Uint8Array | null /* ptr */,
): number /* i32 */ {
  return libADVAPI32_dll.RegConnectRegistryExW(util.pwstrToFfi(lpMachineName), util.toPointer(hKey), Flags, util.toPointer(phkResult));
}

export function RegCreateKeyA(
  hKey: Uint8Array | Deno.PointerValue | null /* Windows.Win32.System.Registry.HKEY */,
  lpSubKey: string | null /* Windows.Win32.Foundation.PSTR */,
  phkResult: Deno.PointerValue | Uint8Array | null /* ptr */,
): WIN32_ERROR /* Windows.Win32.Foundation.WIN32_ERROR */ {
  return libADVAPI32_dll.RegCreateKeyA(util.toPointer(hKey), util.pstrToFfi(lpSubKey), util.toPointer(phkResult));
}

export function RegCreateKeyW(
  hKey: Uint8Array | Deno.PointerValue | null /* Windows.Win32.System.Registry.HKEY */,
  lpSubKey: string | null /* Windows.Win32.Foundation.PWSTR */,
  phkResult: Deno.PointerValue | Uint8Array | null /* ptr */,
): WIN32_ERROR /* Windows.Win32.Foundation.WIN32_ERROR */ {
  return libADVAPI32_dll.RegCreateKeyW(util.toPointer(hKey), util.pwstrToFfi(lpSubKey), util.toPointer(phkResult));
}

export function RegCreateKeyExA(
  hKey: Uint8Array | Deno.PointerValue | null /* Windows.Win32.System.Registry.HKEY */,
  lpSubKey: string | null /* Windows.Win32.Foundation.PSTR */,
  Reserved: number /* u32 */,
  lpClass: string | null /* Windows.Win32.Foundation.PSTR */,
  dwOptions: REG_OPEN_CREATE_OPTIONS /* Windows.Win32.System.Registry.REG_OPEN_CREATE_OPTIONS */,
  samDesired: REG_SAM_FLAGS /* Windows.Win32.System.Registry.REG_SAM_FLAGS */,
  lpSecurityAttributes: Deno.PointerValue | Uint8Array | null /* ptr */,
  phkResult: Deno.PointerValue | Uint8Array | null /* ptr */,
  lpdwDisposition: Deno.PointerValue | Uint8Array | null /* ptr */,
): WIN32_ERROR /* Windows.Win32.Foundation.WIN32_ERROR */ {
  return libADVAPI32_dll.RegCreateKeyExA(util.toPointer(hKey), util.pstrToFfi(lpSubKey), Reserved, util.pstrToFfi(lpClass), dwOptions, samDesired, util.toPointer(lpSecurityAttributes), util.toPointer(phkResult), util.toPointer(lpdwDisposition));
}

export function RegCreateKeyExW(
  hKey: Uint8Array | Deno.PointerValue | null /* Windows.Win32.System.Registry.HKEY */,
  lpSubKey: string | null /* Windows.Win32.Foundation.PWSTR */,
  Reserved: number /* u32 */,
  lpClass: string | null /* Windows.Win32.Foundation.PWSTR */,
  dwOptions: REG_OPEN_CREATE_OPTIONS /* Windows.Win32.System.Registry.REG_OPEN_CREATE_OPTIONS */,
  samDesired: REG_SAM_FLAGS /* Windows.Win32.System.Registry.REG_SAM_FLAGS */,
  lpSecurityAttributes: Deno.PointerValue | Uint8Array | null /* ptr */,
  phkResult: Deno.PointerValue | Uint8Array | null /* ptr */,
  lpdwDisposition: Deno.PointerValue | Uint8Array | null /* ptr */,
): WIN32_ERROR /* Windows.Win32.Foundation.WIN32_ERROR */ {
  return libADVAPI32_dll.RegCreateKeyExW(util.toPointer(hKey), util.pwstrToFfi(lpSubKey), Reserved, util.pwstrToFfi(lpClass), dwOptions, samDesired, util.toPointer(lpSecurityAttributes), util.toPointer(phkResult), util.toPointer(lpdwDisposition));
}

export function RegCreateKeyTransactedA(
  hKey: Uint8Array | Deno.PointerValue | null /* Windows.Win32.System.Registry.HKEY */,
  lpSubKey: string | null /* Windows.Win32.Foundation.PSTR */,
  Reserved: number /* u32 */,
  lpClass: string | null /* Windows.Win32.Foundation.PSTR */,
  dwOptions: REG_OPEN_CREATE_OPTIONS /* Windows.Win32.System.Registry.REG_OPEN_CREATE_OPTIONS */,
  samDesired: REG_SAM_FLAGS /* Windows.Win32.System.Registry.REG_SAM_FLAGS */,
  lpSecurityAttributes: Deno.PointerValue | Uint8Array | null /* ptr */,
  phkResult: Deno.PointerValue | Uint8Array | null /* ptr */,
  lpdwDisposition: Deno.PointerValue | Uint8Array | null /* ptr */,
  hTransaction: Uint8Array | Deno.PointerValue | null /* Windows.Win32.Foundation.HANDLE */,
  pExtendedParemeter: Deno.PointerValue | Uint8Array | null /* ptr */,
): WIN32_ERROR /* Windows.Win32.Foundation.WIN32_ERROR */ {
  return libADVAPI32_dll.RegCreateKeyTransactedA(util.toPointer(hKey), util.pstrToFfi(lpSubKey), Reserved, util.pstrToFfi(lpClass), dwOptions, samDesired, util.toPointer(lpSecurityAttributes), util.toPointer(phkResult), util.toPointer(lpdwDisposition), util.toPointer(hTransaction), util.toPointer(pExtendedParemeter));
}

export function RegCreateKeyTransactedW(
  hKey: Uint8Array | Deno.PointerValue | null /* Windows.Win32.System.Registry.HKEY */,
  lpSubKey: string | null /* Windows.Win32.Foundation.PWSTR */,
  Reserved: number /* u32 */,
  lpClass: string | null /* Windows.Win32.Foundation.PWSTR */,
  dwOptions: REG_OPEN_CREATE_OPTIONS /* Windows.Win32.System.Registry.REG_OPEN_CREATE_OPTIONS */,
  samDesired: REG_SAM_FLAGS /* Windows.Win32.System.Registry.REG_SAM_FLAGS */,
  lpSecurityAttributes: Deno.PointerValue | Uint8Array | null /* ptr */,
  phkResult: Deno.PointerValue | Uint8Array | null /* ptr */,
  lpdwDisposition: Deno.PointerValue | Uint8Array | null /* ptr */,
  hTransaction: Uint8Array | Deno.PointerValue | null /* Windows.Win32.Foundation.HANDLE */,
  pExtendedParemeter: Deno.PointerValue | Uint8Array | null /* ptr */,
): WIN32_ERROR /* Windows.Win32.Foundation.WIN32_ERROR */ {
  return libADVAPI32_dll.RegCreateKeyTransactedW(util.toPointer(hKey), util.pwstrToFfi(lpSubKey), Reserved, util.pwstrToFfi(lpClass), dwOptions, samDesired, util.toPointer(lpSecurityAttributes), util.toPointer(phkResult), util.toPointer(lpdwDisposition), util.toPointer(hTransaction), util.toPointer(pExtendedParemeter));
}

export function RegDeleteKeyA(
  hKey: Uint8Array | Deno.PointerValue | null /* Windows.Win32.System.Registry.HKEY */,
  lpSubKey: string | null /* Windows.Win32.Foundation.PSTR */,
): WIN32_ERROR /* Windows.Win32.Foundation.WIN32_ERROR */ {
  return libADVAPI32_dll.RegDeleteKeyA(util.toPointer(hKey), util.pstrToFfi(lpSubKey));
}

export function RegDeleteKeyW(
  hKey: Uint8Array | Deno.PointerValue | null /* Windows.Win32.System.Registry.HKEY */,
  lpSubKey: string | null /* Windows.Win32.Foundation.PWSTR */,
): WIN32_ERROR /* Windows.Win32.Foundation.WIN32_ERROR */ {
  return libADVAPI32_dll.RegDeleteKeyW(util.toPointer(hKey), util.pwstrToFfi(lpSubKey));
}

export function RegDeleteKeyExA(
  hKey: Uint8Array | Deno.PointerValue | null /* Windows.Win32.System.Registry.HKEY */,
  lpSubKey: string | null /* Windows.Win32.Foundation.PSTR */,
  samDesired: number /* u32 */,
  Reserved: number /* u32 */,
): WIN32_ERROR /* Windows.Win32.Foundation.WIN32_ERROR */ {
  return libADVAPI32_dll.RegDeleteKeyExA(util.toPointer(hKey), util.pstrToFfi(lpSubKey), samDesired, Reserved);
}

export function RegDeleteKeyExW(
  hKey: Uint8Array | Deno.PointerValue | null /* Windows.Win32.System.Registry.HKEY */,
  lpSubKey: string | null /* Windows.Win32.Foundation.PWSTR */,
  samDesired: number /* u32 */,
  Reserved: number /* u32 */,
): WIN32_ERROR /* Windows.Win32.Foundation.WIN32_ERROR */ {
  return libADVAPI32_dll.RegDeleteKeyExW(util.toPointer(hKey), util.pwstrToFfi(lpSubKey), samDesired, Reserved);
}

export function RegDeleteKeyTransactedA(
  hKey: Uint8Array | Deno.PointerValue | null /* Windows.Win32.System.Registry.HKEY */,
  lpSubKey: string | null /* Windows.Win32.Foundation.PSTR */,
  samDesired: number /* u32 */,
  Reserved: number /* u32 */,
  hTransaction: Uint8Array | Deno.PointerValue | null /* Windows.Win32.Foundation.HANDLE */,
  pExtendedParameter: Deno.PointerValue | Uint8Array | null /* ptr */,
): WIN32_ERROR /* Windows.Win32.Foundation.WIN32_ERROR */ {
  return libADVAPI32_dll.RegDeleteKeyTransactedA(util.toPointer(hKey), util.pstrToFfi(lpSubKey), samDesired, Reserved, util.toPointer(hTransaction), util.toPointer(pExtendedParameter));
}

export function RegDeleteKeyTransactedW(
  hKey: Uint8Array | Deno.PointerValue | null /* Windows.Win32.System.Registry.HKEY */,
  lpSubKey: string | null /* Windows.Win32.Foundation.PWSTR */,
  samDesired: number /* u32 */,
  Reserved: number /* u32 */,
  hTransaction: Uint8Array | Deno.PointerValue | null /* Windows.Win32.Foundation.HANDLE */,
  pExtendedParameter: Deno.PointerValue | Uint8Array | null /* ptr */,
): WIN32_ERROR /* Windows.Win32.Foundation.WIN32_ERROR */ {
  return libADVAPI32_dll.RegDeleteKeyTransactedW(util.toPointer(hKey), util.pwstrToFfi(lpSubKey), samDesired, Reserved, util.toPointer(hTransaction), util.toPointer(pExtendedParameter));
}

export function RegDisableReflectionKey(
  hBase: Uint8Array | Deno.PointerValue | null /* Windows.Win32.System.Registry.HKEY */,
): WIN32_ERROR /* Windows.Win32.Foundation.WIN32_ERROR */ {
  return libADVAPI32_dll.RegDisableReflectionKey(util.toPointer(hBase));
}

export function RegEnableReflectionKey(
  hBase: Uint8Array | Deno.PointerValue | null /* Windows.Win32.System.Registry.HKEY */,
): WIN32_ERROR /* Windows.Win32.Foundation.WIN32_ERROR */ {
  return libADVAPI32_dll.RegEnableReflectionKey(util.toPointer(hBase));
}

export function RegQueryReflectionKey(
  hBase: Uint8Array | Deno.PointerValue | null /* Windows.Win32.System.Registry.HKEY */,
  bIsReflectionDisabled: Deno.PointerValue | Uint8Array | null /* ptr */,
): WIN32_ERROR /* Windows.Win32.Foundation.WIN32_ERROR */ {
  return libADVAPI32_dll.RegQueryReflectionKey(util.toPointer(hBase), util.toPointer(bIsReflectionDisabled));
}

export function RegDeleteValueA(
  hKey: Uint8Array | Deno.PointerValue | null /* Windows.Win32.System.Registry.HKEY */,
  lpValueName: string | null /* Windows.Win32.Foundation.PSTR */,
): WIN32_ERROR /* Windows.Win32.Foundation.WIN32_ERROR */ {
  return libADVAPI32_dll.RegDeleteValueA(util.toPointer(hKey), util.pstrToFfi(lpValueName));
}

export function RegDeleteValueW(
  hKey: Uint8Array | Deno.PointerValue | null /* Windows.Win32.System.Registry.HKEY */,
  lpValueName: string | null /* Windows.Win32.Foundation.PWSTR */,
): WIN32_ERROR /* Windows.Win32.Foundation.WIN32_ERROR */ {
  return libADVAPI32_dll.RegDeleteValueW(util.toPointer(hKey), util.pwstrToFfi(lpValueName));
}

export function RegEnumKeyA(
  hKey: Uint8Array | Deno.PointerValue | null /* Windows.Win32.System.Registry.HKEY */,
  dwIndex: number /* u32 */,
  lpName: string | null /* Windows.Win32.Foundation.PSTR */,
  cchName: number /* u32 */,
): WIN32_ERROR /* Windows.Win32.Foundation.WIN32_ERROR */ {
  return libADVAPI32_dll.RegEnumKeyA(util.toPointer(hKey), dwIndex, util.pstrToFfi(lpName), cchName);
}

export function RegEnumKeyW(
  hKey: Uint8Array | Deno.PointerValue | null /* Windows.Win32.System.Registry.HKEY */,
  dwIndex: number /* u32 */,
  lpName: string | null /* Windows.Win32.Foundation.PWSTR */,
  cchName: number /* u32 */,
): WIN32_ERROR /* Windows.Win32.Foundation.WIN32_ERROR */ {
  return libADVAPI32_dll.RegEnumKeyW(util.toPointer(hKey), dwIndex, util.pwstrToFfi(lpName), cchName);
}

export function RegEnumKeyExA(
  hKey: Uint8Array | Deno.PointerValue | null /* Windows.Win32.System.Registry.HKEY */,
  dwIndex: number /* u32 */,
  lpName: string | null /* Windows.Win32.Foundation.PSTR */,
  lpcchName: Deno.PointerValue | Uint8Array | null /* ptr */,
  lpReserved: Deno.PointerValue | Uint8Array | null /* ptr */,
  lpClass: string | null /* Windows.Win32.Foundation.PSTR */,
  lpcchClass: Deno.PointerValue | Uint8Array | null /* ptr */,
  lpftLastWriteTime: Deno.PointerValue | Uint8Array | null /* ptr */,
): WIN32_ERROR /* Windows.Win32.Foundation.WIN32_ERROR */ {
  return libADVAPI32_dll.RegEnumKeyExA(util.toPointer(hKey), dwIndex, util.pstrToFfi(lpName), util.toPointer(lpcchName), util.toPointer(lpReserved), util.pstrToFfi(lpClass), util.toPointer(lpcchClass), util.toPointer(lpftLastWriteTime));
}

export function RegEnumKeyExW(
  hKey: Uint8Array | Deno.PointerValue | null /* Windows.Win32.System.Registry.HKEY */,
  dwIndex: number /* u32 */,
  lpName: string | null /* Windows.Win32.Foundation.PWSTR */,
  lpcchName: Deno.PointerValue | Uint8Array | null /* ptr */,
  lpReserved: Deno.PointerValue | Uint8Array | null /* ptr */,
  lpClass: string | null /* Windows.Win32.Foundation.PWSTR */,
  lpcchClass: Deno.PointerValue | Uint8Array | null /* ptr */,
  lpftLastWriteTime: Deno.PointerValue | Uint8Array | null /* ptr */,
): WIN32_ERROR /* Windows.Win32.Foundation.WIN32_ERROR */ {
  return libADVAPI32_dll.RegEnumKeyExW(util.toPointer(hKey), dwIndex, util.pwstrToFfi(lpName), util.toPointer(lpcchName), util.toPointer(lpReserved), util.pwstrToFfi(lpClass), util.toPointer(lpcchClass), util.toPointer(lpftLastWriteTime));
}

export function RegEnumValueA(
  hKey: Uint8Array | Deno.PointerValue | null /* Windows.Win32.System.Registry.HKEY */,
  dwIndex: number /* u32 */,
  lpValueName: string | null /* Windows.Win32.Foundation.PSTR */,
  lpcchValueName: Deno.PointerValue | Uint8Array | null /* ptr */,
  lpReserved: Deno.PointerValue | Uint8Array | null /* ptr */,
  lpType: Deno.PointerValue | Uint8Array | null /* ptr */,
  lpData: Deno.PointerValue | Uint8Array | null /* ptr */,
  lpcbData: Deno.PointerValue | Uint8Array | null /* ptr */,
): WIN32_ERROR /* Windows.Win32.Foundation.WIN32_ERROR */ {
  return libADVAPI32_dll.RegEnumValueA(util.toPointer(hKey), dwIndex, util.pstrToFfi(lpValueName), util.toPointer(lpcchValueName), util.toPointer(lpReserved), util.toPointer(lpType), util.toPointer(lpData), util.toPointer(lpcbData));
}

export function RegEnumValueW(
  hKey: Uint8Array | Deno.PointerValue | null /* Windows.Win32.System.Registry.HKEY */,
  dwIndex: number /* u32 */,
  lpValueName: string | null /* Windows.Win32.Foundation.PWSTR */,
  lpcchValueName: Deno.PointerValue | Uint8Array | null /* ptr */,
  lpReserved: Deno.PointerValue | Uint8Array | null /* ptr */,
  lpType: Deno.PointerValue | Uint8Array | null /* ptr */,
  lpData: Deno.PointerValue | Uint8Array | null /* ptr */,
  lpcbData: Deno.PointerValue | Uint8Array | null /* ptr */,
): WIN32_ERROR /* Windows.Win32.Foundation.WIN32_ERROR */ {
  return libADVAPI32_dll.RegEnumValueW(util.toPointer(hKey), dwIndex, util.pwstrToFfi(lpValueName), util.toPointer(lpcchValueName), util.toPointer(lpReserved), util.toPointer(lpType), util.toPointer(lpData), util.toPointer(lpcbData));
}

export function RegFlushKey(
  hKey: Uint8Array | Deno.PointerValue | null /* Windows.Win32.System.Registry.HKEY */,
): WIN32_ERROR /* Windows.Win32.Foundation.WIN32_ERROR */ {
  return libADVAPI32_dll.RegFlushKey(util.toPointer(hKey));
}

export function RegGetKeySecurity(
  hKey: Uint8Array | Deno.PointerValue | null /* Windows.Win32.System.Registry.HKEY */,
  SecurityInformation: number /* u32 */,
  pSecurityDescriptor: Uint8Array | Deno.PointerValue | null /* Windows.Win32.Security.PSECURITY_DESCRIPTOR */,
  lpcbSecurityDescriptor: Deno.PointerValue | Uint8Array | null /* ptr */,
): WIN32_ERROR /* Windows.Win32.Foundation.WIN32_ERROR */ {
  return libADVAPI32_dll.RegGetKeySecurity(util.toPointer(hKey), SecurityInformation, util.toPointer(pSecurityDescriptor), util.toPointer(lpcbSecurityDescriptor));
}

export function RegLoadKeyA(
  hKey: Uint8Array | Deno.PointerValue | null /* Windows.Win32.System.Registry.HKEY */,
  lpSubKey: string | null /* Windows.Win32.Foundation.PSTR */,
  lpFile: string | null /* Windows.Win32.Foundation.PSTR */,
): WIN32_ERROR /* Windows.Win32.Foundation.WIN32_ERROR */ {
  return libADVAPI32_dll.RegLoadKeyA(util.toPointer(hKey), util.pstrToFfi(lpSubKey), util.pstrToFfi(lpFile));
}

export function RegLoadKeyW(
  hKey: Uint8Array | Deno.PointerValue | null /* Windows.Win32.System.Registry.HKEY */,
  lpSubKey: string | null /* Windows.Win32.Foundation.PWSTR */,
  lpFile: string | null /* Windows.Win32.Foundation.PWSTR */,
): WIN32_ERROR /* Windows.Win32.Foundation.WIN32_ERROR */ {
  return libADVAPI32_dll.RegLoadKeyW(util.toPointer(hKey), util.pwstrToFfi(lpSubKey), util.pwstrToFfi(lpFile));
}

export function RegNotifyChangeKeyValue(
  hKey: Uint8Array | Deno.PointerValue | null /* Windows.Win32.System.Registry.HKEY */,
  bWatchSubtree: boolean /* Windows.Win32.Foundation.BOOL */,
  dwNotifyFilter: REG_NOTIFY_FILTER /* Windows.Win32.System.Registry.REG_NOTIFY_FILTER */,
  hEvent: Uint8Array | Deno.PointerValue | null /* Windows.Win32.Foundation.HANDLE */,
  fAsynchronous: boolean /* Windows.Win32.Foundation.BOOL */,
): WIN32_ERROR /* Windows.Win32.Foundation.WIN32_ERROR */ {
  return libADVAPI32_dll.RegNotifyChangeKeyValue(util.toPointer(hKey), util.boolToFfi(bWatchSubtree), dwNotifyFilter, util.toPointer(hEvent), util.boolToFfi(fAsynchronous));
}

export function RegOpenKeyA(
  hKey: Uint8Array | Deno.PointerValue | null /* Windows.Win32.System.Registry.HKEY */,
  lpSubKey: string | null /* Windows.Win32.Foundation.PSTR */,
  phkResult: Deno.PointerValue | Uint8Array | null /* ptr */,
): WIN32_ERROR /* Windows.Win32.Foundation.WIN32_ERROR */ {
  return libADVAPI32_dll.RegOpenKeyA(util.toPointer(hKey), util.pstrToFfi(lpSubKey), util.toPointer(phkResult));
}

export function RegOpenKeyW(
  hKey: Uint8Array | Deno.PointerValue | null /* Windows.Win32.System.Registry.HKEY */,
  lpSubKey: string | null /* Windows.Win32.Foundation.PWSTR */,
  phkResult: Deno.PointerValue | Uint8Array | null /* ptr */,
): WIN32_ERROR /* Windows.Win32.Foundation.WIN32_ERROR */ {
  return libADVAPI32_dll.RegOpenKeyW(util.toPointer(hKey), util.pwstrToFfi(lpSubKey), util.toPointer(phkResult));
}

export function RegOpenKeyExA(
  hKey: Uint8Array | Deno.PointerValue | null /* Windows.Win32.System.Registry.HKEY */,
  lpSubKey: string | null /* Windows.Win32.Foundation.PSTR */,
  ulOptions: number /* u32 */,
  samDesired: REG_SAM_FLAGS /* Windows.Win32.System.Registry.REG_SAM_FLAGS */,
  phkResult: Deno.PointerValue | Uint8Array | null /* ptr */,
): WIN32_ERROR /* Windows.Win32.Foundation.WIN32_ERROR */ {
  return libADVAPI32_dll.RegOpenKeyExA(util.toPointer(hKey), util.pstrToFfi(lpSubKey), ulOptions, samDesired, util.toPointer(phkResult));
}

export function RegOpenKeyExW(
  hKey: Uint8Array | Deno.PointerValue | null /* Windows.Win32.System.Registry.HKEY */,
  lpSubKey: string | null /* Windows.Win32.Foundation.PWSTR */,
  ulOptions: number /* u32 */,
  samDesired: REG_SAM_FLAGS /* Windows.Win32.System.Registry.REG_SAM_FLAGS */,
  phkResult: Deno.PointerValue | Uint8Array | null /* ptr */,
): WIN32_ERROR /* Windows.Win32.Foundation.WIN32_ERROR */ {
  return libADVAPI32_dll.RegOpenKeyExW(util.toPointer(hKey), util.pwstrToFfi(lpSubKey), ulOptions, samDesired, util.toPointer(phkResult));
}

export function RegOpenKeyTransactedA(
  hKey: Uint8Array | Deno.PointerValue | null /* Windows.Win32.System.Registry.HKEY */,
  lpSubKey: string | null /* Windows.Win32.Foundation.PSTR */,
  ulOptions: number /* u32 */,
  samDesired: REG_SAM_FLAGS /* Windows.Win32.System.Registry.REG_SAM_FLAGS */,
  phkResult: Deno.PointerValue | Uint8Array | null /* ptr */,
  hTransaction: Uint8Array | Deno.PointerValue | null /* Windows.Win32.Foundation.HANDLE */,
  pExtendedParemeter: Deno.PointerValue | Uint8Array | null /* ptr */,
): WIN32_ERROR /* Windows.Win32.Foundation.WIN32_ERROR */ {
  return libADVAPI32_dll.RegOpenKeyTransactedA(util.toPointer(hKey), util.pstrToFfi(lpSubKey), ulOptions, samDesired, util.toPointer(phkResult), util.toPointer(hTransaction), util.toPointer(pExtendedParemeter));
}

export function RegOpenKeyTransactedW(
  hKey: Uint8Array | Deno.PointerValue | null /* Windows.Win32.System.Registry.HKEY */,
  lpSubKey: string | null /* Windows.Win32.Foundation.PWSTR */,
  ulOptions: number /* u32 */,
  samDesired: REG_SAM_FLAGS /* Windows.Win32.System.Registry.REG_SAM_FLAGS */,
  phkResult: Deno.PointerValue | Uint8Array | null /* ptr */,
  hTransaction: Uint8Array | Deno.PointerValue | null /* Windows.Win32.Foundation.HANDLE */,
  pExtendedParemeter: Deno.PointerValue | Uint8Array | null /* ptr */,
): WIN32_ERROR /* Windows.Win32.Foundation.WIN32_ERROR */ {
  return libADVAPI32_dll.RegOpenKeyTransactedW(util.toPointer(hKey), util.pwstrToFfi(lpSubKey), ulOptions, samDesired, util.toPointer(phkResult), util.toPointer(hTransaction), util.toPointer(pExtendedParemeter));
}

export function RegQueryInfoKeyA(
  hKey: Uint8Array | Deno.PointerValue | null /* Windows.Win32.System.Registry.HKEY */,
  lpClass: string | null /* Windows.Win32.Foundation.PSTR */,
  lpcchClass: Deno.PointerValue | Uint8Array | null /* ptr */,
  lpReserved: Deno.PointerValue | Uint8Array | null /* ptr */,
  lpcSubKeys: Deno.PointerValue | Uint8Array | null /* ptr */,
  lpcbMaxSubKeyLen: Deno.PointerValue | Uint8Array | null /* ptr */,
  lpcbMaxClassLen: Deno.PointerValue | Uint8Array | null /* ptr */,
  lpcValues: Deno.PointerValue | Uint8Array | null /* ptr */,
  lpcbMaxValueNameLen: Deno.PointerValue | Uint8Array | null /* ptr */,
  lpcbMaxValueLen: Deno.PointerValue | Uint8Array | null /* ptr */,
  lpcbSecurityDescriptor: Deno.PointerValue | Uint8Array | null /* ptr */,
  lpftLastWriteTime: Deno.PointerValue | Uint8Array | null /* ptr */,
): WIN32_ERROR /* Windows.Win32.Foundation.WIN32_ERROR */ {
  return libADVAPI32_dll.RegQueryInfoKeyA(util.toPointer(hKey), util.pstrToFfi(lpClass), util.toPointer(lpcchClass), util.toPointer(lpReserved), util.toPointer(lpcSubKeys), util.toPointer(lpcbMaxSubKeyLen), util.toPointer(lpcbMaxClassLen), util.toPointer(lpcValues), util.toPointer(lpcbMaxValueNameLen), util.toPointer(lpcbMaxValueLen), util.toPointer(lpcbSecurityDescriptor), util.toPointer(lpftLastWriteTime));
}

export function RegQueryInfoKeyW(
  hKey: Uint8Array | Deno.PointerValue | null /* Windows.Win32.System.Registry.HKEY */,
  lpClass: string | null /* Windows.Win32.Foundation.PWSTR */,
  lpcchClass: Deno.PointerValue | Uint8Array | null /* ptr */,
  lpReserved: Deno.PointerValue | Uint8Array | null /* ptr */,
  lpcSubKeys: Deno.PointerValue | Uint8Array | null /* ptr */,
  lpcbMaxSubKeyLen: Deno.PointerValue | Uint8Array | null /* ptr */,
  lpcbMaxClassLen: Deno.PointerValue | Uint8Array | null /* ptr */,
  lpcValues: Deno.PointerValue | Uint8Array | null /* ptr */,
  lpcbMaxValueNameLen: Deno.PointerValue | Uint8Array | null /* ptr */,
  lpcbMaxValueLen: Deno.PointerValue | Uint8Array | null /* ptr */,
  lpcbSecurityDescriptor: Deno.PointerValue | Uint8Array | null /* ptr */,
  lpftLastWriteTime: Deno.PointerValue | Uint8Array | null /* ptr */,
): WIN32_ERROR /* Windows.Win32.Foundation.WIN32_ERROR */ {
  return libADVAPI32_dll.RegQueryInfoKeyW(util.toPointer(hKey), util.pwstrToFfi(lpClass), util.toPointer(lpcchClass), util.toPointer(lpReserved), util.toPointer(lpcSubKeys), util.toPointer(lpcbMaxSubKeyLen), util.toPointer(lpcbMaxClassLen), util.toPointer(lpcValues), util.toPointer(lpcbMaxValueNameLen), util.toPointer(lpcbMaxValueLen), util.toPointer(lpcbSecurityDescriptor), util.toPointer(lpftLastWriteTime));
}

export function RegQueryValueA(
  hKey: Uint8Array | Deno.PointerValue | null /* Windows.Win32.System.Registry.HKEY */,
  lpSubKey: string | null /* Windows.Win32.Foundation.PSTR */,
  lpData: string | null /* Windows.Win32.Foundation.PSTR */,
  lpcbData: Deno.PointerValue | Uint8Array | null /* ptr */,
): WIN32_ERROR /* Windows.Win32.Foundation.WIN32_ERROR */ {
  return libADVAPI32_dll.RegQueryValueA(util.toPointer(hKey), util.pstrToFfi(lpSubKey), util.pstrToFfi(lpData), util.toPointer(lpcbData));
}

export function RegQueryValueW(
  hKey: Uint8Array | Deno.PointerValue | null /* Windows.Win32.System.Registry.HKEY */,
  lpSubKey: string | null /* Windows.Win32.Foundation.PWSTR */,
  lpData: string | null /* Windows.Win32.Foundation.PWSTR */,
  lpcbData: Deno.PointerValue | Uint8Array | null /* ptr */,
): WIN32_ERROR /* Windows.Win32.Foundation.WIN32_ERROR */ {
  return libADVAPI32_dll.RegQueryValueW(util.toPointer(hKey), util.pwstrToFfi(lpSubKey), util.pwstrToFfi(lpData), util.toPointer(lpcbData));
}

export function RegQueryMultipleValuesA(
  hKey: Uint8Array | Deno.PointerValue | null /* Windows.Win32.System.Registry.HKEY */,
  val_list: Deno.PointerValue | Uint8Array | null /* ptr */,
  num_vals: number /* u32 */,
  lpValueBuf: string | null /* Windows.Win32.Foundation.PSTR */,
  ldwTotsize: Deno.PointerValue | Uint8Array | null /* ptr */,
): WIN32_ERROR /* Windows.Win32.Foundation.WIN32_ERROR */ {
  return libADVAPI32_dll.RegQueryMultipleValuesA(util.toPointer(hKey), util.toPointer(val_list), num_vals, util.pstrToFfi(lpValueBuf), util.toPointer(ldwTotsize));
}

export function RegQueryMultipleValuesW(
  hKey: Uint8Array | Deno.PointerValue | null /* Windows.Win32.System.Registry.HKEY */,
  val_list: Deno.PointerValue | Uint8Array | null /* ptr */,
  num_vals: number /* u32 */,
  lpValueBuf: string | null /* Windows.Win32.Foundation.PWSTR */,
  ldwTotsize: Deno.PointerValue | Uint8Array | null /* ptr */,
): WIN32_ERROR /* Windows.Win32.Foundation.WIN32_ERROR */ {
  return libADVAPI32_dll.RegQueryMultipleValuesW(util.toPointer(hKey), util.toPointer(val_list), num_vals, util.pwstrToFfi(lpValueBuf), util.toPointer(ldwTotsize));
}

export function RegQueryValueExA(
  hKey: Uint8Array | Deno.PointerValue | null /* Windows.Win32.System.Registry.HKEY */,
  lpValueName: string | null /* Windows.Win32.Foundation.PSTR */,
  lpReserved: Deno.PointerValue | Uint8Array | null /* ptr */,
  lpType: Deno.PointerValue | Uint8Array | null /* ptr */,
  lpData: Deno.PointerValue | Uint8Array | null /* ptr */,
  lpcbData: Deno.PointerValue | Uint8Array | null /* ptr */,
): WIN32_ERROR /* Windows.Win32.Foundation.WIN32_ERROR */ {
  return libADVAPI32_dll.RegQueryValueExA(util.toPointer(hKey), util.pstrToFfi(lpValueName), util.toPointer(lpReserved), util.toPointer(lpType), util.toPointer(lpData), util.toPointer(lpcbData));
}

export function RegQueryValueExW(
  hKey: Uint8Array | Deno.PointerValue | null /* Windows.Win32.System.Registry.HKEY */,
  lpValueName: string | null /* Windows.Win32.Foundation.PWSTR */,
  lpReserved: Deno.PointerValue | Uint8Array | null /* ptr */,
  lpType: Deno.PointerValue | Uint8Array | null /* ptr */,
  lpData: Deno.PointerValue | Uint8Array | null /* ptr */,
  lpcbData: Deno.PointerValue | Uint8Array | null /* ptr */,
): WIN32_ERROR /* Windows.Win32.Foundation.WIN32_ERROR */ {
  return libADVAPI32_dll.RegQueryValueExW(util.toPointer(hKey), util.pwstrToFfi(lpValueName), util.toPointer(lpReserved), util.toPointer(lpType), util.toPointer(lpData), util.toPointer(lpcbData));
}

export function RegReplaceKeyA(
  hKey: Uint8Array | Deno.PointerValue | null /* Windows.Win32.System.Registry.HKEY */,
  lpSubKey: string | null /* Windows.Win32.Foundation.PSTR */,
  lpNewFile: string | null /* Windows.Win32.Foundation.PSTR */,
  lpOldFile: string | null /* Windows.Win32.Foundation.PSTR */,
): WIN32_ERROR /* Windows.Win32.Foundation.WIN32_ERROR */ {
  return libADVAPI32_dll.RegReplaceKeyA(util.toPointer(hKey), util.pstrToFfi(lpSubKey), util.pstrToFfi(lpNewFile), util.pstrToFfi(lpOldFile));
}

export function RegReplaceKeyW(
  hKey: Uint8Array | Deno.PointerValue | null /* Windows.Win32.System.Registry.HKEY */,
  lpSubKey: string | null /* Windows.Win32.Foundation.PWSTR */,
  lpNewFile: string | null /* Windows.Win32.Foundation.PWSTR */,
  lpOldFile: string | null /* Windows.Win32.Foundation.PWSTR */,
): WIN32_ERROR /* Windows.Win32.Foundation.WIN32_ERROR */ {
  return libADVAPI32_dll.RegReplaceKeyW(util.toPointer(hKey), util.pwstrToFfi(lpSubKey), util.pwstrToFfi(lpNewFile), util.pwstrToFfi(lpOldFile));
}

export function RegRestoreKeyA(
  hKey: Uint8Array | Deno.PointerValue | null /* Windows.Win32.System.Registry.HKEY */,
  lpFile: string | null /* Windows.Win32.Foundation.PSTR */,
  dwFlags: REG_RESTORE_KEY_FLAGS /* Windows.Win32.System.Registry.REG_RESTORE_KEY_FLAGS */,
): WIN32_ERROR /* Windows.Win32.Foundation.WIN32_ERROR */ {
  return libADVAPI32_dll.RegRestoreKeyA(util.toPointer(hKey), util.pstrToFfi(lpFile), dwFlags);
}

export function RegRestoreKeyW(
  hKey: Uint8Array | Deno.PointerValue | null /* Windows.Win32.System.Registry.HKEY */,
  lpFile: string | null /* Windows.Win32.Foundation.PWSTR */,
  dwFlags: REG_RESTORE_KEY_FLAGS /* Windows.Win32.System.Registry.REG_RESTORE_KEY_FLAGS */,
): WIN32_ERROR /* Windows.Win32.Foundation.WIN32_ERROR */ {
  return libADVAPI32_dll.RegRestoreKeyW(util.toPointer(hKey), util.pwstrToFfi(lpFile), dwFlags);
}

export function RegRenameKey(
  hKey: Uint8Array | Deno.PointerValue | null /* Windows.Win32.System.Registry.HKEY */,
  lpSubKeyName: string | null /* Windows.Win32.Foundation.PWSTR */,
  lpNewKeyName: string | null /* Windows.Win32.Foundation.PWSTR */,
): WIN32_ERROR /* Windows.Win32.Foundation.WIN32_ERROR */ {
  return libADVAPI32_dll.RegRenameKey(util.toPointer(hKey), util.pwstrToFfi(lpSubKeyName), util.pwstrToFfi(lpNewKeyName));
}

export function RegSaveKeyA(
  hKey: Uint8Array | Deno.PointerValue | null /* Windows.Win32.System.Registry.HKEY */,
  lpFile: string | null /* Windows.Win32.Foundation.PSTR */,
  lpSecurityAttributes: Deno.PointerValue | Uint8Array | null /* ptr */,
): WIN32_ERROR /* Windows.Win32.Foundation.WIN32_ERROR */ {
  return libADVAPI32_dll.RegSaveKeyA(util.toPointer(hKey), util.pstrToFfi(lpFile), util.toPointer(lpSecurityAttributes));
}

export function RegSaveKeyW(
  hKey: Uint8Array | Deno.PointerValue | null /* Windows.Win32.System.Registry.HKEY */,
  lpFile: string | null /* Windows.Win32.Foundation.PWSTR */,
  lpSecurityAttributes: Deno.PointerValue | Uint8Array | null /* ptr */,
): WIN32_ERROR /* Windows.Win32.Foundation.WIN32_ERROR */ {
  return libADVAPI32_dll.RegSaveKeyW(util.toPointer(hKey), util.pwstrToFfi(lpFile), util.toPointer(lpSecurityAttributes));
}

export function RegSetKeySecurity(
  hKey: Uint8Array | Deno.PointerValue | null /* Windows.Win32.System.Registry.HKEY */,
  SecurityInformation: number /* u32 */,
  pSecurityDescriptor: Uint8Array | Deno.PointerValue | null /* Windows.Win32.Security.PSECURITY_DESCRIPTOR */,
): WIN32_ERROR /* Windows.Win32.Foundation.WIN32_ERROR */ {
  return libADVAPI32_dll.RegSetKeySecurity(util.toPointer(hKey), SecurityInformation, util.toPointer(pSecurityDescriptor));
}

export function RegSetValueA(
  hKey: Uint8Array | Deno.PointerValue | null /* Windows.Win32.System.Registry.HKEY */,
  lpSubKey: string | null /* Windows.Win32.Foundation.PSTR */,
  dwType: REG_VALUE_TYPE /* Windows.Win32.System.Registry.REG_VALUE_TYPE */,
  lpData: string | null /* Windows.Win32.Foundation.PSTR */,
  cbData: number /* u32 */,
): WIN32_ERROR /* Windows.Win32.Foundation.WIN32_ERROR */ {
  return libADVAPI32_dll.RegSetValueA(util.toPointer(hKey), util.pstrToFfi(lpSubKey), dwType, util.pstrToFfi(lpData), cbData);
}

export function RegSetValueW(
  hKey: Uint8Array | Deno.PointerValue | null /* Windows.Win32.System.Registry.HKEY */,
  lpSubKey: string | null /* Windows.Win32.Foundation.PWSTR */,
  dwType: REG_VALUE_TYPE /* Windows.Win32.System.Registry.REG_VALUE_TYPE */,
  lpData: string | null /* Windows.Win32.Foundation.PWSTR */,
  cbData: number /* u32 */,
): WIN32_ERROR /* Windows.Win32.Foundation.WIN32_ERROR */ {
  return libADVAPI32_dll.RegSetValueW(util.toPointer(hKey), util.pwstrToFfi(lpSubKey), dwType, util.pwstrToFfi(lpData), cbData);
}

export function RegSetValueExA(
  hKey: Uint8Array | Deno.PointerValue | null /* Windows.Win32.System.Registry.HKEY */,
  lpValueName: string | null /* Windows.Win32.Foundation.PSTR */,
  Reserved: number /* u32 */,
  dwType: REG_VALUE_TYPE /* Windows.Win32.System.Registry.REG_VALUE_TYPE */,
  lpData: Deno.PointerValue | Uint8Array | null /* ptr */,
  cbData: number /* u32 */,
): WIN32_ERROR /* Windows.Win32.Foundation.WIN32_ERROR */ {
  return libADVAPI32_dll.RegSetValueExA(util.toPointer(hKey), util.pstrToFfi(lpValueName), Reserved, dwType, util.toPointer(lpData), cbData);
}

export function RegSetValueExW(
  hKey: Uint8Array | Deno.PointerValue | null /* Windows.Win32.System.Registry.HKEY */,
  lpValueName: string | null /* Windows.Win32.Foundation.PWSTR */,
  Reserved: number /* u32 */,
  dwType: REG_VALUE_TYPE /* Windows.Win32.System.Registry.REG_VALUE_TYPE */,
  lpData: Deno.PointerValue | Uint8Array | null /* ptr */,
  cbData: number /* u32 */,
): WIN32_ERROR /* Windows.Win32.Foundation.WIN32_ERROR */ {
  return libADVAPI32_dll.RegSetValueExW(util.toPointer(hKey), util.pwstrToFfi(lpValueName), Reserved, dwType, util.toPointer(lpData), cbData);
}

export function RegUnLoadKeyA(
  hKey: Uint8Array | Deno.PointerValue | null /* Windows.Win32.System.Registry.HKEY */,
  lpSubKey: string | null /* Windows.Win32.Foundation.PSTR */,
): WIN32_ERROR /* Windows.Win32.Foundation.WIN32_ERROR */ {
  return libADVAPI32_dll.RegUnLoadKeyA(util.toPointer(hKey), util.pstrToFfi(lpSubKey));
}

export function RegUnLoadKeyW(
  hKey: Uint8Array | Deno.PointerValue | null /* Windows.Win32.System.Registry.HKEY */,
  lpSubKey: string | null /* Windows.Win32.Foundation.PWSTR */,
): WIN32_ERROR /* Windows.Win32.Foundation.WIN32_ERROR */ {
  return libADVAPI32_dll.RegUnLoadKeyW(util.toPointer(hKey), util.pwstrToFfi(lpSubKey));
}

export function RegDeleteKeyValueA(
  hKey: Uint8Array | Deno.PointerValue | null /* Windows.Win32.System.Registry.HKEY */,
  lpSubKey: string | null /* Windows.Win32.Foundation.PSTR */,
  lpValueName: string | null /* Windows.Win32.Foundation.PSTR */,
): WIN32_ERROR /* Windows.Win32.Foundation.WIN32_ERROR */ {
  return libADVAPI32_dll.RegDeleteKeyValueA(util.toPointer(hKey), util.pstrToFfi(lpSubKey), util.pstrToFfi(lpValueName));
}

export function RegDeleteKeyValueW(
  hKey: Uint8Array | Deno.PointerValue | null /* Windows.Win32.System.Registry.HKEY */,
  lpSubKey: string | null /* Windows.Win32.Foundation.PWSTR */,
  lpValueName: string | null /* Windows.Win32.Foundation.PWSTR */,
): WIN32_ERROR /* Windows.Win32.Foundation.WIN32_ERROR */ {
  return libADVAPI32_dll.RegDeleteKeyValueW(util.toPointer(hKey), util.pwstrToFfi(lpSubKey), util.pwstrToFfi(lpValueName));
}

export function RegSetKeyValueA(
  hKey: Uint8Array | Deno.PointerValue | null /* Windows.Win32.System.Registry.HKEY */,
  lpSubKey: string | null /* Windows.Win32.Foundation.PSTR */,
  lpValueName: string | null /* Windows.Win32.Foundation.PSTR */,
  dwType: number /* u32 */,
  lpData: Deno.PointerValue | Uint8Array | null /* ptr */,
  cbData: number /* u32 */,
): WIN32_ERROR /* Windows.Win32.Foundation.WIN32_ERROR */ {
  return libADVAPI32_dll.RegSetKeyValueA(util.toPointer(hKey), util.pstrToFfi(lpSubKey), util.pstrToFfi(lpValueName), dwType, util.toPointer(lpData), cbData);
}

export function RegSetKeyValueW(
  hKey: Uint8Array | Deno.PointerValue | null /* Windows.Win32.System.Registry.HKEY */,
  lpSubKey: string | null /* Windows.Win32.Foundation.PWSTR */,
  lpValueName: string | null /* Windows.Win32.Foundation.PWSTR */,
  dwType: number /* u32 */,
  lpData: Deno.PointerValue | Uint8Array | null /* ptr */,
  cbData: number /* u32 */,
): WIN32_ERROR /* Windows.Win32.Foundation.WIN32_ERROR */ {
  return libADVAPI32_dll.RegSetKeyValueW(util.toPointer(hKey), util.pwstrToFfi(lpSubKey), util.pwstrToFfi(lpValueName), dwType, util.toPointer(lpData), cbData);
}

export function RegDeleteTreeA(
  hKey: Uint8Array | Deno.PointerValue | null /* Windows.Win32.System.Registry.HKEY */,
  lpSubKey: string | null /* Windows.Win32.Foundation.PSTR */,
): WIN32_ERROR /* Windows.Win32.Foundation.WIN32_ERROR */ {
  return libADVAPI32_dll.RegDeleteTreeA(util.toPointer(hKey), util.pstrToFfi(lpSubKey));
}

export function RegDeleteTreeW(
  hKey: Uint8Array | Deno.PointerValue | null /* Windows.Win32.System.Registry.HKEY */,
  lpSubKey: string | null /* Windows.Win32.Foundation.PWSTR */,
): WIN32_ERROR /* Windows.Win32.Foundation.WIN32_ERROR */ {
  return libADVAPI32_dll.RegDeleteTreeW(util.toPointer(hKey), util.pwstrToFfi(lpSubKey));
}

export function RegCopyTreeA(
  hKeySrc: Uint8Array | Deno.PointerValue | null /* Windows.Win32.System.Registry.HKEY */,
  lpSubKey: string | null /* Windows.Win32.Foundation.PSTR */,
  hKeyDest: Uint8Array | Deno.PointerValue | null /* Windows.Win32.System.Registry.HKEY */,
): WIN32_ERROR /* Windows.Win32.Foundation.WIN32_ERROR */ {
  return libADVAPI32_dll.RegCopyTreeA(util.toPointer(hKeySrc), util.pstrToFfi(lpSubKey), util.toPointer(hKeyDest));
}

export function RegGetValueA(
  hkey: Uint8Array | Deno.PointerValue | null /* Windows.Win32.System.Registry.HKEY */,
  lpSubKey: string | null /* Windows.Win32.Foundation.PSTR */,
  lpValue: string | null /* Windows.Win32.Foundation.PSTR */,
  dwFlags: RRF_RT /* Windows.Win32.System.Registry.RRF_RT */,
  pdwType: Deno.PointerValue | Uint8Array | null /* ptr */,
  pvData: Deno.PointerValue | Uint8Array | null /* ptr */,
  pcbData: Deno.PointerValue | Uint8Array | null /* ptr */,
): WIN32_ERROR /* Windows.Win32.Foundation.WIN32_ERROR */ {
  return libADVAPI32_dll.RegGetValueA(util.toPointer(hkey), util.pstrToFfi(lpSubKey), util.pstrToFfi(lpValue), dwFlags, util.toPointer(pdwType), util.toPointer(pvData), util.toPointer(pcbData));
}

export function RegGetValueW(
  hkey: Uint8Array | Deno.PointerValue | null /* Windows.Win32.System.Registry.HKEY */,
  lpSubKey: string | null /* Windows.Win32.Foundation.PWSTR */,
  lpValue: string | null /* Windows.Win32.Foundation.PWSTR */,
  dwFlags: RRF_RT /* Windows.Win32.System.Registry.RRF_RT */,
  pdwType: Deno.PointerValue | Uint8Array | null /* ptr */,
  pvData: Deno.PointerValue | Uint8Array | null /* ptr */,
  pcbData: Deno.PointerValue | Uint8Array | null /* ptr */,
): WIN32_ERROR /* Windows.Win32.Foundation.WIN32_ERROR */ {
  return libADVAPI32_dll.RegGetValueW(util.toPointer(hkey), util.pwstrToFfi(lpSubKey), util.pwstrToFfi(lpValue), dwFlags, util.toPointer(pdwType), util.toPointer(pvData), util.toPointer(pcbData));
}

export function RegCopyTreeW(
  hKeySrc: Uint8Array | Deno.PointerValue | null /* Windows.Win32.System.Registry.HKEY */,
  lpSubKey: string | null /* Windows.Win32.Foundation.PWSTR */,
  hKeyDest: Uint8Array | Deno.PointerValue | null /* Windows.Win32.System.Registry.HKEY */,
): WIN32_ERROR /* Windows.Win32.Foundation.WIN32_ERROR */ {
  return libADVAPI32_dll.RegCopyTreeW(util.toPointer(hKeySrc), util.pwstrToFfi(lpSubKey), util.toPointer(hKeyDest));
}

export function RegLoadMUIStringA(
  hKey: Uint8Array | Deno.PointerValue | null /* Windows.Win32.System.Registry.HKEY */,
  pszValue: string | null /* Windows.Win32.Foundation.PSTR */,
  pszOutBuf: string | null /* Windows.Win32.Foundation.PSTR */,
  cbOutBuf: number /* u32 */,
  pcbData: Deno.PointerValue | Uint8Array | null /* ptr */,
  Flags: number /* u32 */,
  pszDirectory: string | null /* Windows.Win32.Foundation.PSTR */,
): WIN32_ERROR /* Windows.Win32.Foundation.WIN32_ERROR */ {
  return libADVAPI32_dll.RegLoadMUIStringA(util.toPointer(hKey), util.pstrToFfi(pszValue), util.pstrToFfi(pszOutBuf), cbOutBuf, util.toPointer(pcbData), Flags, util.pstrToFfi(pszDirectory));
}

export function RegLoadMUIStringW(
  hKey: Uint8Array | Deno.PointerValue | null /* Windows.Win32.System.Registry.HKEY */,
  pszValue: string | null /* Windows.Win32.Foundation.PWSTR */,
  pszOutBuf: string | null /* Windows.Win32.Foundation.PWSTR */,
  cbOutBuf: number /* u32 */,
  pcbData: Deno.PointerValue | Uint8Array | null /* ptr */,
  Flags: number /* u32 */,
  pszDirectory: string | null /* Windows.Win32.Foundation.PWSTR */,
): WIN32_ERROR /* Windows.Win32.Foundation.WIN32_ERROR */ {
  return libADVAPI32_dll.RegLoadMUIStringW(util.toPointer(hKey), util.pwstrToFfi(pszValue), util.pwstrToFfi(pszOutBuf), cbOutBuf, util.toPointer(pcbData), Flags, util.pwstrToFfi(pszDirectory));
}

export function RegLoadAppKeyA(
  lpFile: string | null /* Windows.Win32.Foundation.PSTR */,
  phkResult: Deno.PointerValue | Uint8Array | null /* ptr */,
  samDesired: number /* u32 */,
  dwOptions: number /* u32 */,
  Reserved: number /* u32 */,
): WIN32_ERROR /* Windows.Win32.Foundation.WIN32_ERROR */ {
  return libADVAPI32_dll.RegLoadAppKeyA(util.pstrToFfi(lpFile), util.toPointer(phkResult), samDesired, dwOptions, Reserved);
}

export function RegLoadAppKeyW(
  lpFile: string | null /* Windows.Win32.Foundation.PWSTR */,
  phkResult: Deno.PointerValue | Uint8Array | null /* ptr */,
  samDesired: number /* u32 */,
  dwOptions: number /* u32 */,
  Reserved: number /* u32 */,
): WIN32_ERROR /* Windows.Win32.Foundation.WIN32_ERROR */ {
  return libADVAPI32_dll.RegLoadAppKeyW(util.pwstrToFfi(lpFile), util.toPointer(phkResult), samDesired, dwOptions, Reserved);
}

export function RegSaveKeyExA(
  hKey: Uint8Array | Deno.PointerValue | null /* Windows.Win32.System.Registry.HKEY */,
  lpFile: string | null /* Windows.Win32.Foundation.PSTR */,
  lpSecurityAttributes: Deno.PointerValue | Uint8Array | null /* ptr */,
  Flags: REG_SAVE_FORMAT /* Windows.Win32.System.Registry.REG_SAVE_FORMAT */,
): WIN32_ERROR /* Windows.Win32.Foundation.WIN32_ERROR */ {
  return libADVAPI32_dll.RegSaveKeyExA(util.toPointer(hKey), util.pstrToFfi(lpFile), util.toPointer(lpSecurityAttributes), Flags);
}

export function RegSaveKeyExW(
  hKey: Uint8Array | Deno.PointerValue | null /* Windows.Win32.System.Registry.HKEY */,
  lpFile: string | null /* Windows.Win32.Foundation.PWSTR */,
  lpSecurityAttributes: Deno.PointerValue | Uint8Array | null /* ptr */,
  Flags: REG_SAVE_FORMAT /* Windows.Win32.System.Registry.REG_SAVE_FORMAT */,
): WIN32_ERROR /* Windows.Win32.Foundation.WIN32_ERROR */ {
  return libADVAPI32_dll.RegSaveKeyExW(util.toPointer(hKey), util.pwstrToFfi(lpFile), util.toPointer(lpSecurityAttributes), Flags);
}

export function GetRegistryValueWithFallbackW(
  hkeyPrimary: Uint8Array | Deno.PointerValue | null /* Windows.Win32.System.Registry.HKEY */,
  pwszPrimarySubKey: string | null /* Windows.Win32.Foundation.PWSTR */,
  hkeyFallback: Uint8Array | Deno.PointerValue | null /* Windows.Win32.System.Registry.HKEY */,
  pwszFallbackSubKey: string | null /* Windows.Win32.Foundation.PWSTR */,
  pwszValue: string | null /* Windows.Win32.Foundation.PWSTR */,
  dwFlags: number /* u32 */,
  pdwType: Deno.PointerValue | Uint8Array | null /* ptr */,
  pvData: Deno.PointerValue | Uint8Array | null /* ptr */,
  cbDataIn: number /* u32 */,
  pcbDataOut: Deno.PointerValue | Uint8Array | null /* ptr */,
): WIN32_ERROR /* Windows.Win32.Foundation.WIN32_ERROR */ {
  return libapi_ms_win_core_state_helpers_l1_1_0_dll.GetRegistryValueWithFallbackW(util.toPointer(hkeyPrimary), util.pwstrToFfi(pwszPrimarySubKey), util.toPointer(hkeyFallback), util.pwstrToFfi(pwszFallbackSubKey), util.pwstrToFfi(pwszValue), dwFlags, util.toPointer(pdwType), util.toPointer(pvData), cbDataIn, util.toPointer(pcbDataOut));
}

