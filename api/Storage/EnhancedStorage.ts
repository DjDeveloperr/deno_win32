/// Auto-generated by Deno Win32: Windows.Win32.Storage.EnhancedStorage.Apis

import * as util from "../../util.ts";

// Enums
export type ACT_AUTHORIZATION_STATE_VALUE = number;

// Constants
export const ENHANCED_STORAGE_AUTHN_STATE_UNKNOWN = 0;
export const ENHANCED_STORAGE_AUTHN_STATE_NO_AUTHENTICATION_REQUIRED = 1;
export const ENHANCED_STORAGE_AUTHN_STATE_NOT_AUTHENTICATED = 2;
export const ENHANCED_STORAGE_AUTHN_STATE_AUTHENTICATED = 3;
export const ENHANCED_STORAGE_AUTHN_STATE_AUTHENTICATION_DENIED = 2147483649;
export const ENHANCED_STORAGE_AUTHN_STATE_DEVICE_ERROR = 2147483650;
export const CERT_TYPE_EMPTY = 0;
export const CERT_TYPE_ASCm = 1;
export const CERT_TYPE_PCp = 2;
export const CERT_TYPE_ASCh = 3;
export const CERT_TYPE_HCh = 4;
export const CERT_TYPE_SIGNER = 6;
export const CERT_VALIDATION_POLICY_RESERVED = 0;
export const CERT_VALIDATION_POLICY_NONE = 1;
export const CERT_VALIDATION_POLICY_BASIC = 2;
export const CERT_VALIDATION_POLICY_EXTENDED = 3;
export const CERT_CAPABILITY_HASH_ALG = 1;
export const CERT_CAPABILITY_ASYMMETRIC_KEY_CRYPTOGRAPHY = 2;
export const CERT_CAPABILITY_SIGNATURE_ALG = 3;
export const CERT_CAPABILITY_CERTIFICATE_SUPPORT = 4;
export const CERT_CAPABILITY_OPTIONAL_FEATURES = 5;
export const CERT_MAX_CAPABILITY = 255;
export const AUDIO_CHANNELCOUNT_MONO = 1;
export const AUDIO_CHANNELCOUNT_STEREO = 2;
export const CREATOROPENWITHUIOPTION_HIDDEN = 0;
export const CREATOROPENWITHUIOPTION_VISIBLE = 1;
export const ISDEFAULTSAVE_NONE = 0;
export const ISDEFAULTSAVE_OWNER = 1;
export const ISDEFAULTSAVE_NONOWNER = 2;
export const ISDEFAULTSAVE_BOTH = 3;
export const FILEOFFLINEAVAILABILITYSTATUS_NOTAVAILABLEOFFLINE = 0;
export const FILEOFFLINEAVAILABILITYSTATUS_PARTIAL = 1;
export const FILEOFFLINEAVAILABILITYSTATUS_COMPLETE = 2;
export const FILEOFFLINEAVAILABILITYSTATUS_COMPLETE_PINNED = 3;
export const FILEOFFLINEAVAILABILITYSTATUS_EXCLUDED = 4;
export const FILEOFFLINEAVAILABILITYSTATUS_FOLDER_EMPTY = 5;
export const FLAGSTATUS_NOTFLAGGED = 0;
export const FLAGSTATUS_COMPLETED = 1;
export const FLAGSTATUS_FOLLOWUP = 2;
export const IMPORTANCE_LOW_MIN = 0;
export const IMPORTANCE_LOW_SET = 1;
export const IMPORTANCE_LOW_MAX = 1;
export const IMPORTANCE_NORMAL_MIN = 2;
export const IMPORTANCE_NORMAL_SET = 3;
export const IMPORTANCE_NORMAL_MAX = 4;
export const IMPORTANCE_HIGH_MIN = 5;
export const IMPORTANCE_HIGH_SET = 5;
export const IMPORTANCE_HIGH_MAX = 5;
export const OFFLINEAVAILABILITY_NOT_AVAILABLE = 0;
export const OFFLINEAVAILABILITY_AVAILABLE = 1;
export const OFFLINEAVAILABILITY_ALWAYS_AVAILABLE = 2;
export const OFFLINESTATUS_ONLINE = 0;
export const OFFLINESTATUS_OFFLINE = 1;
export const OFFLINESTATUS_OFFLINE_FORCED = 2;
export const OFFLINESTATUS_OFFLINE_SLOW = 3;
export const OFFLINESTATUS_OFFLINE_ERROR = 4;
export const OFFLINESTATUS_OFFLINE_ITEM_VERSION_CONFLICT = 5;
export const OFFLINESTATUS_OFFLINE_SUSPENDED = 6;
export const RATING_ONE_STAR_MIN = 1;
export const RATING_ONE_STAR_SET = 1;
export const RATING_ONE_STAR_MAX = 12;
export const RATING_TWO_STARS_MIN = 13;
export const RATING_TWO_STARS_SET = 25;
export const RATING_TWO_STARS_MAX = 37;
export const RATING_THREE_STARS_MIN = 38;
export const RATING_THREE_STARS_SET = 50;
export const RATING_THREE_STARS_MAX = 62;
export const RATING_FOUR_STARS_MIN = 63;
export const RATING_FOUR_STARS_SET = 75;
export const RATING_FOUR_STARS_MAX = 87;
export const RATING_FIVE_STARS_MIN = 88;
export const RATING_FIVE_STARS_SET = 99;
export const RATING_FIVE_STARS_MAX = 99;
export const SHARINGSTATUS_NOTSHARED = 0;
export const SHARINGSTATUS_SHARED = 1;
export const SHARINGSTATUS_PRIVATE = 2;
export const STORAGE_PROVIDER_SHARINGSTATUS_NOTSHARED = 0;
export const STORAGE_PROVIDER_SHARINGSTATUS_SHARED = 1;
export const STORAGE_PROVIDER_SHARINGSTATUS_PRIVATE = 2;
export const STORAGE_PROVIDER_SHARINGSTATUS_PUBLIC = 3;
export const STORAGE_PROVIDER_SHARINGSTATUS_SHARED_OWNED = 4;
export const STORAGE_PROVIDER_SHARINGSTATUS_SHARED_COOWNED = 5;
export const STORAGE_PROVIDER_SHARINGSTATUS_PUBLIC_OWNED = 6;
export const STORAGE_PROVIDER_SHARINGSTATUS_PUBLIC_COOWNED = 7;
export const BLUETOOTH_ADDRESS_TYPE_PUBLIC = 0;
export const BLUETOOTH_ADDRESS_TYPE_RANDOM = 1;
export const BLUETOOTH_CACHE_MODE_CACHED = 0;
export const BLUETOOTH_CACHED_MODE_UNCACHED = 1;
export const PLAYBACKSTATE_UNKNOWN = 0;
export const PLAYBACKSTATE_STOPPED = 1;
export const PLAYBACKSTATE_PLAYING = 2;
export const PLAYBACKSTATE_TRANSITIONING = 3;
export const PLAYBACKSTATE_PAUSED = 4;
export const PLAYBACKSTATE_RECORDINGPAUSED = 5;
export const PLAYBACKSTATE_RECORDING = 6;
export const PLAYBACKSTATE_NOMEDIA = 7;
export const LINK_STATUS_RESOLVED = 1;
export const LINK_STATUS_BROKEN = 2;
export const PHOTO_CONTRAST_NORMAL = 0;
export const PHOTO_CONTRAST_SOFT = 1;
export const PHOTO_CONTRAST_HARD = 2;
export const PHOTO_EXPOSUREPROGRAM_UNKNOWN = 0;
export const PHOTO_EXPOSUREPROGRAM_MANUAL = 1;
export const PHOTO_EXPOSUREPROGRAM_NORMAL = 2;
export const PHOTO_EXPOSUREPROGRAM_APERTURE = 3;
export const PHOTO_EXPOSUREPROGRAM_SHUTTER = 4;
export const PHOTO_EXPOSUREPROGRAM_CREATIVE = 5;
export const PHOTO_EXPOSUREPROGRAM_ACTION = 6;
export const PHOTO_EXPOSUREPROGRAM_PORTRAIT = 7;
export const PHOTO_EXPOSUREPROGRAM_LANDSCAPE = 8;
export const PHOTO_FLASH_NONE = 0;
export const PHOTO_FLASH_FLASH = 1;
export const PHOTO_FLASH_WITHOUTSTROBE = 5;
export const PHOTO_FLASH_WITHSTROBE = 7;
export const PHOTO_FLASH_FLASH_COMPULSORY = 9;
export const PHOTO_FLASH_FLASH_COMPULSORY_NORETURNLIGHT = 13;
export const PHOTO_FLASH_FLASH_COMPULSORY_RETURNLIGHT = 15;
export const PHOTO_FLASH_NONE_COMPULSORY = 16;
export const PHOTO_FLASH_NONE_AUTO = 24;
export const PHOTO_FLASH_FLASH_AUTO = 25;
export const PHOTO_FLASH_FLASH_AUTO_NORETURNLIGHT = 29;
export const PHOTO_FLASH_FLASH_AUTO_RETURNLIGHT = 31;
export const PHOTO_FLASH_NOFUNCTION = 32;
export const PHOTO_FLASH_FLASH_REDEYE = 65;
export const PHOTO_FLASH_FLASH_REDEYE_NORETURNLIGHT = 69;
export const PHOTO_FLASH_FLASH_REDEYE_RETURNLIGHT = 71;
export const PHOTO_FLASH_FLASH_COMPULSORY_REDEYE = 73;
export const PHOTO_FLASH_FLASH_COMPULSORY_REDEYE_NORETURNLIGHT = 77;
export const PHOTO_FLASH_FLASH_COMPULSORY_REDEYE_RETURNLIGHT = 79;
export const PHOTO_FLASH_FLASH_AUTO_REDEYE = 89;
export const PHOTO_FLASH_FLASH_AUTO_REDEYE_NORETURNLIGHT = 93;
export const PHOTO_FLASH_FLASH_AUTO_REDEYE_RETURNLIGHT = 95;
export const PHOTO_GAINCONTROL_NONE = 0;
export const PHOTO_GAINCONTROL_LOWGAINUP = 1;
export const PHOTO_GAINCONTROL_HIGHGAINUP = 2;
export const PHOTO_GAINCONTROL_LOWGAINDOWN = 3;
export const PHOTO_GAINCONTROL_HIGHGAINDOWN = 4;
export const PHOTO_LIGHTSOURCE_UNKNOWN = 0;
export const PHOTO_LIGHTSOURCE_DAYLIGHT = 1;
export const PHOTO_LIGHTSOURCE_FLUORESCENT = 2;
export const PHOTO_LIGHTSOURCE_TUNGSTEN = 3;
export const PHOTO_LIGHTSOURCE_STANDARD_A = 17;
export const PHOTO_LIGHTSOURCE_STANDARD_B = 18;
export const PHOTO_LIGHTSOURCE_STANDARD_C = 19;
export const PHOTO_LIGHTSOURCE_D55 = 20;
export const PHOTO_LIGHTSOURCE_D65 = 21;
export const PHOTO_LIGHTSOURCE_D75 = 22;
export const PHOTO_PROGRAMMODE_NOTDEFINED = 0;
export const PHOTO_PROGRAMMODE_MANUAL = 1;
export const PHOTO_PROGRAMMODE_NORMAL = 2;
export const PHOTO_PROGRAMMODE_APERTURE = 3;
export const PHOTO_PROGRAMMODE_SHUTTER = 4;
export const PHOTO_PROGRAMMODE_CREATIVE = 5;
export const PHOTO_PROGRAMMODE_ACTION = 6;
export const PHOTO_PROGRAMMODE_PORTRAIT = 7;
export const PHOTO_PROGRAMMODE_LANDSCAPE = 8;
export const PHOTO_SATURATION_NORMAL = 0;
export const PHOTO_SATURATION_LOW = 1;
export const PHOTO_SATURATION_HIGH = 2;
export const PHOTO_SHARPNESS_NORMAL = 0;
export const PHOTO_SHARPNESS_SOFT = 1;
export const PHOTO_SHARPNESS_HARD = 2;
export const PHOTO_WHITEBALANCE_AUTO = 0;
export const PHOTO_WHITEBALANCE_MANUAL = 1;
export const APPUSERMODEL_STARTPINOPTION_DEFAULT = 0;
export const APPUSERMODEL_STARTPINOPTION_NOPINONINSTALL = 1;
export const APPUSERMODEL_STARTPINOPTION_USERPINNED = 2;
export const SYNC_HANDLERTYPE_OTHER = 0;
export const SYNC_HANDLERTYPE_PROGRAMS = 1;
export const SYNC_HANDLERTYPE_DEVICES = 2;
export const SYNC_HANDLERTYPE_FOLDERS = 3;
export const SYNC_HANDLERTYPE_WEBSERVICES = 4;
export const SYNC_HANDLERTYPE_COMPUTERS = 5;
export const SYNC_STATE_NOTSETUP = 0;
export const SYNC_STATE_SYNCNOTRUN = 1;
export const SYNC_STATE_IDLE = 2;
export const SYNC_STATE_ERROR = 3;
export const SYNC_STATE_PENDING = 4;
export const SYNC_STATE_SYNCING = 5;
export const ACT_AUTHORIZE_ON_RESUME = 1;
export const ACT_AUTHORIZE_ON_SESSION_UNLOCK = 2;
export const ACT_UNAUTHORIZE_ON_SUSPEND = 1;
export const ACT_UNAUTHORIZE_ON_SESSION_LOCK = 2;
export const ES_RESERVED_COM_ERROR_START = 0;
export const ES_RESERVED_COM_ERROR_END = 511;
export const ES_GENERAL_ERROR_START = 512;
export const ES_GENERAL_ERROR_END = 1023;
export const ES_AUTHN_ERROR_START = 1024;
export const ES_AUTHN_ERROR_END = 1279;
export const ES_RESERVED_SILO_ERROR_START = 1280;
export const ES_RESERVED_SILO_ERROR_END = 4095;
export const ES_PW_SILO_ERROR_START = 4352;
export const ES_PW_SILO_ERROR_END = 4607;
export const ES_RESERVED_SILO_SPECIFIC_ERROR_START = 4608;
export const ES_RESERVED_SILO_SPECIFIC_ERROR_END = 49151;
export const ES_VENDOR_ERROR_START = 49152;
export const ES_VENDOR_ERROR_END = 65535;
export const FACILITY_ENHANCED_STORAGE = 4;
export const ACT_UNAUTHORIZED = 0;
export const ACT_AUTHORIZED = 1;

// Structs

/**
 * Windows.Win32.UI.Shell.PropertiesSystem.PROPERTYKEY (size: 16)
 */
export interface PROPERTYKEY {
  /** System.Guid */
  fmtid: Uint8Array | Deno.PointerValue | null;
  /** u32 */
  pid: number;
}

export const sizeofPROPERTYKEY = 16;

export function allocPROPERTYKEY(data?: Partial<PROPERTYKEY>): Uint8Array {
  const buf = new Uint8Array(sizeofPROPERTYKEY);
  const view = new DataView(buf.buffer);
  // 0x00: pointer
  if (data?.fmtid !== undefined) view.setBigUint64(0, data.fmtid === null ? 0n : BigInt(util.toPointer(data.fmtid)), true);
  // 0x08: u32
  if (data?.pid !== undefined) view.setUint32(8, Number(data.pid), true);
  // 0x0c: pad4
  return buf;
}

export type BOOL = number;

/**
 * Windows.Win32.Storage.EnhancedStorage.ENHANCED_STORAGE_PASSWORD_SILO_INFORMATION (size: 72)
 */
export interface ENHANCED_STORAGE_PASSWORD_SILO_INFORMATION {
  /** u8 */
  CurrentAdminFailures: number;
  /** u8 */
  CurrentUserFailures: number;
  /** u32 */
  TotalUserAuthenticationCount: number;
  /** u32 */
  TotalAdminAuthenticationCount: number;
  /** Windows.Win32.Foundation.BOOL */
  FipsCompliant: boolean;
  /** Windows.Win32.Foundation.BOOL */
  SecurityIDAvailable: boolean;
  /** Windows.Win32.Foundation.BOOL */
  InitializeInProgress: boolean;
  /** Windows.Win32.Foundation.BOOL */
  ITMSArmed: boolean;
  /** Windows.Win32.Foundation.BOOL */
  ITMSArmable: boolean;
  /** Windows.Win32.Foundation.BOOL */
  UserCreated: boolean;
  /** Windows.Win32.Foundation.BOOL */
  ResetOnPORDefault: boolean;
  /** Windows.Win32.Foundation.BOOL */
  ResetOnPORCurrent: boolean;
  /** u8 */
  MaxAdminFailures: number;
  /** u8 */
  MaxUserFailures: number;
  /** u32 */
  TimeToCompleteInitialization: number;
  /** u32 */
  TimeRemainingToCompleteInitialization: number;
  /** u32 */
  MinTimeToAuthenticate: number;
  /** u8 */
  MaxAdminPasswordSize: number;
  /** u8 */
  MinAdminPasswordSize: number;
  /** u8 */
  MaxAdminHintSize: number;
  /** u8 */
  MaxUserPasswordSize: number;
  /** u8 */
  MinUserPasswordSize: number;
  /** u8 */
  MaxUserHintSize: number;
  /** u8 */
  MaxUserNameSize: number;
  /** u8 */
  MaxSiloNameSize: number;
  /** u16 */
  MaxChallengeSize: number;
}

export const sizeofENHANCED_STORAGE_PASSWORD_SILO_INFORMATION = 72;

export function allocENHANCED_STORAGE_PASSWORD_SILO_INFORMATION(data?: Partial<ENHANCED_STORAGE_PASSWORD_SILO_INFORMATION>): Uint8Array {
  const buf = new Uint8Array(sizeofENHANCED_STORAGE_PASSWORD_SILO_INFORMATION);
  const view = new DataView(buf.buffer);
  // 0x00: u8
  if (data?.CurrentAdminFailures !== undefined) view.setUint8(0, Number(data.CurrentAdminFailures));
  // 0x01: u8
  if (data?.CurrentUserFailures !== undefined) view.setUint8(1, Number(data.CurrentUserFailures));
  // 0x02: u32
  if (data?.TotalUserAuthenticationCount !== undefined) view.setUint32(2, Number(data.TotalUserAuthenticationCount), true);
  // 0x06: u32
  if (data?.TotalAdminAuthenticationCount !== undefined) view.setUint32(6, Number(data.TotalAdminAuthenticationCount), true);
  // 0x0a: i32
  if (data?.FipsCompliant !== undefined) view.setInt32(10, Number(data.FipsCompliant), true);
  // 0x0e: i32
  if (data?.SecurityIDAvailable !== undefined) view.setInt32(14, Number(data.SecurityIDAvailable), true);
  // 0x12: i32
  if (data?.InitializeInProgress !== undefined) view.setInt32(18, Number(data.InitializeInProgress), true);
  // 0x16: i32
  if (data?.ITMSArmed !== undefined) view.setInt32(22, Number(data.ITMSArmed), true);
  // 0x1a: i32
  if (data?.ITMSArmable !== undefined) view.setInt32(26, Number(data.ITMSArmable), true);
  // 0x1e: i32
  if (data?.UserCreated !== undefined) view.setInt32(30, Number(data.UserCreated), true);
  // 0x22: i32
  if (data?.ResetOnPORDefault !== undefined) view.setInt32(34, Number(data.ResetOnPORDefault), true);
  // 0x26: i32
  if (data?.ResetOnPORCurrent !== undefined) view.setInt32(38, Number(data.ResetOnPORCurrent), true);
  // 0x2a: u8
  if (data?.MaxAdminFailures !== undefined) view.setUint8(42, Number(data.MaxAdminFailures));
  // 0x2b: u8
  if (data?.MaxUserFailures !== undefined) view.setUint8(43, Number(data.MaxUserFailures));
  // 0x2c: u32
  if (data?.TimeToCompleteInitialization !== undefined) view.setUint32(44, Number(data.TimeToCompleteInitialization), true);
  // 0x30: u32
  if (data?.TimeRemainingToCompleteInitialization !== undefined) view.setUint32(48, Number(data.TimeRemainingToCompleteInitialization), true);
  // 0x34: u32
  if (data?.MinTimeToAuthenticate !== undefined) view.setUint32(52, Number(data.MinTimeToAuthenticate), true);
  // 0x38: u8
  if (data?.MaxAdminPasswordSize !== undefined) view.setUint8(56, Number(data.MaxAdminPasswordSize));
  // 0x39: u8
  if (data?.MinAdminPasswordSize !== undefined) view.setUint8(57, Number(data.MinAdminPasswordSize));
  // 0x3a: u8
  if (data?.MaxAdminHintSize !== undefined) view.setUint8(58, Number(data.MaxAdminHintSize));
  // 0x3b: u8
  if (data?.MaxUserPasswordSize !== undefined) view.setUint8(59, Number(data.MaxUserPasswordSize));
  // 0x3c: u8
  if (data?.MinUserPasswordSize !== undefined) view.setUint8(60, Number(data.MinUserPasswordSize));
  // 0x3d: u8
  if (data?.MaxUserHintSize !== undefined) view.setUint8(61, Number(data.MaxUserHintSize));
  // 0x3e: u8
  if (data?.MaxUserNameSize !== undefined) view.setUint8(62, Number(data.MaxUserNameSize));
  // 0x3f: u8
  if (data?.MaxSiloNameSize !== undefined) view.setUint8(63, Number(data.MaxSiloNameSize));
  // 0x40: u16
  if (data?.MaxChallengeSize !== undefined) view.setUint16(64, Number(data.MaxChallengeSize), true);
  // 0x42: pad6
  return buf;
}

/**
 * Windows.Win32.Storage.EnhancedStorage.ACT_AUTHORIZATION_STATE (size: 8)
 */
export interface ACT_AUTHORIZATION_STATE {
  /** u32 */
  ulState: number;
}

export const sizeofACT_AUTHORIZATION_STATE = 8;

export function allocACT_AUTHORIZATION_STATE(data?: Partial<ACT_AUTHORIZATION_STATE>): Uint8Array {
  const buf = new Uint8Array(sizeofACT_AUTHORIZATION_STATE);
  const view = new DataView(buf.buffer);
  // 0x00: u32
  if (data?.ulState !== undefined) view.setUint32(0, Number(data.ulState), true);
  // 0x04: pad4
  return buf;
}

/**
 * Windows.Win32.Storage.EnhancedStorage.SILO_INFO (size: 16)
 */
export interface SILO_INFO {
  /** u32 */
  ulSTID: number;
  /** u8 */
  SpecificationMajor: number;
  /** u8 */
  SpecificationMinor: number;
  /** u8 */
  ImplementationMajor: number;
  /** u8 */
  ImplementationMinor: number;
  /** u8 */
  type: number;
  /** u8 */
  capabilities: number;
}

export const sizeofSILO_INFO = 16;

export function allocSILO_INFO(data?: Partial<SILO_INFO>): Uint8Array {
  const buf = new Uint8Array(sizeofSILO_INFO);
  const view = new DataView(buf.buffer);
  // 0x00: u32
  if (data?.ulSTID !== undefined) view.setUint32(0, Number(data.ulSTID), true);
  // 0x04: u8
  if (data?.SpecificationMajor !== undefined) view.setUint8(4, Number(data.SpecificationMajor));
  // 0x05: u8
  if (data?.SpecificationMinor !== undefined) view.setUint8(5, Number(data.SpecificationMinor));
  // 0x06: u8
  if (data?.ImplementationMajor !== undefined) view.setUint8(6, Number(data.ImplementationMajor));
  // 0x07: u8
  if (data?.ImplementationMinor !== undefined) view.setUint8(7, Number(data.ImplementationMinor));
  // 0x08: u8
  if (data?.type !== undefined) view.setUint8(8, Number(data.type));
  // 0x09: u8
  if (data?.capabilities !== undefined) view.setUint8(9, Number(data.capabilities));
  // 0x0a: pad6
  return buf;
}

// Native Libraries

// Symbols

