/// Auto-generated by Deno Win32: Windows.Win32.UI.TextServices.Apis

import * as util from "../../util.ts";

// Enums
export type LANG_BAR_ITEM_ICON_MODE_FLAGS = number;
export type TEXT_STORE_TEXT_CHANGE_FLAGS = number;
export type TEXT_STORE_CHANGE_FLAGS = number;
export type INSERT_TEXT_AT_SELECTION_FLAGS = number;
export type ANCHOR_CHANGE_HISTORY_FLAGS = number;
export type TEXT_STORE_LOCK_FLAGS = number;
export type GET_TEXT_AND_PROPERTY_UPDATES_FLAGS = number;
export type TF_CONTEXT_EDIT_CONTEXT_FLAGS = number;
export type TsActiveSelEnd = number;
export type TsLayoutCode = number;
export type TsRunType = number;
export type TsGravity = number;
export type TsShiftDir = number;
export type TfLBIClick = number;
export type TfLBBalloonStyle = number;
export type TfAnchor = number;
export type TfActiveSelEnd = number;
export type TfLayoutCode = number;
export type TfGravity = number;
export type TfShiftDir = number;
export type TF_DA_LINESTYLE = number;
export type TF_DA_COLORTYPE = number;
export type TF_DA_ATTR_INFO = number;
export type TfCandidateResult = number;
export type TfSapiObject = number;
export type TfIntegratableCandidateListSelectionStyle = number;
export type TKBLayoutType = number;
export type InputScope = number;

// Constants
export const TS_E_INVALIDPOS = 288827430293209600n;
export const TS_E_NOLOCK = 288795544456004097n;
export const TS_E_NOOBJECT = 1187558720002;
export const TS_E_NOSERVICE = 288797743479259651n;
export const TS_E_NOINTERFACE = 288798842990887428n;
export const TS_E_NOSELECTION = 288799942502515205n;
export const TS_E_NOLAYOUT = 288801042014142982n;
export const TS_E_INVALIDPOINT = 288802141525770759n;
export const TS_E_SYNCHRONOUS = 288803241037398536n;
export const TS_E_READONLY = 288804340549026313n;
export const TS_E_FORMAT = 288805440060654090n;
export const TS_S_ASYNC = 289637768215397120n;
export const TS_AS_TEXT_CHANGE = 1;
export const TS_AS_SEL_CHANGE = 2;
export const TS_AS_LAYOUT_CHANGE = 4;
export const TS_AS_ATTR_CHANGE = 8;
export const TS_AS_STATUS_CHANGE = 16;
export const TS_LF_SYNC = 1;
export const TS_SD_READONLY = 1;
export const TS_SD_LOADING = 2;
export const TS_SD_RESERVED = 4;
export const TS_SD_TKBAUTOCORRECTENABLE = 8;
export const TS_SD_TKBPREDICTIONENABLE = 16;
export const TS_SD_UIINTEGRATIONENABLE = 32;
export const TS_SD_INPUTPANEMANUALDISPLAYENABLE = 64;
export const TS_SD_EMBEDDEDHANDWRITINGVIEW_ENABLED = 128;
export const TS_SD_EMBEDDEDHANDWRITINGVIEW_VISIBLE = 256;
export const TS_SS_DISJOINTSEL = 1;
export const TS_SS_REGIONS = 2;
export const TS_SS_TRANSITORY = 4;
export const TS_SS_NOHIDDENTEXT = 8;
export const TS_SS_TKBAUTOCORRECTENABLE = 16;
export const TS_SS_TKBPREDICTIONENABLE = 32;
export const TS_SS_UWPCONTROL = 64;
export const TS_IE_CORRECTION = 1;
export const TS_IE_COMPOSITION = 2;
export const TS_IAS_NOQUERY = 1;
export const TS_IAS_QUERYONLY = 2;
export const GXFPF_ROUND_NEAREST = 1;
export const GXFPF_NEAREST = 2;
export const TS_CHAR_EMBEDDED = 65532;
export const TS_CHAR_REGION = 0;
export const TS_CHAR_REPLACEMENT = 65533;
export const TS_ATTR_FIND_BACKWARDS = 1;
export const TS_ATTR_FIND_WANT_OFFSET = 2;
export const TS_ATTR_FIND_UPDATESTART = 4;
export const TS_ATTR_FIND_WANT_VALUE = 8;
export const TS_ATTR_FIND_WANT_END = 16;
export const TS_ATTR_FIND_HIDDEN = 32;
export const TS_VCOOKIE_NUL = 4294967295;
export const TS_SHIFT_COUNT_HIDDEN = 1;
export const TS_SHIFT_HALT_HIDDEN = 2;
export const TS_SHIFT_HALT_VISIBLE = 4;
export const TS_SHIFT_COUNT_ONLY = 8;
export const TS_GTA_HIDDEN = 1;
export const TS_GEA_HIDDEN = 1;
export const TF_E_LOCKED = 289638869874509056n;
export const TF_E_STACKFULL = 289639969386136833n;
export const TF_E_NOTOWNEDRANGE = 289641068897764610n;
export const TF_E_NOPROVIDER = 289642168409392387n;
export const TF_E_DISCONNECTED = 289643267921020164n;
export const TF_E_INVALIDVIEW = 289644367432647941n;
export const TF_E_ALREADY_EXISTS = 289645466944275718n;
export const TF_E_RANGE_NOT_COVERED = 289646566455903495n;
export const TF_E_COMPOSITION_REJECTED = 289647665967531272n;
export const TF_E_EMPTYCONTEXT = 144116375634576649n;
export const TF_E_INVALIDPOS = 288827430293209600n;
export const TF_E_NOLOCK = 288795544456004097n;
export const TF_E_NOOBJECT = 1187558720002;
export const TF_E_NOSERVICE = 288797743479259651n;
export const TF_E_NOINTERFACE = 288798842990887428n;
export const TF_E_NOSELECTION = 288799942502515205n;
export const TF_E_NOLAYOUT = 288801042014142982n;
export const TF_E_INVALIDPOINT = 288802141525770759n;
export const TF_E_SYNCHRONOUS = 288803241037398536n;
export const TF_E_READONLY = 288804340549026313n;
export const TF_E_FORMAT = 288805440060654090n;
export const TF_S_ASYNC = 289637768215397120n;
export const TF_RCM_COMLESS = 1;
export const TF_RCM_VKEY = 2;
export const TF_RCM_HINT_READING_LENGTH = 4;
export const TF_RCM_HINT_COLLISION = 8;
export const TKB_ALTERNATES_STANDARD = 1;
export const TKB_ALTERNATES_FOR_AUTOCORRECTION = 2;
export const TKB_ALTERNATES_FOR_PREDICTION = 3;
export const TKB_ALTERNATES_AUTOCORRECTION_APPLIED = 4;
export const TF_TMAE_NOACTIVATETIP = 1;
export const TF_TMAE_SECUREMODE = 2;
export const TF_TMAE_UIELEMENTENABLEDONLY = 4;
export const TF_TMAE_COMLESS = 8;
export const TF_TMAE_WOW16 = 16;
export const TF_TMAE_NOACTIVATEKEYBOARDLAYOUT = 32;
export const TF_TMAE_CONSOLE = 64;
export const TF_TMF_NOACTIVATETIP = 1;
export const TF_TMF_SECUREMODE = 2;
export const TF_TMF_UIELEMENTENABLEDONLY = 4;
export const TF_TMF_COMLESS = 8;
export const TF_TMF_WOW16 = 16;
export const TF_TMF_CONSOLE = 64;
export const TF_TMF_IMMERSIVEMODE = 1073741824;
export const TF_TMF_ACTIVATED = 2147483648;
export const TF_MOD_ALT = 1;
export const TF_MOD_CONTROL = 2;
export const TF_MOD_SHIFT = 4;
export const TF_MOD_RALT = 8;
export const TF_MOD_RCONTROL = 16;
export const TF_MOD_RSHIFT = 32;
export const TF_MOD_LALT = 64;
export const TF_MOD_LCONTROL = 128;
export const TF_MOD_LSHIFT = 256;
export const TF_MOD_ON_KEYUP = 512;
export const TF_MOD_IGNORE_ALL_MODIFIER = 1024;
export const TF_US_HIDETIPUI = 1;
export const TF_DISABLE_SPEECH = 1;
export const TF_DISABLE_DICTATION = 2;
export const TF_DISABLE_COMMANDING = 4;
export const TF_CLUIE_DOCUMENTMGR = 1;
export const TF_CLUIE_COUNT = 2;
export const TF_CLUIE_SELECTION = 4;
export const TF_CLUIE_STRING = 8;
export const TF_CLUIE_PAGEINDEX = 16;
export const TF_CLUIE_CURRENTPAGE = 32;
export const TF_RIUIE_CONTEXT = 1;
export const TF_RIUIE_STRING = 2;
export const TF_RIUIE_MAXREADINGSTRINGLENGTH = 4;
export const TF_RIUIE_ERRORINDEX = 8;
export const TF_RIUIE_VERTICALORDER = 16;
export const TF_CONVERSIONMODE_ALPHANUMERIC = 0;
export const TF_CONVERSIONMODE_NATIVE = 1;
export const TF_CONVERSIONMODE_KATAKANA = 2;
export const TF_CONVERSIONMODE_FULLSHAPE = 8;
export const TF_CONVERSIONMODE_ROMAN = 16;
export const TF_CONVERSIONMODE_CHARCODE = 32;
export const TF_CONVERSIONMODE_SOFTKEYBOARD = 128;
export const TF_CONVERSIONMODE_NOCONVERSION = 256;
export const TF_CONVERSIONMODE_EUDC = 512;
export const TF_CONVERSIONMODE_SYMBOL = 1024;
export const TF_CONVERSIONMODE_FIXED = 2048;
export const TF_SENTENCEMODE_NONE = 0;
export const TF_SENTENCEMODE_PLAURALCLAUSE = 1;
export const TF_SENTENCEMODE_SINGLECONVERT = 2;
export const TF_SENTENCEMODE_AUTOMATIC = 4;
export const TF_SENTENCEMODE_PHRASEPREDICT = 8;
export const TF_SENTENCEMODE_CONVERSATION = 16;
export const TF_TRANSITORYEXTENSION_NONE = 0;
export const TF_TRANSITORYEXTENSION_FLOATING = 1;
export const TF_TRANSITORYEXTENSION_ATSELECTION = 2;
export const TF_PROFILETYPE_INPUTPROCESSOR = 1;
export const TF_PROFILETYPE_KEYBOARDLAYOUT = 2;
export const TF_RIP_FLAG_FREEUNUSEDLIBRARIES = 1;
export const TF_IPP_FLAG_ACTIVE = 1;
export const TF_IPP_FLAG_ENABLED = 2;
export const TF_IPP_FLAG_SUBSTITUTEDBYINPUTPROCESSOR = 4;
export const TF_IPP_CAPS_DISABLEONTRANSITORY = 1;
export const TF_IPP_CAPS_SECUREMODESUPPORT = 2;
export const TF_IPP_CAPS_UIELEMENTENABLED = 4;
export const TF_IPP_CAPS_COMLESSSUPPORT = 8;
export const TF_IPP_CAPS_WOW16SUPPORT = 16;
export const TF_IPP_CAPS_IMMERSIVESUPPORT = 65536;
export const TF_IPP_CAPS_SYSTRAYSUPPORT = 131072;
export const TF_IPPMF_FORPROCESS = 268435456;
export const TF_IPPMF_FORSESSION = 536870912;
export const TF_IPPMF_FORSYSTEMALL = 1073741824;
export const TF_IPPMF_ENABLEPROFILE = 1;
export const TF_IPPMF_DISABLEPROFILE = 2;
export const TF_IPPMF_DONTCARECURRENTINPUTLANGUAGE = 4;
export const TF_RP_HIDDENINSETTINGUI = 2;
export const TF_RP_LOCALPROCESS = 4;
export const TF_RP_LOCALTHREAD = 8;
export const TF_RP_SUBITEMINSETTINGUI = 16;
export const TF_URP_ALLPROFILES = 2;
export const TF_URP_LOCALPROCESS = 4;
export const TF_URP_LOCALTHREAD = 8;
export const TF_IPSINK_FLAG_ACTIVE = 1;
export const TF_INVALID_EDIT_COOKIE = 0;
export const TF_POPF_ALL = 1;
export const TF_SD_READONLY = 1;
export const TF_SD_LOADING = 2;
export const TF_SS_DISJOINTSEL = 1;
export const TF_SS_REGIONS = 2;
export const TF_SS_TRANSITORY = 4;
export const TF_SS_TKBAUTOCORRECTENABLE = 16;
export const TF_SS_TKBPREDICTIONENABLE = 32;
export const TF_CHAR_EMBEDDED = 65532;
export const TF_HF_OBJECT = 1;
export const TF_TF_MOVESTART = 1;
export const TF_TF_IGNOREEND = 2;
export const TF_ST_CORRECTION = 1;
export const TF_IE_CORRECTION = 1;
export const TF_TU_CORRECTION = 1;
export const TF_INVALID_COOKIE = 4294967295;
export const TF_E_NOCONVERSION = 1224980286203495936n;
export const TF_DICTATION_ON = 1;
export const TF_DICTATION_ENABLED = 2;
export const TF_COMMANDING_ENABLED = 4;
export const TF_COMMANDING_ON = 8;
export const TF_SPEECHUI_SHOWN = 16;
export const TF_SHOW_BALLOON = 1;
export const TF_DISABLE_BALLOON = 2;
export const TF_MENUREADY = 1;
export const TF_PROPUI_STATUS_SAVETOFILE = 1;
export const TKBL_UNDEFINED = 0;
export const TKBL_CLASSIC_TRADITIONAL_CHINESE_PHONETIC = 1028;
export const TKBL_CLASSIC_TRADITIONAL_CHINESE_CHANGJIE = 61506;
export const TKBL_CLASSIC_TRADITIONAL_CHINESE_DAYI = 61507;
export const TKBL_OPT_JAPANESE_ABC = 1041;
export const TKBL_OPT_KOREAN_HANGUL_2_BULSIK = 1042;
export const TKBL_OPT_SIMPLIFIED_CHINESE_PINYIN = 2052;
export const TKBL_OPT_TRADITIONAL_CHINESE_PHONETIC = 1028;
export const TF_LBI_ICON = 1;
export const TF_LBI_TEXT = 2;
export const TF_LBI_TOOLTIP = 4;
export const TF_LBI_BITMAP = 8;
export const TF_LBI_BALLOON = 16;
export const TF_LBI_CUSTOMUI = 32;
export const TF_LBI_STATUS = 65536;
export const TF_LBI_STYLE_HIDDENSTATUSCONTROL = 1;
export const TF_LBI_STYLE_SHOWNINTRAY = 2;
export const TF_LBI_STYLE_HIDEONNOOTHERITEMS = 4;
export const TF_LBI_STYLE_SHOWNINTRAYONLY = 8;
export const TF_LBI_STYLE_HIDDENBYDEFAULT = 16;
export const TF_LBI_STYLE_TEXTCOLORICON = 32;
export const TF_LBI_STYLE_BTN_BUTTON = 65536;
export const TF_LBI_STYLE_BTN_MENU = 131072;
export const TF_LBI_STYLE_BTN_TOGGLE = 262144;
export const TF_LBI_STATUS_HIDDEN = 1;
export const TF_LBI_STATUS_DISABLED = 2;
export const TF_LBI_STATUS_BTN_TOGGLED = 65536;
export const TF_LBI_BMPF_VERTICAL = 1;
export const TF_SFT_SHOWNORMAL = 1;
export const TF_SFT_DOCK = 2;
export const TF_SFT_MINIMIZED = 4;
export const TF_SFT_HIDDEN = 8;
export const TF_SFT_NOTRANSPARENCY = 16;
export const TF_SFT_LOWTRANSPARENCY = 32;
export const TF_SFT_HIGHTRANSPARENCY = 64;
export const TF_SFT_LABELS = 128;
export const TF_SFT_NOLABELS = 256;
export const TF_SFT_EXTRAICONSONMINIMIZED = 512;
export const TF_SFT_NOEXTRAICONSONMINIMIZED = 1024;
export const TF_SFT_DESKBAND = 2048;
export const TF_LBI_DESC_MAXLEN = 32;
export const TF_LBMENUF_CHECKED = 1;
export const TF_LBMENUF_SUBMENU = 2;
export const TF_LBMENUF_SEPARATOR = 4;
export const TF_LBMENUF_RADIOCHECKED = 8;
export const TF_LBMENUF_GRAYED = 16;
export const DCM_FLAGS_TASKENG = 1;
export const DCM_FLAGS_CTFMON = 2;
export const DCM_FLAGS_LOCALTHREADTSF = 4;
export const ILMCM_CHECKLAYOUTANDTIPENABLED = 1;
export const ILMCM_LANGUAGEBAROFF = 2;
export const TS_STRF_START = 0;
export const TS_STRF_MID = 1;
export const TS_STRF_END = 2;
export const TF_DTLBI_NONE = 0;
export const TF_DTLBI_USEPROFILEICON = 1;
export const TS_ST_NONE = 0;
export const TS_ST_CORRECTION = 1;
export const TS_TC_NONE = 0;
export const TS_TC_CORRECTION = 1;
export const TF_IAS_NOQUERY = 1;
export const TF_IAS_QUERYONLY = 2;
export const TF_IAS_NO_DEFAULT_COMPOSITION = 2147483648;
export const TS_CH_PRECEDING_DEL = 1;
export const TS_CH_FOLLOWING_DEL = 2;
export const TS_LF_READ = 2;
export const TS_LF_READWRITE = 6;
export const TF_GTP_NONE = 0;
export const TF_GTP_INCL_TEXT = 1;
export const TF_ES_ASYNCDONTCARE = 0;
export const TF_ES_SYNC = 1;
export const TF_ES_READ = 2;
export const TF_ES_READWRITE = 6;
export const TF_ES_ASYNC = 8;
export const TS_AE_NONE = 0;
export const TS_AE_START = 1;
export const TS_AE_END = 2;
export const TS_LC_CREATE = 0;
export const TS_LC_CHANGE = 1;
export const TS_LC_DESTROY = 2;
export const TS_RT_PLAIN = 0;
export const TS_RT_HIDDEN = 1;
export const TS_RT_OPAQUE = 2;
export const TS_GR_BACKWARD = 0;
export const TS_GR_FORWARD = 1;
export const TS_SD_BACKWARD = 0;
export const TS_SD_FORWARD = 1;
export const TF_LBI_CLK_RIGHT = 1;
export const TF_LBI_CLK_LEFT = 2;
export const TF_LB_BALLOON_RECO = 0;
export const TF_LB_BALLOON_SHOW = 1;
export const TF_LB_BALLOON_MISS = 2;
export const TF_ANCHOR_START = 0;
export const TF_ANCHOR_END = 1;
export const TF_AE_NONE = 0;
export const TF_AE_START = 1;
export const TF_AE_END = 2;
export const TF_LC_CREATE = 0;
export const TF_LC_CHANGE = 1;
export const TF_LC_DESTROY = 2;
export const TF_GRAVITY_BACKWARD = 0;
export const TF_GRAVITY_FORWARD = 1;
export const TF_SD_BACKWARD = 0;
export const TF_SD_FORWARD = 1;
export const TF_LS_NONE = 0;
export const TF_LS_SOLID = 1;
export const TF_LS_DOT = 2;
export const TF_LS_DASH = 3;
export const TF_LS_SQUIGGLE = 4;
export const TF_CT_NONE = 0;
export const TF_CT_SYSCOLOR = 1;
export const TF_CT_COLORREF = 2;
export const TF_ATTR_INPUT = 0;
export const TF_ATTR_TARGET_CONVERTED = 1;
export const TF_ATTR_CONVERTED = 2;
export const TF_ATTR_TARGET_NOTCONVERTED = 3;
export const TF_ATTR_INPUT_ERROR = 4;
export const TF_ATTR_FIXEDCONVERTED = 5;
export const TF_ATTR_OTHER = "-1";
export const CAND_FINALIZED = 0;
export const CAND_SELECTED = 1;
export const CAND_CANCELED = 2;
export const GETIF_RESMGR = 0;
export const GETIF_RECOCONTEXT = 1;
export const GETIF_RECOGNIZER = 2;
export const GETIF_VOICE = 3;
export const GETIF_DICTGRAM = 4;
export const GETIF_RECOGNIZERNOINIT = 5;
export const STYLE_ACTIVE_SELECTION = 0;
export const STYLE_IMPLIED_SELECTION = 1;
export const TKBLT_UNDEFINED = 0;
export const TKBLT_CLASSIC = 1;
export const TKBLT_OPTIMIZED = 2;
export const IS_DEFAULT = 0;
export const IS_URL = 1;
export const IS_FILE_FULLFILEPATH = 2;
export const IS_FILE_FILENAME = 3;
export const IS_EMAIL_USERNAME = 4;
export const IS_EMAIL_SMTPEMAILADDRESS = 5;
export const IS_LOGINNAME = 6;
export const IS_PERSONALNAME_FULLNAME = 7;
export const IS_PERSONALNAME_PREFIX = 8;
export const IS_PERSONALNAME_GIVENNAME = 9;
export const IS_PERSONALNAME_MIDDLENAME = 10;
export const IS_PERSONALNAME_SURNAME = 11;
export const IS_PERSONALNAME_SUFFIX = 12;
export const IS_ADDRESS_FULLPOSTALADDRESS = 13;
export const IS_ADDRESS_POSTALCODE = 14;
export const IS_ADDRESS_STREET = 15;
export const IS_ADDRESS_STATEORPROVINCE = 16;
export const IS_ADDRESS_CITY = 17;
export const IS_ADDRESS_COUNTRYNAME = 18;
export const IS_ADDRESS_COUNTRYSHORTNAME = 19;
export const IS_CURRENCY_AMOUNTANDSYMBOL = 20;
export const IS_CURRENCY_AMOUNT = 21;
export const IS_DATE_FULLDATE = 22;
export const IS_DATE_MONTH = 23;
export const IS_DATE_DAY = 24;
export const IS_DATE_YEAR = 25;
export const IS_DATE_MONTHNAME = 26;
export const IS_DATE_DAYNAME = 27;
export const IS_DIGITS = 28;
export const IS_NUMBER = 29;
export const IS_ONECHAR = 30;
export const IS_PASSWORD = 31;
export const IS_TELEPHONE_FULLTELEPHONENUMBER = 32;
export const IS_TELEPHONE_COUNTRYCODE = 33;
export const IS_TELEPHONE_AREACODE = 34;
export const IS_TELEPHONE_LOCALNUMBER = 35;
export const IS_TIME_FULLTIME = 36;
export const IS_TIME_HOUR = 37;
export const IS_TIME_MINORSEC = 38;
export const IS_NUMBER_FULLWIDTH = 39;
export const IS_ALPHANUMERIC_HALFWIDTH = 40;
export const IS_ALPHANUMERIC_FULLWIDTH = 41;
export const IS_CURRENCY_CHINESE = 42;
export const IS_BOPOMOFO = 43;
export const IS_HIRAGANA = 44;
export const IS_KATAKANA_HALFWIDTH = 45;
export const IS_KATAKANA_FULLWIDTH = 46;
export const IS_HANJA = 47;
export const IS_HANGUL_HALFWIDTH = 48;
export const IS_HANGUL_FULLWIDTH = 49;
export const IS_SEARCH = 50;
export const IS_FORMULA = 51;
export const IS_SEARCH_INCREMENTAL = 52;
export const IS_CHINESE_HALFWIDTH = 53;
export const IS_CHINESE_FULLWIDTH = 54;
export const IS_NATIVE_SCRIPT = 55;
export const IS_YOMI = 56;
export const IS_TEXT = 57;
export const IS_CHAT = 58;
export const IS_NAME_OR_PHONENUMBER = 59;
export const IS_EMAILNAME_OR_ADDRESS = 60;
export const IS_PRIVATE = 61;
export const IS_MAPS = 62;
export const IS_NUMERIC_PASSWORD = 63;
export const IS_NUMERIC_PIN = 64;
export const IS_ALPHANUMERIC_PIN = 65;
export const IS_ALPHANUMERIC_PIN_SET = 66;
export const IS_FORMULA_NUMBER = 67;
export const IS_CHAT_WITHOUT_EMOJI = 68;
export const IS_PHRASELIST = "-1";
export const IS_REGULAREXPRESSION = "-2";
export const IS_SRGS = "-3";
export const IS_XML = "-4";
export const IS_ENUMSTRING = "-5";

// Structs

/**
 * Windows.Win32.UI.TextServices.Apis (size: 1432)
 */
export interface Apis {
  /** System.Guid */
  GUID_PROP_TEXTOWNER: Uint8Array | Deno.PointerValue | null;
  /** System.Guid */
  GUID_PROP_ATTRIBUTE: Uint8Array | Deno.PointerValue | null;
  /** System.Guid */
  GUID_PROP_LANGID: Uint8Array | Deno.PointerValue | null;
  /** System.Guid */
  GUID_PROP_READING: Uint8Array | Deno.PointerValue | null;
  /** System.Guid */
  GUID_PROP_COMPOSING: Uint8Array | Deno.PointerValue | null;
  /** System.Guid */
  GUID_PROP_TKB_ALTERNATES: Uint8Array | Deno.PointerValue | null;
  /** System.Guid */
  GUID_SYSTEM_FUNCTIONPROVIDER: Uint8Array | Deno.PointerValue | null;
  /** System.Guid */
  GUID_APP_FUNCTIONPROVIDER: Uint8Array | Deno.PointerValue | null;
  /** System.Guid */
  GUID_TFCAT_CATEGORY_OF_TIP: Uint8Array | Deno.PointerValue | null;
  /** System.Guid */
  GUID_TFCAT_TIP_KEYBOARD: Uint8Array | Deno.PointerValue | null;
  /** System.Guid */
  GUID_TFCAT_TIP_SPEECH: Uint8Array | Deno.PointerValue | null;
  /** System.Guid */
  GUID_TFCAT_TIP_HANDWRITING: Uint8Array | Deno.PointerValue | null;
  /** System.Guid */
  GUID_TFCAT_PROP_AUDIODATA: Uint8Array | Deno.PointerValue | null;
  /** System.Guid */
  GUID_TFCAT_PROP_INKDATA: Uint8Array | Deno.PointerValue | null;
  /** System.Guid */
  GUID_COMPARTMENT_SAPI_AUDIO: Uint8Array | Deno.PointerValue | null;
  /** System.Guid */
  GUID_COMPARTMENT_KEYBOARD_DISABLED: Uint8Array | Deno.PointerValue | null;
  /** System.Guid */
  GUID_COMPARTMENT_KEYBOARD_OPENCLOSE: Uint8Array | Deno.PointerValue | null;
  /** System.Guid */
  GUID_COMPARTMENT_HANDWRITING_OPENCLOSE: Uint8Array | Deno.PointerValue | null;
  /** System.Guid */
  GUID_COMPARTMENT_SPEECH_DISABLED: Uint8Array | Deno.PointerValue | null;
  /** System.Guid */
  GUID_COMPARTMENT_SPEECH_OPENCLOSE: Uint8Array | Deno.PointerValue | null;
  /** System.Guid */
  GUID_COMPARTMENT_SPEECH_GLOBALSTATE: Uint8Array | Deno.PointerValue | null;
  /** System.Guid */
  GUID_COMPARTMENT_CONVERSIONMODEBIAS: Uint8Array | Deno.PointerValue | null;
  /** System.Guid */
  GUID_PROP_MODEBIAS: Uint8Array | Deno.PointerValue | null;
  /** System.Guid */
  GUID_COMPARTMENT_KEYBOARD_INPUTMODE: Uint8Array | Deno.PointerValue | null;
  /** System.Guid */
  GUID_MODEBIAS_NONE: Uint8Array | Deno.PointerValue | null;
  /** System.Guid */
  GUID_MODEBIAS_URLHISTORY: Uint8Array | Deno.PointerValue | null;
  /** System.Guid */
  GUID_MODEBIAS_FILENAME: Uint8Array | Deno.PointerValue | null;
  /** System.Guid */
  GUID_MODEBIAS_READING: Uint8Array | Deno.PointerValue | null;
  /** System.Guid */
  GUID_MODEBIAS_DATETIME: Uint8Array | Deno.PointerValue | null;
  /** System.Guid */
  GUID_MODEBIAS_NAME: Uint8Array | Deno.PointerValue | null;
  /** System.Guid */
  GUID_MODEBIAS_CONVERSATION: Uint8Array | Deno.PointerValue | null;
  /** System.Guid */
  GUID_MODEBIAS_NUMERIC: Uint8Array | Deno.PointerValue | null;
  /** System.Guid */
  GUID_MODEBIAS_HIRAGANA: Uint8Array | Deno.PointerValue | null;
  /** System.Guid */
  GUID_MODEBIAS_KATAKANA: Uint8Array | Deno.PointerValue | null;
  /** System.Guid */
  GUID_MODEBIAS_HANGUL: Uint8Array | Deno.PointerValue | null;
  /** System.Guid */
  GUID_MODEBIAS_CHINESE: Uint8Array | Deno.PointerValue | null;
  /** System.Guid */
  GUID_MODEBIAS_HALFWIDTHKATAKANA: Uint8Array | Deno.PointerValue | null;
  /** System.Guid */
  GUID_MODEBIAS_FULLWIDTHALPHANUMERIC: Uint8Array | Deno.PointerValue | null;
  /** System.Guid */
  GUID_MODEBIAS_FULLWIDTHHANGUL: Uint8Array | Deno.PointerValue | null;
  /** System.Guid */
  GUID_TFCAT_PROPSTYLE_STATIC: Uint8Array | Deno.PointerValue | null;
  /** System.Guid */
  GUID_TFCAT_DISPLAYATTRIBUTEPROVIDER: Uint8Array | Deno.PointerValue | null;
  /** System.Guid */
  GUID_TFCAT_DISPLAYATTRIBUTEPROPERTY: Uint8Array | Deno.PointerValue | null;
  /** System.Guid */
  GUID_COMPARTMENT_SPEECH_UI_STATUS: Uint8Array | Deno.PointerValue | null;
  /** System.Guid */
  GUID_COMPARTMENT_EMPTYCONTEXT: Uint8Array | Deno.PointerValue | null;
  /** System.Guid */
  GUID_COMPARTMENT_TIPUISTATUS: Uint8Array | Deno.PointerValue | null;
  /** System.Guid */
  GUID_COMPARTMENT_SPEECH_CFGMENU: Uint8Array | Deno.PointerValue | null;
  /** System.Guid */
  GUID_LBI_SAPILAYR_CFGMENUBUTTON: Uint8Array | Deno.PointerValue | null;
  /** System.Guid */
  GUID_TFCAT_TIPCAP_SECUREMODE: Uint8Array | Deno.PointerValue | null;
  /** System.Guid */
  GUID_TFCAT_TIPCAP_UIELEMENTENABLED: Uint8Array | Deno.PointerValue | null;
  /** System.Guid */
  GUID_TFCAT_TIPCAP_INPUTMODECOMPARTMENT: Uint8Array | Deno.PointerValue | null;
  /** System.Guid */
  GUID_TFCAT_TIPCAP_COMLESS: Uint8Array | Deno.PointerValue | null;
  /** System.Guid */
  GUID_TFCAT_TIPCAP_WOW16: Uint8Array | Deno.PointerValue | null;
  /** System.Guid */
  GUID_TFCAT_TIPCAP_IMMERSIVESUPPORT: Uint8Array | Deno.PointerValue | null;
  /** System.Guid */
  GUID_TFCAT_TIPCAP_IMMERSIVEONLY: Uint8Array | Deno.PointerValue | null;
  /** System.Guid */
  GUID_TFCAT_TIPCAP_LOCALSERVER: Uint8Array | Deno.PointerValue | null;
  /** System.Guid */
  GUID_TFCAT_TIPCAP_TSF3: Uint8Array | Deno.PointerValue | null;
  /** System.Guid */
  GUID_TFCAT_TIPCAP_DUALMODE: Uint8Array | Deno.PointerValue | null;
  /** System.Guid */
  GUID_TFCAT_TIPCAP_SYSTRAYSUPPORT: Uint8Array | Deno.PointerValue | null;
  /** System.Guid */
  GUID_COMPARTMENT_KEYBOARD_INPUTMODE_CONVERSION: Uint8Array | Deno.PointerValue | null;
  /** System.Guid */
  GUID_COMPARTMENT_KEYBOARD_INPUTMODE_SENTENCE: Uint8Array | Deno.PointerValue | null;
  /** System.Guid */
  GUID_COMPARTMENT_TRANSITORYEXTENSION: Uint8Array | Deno.PointerValue | null;
  /** System.Guid */
  GUID_COMPARTMENT_TRANSITORYEXTENSION_DOCUMENTMANAGER: Uint8Array | Deno.PointerValue | null;
  /** System.Guid */
  GUID_COMPARTMENT_TRANSITORYEXTENSION_PARENT: Uint8Array | Deno.PointerValue | null;
  /** System.Guid */
  GUID_COMPARTMENT_ENABLED_PROFILES_UPDATED: Uint8Array | Deno.PointerValue | null;
  /** System.Guid */
  GUID_TFCAT_TRANSITORYEXTENSIONUI: Uint8Array | Deno.PointerValue | null;
  /** System.Guid */
  GUID_LBI_INPUTMODE: Uint8Array | Deno.PointerValue | null;
  /** System.Guid */
  CLSID_TF_ThreadMgr: Uint8Array | Deno.PointerValue | null;
  /** System.Guid */
  CLSID_TF_LangBarMgr: Uint8Array | Deno.PointerValue | null;
  /** System.Guid */
  CLSID_TF_DisplayAttributeMgr: Uint8Array | Deno.PointerValue | null;
  /** System.Guid */
  CLSID_TF_CategoryMgr: Uint8Array | Deno.PointerValue | null;
  /** System.Guid */
  CLSID_TF_InputProcessorProfiles: Uint8Array | Deno.PointerValue | null;
  /** System.Guid */
  CLSID_TF_LangBarItemMgr: Uint8Array | Deno.PointerValue | null;
  /** System.Guid */
  CLSID_TF_ClassicLangBar: Uint8Array | Deno.PointerValue | null;
  /** System.Guid */
  CLSID_TF_TransitoryExtensionUIEntry: Uint8Array | Deno.PointerValue | null;
  /** System.Guid */
  CLSID_TsfServices: Uint8Array | Deno.PointerValue | null;
  /** System.Guid */
  GUID_TS_SERVICE_DATAOBJECT: Uint8Array | Deno.PointerValue | null;
  /** System.Guid */
  GUID_TS_SERVICE_ACCESSIBLE: Uint8Array | Deno.PointerValue | null;
  /** System.Guid */
  GUID_TS_SERVICE_ACTIVEX: Uint8Array | Deno.PointerValue | null;
  /** System.Guid */
  TF_PROFILE_NEWPHONETIC: Uint8Array | Deno.PointerValue | null;
  /** System.Guid */
  TF_PROFILE_PHONETIC: Uint8Array | Deno.PointerValue | null;
  /** System.Guid */
  TF_PROFILE_NEWCHANGJIE: Uint8Array | Deno.PointerValue | null;
  /** System.Guid */
  TF_PROFILE_CHANGJIE: Uint8Array | Deno.PointerValue | null;
  /** System.Guid */
  TF_PROFILE_NEWQUICK: Uint8Array | Deno.PointerValue | null;
  /** System.Guid */
  TF_PROFILE_QUICK: Uint8Array | Deno.PointerValue | null;
  /** System.Guid */
  TF_PROFILE_CANTONESE: Uint8Array | Deno.PointerValue | null;
  /** System.Guid */
  TF_PROFILE_PINYIN: Uint8Array | Deno.PointerValue | null;
  /** System.Guid */
  TF_PROFILE_SIMPLEFAST: Uint8Array | Deno.PointerValue | null;
  /** System.Guid */
  TF_PROFILE_WUBI: Uint8Array | Deno.PointerValue | null;
  /** System.Guid */
  TF_PROFILE_DAYI: Uint8Array | Deno.PointerValue | null;
  /** System.Guid */
  TF_PROFILE_ARRAY: Uint8Array | Deno.PointerValue | null;
  /** System.Guid */
  TF_PROFILE_YI: Uint8Array | Deno.PointerValue | null;
  /** System.Guid */
  TF_PROFILE_TIGRINYA: Uint8Array | Deno.PointerValue | null;
  /** System.Guid */
  GUID_INTEGRATIONSTYLE_SEARCHBOX: Uint8Array | Deno.PointerValue | null;
  /** System.Guid */
  GUID_PROP_INPUTSCOPE: Uint8Array | Deno.PointerValue | null;
  /** System.Guid */
  LIBID_MSAATEXTLib: Uint8Array | Deno.PointerValue | null;
  /** System.Guid */
  TSATTRID_OTHERS: Uint8Array | Deno.PointerValue | null;
  /** System.Guid */
  TSATTRID_Font: Uint8Array | Deno.PointerValue | null;
  /** System.Guid */
  TSATTRID_Font_FaceName: Uint8Array | Deno.PointerValue | null;
  /** System.Guid */
  TSATTRID_Font_SizePts: Uint8Array | Deno.PointerValue | null;
  /** System.Guid */
  TSATTRID_Font_Style: Uint8Array | Deno.PointerValue | null;
  /** System.Guid */
  TSATTRID_Font_Style_Bold: Uint8Array | Deno.PointerValue | null;
  /** System.Guid */
  TSATTRID_Font_Style_Italic: Uint8Array | Deno.PointerValue | null;
  /** System.Guid */
  TSATTRID_Font_Style_SmallCaps: Uint8Array | Deno.PointerValue | null;
  /** System.Guid */
  TSATTRID_Font_Style_Capitalize: Uint8Array | Deno.PointerValue | null;
  /** System.Guid */
  TSATTRID_Font_Style_Uppercase: Uint8Array | Deno.PointerValue | null;
  /** System.Guid */
  TSATTRID_Font_Style_Lowercase: Uint8Array | Deno.PointerValue | null;
  /** System.Guid */
  TSATTRID_Font_Style_Animation: Uint8Array | Deno.PointerValue | null;
  /** System.Guid */
  TSATTRID_Font_Style_Animation_LasVegasLights: Uint8Array | Deno.PointerValue | null;
  /** System.Guid */
  TSATTRID_Font_Style_Animation_BlinkingBackground: Uint8Array | Deno.PointerValue | null;
  /** System.Guid */
  TSATTRID_Font_Style_Animation_SparkleText: Uint8Array | Deno.PointerValue | null;
  /** System.Guid */
  TSATTRID_Font_Style_Animation_MarchingBlackAnts: Uint8Array | Deno.PointerValue | null;
  /** System.Guid */
  TSATTRID_Font_Style_Animation_MarchingRedAnts: Uint8Array | Deno.PointerValue | null;
  /** System.Guid */
  TSATTRID_Font_Style_Animation_Shimmer: Uint8Array | Deno.PointerValue | null;
  /** System.Guid */
  TSATTRID_Font_Style_Animation_WipeDown: Uint8Array | Deno.PointerValue | null;
  /** System.Guid */
  TSATTRID_Font_Style_Animation_WipeRight: Uint8Array | Deno.PointerValue | null;
  /** System.Guid */
  TSATTRID_Font_Style_Emboss: Uint8Array | Deno.PointerValue | null;
  /** System.Guid */
  TSATTRID_Font_Style_Engrave: Uint8Array | Deno.PointerValue | null;
  /** System.Guid */
  TSATTRID_Font_Style_Hidden: Uint8Array | Deno.PointerValue | null;
  /** System.Guid */
  TSATTRID_Font_Style_Kerning: Uint8Array | Deno.PointerValue | null;
  /** System.Guid */
  TSATTRID_Font_Style_Outlined: Uint8Array | Deno.PointerValue | null;
  /** System.Guid */
  TSATTRID_Font_Style_Position: Uint8Array | Deno.PointerValue | null;
  /** System.Guid */
  TSATTRID_Font_Style_Protected: Uint8Array | Deno.PointerValue | null;
  /** System.Guid */
  TSATTRID_Font_Style_Shadow: Uint8Array | Deno.PointerValue | null;
  /** System.Guid */
  TSATTRID_Font_Style_Spacing: Uint8Array | Deno.PointerValue | null;
  /** System.Guid */
  TSATTRID_Font_Style_Weight: Uint8Array | Deno.PointerValue | null;
  /** System.Guid */
  TSATTRID_Font_Style_Height: Uint8Array | Deno.PointerValue | null;
  /** System.Guid */
  TSATTRID_Font_Style_Underline: Uint8Array | Deno.PointerValue | null;
  /** System.Guid */
  TSATTRID_Font_Style_Underline_Single: Uint8Array | Deno.PointerValue | null;
  /** System.Guid */
  TSATTRID_Font_Style_Underline_Double: Uint8Array | Deno.PointerValue | null;
  /** System.Guid */
  TSATTRID_Font_Style_Strikethrough: Uint8Array | Deno.PointerValue | null;
  /** System.Guid */
  TSATTRID_Font_Style_Strikethrough_Single: Uint8Array | Deno.PointerValue | null;
  /** System.Guid */
  TSATTRID_Font_Style_Strikethrough_Double: Uint8Array | Deno.PointerValue | null;
  /** System.Guid */
  TSATTRID_Font_Style_Overline: Uint8Array | Deno.PointerValue | null;
  /** System.Guid */
  TSATTRID_Font_Style_Overline_Single: Uint8Array | Deno.PointerValue | null;
  /** System.Guid */
  TSATTRID_Font_Style_Overline_Double: Uint8Array | Deno.PointerValue | null;
  /** System.Guid */
  TSATTRID_Font_Style_Blink: Uint8Array | Deno.PointerValue | null;
  /** System.Guid */
  TSATTRID_Font_Style_Subscript: Uint8Array | Deno.PointerValue | null;
  /** System.Guid */
  TSATTRID_Font_Style_Superscript: Uint8Array | Deno.PointerValue | null;
  /** System.Guid */
  TSATTRID_Font_Style_Color: Uint8Array | Deno.PointerValue | null;
  /** System.Guid */
  TSATTRID_Font_Style_BackgroundColor: Uint8Array | Deno.PointerValue | null;
  /** System.Guid */
  TSATTRID_Text: Uint8Array | Deno.PointerValue | null;
  /** System.Guid */
  TSATTRID_Text_VerticalWriting: Uint8Array | Deno.PointerValue | null;
  /** System.Guid */
  TSATTRID_Text_RightToLeft: Uint8Array | Deno.PointerValue | null;
  /** System.Guid */
  TSATTRID_Text_Orientation: Uint8Array | Deno.PointerValue | null;
  /** System.Guid */
  TSATTRID_Text_Language: Uint8Array | Deno.PointerValue | null;
  /** System.Guid */
  TSATTRID_Text_ReadOnly: Uint8Array | Deno.PointerValue | null;
  /** System.Guid */
  TSATTRID_Text_EmbeddedObject: Uint8Array | Deno.PointerValue | null;
  /** System.Guid */
  TSATTRID_Text_Alignment: Uint8Array | Deno.PointerValue | null;
  /** System.Guid */
  TSATTRID_Text_Alignment_Left: Uint8Array | Deno.PointerValue | null;
  /** System.Guid */
  TSATTRID_Text_Alignment_Right: Uint8Array | Deno.PointerValue | null;
  /** System.Guid */
  TSATTRID_Text_Alignment_Center: Uint8Array | Deno.PointerValue | null;
  /** System.Guid */
  TSATTRID_Text_Alignment_Justify: Uint8Array | Deno.PointerValue | null;
  /** System.Guid */
  TSATTRID_Text_Link: Uint8Array | Deno.PointerValue | null;
  /** System.Guid */
  TSATTRID_Text_Hyphenation: Uint8Array | Deno.PointerValue | null;
  /** System.Guid */
  TSATTRID_Text_Para: Uint8Array | Deno.PointerValue | null;
  /** System.Guid */
  TSATTRID_Text_Para_FirstLineIndent: Uint8Array | Deno.PointerValue | null;
  /** System.Guid */
  TSATTRID_Text_Para_LeftIndent: Uint8Array | Deno.PointerValue | null;
  /** System.Guid */
  TSATTRID_Text_Para_RightIndent: Uint8Array | Deno.PointerValue | null;
  /** System.Guid */
  TSATTRID_Text_Para_SpaceAfter: Uint8Array | Deno.PointerValue | null;
  /** System.Guid */
  TSATTRID_Text_Para_SpaceBefore: Uint8Array | Deno.PointerValue | null;
  /** System.Guid */
  TSATTRID_Text_Para_LineSpacing: Uint8Array | Deno.PointerValue | null;
  /** System.Guid */
  TSATTRID_Text_Para_LineSpacing_Single: Uint8Array | Deno.PointerValue | null;
  /** System.Guid */
  TSATTRID_Text_Para_LineSpacing_OnePtFive: Uint8Array | Deno.PointerValue | null;
  /** System.Guid */
  TSATTRID_Text_Para_LineSpacing_Double: Uint8Array | Deno.PointerValue | null;
  /** System.Guid */
  TSATTRID_Text_Para_LineSpacing_AtLeast: Uint8Array | Deno.PointerValue | null;
  /** System.Guid */
  TSATTRID_Text_Para_LineSpacing_Exactly: Uint8Array | Deno.PointerValue | null;
  /** System.Guid */
  TSATTRID_Text_Para_LineSpacing_Multiple: Uint8Array | Deno.PointerValue | null;
  /** System.Guid */
  TSATTRID_List: Uint8Array | Deno.PointerValue | null;
  /** System.Guid */
  TSATTRID_List_LevelIndel: Uint8Array | Deno.PointerValue | null;
  /** System.Guid */
  TSATTRID_List_Type: Uint8Array | Deno.PointerValue | null;
  /** System.Guid */
  TSATTRID_List_Type_Bullet: Uint8Array | Deno.PointerValue | null;
  /** System.Guid */
  TSATTRID_List_Type_Arabic: Uint8Array | Deno.PointerValue | null;
  /** System.Guid */
  TSATTRID_List_Type_LowerLetter: Uint8Array | Deno.PointerValue | null;
  /** System.Guid */
  TSATTRID_List_Type_UpperLetter: Uint8Array | Deno.PointerValue | null;
  /** System.Guid */
  TSATTRID_List_Type_LowerRoman: Uint8Array | Deno.PointerValue | null;
  /** System.Guid */
  TSATTRID_List_Type_UpperRoman: Uint8Array | Deno.PointerValue | null;
  /** System.Guid */
  TSATTRID_App: Uint8Array | Deno.PointerValue | null;
  /** System.Guid */
  TSATTRID_App_IncorrectSpelling: Uint8Array | Deno.PointerValue | null;
  /** System.Guid */
  TSATTRID_App_IncorrectGrammar: Uint8Array | Deno.PointerValue | null;
}

export const sizeofApis = 1432;

export function allocApis(data?: Partial<Apis>): Uint8Array {
  const buf = new Uint8Array(sizeofApis);
  const view = new DataView(buf.buffer);
  // 0x00: pointer
  if (data?.GUID_PROP_TEXTOWNER !== undefined) view.setBigUint64(0, data.GUID_PROP_TEXTOWNER === null ? 0n : BigInt(util.toPointer(data.GUID_PROP_TEXTOWNER)), true);
  // 0x08: pointer
  if (data?.GUID_PROP_ATTRIBUTE !== undefined) view.setBigUint64(8, data.GUID_PROP_ATTRIBUTE === null ? 0n : BigInt(util.toPointer(data.GUID_PROP_ATTRIBUTE)), true);
  // 0x10: pointer
  if (data?.GUID_PROP_LANGID !== undefined) view.setBigUint64(16, data.GUID_PROP_LANGID === null ? 0n : BigInt(util.toPointer(data.GUID_PROP_LANGID)), true);
  // 0x18: pointer
  if (data?.GUID_PROP_READING !== undefined) view.setBigUint64(24, data.GUID_PROP_READING === null ? 0n : BigInt(util.toPointer(data.GUID_PROP_READING)), true);
  // 0x20: pointer
  if (data?.GUID_PROP_COMPOSING !== undefined) view.setBigUint64(32, data.GUID_PROP_COMPOSING === null ? 0n : BigInt(util.toPointer(data.GUID_PROP_COMPOSING)), true);
  // 0x28: pointer
  if (data?.GUID_PROP_TKB_ALTERNATES !== undefined) view.setBigUint64(40, data.GUID_PROP_TKB_ALTERNATES === null ? 0n : BigInt(util.toPointer(data.GUID_PROP_TKB_ALTERNATES)), true);
  // 0x30: pointer
  if (data?.GUID_SYSTEM_FUNCTIONPROVIDER !== undefined) view.setBigUint64(48, data.GUID_SYSTEM_FUNCTIONPROVIDER === null ? 0n : BigInt(util.toPointer(data.GUID_SYSTEM_FUNCTIONPROVIDER)), true);
  // 0x38: pointer
  if (data?.GUID_APP_FUNCTIONPROVIDER !== undefined) view.setBigUint64(56, data.GUID_APP_FUNCTIONPROVIDER === null ? 0n : BigInt(util.toPointer(data.GUID_APP_FUNCTIONPROVIDER)), true);
  // 0x40: pointer
  if (data?.GUID_TFCAT_CATEGORY_OF_TIP !== undefined) view.setBigUint64(64, data.GUID_TFCAT_CATEGORY_OF_TIP === null ? 0n : BigInt(util.toPointer(data.GUID_TFCAT_CATEGORY_OF_TIP)), true);
  // 0x48: pointer
  if (data?.GUID_TFCAT_TIP_KEYBOARD !== undefined) view.setBigUint64(72, data.GUID_TFCAT_TIP_KEYBOARD === null ? 0n : BigInt(util.toPointer(data.GUID_TFCAT_TIP_KEYBOARD)), true);
  // 0x50: pointer
  if (data?.GUID_TFCAT_TIP_SPEECH !== undefined) view.setBigUint64(80, data.GUID_TFCAT_TIP_SPEECH === null ? 0n : BigInt(util.toPointer(data.GUID_TFCAT_TIP_SPEECH)), true);
  // 0x58: pointer
  if (data?.GUID_TFCAT_TIP_HANDWRITING !== undefined) view.setBigUint64(88, data.GUID_TFCAT_TIP_HANDWRITING === null ? 0n : BigInt(util.toPointer(data.GUID_TFCAT_TIP_HANDWRITING)), true);
  // 0x60: pointer
  if (data?.GUID_TFCAT_PROP_AUDIODATA !== undefined) view.setBigUint64(96, data.GUID_TFCAT_PROP_AUDIODATA === null ? 0n : BigInt(util.toPointer(data.GUID_TFCAT_PROP_AUDIODATA)), true);
  // 0x68: pointer
  if (data?.GUID_TFCAT_PROP_INKDATA !== undefined) view.setBigUint64(104, data.GUID_TFCAT_PROP_INKDATA === null ? 0n : BigInt(util.toPointer(data.GUID_TFCAT_PROP_INKDATA)), true);
  // 0x70: pointer
  if (data?.GUID_COMPARTMENT_SAPI_AUDIO !== undefined) view.setBigUint64(112, data.GUID_COMPARTMENT_SAPI_AUDIO === null ? 0n : BigInt(util.toPointer(data.GUID_COMPARTMENT_SAPI_AUDIO)), true);
  // 0x78: pointer
  if (data?.GUID_COMPARTMENT_KEYBOARD_DISABLED !== undefined) view.setBigUint64(120, data.GUID_COMPARTMENT_KEYBOARD_DISABLED === null ? 0n : BigInt(util.toPointer(data.GUID_COMPARTMENT_KEYBOARD_DISABLED)), true);
  // 0x80: pointer
  if (data?.GUID_COMPARTMENT_KEYBOARD_OPENCLOSE !== undefined) view.setBigUint64(128, data.GUID_COMPARTMENT_KEYBOARD_OPENCLOSE === null ? 0n : BigInt(util.toPointer(data.GUID_COMPARTMENT_KEYBOARD_OPENCLOSE)), true);
  // 0x88: pointer
  if (data?.GUID_COMPARTMENT_HANDWRITING_OPENCLOSE !== undefined) view.setBigUint64(136, data.GUID_COMPARTMENT_HANDWRITING_OPENCLOSE === null ? 0n : BigInt(util.toPointer(data.GUID_COMPARTMENT_HANDWRITING_OPENCLOSE)), true);
  // 0x90: pointer
  if (data?.GUID_COMPARTMENT_SPEECH_DISABLED !== undefined) view.setBigUint64(144, data.GUID_COMPARTMENT_SPEECH_DISABLED === null ? 0n : BigInt(util.toPointer(data.GUID_COMPARTMENT_SPEECH_DISABLED)), true);
  // 0x98: pointer
  if (data?.GUID_COMPARTMENT_SPEECH_OPENCLOSE !== undefined) view.setBigUint64(152, data.GUID_COMPARTMENT_SPEECH_OPENCLOSE === null ? 0n : BigInt(util.toPointer(data.GUID_COMPARTMENT_SPEECH_OPENCLOSE)), true);
  // 0xa0: pointer
  if (data?.GUID_COMPARTMENT_SPEECH_GLOBALSTATE !== undefined) view.setBigUint64(160, data.GUID_COMPARTMENT_SPEECH_GLOBALSTATE === null ? 0n : BigInt(util.toPointer(data.GUID_COMPARTMENT_SPEECH_GLOBALSTATE)), true);
  // 0xa8: pointer
  if (data?.GUID_COMPARTMENT_CONVERSIONMODEBIAS !== undefined) view.setBigUint64(168, data.GUID_COMPARTMENT_CONVERSIONMODEBIAS === null ? 0n : BigInt(util.toPointer(data.GUID_COMPARTMENT_CONVERSIONMODEBIAS)), true);
  // 0xb0: pointer
  if (data?.GUID_PROP_MODEBIAS !== undefined) view.setBigUint64(176, data.GUID_PROP_MODEBIAS === null ? 0n : BigInt(util.toPointer(data.GUID_PROP_MODEBIAS)), true);
  // 0xb8: pointer
  if (data?.GUID_COMPARTMENT_KEYBOARD_INPUTMODE !== undefined) view.setBigUint64(184, data.GUID_COMPARTMENT_KEYBOARD_INPUTMODE === null ? 0n : BigInt(util.toPointer(data.GUID_COMPARTMENT_KEYBOARD_INPUTMODE)), true);
  // 0xc0: pointer
  if (data?.GUID_MODEBIAS_NONE !== undefined) view.setBigUint64(192, data.GUID_MODEBIAS_NONE === null ? 0n : BigInt(util.toPointer(data.GUID_MODEBIAS_NONE)), true);
  // 0xc8: pointer
  if (data?.GUID_MODEBIAS_URLHISTORY !== undefined) view.setBigUint64(200, data.GUID_MODEBIAS_URLHISTORY === null ? 0n : BigInt(util.toPointer(data.GUID_MODEBIAS_URLHISTORY)), true);
  // 0xd0: pointer
  if (data?.GUID_MODEBIAS_FILENAME !== undefined) view.setBigUint64(208, data.GUID_MODEBIAS_FILENAME === null ? 0n : BigInt(util.toPointer(data.GUID_MODEBIAS_FILENAME)), true);
  // 0xd8: pointer
  if (data?.GUID_MODEBIAS_READING !== undefined) view.setBigUint64(216, data.GUID_MODEBIAS_READING === null ? 0n : BigInt(util.toPointer(data.GUID_MODEBIAS_READING)), true);
  // 0xe0: pointer
  if (data?.GUID_MODEBIAS_DATETIME !== undefined) view.setBigUint64(224, data.GUID_MODEBIAS_DATETIME === null ? 0n : BigInt(util.toPointer(data.GUID_MODEBIAS_DATETIME)), true);
  // 0xe8: pointer
  if (data?.GUID_MODEBIAS_NAME !== undefined) view.setBigUint64(232, data.GUID_MODEBIAS_NAME === null ? 0n : BigInt(util.toPointer(data.GUID_MODEBIAS_NAME)), true);
  // 0xf0: pointer
  if (data?.GUID_MODEBIAS_CONVERSATION !== undefined) view.setBigUint64(240, data.GUID_MODEBIAS_CONVERSATION === null ? 0n : BigInt(util.toPointer(data.GUID_MODEBIAS_CONVERSATION)), true);
  // 0xf8: pointer
  if (data?.GUID_MODEBIAS_NUMERIC !== undefined) view.setBigUint64(248, data.GUID_MODEBIAS_NUMERIC === null ? 0n : BigInt(util.toPointer(data.GUID_MODEBIAS_NUMERIC)), true);
  // 0x100: pointer
  if (data?.GUID_MODEBIAS_HIRAGANA !== undefined) view.setBigUint64(256, data.GUID_MODEBIAS_HIRAGANA === null ? 0n : BigInt(util.toPointer(data.GUID_MODEBIAS_HIRAGANA)), true);
  // 0x108: pointer
  if (data?.GUID_MODEBIAS_KATAKANA !== undefined) view.setBigUint64(264, data.GUID_MODEBIAS_KATAKANA === null ? 0n : BigInt(util.toPointer(data.GUID_MODEBIAS_KATAKANA)), true);
  // 0x110: pointer
  if (data?.GUID_MODEBIAS_HANGUL !== undefined) view.setBigUint64(272, data.GUID_MODEBIAS_HANGUL === null ? 0n : BigInt(util.toPointer(data.GUID_MODEBIAS_HANGUL)), true);
  // 0x118: pointer
  if (data?.GUID_MODEBIAS_CHINESE !== undefined) view.setBigUint64(280, data.GUID_MODEBIAS_CHINESE === null ? 0n : BigInt(util.toPointer(data.GUID_MODEBIAS_CHINESE)), true);
  // 0x120: pointer
  if (data?.GUID_MODEBIAS_HALFWIDTHKATAKANA !== undefined) view.setBigUint64(288, data.GUID_MODEBIAS_HALFWIDTHKATAKANA === null ? 0n : BigInt(util.toPointer(data.GUID_MODEBIAS_HALFWIDTHKATAKANA)), true);
  // 0x128: pointer
  if (data?.GUID_MODEBIAS_FULLWIDTHALPHANUMERIC !== undefined) view.setBigUint64(296, data.GUID_MODEBIAS_FULLWIDTHALPHANUMERIC === null ? 0n : BigInt(util.toPointer(data.GUID_MODEBIAS_FULLWIDTHALPHANUMERIC)), true);
  // 0x130: pointer
  if (data?.GUID_MODEBIAS_FULLWIDTHHANGUL !== undefined) view.setBigUint64(304, data.GUID_MODEBIAS_FULLWIDTHHANGUL === null ? 0n : BigInt(util.toPointer(data.GUID_MODEBIAS_FULLWIDTHHANGUL)), true);
  // 0x138: pointer
  if (data?.GUID_TFCAT_PROPSTYLE_STATIC !== undefined) view.setBigUint64(312, data.GUID_TFCAT_PROPSTYLE_STATIC === null ? 0n : BigInt(util.toPointer(data.GUID_TFCAT_PROPSTYLE_STATIC)), true);
  // 0x140: pointer
  if (data?.GUID_TFCAT_DISPLAYATTRIBUTEPROVIDER !== undefined) view.setBigUint64(320, data.GUID_TFCAT_DISPLAYATTRIBUTEPROVIDER === null ? 0n : BigInt(util.toPointer(data.GUID_TFCAT_DISPLAYATTRIBUTEPROVIDER)), true);
  // 0x148: pointer
  if (data?.GUID_TFCAT_DISPLAYATTRIBUTEPROPERTY !== undefined) view.setBigUint64(328, data.GUID_TFCAT_DISPLAYATTRIBUTEPROPERTY === null ? 0n : BigInt(util.toPointer(data.GUID_TFCAT_DISPLAYATTRIBUTEPROPERTY)), true);
  // 0x150: pointer
  if (data?.GUID_COMPARTMENT_SPEECH_UI_STATUS !== undefined) view.setBigUint64(336, data.GUID_COMPARTMENT_SPEECH_UI_STATUS === null ? 0n : BigInt(util.toPointer(data.GUID_COMPARTMENT_SPEECH_UI_STATUS)), true);
  // 0x158: pointer
  if (data?.GUID_COMPARTMENT_EMPTYCONTEXT !== undefined) view.setBigUint64(344, data.GUID_COMPARTMENT_EMPTYCONTEXT === null ? 0n : BigInt(util.toPointer(data.GUID_COMPARTMENT_EMPTYCONTEXT)), true);
  // 0x160: pointer
  if (data?.GUID_COMPARTMENT_TIPUISTATUS !== undefined) view.setBigUint64(352, data.GUID_COMPARTMENT_TIPUISTATUS === null ? 0n : BigInt(util.toPointer(data.GUID_COMPARTMENT_TIPUISTATUS)), true);
  // 0x168: pointer
  if (data?.GUID_COMPARTMENT_SPEECH_CFGMENU !== undefined) view.setBigUint64(360, data.GUID_COMPARTMENT_SPEECH_CFGMENU === null ? 0n : BigInt(util.toPointer(data.GUID_COMPARTMENT_SPEECH_CFGMENU)), true);
  // 0x170: pointer
  if (data?.GUID_LBI_SAPILAYR_CFGMENUBUTTON !== undefined) view.setBigUint64(368, data.GUID_LBI_SAPILAYR_CFGMENUBUTTON === null ? 0n : BigInt(util.toPointer(data.GUID_LBI_SAPILAYR_CFGMENUBUTTON)), true);
  // 0x178: pointer
  if (data?.GUID_TFCAT_TIPCAP_SECUREMODE !== undefined) view.setBigUint64(376, data.GUID_TFCAT_TIPCAP_SECUREMODE === null ? 0n : BigInt(util.toPointer(data.GUID_TFCAT_TIPCAP_SECUREMODE)), true);
  // 0x180: pointer
  if (data?.GUID_TFCAT_TIPCAP_UIELEMENTENABLED !== undefined) view.setBigUint64(384, data.GUID_TFCAT_TIPCAP_UIELEMENTENABLED === null ? 0n : BigInt(util.toPointer(data.GUID_TFCAT_TIPCAP_UIELEMENTENABLED)), true);
  // 0x188: pointer
  if (data?.GUID_TFCAT_TIPCAP_INPUTMODECOMPARTMENT !== undefined) view.setBigUint64(392, data.GUID_TFCAT_TIPCAP_INPUTMODECOMPARTMENT === null ? 0n : BigInt(util.toPointer(data.GUID_TFCAT_TIPCAP_INPUTMODECOMPARTMENT)), true);
  // 0x190: pointer
  if (data?.GUID_TFCAT_TIPCAP_COMLESS !== undefined) view.setBigUint64(400, data.GUID_TFCAT_TIPCAP_COMLESS === null ? 0n : BigInt(util.toPointer(data.GUID_TFCAT_TIPCAP_COMLESS)), true);
  // 0x198: pointer
  if (data?.GUID_TFCAT_TIPCAP_WOW16 !== undefined) view.setBigUint64(408, data.GUID_TFCAT_TIPCAP_WOW16 === null ? 0n : BigInt(util.toPointer(data.GUID_TFCAT_TIPCAP_WOW16)), true);
  // 0x1a0: pointer
  if (data?.GUID_TFCAT_TIPCAP_IMMERSIVESUPPORT !== undefined) view.setBigUint64(416, data.GUID_TFCAT_TIPCAP_IMMERSIVESUPPORT === null ? 0n : BigInt(util.toPointer(data.GUID_TFCAT_TIPCAP_IMMERSIVESUPPORT)), true);
  // 0x1a8: pointer
  if (data?.GUID_TFCAT_TIPCAP_IMMERSIVEONLY !== undefined) view.setBigUint64(424, data.GUID_TFCAT_TIPCAP_IMMERSIVEONLY === null ? 0n : BigInt(util.toPointer(data.GUID_TFCAT_TIPCAP_IMMERSIVEONLY)), true);
  // 0x1b0: pointer
  if (data?.GUID_TFCAT_TIPCAP_LOCALSERVER !== undefined) view.setBigUint64(432, data.GUID_TFCAT_TIPCAP_LOCALSERVER === null ? 0n : BigInt(util.toPointer(data.GUID_TFCAT_TIPCAP_LOCALSERVER)), true);
  // 0x1b8: pointer
  if (data?.GUID_TFCAT_TIPCAP_TSF3 !== undefined) view.setBigUint64(440, data.GUID_TFCAT_TIPCAP_TSF3 === null ? 0n : BigInt(util.toPointer(data.GUID_TFCAT_TIPCAP_TSF3)), true);
  // 0x1c0: pointer
  if (data?.GUID_TFCAT_TIPCAP_DUALMODE !== undefined) view.setBigUint64(448, data.GUID_TFCAT_TIPCAP_DUALMODE === null ? 0n : BigInt(util.toPointer(data.GUID_TFCAT_TIPCAP_DUALMODE)), true);
  // 0x1c8: pointer
  if (data?.GUID_TFCAT_TIPCAP_SYSTRAYSUPPORT !== undefined) view.setBigUint64(456, data.GUID_TFCAT_TIPCAP_SYSTRAYSUPPORT === null ? 0n : BigInt(util.toPointer(data.GUID_TFCAT_TIPCAP_SYSTRAYSUPPORT)), true);
  // 0x1d0: pointer
  if (data?.GUID_COMPARTMENT_KEYBOARD_INPUTMODE_CONVERSION !== undefined) view.setBigUint64(464, data.GUID_COMPARTMENT_KEYBOARD_INPUTMODE_CONVERSION === null ? 0n : BigInt(util.toPointer(data.GUID_COMPARTMENT_KEYBOARD_INPUTMODE_CONVERSION)), true);
  // 0x1d8: pointer
  if (data?.GUID_COMPARTMENT_KEYBOARD_INPUTMODE_SENTENCE !== undefined) view.setBigUint64(472, data.GUID_COMPARTMENT_KEYBOARD_INPUTMODE_SENTENCE === null ? 0n : BigInt(util.toPointer(data.GUID_COMPARTMENT_KEYBOARD_INPUTMODE_SENTENCE)), true);
  // 0x1e0: pointer
  if (data?.GUID_COMPARTMENT_TRANSITORYEXTENSION !== undefined) view.setBigUint64(480, data.GUID_COMPARTMENT_TRANSITORYEXTENSION === null ? 0n : BigInt(util.toPointer(data.GUID_COMPARTMENT_TRANSITORYEXTENSION)), true);
  // 0x1e8: pointer
  if (data?.GUID_COMPARTMENT_TRANSITORYEXTENSION_DOCUMENTMANAGER !== undefined) view.setBigUint64(488, data.GUID_COMPARTMENT_TRANSITORYEXTENSION_DOCUMENTMANAGER === null ? 0n : BigInt(util.toPointer(data.GUID_COMPARTMENT_TRANSITORYEXTENSION_DOCUMENTMANAGER)), true);
  // 0x1f0: pointer
  if (data?.GUID_COMPARTMENT_TRANSITORYEXTENSION_PARENT !== undefined) view.setBigUint64(496, data.GUID_COMPARTMENT_TRANSITORYEXTENSION_PARENT === null ? 0n : BigInt(util.toPointer(data.GUID_COMPARTMENT_TRANSITORYEXTENSION_PARENT)), true);
  // 0x1f8: pointer
  if (data?.GUID_COMPARTMENT_ENABLED_PROFILES_UPDATED !== undefined) view.setBigUint64(504, data.GUID_COMPARTMENT_ENABLED_PROFILES_UPDATED === null ? 0n : BigInt(util.toPointer(data.GUID_COMPARTMENT_ENABLED_PROFILES_UPDATED)), true);
  // 0x200: pointer
  if (data?.GUID_TFCAT_TRANSITORYEXTENSIONUI !== undefined) view.setBigUint64(512, data.GUID_TFCAT_TRANSITORYEXTENSIONUI === null ? 0n : BigInt(util.toPointer(data.GUID_TFCAT_TRANSITORYEXTENSIONUI)), true);
  // 0x208: pointer
  if (data?.GUID_LBI_INPUTMODE !== undefined) view.setBigUint64(520, data.GUID_LBI_INPUTMODE === null ? 0n : BigInt(util.toPointer(data.GUID_LBI_INPUTMODE)), true);
  // 0x210: pointer
  if (data?.CLSID_TF_ThreadMgr !== undefined) view.setBigUint64(528, data.CLSID_TF_ThreadMgr === null ? 0n : BigInt(util.toPointer(data.CLSID_TF_ThreadMgr)), true);
  // 0x218: pointer
  if (data?.CLSID_TF_LangBarMgr !== undefined) view.setBigUint64(536, data.CLSID_TF_LangBarMgr === null ? 0n : BigInt(util.toPointer(data.CLSID_TF_LangBarMgr)), true);
  // 0x220: pointer
  if (data?.CLSID_TF_DisplayAttributeMgr !== undefined) view.setBigUint64(544, data.CLSID_TF_DisplayAttributeMgr === null ? 0n : BigInt(util.toPointer(data.CLSID_TF_DisplayAttributeMgr)), true);
  // 0x228: pointer
  if (data?.CLSID_TF_CategoryMgr !== undefined) view.setBigUint64(552, data.CLSID_TF_CategoryMgr === null ? 0n : BigInt(util.toPointer(data.CLSID_TF_CategoryMgr)), true);
  // 0x230: pointer
  if (data?.CLSID_TF_InputProcessorProfiles !== undefined) view.setBigUint64(560, data.CLSID_TF_InputProcessorProfiles === null ? 0n : BigInt(util.toPointer(data.CLSID_TF_InputProcessorProfiles)), true);
  // 0x238: pointer
  if (data?.CLSID_TF_LangBarItemMgr !== undefined) view.setBigUint64(568, data.CLSID_TF_LangBarItemMgr === null ? 0n : BigInt(util.toPointer(data.CLSID_TF_LangBarItemMgr)), true);
  // 0x240: pointer
  if (data?.CLSID_TF_ClassicLangBar !== undefined) view.setBigUint64(576, data.CLSID_TF_ClassicLangBar === null ? 0n : BigInt(util.toPointer(data.CLSID_TF_ClassicLangBar)), true);
  // 0x248: pointer
  if (data?.CLSID_TF_TransitoryExtensionUIEntry !== undefined) view.setBigUint64(584, data.CLSID_TF_TransitoryExtensionUIEntry === null ? 0n : BigInt(util.toPointer(data.CLSID_TF_TransitoryExtensionUIEntry)), true);
  // 0x250: pointer
  if (data?.CLSID_TsfServices !== undefined) view.setBigUint64(592, data.CLSID_TsfServices === null ? 0n : BigInt(util.toPointer(data.CLSID_TsfServices)), true);
  // 0x258: pointer
  if (data?.GUID_TS_SERVICE_DATAOBJECT !== undefined) view.setBigUint64(600, data.GUID_TS_SERVICE_DATAOBJECT === null ? 0n : BigInt(util.toPointer(data.GUID_TS_SERVICE_DATAOBJECT)), true);
  // 0x260: pointer
  if (data?.GUID_TS_SERVICE_ACCESSIBLE !== undefined) view.setBigUint64(608, data.GUID_TS_SERVICE_ACCESSIBLE === null ? 0n : BigInt(util.toPointer(data.GUID_TS_SERVICE_ACCESSIBLE)), true);
  // 0x268: pointer
  if (data?.GUID_TS_SERVICE_ACTIVEX !== undefined) view.setBigUint64(616, data.GUID_TS_SERVICE_ACTIVEX === null ? 0n : BigInt(util.toPointer(data.GUID_TS_SERVICE_ACTIVEX)), true);
  // 0x270: pointer
  if (data?.TF_PROFILE_NEWPHONETIC !== undefined) view.setBigUint64(624, data.TF_PROFILE_NEWPHONETIC === null ? 0n : BigInt(util.toPointer(data.TF_PROFILE_NEWPHONETIC)), true);
  // 0x278: pointer
  if (data?.TF_PROFILE_PHONETIC !== undefined) view.setBigUint64(632, data.TF_PROFILE_PHONETIC === null ? 0n : BigInt(util.toPointer(data.TF_PROFILE_PHONETIC)), true);
  // 0x280: pointer
  if (data?.TF_PROFILE_NEWCHANGJIE !== undefined) view.setBigUint64(640, data.TF_PROFILE_NEWCHANGJIE === null ? 0n : BigInt(util.toPointer(data.TF_PROFILE_NEWCHANGJIE)), true);
  // 0x288: pointer
  if (data?.TF_PROFILE_CHANGJIE !== undefined) view.setBigUint64(648, data.TF_PROFILE_CHANGJIE === null ? 0n : BigInt(util.toPointer(data.TF_PROFILE_CHANGJIE)), true);
  // 0x290: pointer
  if (data?.TF_PROFILE_NEWQUICK !== undefined) view.setBigUint64(656, data.TF_PROFILE_NEWQUICK === null ? 0n : BigInt(util.toPointer(data.TF_PROFILE_NEWQUICK)), true);
  // 0x298: pointer
  if (data?.TF_PROFILE_QUICK !== undefined) view.setBigUint64(664, data.TF_PROFILE_QUICK === null ? 0n : BigInt(util.toPointer(data.TF_PROFILE_QUICK)), true);
  // 0x2a0: pointer
  if (data?.TF_PROFILE_CANTONESE !== undefined) view.setBigUint64(672, data.TF_PROFILE_CANTONESE === null ? 0n : BigInt(util.toPointer(data.TF_PROFILE_CANTONESE)), true);
  // 0x2a8: pointer
  if (data?.TF_PROFILE_PINYIN !== undefined) view.setBigUint64(680, data.TF_PROFILE_PINYIN === null ? 0n : BigInt(util.toPointer(data.TF_PROFILE_PINYIN)), true);
  // 0x2b0: pointer
  if (data?.TF_PROFILE_SIMPLEFAST !== undefined) view.setBigUint64(688, data.TF_PROFILE_SIMPLEFAST === null ? 0n : BigInt(util.toPointer(data.TF_PROFILE_SIMPLEFAST)), true);
  // 0x2b8: pointer
  if (data?.TF_PROFILE_WUBI !== undefined) view.setBigUint64(696, data.TF_PROFILE_WUBI === null ? 0n : BigInt(util.toPointer(data.TF_PROFILE_WUBI)), true);
  // 0x2c0: pointer
  if (data?.TF_PROFILE_DAYI !== undefined) view.setBigUint64(704, data.TF_PROFILE_DAYI === null ? 0n : BigInt(util.toPointer(data.TF_PROFILE_DAYI)), true);
  // 0x2c8: pointer
  if (data?.TF_PROFILE_ARRAY !== undefined) view.setBigUint64(712, data.TF_PROFILE_ARRAY === null ? 0n : BigInt(util.toPointer(data.TF_PROFILE_ARRAY)), true);
  // 0x2d0: pointer
  if (data?.TF_PROFILE_YI !== undefined) view.setBigUint64(720, data.TF_PROFILE_YI === null ? 0n : BigInt(util.toPointer(data.TF_PROFILE_YI)), true);
  // 0x2d8: pointer
  if (data?.TF_PROFILE_TIGRINYA !== undefined) view.setBigUint64(728, data.TF_PROFILE_TIGRINYA === null ? 0n : BigInt(util.toPointer(data.TF_PROFILE_TIGRINYA)), true);
  // 0x2e0: pointer
  if (data?.GUID_INTEGRATIONSTYLE_SEARCHBOX !== undefined) view.setBigUint64(736, data.GUID_INTEGRATIONSTYLE_SEARCHBOX === null ? 0n : BigInt(util.toPointer(data.GUID_INTEGRATIONSTYLE_SEARCHBOX)), true);
  // 0x2e8: pointer
  if (data?.GUID_PROP_INPUTSCOPE !== undefined) view.setBigUint64(744, data.GUID_PROP_INPUTSCOPE === null ? 0n : BigInt(util.toPointer(data.GUID_PROP_INPUTSCOPE)), true);
  // 0x2f0: pointer
  if (data?.LIBID_MSAATEXTLib !== undefined) view.setBigUint64(752, data.LIBID_MSAATEXTLib === null ? 0n : BigInt(util.toPointer(data.LIBID_MSAATEXTLib)), true);
  // 0x2f8: pointer
  if (data?.TSATTRID_OTHERS !== undefined) view.setBigUint64(760, data.TSATTRID_OTHERS === null ? 0n : BigInt(util.toPointer(data.TSATTRID_OTHERS)), true);
  // 0x300: pointer
  if (data?.TSATTRID_Font !== undefined) view.setBigUint64(768, data.TSATTRID_Font === null ? 0n : BigInt(util.toPointer(data.TSATTRID_Font)), true);
  // 0x308: pointer
  if (data?.TSATTRID_Font_FaceName !== undefined) view.setBigUint64(776, data.TSATTRID_Font_FaceName === null ? 0n : BigInt(util.toPointer(data.TSATTRID_Font_FaceName)), true);
  // 0x310: pointer
  if (data?.TSATTRID_Font_SizePts !== undefined) view.setBigUint64(784, data.TSATTRID_Font_SizePts === null ? 0n : BigInt(util.toPointer(data.TSATTRID_Font_SizePts)), true);
  // 0x318: pointer
  if (data?.TSATTRID_Font_Style !== undefined) view.setBigUint64(792, data.TSATTRID_Font_Style === null ? 0n : BigInt(util.toPointer(data.TSATTRID_Font_Style)), true);
  // 0x320: pointer
  if (data?.TSATTRID_Font_Style_Bold !== undefined) view.setBigUint64(800, data.TSATTRID_Font_Style_Bold === null ? 0n : BigInt(util.toPointer(data.TSATTRID_Font_Style_Bold)), true);
  // 0x328: pointer
  if (data?.TSATTRID_Font_Style_Italic !== undefined) view.setBigUint64(808, data.TSATTRID_Font_Style_Italic === null ? 0n : BigInt(util.toPointer(data.TSATTRID_Font_Style_Italic)), true);
  // 0x330: pointer
  if (data?.TSATTRID_Font_Style_SmallCaps !== undefined) view.setBigUint64(816, data.TSATTRID_Font_Style_SmallCaps === null ? 0n : BigInt(util.toPointer(data.TSATTRID_Font_Style_SmallCaps)), true);
  // 0x338: pointer
  if (data?.TSATTRID_Font_Style_Capitalize !== undefined) view.setBigUint64(824, data.TSATTRID_Font_Style_Capitalize === null ? 0n : BigInt(util.toPointer(data.TSATTRID_Font_Style_Capitalize)), true);
  // 0x340: pointer
  if (data?.TSATTRID_Font_Style_Uppercase !== undefined) view.setBigUint64(832, data.TSATTRID_Font_Style_Uppercase === null ? 0n : BigInt(util.toPointer(data.TSATTRID_Font_Style_Uppercase)), true);
  // 0x348: pointer
  if (data?.TSATTRID_Font_Style_Lowercase !== undefined) view.setBigUint64(840, data.TSATTRID_Font_Style_Lowercase === null ? 0n : BigInt(util.toPointer(data.TSATTRID_Font_Style_Lowercase)), true);
  // 0x350: pointer
  if (data?.TSATTRID_Font_Style_Animation !== undefined) view.setBigUint64(848, data.TSATTRID_Font_Style_Animation === null ? 0n : BigInt(util.toPointer(data.TSATTRID_Font_Style_Animation)), true);
  // 0x358: pointer
  if (data?.TSATTRID_Font_Style_Animation_LasVegasLights !== undefined) view.setBigUint64(856, data.TSATTRID_Font_Style_Animation_LasVegasLights === null ? 0n : BigInt(util.toPointer(data.TSATTRID_Font_Style_Animation_LasVegasLights)), true);
  // 0x360: pointer
  if (data?.TSATTRID_Font_Style_Animation_BlinkingBackground !== undefined) view.setBigUint64(864, data.TSATTRID_Font_Style_Animation_BlinkingBackground === null ? 0n : BigInt(util.toPointer(data.TSATTRID_Font_Style_Animation_BlinkingBackground)), true);
  // 0x368: pointer
  if (data?.TSATTRID_Font_Style_Animation_SparkleText !== undefined) view.setBigUint64(872, data.TSATTRID_Font_Style_Animation_SparkleText === null ? 0n : BigInt(util.toPointer(data.TSATTRID_Font_Style_Animation_SparkleText)), true);
  // 0x370: pointer
  if (data?.TSATTRID_Font_Style_Animation_MarchingBlackAnts !== undefined) view.setBigUint64(880, data.TSATTRID_Font_Style_Animation_MarchingBlackAnts === null ? 0n : BigInt(util.toPointer(data.TSATTRID_Font_Style_Animation_MarchingBlackAnts)), true);
  // 0x378: pointer
  if (data?.TSATTRID_Font_Style_Animation_MarchingRedAnts !== undefined) view.setBigUint64(888, data.TSATTRID_Font_Style_Animation_MarchingRedAnts === null ? 0n : BigInt(util.toPointer(data.TSATTRID_Font_Style_Animation_MarchingRedAnts)), true);
  // 0x380: pointer
  if (data?.TSATTRID_Font_Style_Animation_Shimmer !== undefined) view.setBigUint64(896, data.TSATTRID_Font_Style_Animation_Shimmer === null ? 0n : BigInt(util.toPointer(data.TSATTRID_Font_Style_Animation_Shimmer)), true);
  // 0x388: pointer
  if (data?.TSATTRID_Font_Style_Animation_WipeDown !== undefined) view.setBigUint64(904, data.TSATTRID_Font_Style_Animation_WipeDown === null ? 0n : BigInt(util.toPointer(data.TSATTRID_Font_Style_Animation_WipeDown)), true);
  // 0x390: pointer
  if (data?.TSATTRID_Font_Style_Animation_WipeRight !== undefined) view.setBigUint64(912, data.TSATTRID_Font_Style_Animation_WipeRight === null ? 0n : BigInt(util.toPointer(data.TSATTRID_Font_Style_Animation_WipeRight)), true);
  // 0x398: pointer
  if (data?.TSATTRID_Font_Style_Emboss !== undefined) view.setBigUint64(920, data.TSATTRID_Font_Style_Emboss === null ? 0n : BigInt(util.toPointer(data.TSATTRID_Font_Style_Emboss)), true);
  // 0x3a0: pointer
  if (data?.TSATTRID_Font_Style_Engrave !== undefined) view.setBigUint64(928, data.TSATTRID_Font_Style_Engrave === null ? 0n : BigInt(util.toPointer(data.TSATTRID_Font_Style_Engrave)), true);
  // 0x3a8: pointer
  if (data?.TSATTRID_Font_Style_Hidden !== undefined) view.setBigUint64(936, data.TSATTRID_Font_Style_Hidden === null ? 0n : BigInt(util.toPointer(data.TSATTRID_Font_Style_Hidden)), true);
  // 0x3b0: pointer
  if (data?.TSATTRID_Font_Style_Kerning !== undefined) view.setBigUint64(944, data.TSATTRID_Font_Style_Kerning === null ? 0n : BigInt(util.toPointer(data.TSATTRID_Font_Style_Kerning)), true);
  // 0x3b8: pointer
  if (data?.TSATTRID_Font_Style_Outlined !== undefined) view.setBigUint64(952, data.TSATTRID_Font_Style_Outlined === null ? 0n : BigInt(util.toPointer(data.TSATTRID_Font_Style_Outlined)), true);
  // 0x3c0: pointer
  if (data?.TSATTRID_Font_Style_Position !== undefined) view.setBigUint64(960, data.TSATTRID_Font_Style_Position === null ? 0n : BigInt(util.toPointer(data.TSATTRID_Font_Style_Position)), true);
  // 0x3c8: pointer
  if (data?.TSATTRID_Font_Style_Protected !== undefined) view.setBigUint64(968, data.TSATTRID_Font_Style_Protected === null ? 0n : BigInt(util.toPointer(data.TSATTRID_Font_Style_Protected)), true);
  // 0x3d0: pointer
  if (data?.TSATTRID_Font_Style_Shadow !== undefined) view.setBigUint64(976, data.TSATTRID_Font_Style_Shadow === null ? 0n : BigInt(util.toPointer(data.TSATTRID_Font_Style_Shadow)), true);
  // 0x3d8: pointer
  if (data?.TSATTRID_Font_Style_Spacing !== undefined) view.setBigUint64(984, data.TSATTRID_Font_Style_Spacing === null ? 0n : BigInt(util.toPointer(data.TSATTRID_Font_Style_Spacing)), true);
  // 0x3e0: pointer
  if (data?.TSATTRID_Font_Style_Weight !== undefined) view.setBigUint64(992, data.TSATTRID_Font_Style_Weight === null ? 0n : BigInt(util.toPointer(data.TSATTRID_Font_Style_Weight)), true);
  // 0x3e8: pointer
  if (data?.TSATTRID_Font_Style_Height !== undefined) view.setBigUint64(1000, data.TSATTRID_Font_Style_Height === null ? 0n : BigInt(util.toPointer(data.TSATTRID_Font_Style_Height)), true);
  // 0x3f0: pointer
  if (data?.TSATTRID_Font_Style_Underline !== undefined) view.setBigUint64(1008, data.TSATTRID_Font_Style_Underline === null ? 0n : BigInt(util.toPointer(data.TSATTRID_Font_Style_Underline)), true);
  // 0x3f8: pointer
  if (data?.TSATTRID_Font_Style_Underline_Single !== undefined) view.setBigUint64(1016, data.TSATTRID_Font_Style_Underline_Single === null ? 0n : BigInt(util.toPointer(data.TSATTRID_Font_Style_Underline_Single)), true);
  // 0x400: pointer
  if (data?.TSATTRID_Font_Style_Underline_Double !== undefined) view.setBigUint64(1024, data.TSATTRID_Font_Style_Underline_Double === null ? 0n : BigInt(util.toPointer(data.TSATTRID_Font_Style_Underline_Double)), true);
  // 0x408: pointer
  if (data?.TSATTRID_Font_Style_Strikethrough !== undefined) view.setBigUint64(1032, data.TSATTRID_Font_Style_Strikethrough === null ? 0n : BigInt(util.toPointer(data.TSATTRID_Font_Style_Strikethrough)), true);
  // 0x410: pointer
  if (data?.TSATTRID_Font_Style_Strikethrough_Single !== undefined) view.setBigUint64(1040, data.TSATTRID_Font_Style_Strikethrough_Single === null ? 0n : BigInt(util.toPointer(data.TSATTRID_Font_Style_Strikethrough_Single)), true);
  // 0x418: pointer
  if (data?.TSATTRID_Font_Style_Strikethrough_Double !== undefined) view.setBigUint64(1048, data.TSATTRID_Font_Style_Strikethrough_Double === null ? 0n : BigInt(util.toPointer(data.TSATTRID_Font_Style_Strikethrough_Double)), true);
  // 0x420: pointer
  if (data?.TSATTRID_Font_Style_Overline !== undefined) view.setBigUint64(1056, data.TSATTRID_Font_Style_Overline === null ? 0n : BigInt(util.toPointer(data.TSATTRID_Font_Style_Overline)), true);
  // 0x428: pointer
  if (data?.TSATTRID_Font_Style_Overline_Single !== undefined) view.setBigUint64(1064, data.TSATTRID_Font_Style_Overline_Single === null ? 0n : BigInt(util.toPointer(data.TSATTRID_Font_Style_Overline_Single)), true);
  // 0x430: pointer
  if (data?.TSATTRID_Font_Style_Overline_Double !== undefined) view.setBigUint64(1072, data.TSATTRID_Font_Style_Overline_Double === null ? 0n : BigInt(util.toPointer(data.TSATTRID_Font_Style_Overline_Double)), true);
  // 0x438: pointer
  if (data?.TSATTRID_Font_Style_Blink !== undefined) view.setBigUint64(1080, data.TSATTRID_Font_Style_Blink === null ? 0n : BigInt(util.toPointer(data.TSATTRID_Font_Style_Blink)), true);
  // 0x440: pointer
  if (data?.TSATTRID_Font_Style_Subscript !== undefined) view.setBigUint64(1088, data.TSATTRID_Font_Style_Subscript === null ? 0n : BigInt(util.toPointer(data.TSATTRID_Font_Style_Subscript)), true);
  // 0x448: pointer
  if (data?.TSATTRID_Font_Style_Superscript !== undefined) view.setBigUint64(1096, data.TSATTRID_Font_Style_Superscript === null ? 0n : BigInt(util.toPointer(data.TSATTRID_Font_Style_Superscript)), true);
  // 0x450: pointer
  if (data?.TSATTRID_Font_Style_Color !== undefined) view.setBigUint64(1104, data.TSATTRID_Font_Style_Color === null ? 0n : BigInt(util.toPointer(data.TSATTRID_Font_Style_Color)), true);
  // 0x458: pointer
  if (data?.TSATTRID_Font_Style_BackgroundColor !== undefined) view.setBigUint64(1112, data.TSATTRID_Font_Style_BackgroundColor === null ? 0n : BigInt(util.toPointer(data.TSATTRID_Font_Style_BackgroundColor)), true);
  // 0x460: pointer
  if (data?.TSATTRID_Text !== undefined) view.setBigUint64(1120, data.TSATTRID_Text === null ? 0n : BigInt(util.toPointer(data.TSATTRID_Text)), true);
  // 0x468: pointer
  if (data?.TSATTRID_Text_VerticalWriting !== undefined) view.setBigUint64(1128, data.TSATTRID_Text_VerticalWriting === null ? 0n : BigInt(util.toPointer(data.TSATTRID_Text_VerticalWriting)), true);
  // 0x470: pointer
  if (data?.TSATTRID_Text_RightToLeft !== undefined) view.setBigUint64(1136, data.TSATTRID_Text_RightToLeft === null ? 0n : BigInt(util.toPointer(data.TSATTRID_Text_RightToLeft)), true);
  // 0x478: pointer
  if (data?.TSATTRID_Text_Orientation !== undefined) view.setBigUint64(1144, data.TSATTRID_Text_Orientation === null ? 0n : BigInt(util.toPointer(data.TSATTRID_Text_Orientation)), true);
  // 0x480: pointer
  if (data?.TSATTRID_Text_Language !== undefined) view.setBigUint64(1152, data.TSATTRID_Text_Language === null ? 0n : BigInt(util.toPointer(data.TSATTRID_Text_Language)), true);
  // 0x488: pointer
  if (data?.TSATTRID_Text_ReadOnly !== undefined) view.setBigUint64(1160, data.TSATTRID_Text_ReadOnly === null ? 0n : BigInt(util.toPointer(data.TSATTRID_Text_ReadOnly)), true);
  // 0x490: pointer
  if (data?.TSATTRID_Text_EmbeddedObject !== undefined) view.setBigUint64(1168, data.TSATTRID_Text_EmbeddedObject === null ? 0n : BigInt(util.toPointer(data.TSATTRID_Text_EmbeddedObject)), true);
  // 0x498: pointer
  if (data?.TSATTRID_Text_Alignment !== undefined) view.setBigUint64(1176, data.TSATTRID_Text_Alignment === null ? 0n : BigInt(util.toPointer(data.TSATTRID_Text_Alignment)), true);
  // 0x4a0: pointer
  if (data?.TSATTRID_Text_Alignment_Left !== undefined) view.setBigUint64(1184, data.TSATTRID_Text_Alignment_Left === null ? 0n : BigInt(util.toPointer(data.TSATTRID_Text_Alignment_Left)), true);
  // 0x4a8: pointer
  if (data?.TSATTRID_Text_Alignment_Right !== undefined) view.setBigUint64(1192, data.TSATTRID_Text_Alignment_Right === null ? 0n : BigInt(util.toPointer(data.TSATTRID_Text_Alignment_Right)), true);
  // 0x4b0: pointer
  if (data?.TSATTRID_Text_Alignment_Center !== undefined) view.setBigUint64(1200, data.TSATTRID_Text_Alignment_Center === null ? 0n : BigInt(util.toPointer(data.TSATTRID_Text_Alignment_Center)), true);
  // 0x4b8: pointer
  if (data?.TSATTRID_Text_Alignment_Justify !== undefined) view.setBigUint64(1208, data.TSATTRID_Text_Alignment_Justify === null ? 0n : BigInt(util.toPointer(data.TSATTRID_Text_Alignment_Justify)), true);
  // 0x4c0: pointer
  if (data?.TSATTRID_Text_Link !== undefined) view.setBigUint64(1216, data.TSATTRID_Text_Link === null ? 0n : BigInt(util.toPointer(data.TSATTRID_Text_Link)), true);
  // 0x4c8: pointer
  if (data?.TSATTRID_Text_Hyphenation !== undefined) view.setBigUint64(1224, data.TSATTRID_Text_Hyphenation === null ? 0n : BigInt(util.toPointer(data.TSATTRID_Text_Hyphenation)), true);
  // 0x4d0: pointer
  if (data?.TSATTRID_Text_Para !== undefined) view.setBigUint64(1232, data.TSATTRID_Text_Para === null ? 0n : BigInt(util.toPointer(data.TSATTRID_Text_Para)), true);
  // 0x4d8: pointer
  if (data?.TSATTRID_Text_Para_FirstLineIndent !== undefined) view.setBigUint64(1240, data.TSATTRID_Text_Para_FirstLineIndent === null ? 0n : BigInt(util.toPointer(data.TSATTRID_Text_Para_FirstLineIndent)), true);
  // 0x4e0: pointer
  if (data?.TSATTRID_Text_Para_LeftIndent !== undefined) view.setBigUint64(1248, data.TSATTRID_Text_Para_LeftIndent === null ? 0n : BigInt(util.toPointer(data.TSATTRID_Text_Para_LeftIndent)), true);
  // 0x4e8: pointer
  if (data?.TSATTRID_Text_Para_RightIndent !== undefined) view.setBigUint64(1256, data.TSATTRID_Text_Para_RightIndent === null ? 0n : BigInt(util.toPointer(data.TSATTRID_Text_Para_RightIndent)), true);
  // 0x4f0: pointer
  if (data?.TSATTRID_Text_Para_SpaceAfter !== undefined) view.setBigUint64(1264, data.TSATTRID_Text_Para_SpaceAfter === null ? 0n : BigInt(util.toPointer(data.TSATTRID_Text_Para_SpaceAfter)), true);
  // 0x4f8: pointer
  if (data?.TSATTRID_Text_Para_SpaceBefore !== undefined) view.setBigUint64(1272, data.TSATTRID_Text_Para_SpaceBefore === null ? 0n : BigInt(util.toPointer(data.TSATTRID_Text_Para_SpaceBefore)), true);
  // 0x500: pointer
  if (data?.TSATTRID_Text_Para_LineSpacing !== undefined) view.setBigUint64(1280, data.TSATTRID_Text_Para_LineSpacing === null ? 0n : BigInt(util.toPointer(data.TSATTRID_Text_Para_LineSpacing)), true);
  // 0x508: pointer
  if (data?.TSATTRID_Text_Para_LineSpacing_Single !== undefined) view.setBigUint64(1288, data.TSATTRID_Text_Para_LineSpacing_Single === null ? 0n : BigInt(util.toPointer(data.TSATTRID_Text_Para_LineSpacing_Single)), true);
  // 0x510: pointer
  if (data?.TSATTRID_Text_Para_LineSpacing_OnePtFive !== undefined) view.setBigUint64(1296, data.TSATTRID_Text_Para_LineSpacing_OnePtFive === null ? 0n : BigInt(util.toPointer(data.TSATTRID_Text_Para_LineSpacing_OnePtFive)), true);
  // 0x518: pointer
  if (data?.TSATTRID_Text_Para_LineSpacing_Double !== undefined) view.setBigUint64(1304, data.TSATTRID_Text_Para_LineSpacing_Double === null ? 0n : BigInt(util.toPointer(data.TSATTRID_Text_Para_LineSpacing_Double)), true);
  // 0x520: pointer
  if (data?.TSATTRID_Text_Para_LineSpacing_AtLeast !== undefined) view.setBigUint64(1312, data.TSATTRID_Text_Para_LineSpacing_AtLeast === null ? 0n : BigInt(util.toPointer(data.TSATTRID_Text_Para_LineSpacing_AtLeast)), true);
  // 0x528: pointer
  if (data?.TSATTRID_Text_Para_LineSpacing_Exactly !== undefined) view.setBigUint64(1320, data.TSATTRID_Text_Para_LineSpacing_Exactly === null ? 0n : BigInt(util.toPointer(data.TSATTRID_Text_Para_LineSpacing_Exactly)), true);
  // 0x530: pointer
  if (data?.TSATTRID_Text_Para_LineSpacing_Multiple !== undefined) view.setBigUint64(1328, data.TSATTRID_Text_Para_LineSpacing_Multiple === null ? 0n : BigInt(util.toPointer(data.TSATTRID_Text_Para_LineSpacing_Multiple)), true);
  // 0x538: pointer
  if (data?.TSATTRID_List !== undefined) view.setBigUint64(1336, data.TSATTRID_List === null ? 0n : BigInt(util.toPointer(data.TSATTRID_List)), true);
  // 0x540: pointer
  if (data?.TSATTRID_List_LevelIndel !== undefined) view.setBigUint64(1344, data.TSATTRID_List_LevelIndel === null ? 0n : BigInt(util.toPointer(data.TSATTRID_List_LevelIndel)), true);
  // 0x548: pointer
  if (data?.TSATTRID_List_Type !== undefined) view.setBigUint64(1352, data.TSATTRID_List_Type === null ? 0n : BigInt(util.toPointer(data.TSATTRID_List_Type)), true);
  // 0x550: pointer
  if (data?.TSATTRID_List_Type_Bullet !== undefined) view.setBigUint64(1360, data.TSATTRID_List_Type_Bullet === null ? 0n : BigInt(util.toPointer(data.TSATTRID_List_Type_Bullet)), true);
  // 0x558: pointer
  if (data?.TSATTRID_List_Type_Arabic !== undefined) view.setBigUint64(1368, data.TSATTRID_List_Type_Arabic === null ? 0n : BigInt(util.toPointer(data.TSATTRID_List_Type_Arabic)), true);
  // 0x560: pointer
  if (data?.TSATTRID_List_Type_LowerLetter !== undefined) view.setBigUint64(1376, data.TSATTRID_List_Type_LowerLetter === null ? 0n : BigInt(util.toPointer(data.TSATTRID_List_Type_LowerLetter)), true);
  // 0x568: pointer
  if (data?.TSATTRID_List_Type_UpperLetter !== undefined) view.setBigUint64(1384, data.TSATTRID_List_Type_UpperLetter === null ? 0n : BigInt(util.toPointer(data.TSATTRID_List_Type_UpperLetter)), true);
  // 0x570: pointer
  if (data?.TSATTRID_List_Type_LowerRoman !== undefined) view.setBigUint64(1392, data.TSATTRID_List_Type_LowerRoman === null ? 0n : BigInt(util.toPointer(data.TSATTRID_List_Type_LowerRoman)), true);
  // 0x578: pointer
  if (data?.TSATTRID_List_Type_UpperRoman !== undefined) view.setBigUint64(1400, data.TSATTRID_List_Type_UpperRoman === null ? 0n : BigInt(util.toPointer(data.TSATTRID_List_Type_UpperRoman)), true);
  // 0x580: pointer
  if (data?.TSATTRID_App !== undefined) view.setBigUint64(1408, data.TSATTRID_App === null ? 0n : BigInt(util.toPointer(data.TSATTRID_App)), true);
  // 0x588: pointer
  if (data?.TSATTRID_App_IncorrectSpelling !== undefined) view.setBigUint64(1416, data.TSATTRID_App_IncorrectSpelling === null ? 0n : BigInt(util.toPointer(data.TSATTRID_App_IncorrectSpelling)), true);
  // 0x590: pointer
  if (data?.TSATTRID_App_IncorrectGrammar !== undefined) view.setBigUint64(1424, data.TSATTRID_App_IncorrectGrammar === null ? 0n : BigInt(util.toPointer(data.TSATTRID_App_IncorrectGrammar)), true);
  return buf;
}

export type HKL = Deno.PointerValue;

/**
 * Windows.Win32.UI.TextServices.TS_STATUS (size: 8)
 */
export interface TS_STATUS {
  /** u32 */
  dwDynamicFlags: number;
  /** u32 */
  dwStaticFlags: number;
}

export const sizeofTS_STATUS = 8;

export function allocTS_STATUS(data?: Partial<TS_STATUS>): Uint8Array {
  const buf = new Uint8Array(sizeofTS_STATUS);
  const view = new DataView(buf.buffer);
  // 0x00: u32
  if (data?.dwDynamicFlags !== undefined) view.setUint32(0, Number(data.dwDynamicFlags), true);
  // 0x04: u32
  if (data?.dwStaticFlags !== undefined) view.setUint32(4, Number(data.dwStaticFlags), true);
  return buf;
}

/**
 * Windows.Win32.UI.TextServices.TS_TEXTCHANGE (size: 16)
 */
export interface TS_TEXTCHANGE {
  /** i32 */
  acpStart: number;
  /** i32 */
  acpOldEnd: number;
  /** i32 */
  acpNewEnd: number;
}

export const sizeofTS_TEXTCHANGE = 16;

export function allocTS_TEXTCHANGE(data?: Partial<TS_TEXTCHANGE>): Uint8Array {
  const buf = new Uint8Array(sizeofTS_TEXTCHANGE);
  const view = new DataView(buf.buffer);
  // 0x00: i32
  if (data?.acpStart !== undefined) view.setInt32(0, Number(data.acpStart), true);
  // 0x04: i32
  if (data?.acpOldEnd !== undefined) view.setInt32(4, Number(data.acpOldEnd), true);
  // 0x08: i32
  if (data?.acpNewEnd !== undefined) view.setInt32(8, Number(data.acpNewEnd), true);
  // 0x0c: pad4
  return buf;
}

export type BOOL = number;

/**
 * Windows.Win32.UI.TextServices.TS_SELECTIONSTYLE (size: 8)
 */
export interface TS_SELECTIONSTYLE {
  /** Windows.Win32.UI.TextServices.TsActiveSelEnd */
  ase: TsActiveSelEnd;
  /** Windows.Win32.Foundation.BOOL */
  fInterimChar: boolean;
}

export const sizeofTS_SELECTIONSTYLE = 8;

export function allocTS_SELECTIONSTYLE(data?: Partial<TS_SELECTIONSTYLE>): Uint8Array {
  const buf = new Uint8Array(sizeofTS_SELECTIONSTYLE);
  const view = new DataView(buf.buffer);
  // 0x00: i32
  if (data?.ase !== undefined) view.setInt32(0, Number(data.ase), true);
  // 0x04: i32
  if (data?.fInterimChar !== undefined) view.setInt32(4, Number(data.fInterimChar), true);
  return buf;
}

/**
 * Windows.Win32.UI.TextServices.TS_SELECTION_ACP (size: 16)
 */
export interface TS_SELECTION_ACP {
  /** i32 */
  acpStart: number;
  /** i32 */
  acpEnd: number;
  /** Windows.Win32.UI.TextServices.TS_SELECTIONSTYLE */
  style: Uint8Array | Deno.PointerValue | null;
}

export const sizeofTS_SELECTION_ACP = 16;

export function allocTS_SELECTION_ACP(data?: Partial<TS_SELECTION_ACP>): Uint8Array {
  const buf = new Uint8Array(sizeofTS_SELECTION_ACP);
  const view = new DataView(buf.buffer);
  // 0x00: i32
  if (data?.acpStart !== undefined) view.setInt32(0, Number(data.acpStart), true);
  // 0x04: i32
  if (data?.acpEnd !== undefined) view.setInt32(4, Number(data.acpEnd), true);
  // 0x08: pointer
  if (data?.style !== undefined) view.setBigUint64(8, data.style === null ? 0n : BigInt(util.toPointer(data.style)), true);
  return buf;
}

/**
 * Windows.Win32.UI.TextServices.TS_SELECTION_ANCHOR (size: 24)
 */
export interface TS_SELECTION_ANCHOR {
  /** Windows.Win32.UI.TextServices.IAnchor */
  paStart: Uint8Array | Deno.PointerValue | null;
  /** Windows.Win32.UI.TextServices.IAnchor */
  paEnd: Uint8Array | Deno.PointerValue | null;
  /** Windows.Win32.UI.TextServices.TS_SELECTIONSTYLE */
  style: Uint8Array | Deno.PointerValue | null;
}

export const sizeofTS_SELECTION_ANCHOR = 24;

export function allocTS_SELECTION_ANCHOR(data?: Partial<TS_SELECTION_ANCHOR>): Uint8Array {
  const buf = new Uint8Array(sizeofTS_SELECTION_ANCHOR);
  const view = new DataView(buf.buffer);
  // 0x00: pointer
  if (data?.paStart !== undefined) view.setBigUint64(0, data.paStart === null ? 0n : BigInt(util.toPointer(data.paStart)), true);
  // 0x08: pointer
  if (data?.paEnd !== undefined) view.setBigUint64(8, data.paEnd === null ? 0n : BigInt(util.toPointer(data.paEnd)), true);
  // 0x10: pointer
  if (data?.style !== undefined) view.setBigUint64(16, data.style === null ? 0n : BigInt(util.toPointer(data.style)), true);
  return buf;
}

/**
 * _Anonymous_e__Struct (size: 16)
 */
export interface _Anonymous_e__Struct {
  /** u64 */
  Alignment: Deno.PointerValue;
  /** u64 */
  Region: Deno.PointerValue;
}

export const sizeof_Anonymous_e__Struct = 16;

export function alloc_Anonymous_e__Struct(data?: Partial<_Anonymous_e__Struct>): Uint8Array {
  const buf = new Uint8Array(sizeof_Anonymous_e__Struct);
  const view = new DataView(buf.buffer);
  // 0x00: u64
  if (data?.Alignment !== undefined) view.setBigUint64(0, BigInt(data.Alignment), true);
  // 0x08: u64
  if (data?.Region !== undefined) view.setBigUint64(8, BigInt(data.Region), true);
  return buf;
}

/**
 * _Anonymous_e__Union (size: 16)
 */
export interface _Anonymous_e__Union {
  /** _Anonymous_e__Struct */
  Anonymous: Uint8Array | Deno.PointerValue | null;
  /** array */
  X: Deno.PointerValue | null;
}

export const sizeof_Anonymous_e__Union = 16;

export function alloc_Anonymous_e__Union(data?: Partial<_Anonymous_e__Union>): Uint8Array {
  const buf = new Uint8Array(sizeof_Anonymous_e__Union);
  const view = new DataView(buf.buffer);
  // 0x00: pointer
  if (data?.Anonymous !== undefined) view.setBigUint64(0, data.Anonymous === null ? 0n : BigInt(util.toPointer(data.Anonymous)), true);
  // 0x08: pointer
  if (data?.X !== undefined) view.setBigUint64(8, data.X === null ? 0n : BigInt(util.toPointer(data.X)), true);
  return buf;
}

/**
 * Windows.Win32.System.Com.VARIANT (size: 8)
 */
export interface VARIANT {
  /** _Anonymous_e__Union */
  Anonymous: Uint8Array | Deno.PointerValue | null;
}

export const sizeofVARIANT = 8;

export function allocVARIANT(data?: Partial<VARIANT>): Uint8Array {
  const buf = new Uint8Array(sizeofVARIANT);
  const view = new DataView(buf.buffer);
  // 0x00: pointer
  if (data?.Anonymous !== undefined) view.setBigUint64(0, data.Anonymous === null ? 0n : BigInt(util.toPointer(data.Anonymous)), true);
  return buf;
}

/**
 * Windows.Win32.UI.TextServices.TS_ATTRVAL (size: 24)
 */
export interface TS_ATTRVAL {
  /** System.Guid */
  idAttr: Uint8Array | Deno.PointerValue | null;
  /** u32 */
  dwOverlapId: number;
  /** Windows.Win32.System.Com.VARIANT */
  varValue: Uint8Array | Deno.PointerValue | null;
}

export const sizeofTS_ATTRVAL = 24;

export function allocTS_ATTRVAL(data?: Partial<TS_ATTRVAL>): Uint8Array {
  const buf = new Uint8Array(sizeofTS_ATTRVAL);
  const view = new DataView(buf.buffer);
  // 0x00: pointer
  if (data?.idAttr !== undefined) view.setBigUint64(0, data.idAttr === null ? 0n : BigInt(util.toPointer(data.idAttr)), true);
  // 0x08: u32
  if (data?.dwOverlapId !== undefined) view.setUint32(8, Number(data.dwOverlapId), true);
  // 0x0c: pad4
  // 0x10: pointer
  if (data?.varValue !== undefined) view.setBigUint64(16, data.varValue === null ? 0n : BigInt(util.toPointer(data.varValue)), true);
  return buf;
}

/**
 * Windows.Win32.UI.TextServices.TS_RUNINFO (size: 8)
 */
export interface TS_RUNINFO {
  /** u32 */
  uCount: number;
  /** Windows.Win32.UI.TextServices.TsRunType */
  type: TsRunType;
}

export const sizeofTS_RUNINFO = 8;

export function allocTS_RUNINFO(data?: Partial<TS_RUNINFO>): Uint8Array {
  const buf = new Uint8Array(sizeofTS_RUNINFO);
  const view = new DataView(buf.buffer);
  // 0x00: u32
  if (data?.uCount !== undefined) view.setUint32(0, Number(data.uCount), true);
  // 0x04: i32
  if (data?.type !== undefined) view.setInt32(4, Number(data.type), true);
  return buf;
}

/**
 * Windows.Win32.UI.TextServices.TF_LANGBARITEMINFO (size: 32)
 */
export interface TF_LANGBARITEMINFO {
  /** System.Guid */
  clsidService: Uint8Array | Deno.PointerValue | null;
  /** System.Guid */
  guidItem: Uint8Array | Deno.PointerValue | null;
  /** u32 */
  dwStyle: number;
  /** u32 */
  ulSort: number;
  /** array */
  szDescription: Deno.PointerValue | null;
}

export const sizeofTF_LANGBARITEMINFO = 32;

export function allocTF_LANGBARITEMINFO(data?: Partial<TF_LANGBARITEMINFO>): Uint8Array {
  const buf = new Uint8Array(sizeofTF_LANGBARITEMINFO);
  const view = new DataView(buf.buffer);
  // 0x00: pointer
  if (data?.clsidService !== undefined) view.setBigUint64(0, data.clsidService === null ? 0n : BigInt(util.toPointer(data.clsidService)), true);
  // 0x08: pointer
  if (data?.guidItem !== undefined) view.setBigUint64(8, data.guidItem === null ? 0n : BigInt(util.toPointer(data.guidItem)), true);
  // 0x10: u32
  if (data?.dwStyle !== undefined) view.setUint32(16, Number(data.dwStyle), true);
  // 0x14: u32
  if (data?.ulSort !== undefined) view.setUint32(20, Number(data.ulSort), true);
  // 0x18: pointer
  if (data?.szDescription !== undefined) view.setBigUint64(24, data.szDescription === null ? 0n : BigInt(util.toPointer(data.szDescription)), true);
  return buf;
}

export type BSTR = Deno.PointerValue | Uint8Array | null;

/**
 * Windows.Win32.UI.TextServices.TF_LBBALLOONINFO (size: 16)
 */
export interface TF_LBBALLOONINFO {
  /** Windows.Win32.UI.TextServices.TfLBBalloonStyle */
  style: TfLBBalloonStyle;
  /** Windows.Win32.Foundation.BSTR */
  bstrText: Uint8Array | Deno.PointerValue | null;
}

export const sizeofTF_LBBALLOONINFO = 16;

export function allocTF_LBBALLOONINFO(data?: Partial<TF_LBBALLOONINFO>): Uint8Array {
  const buf = new Uint8Array(sizeofTF_LBBALLOONINFO);
  const view = new DataView(buf.buffer);
  // 0x00: i32
  if (data?.style !== undefined) view.setInt32(0, Number(data.style), true);
  // 0x04: pad4
  // 0x08: pointer
  if (data?.bstrText !== undefined) view.setBigUint64(8, data.bstrText === null ? 0n : BigInt(util.toPointer(data.bstrText)), true);
  return buf;
}

/**
 * Windows.Win32.UI.TextServices.TF_PERSISTENT_PROPERTY_HEADER_ACP (size: 32)
 */
export interface TF_PERSISTENT_PROPERTY_HEADER_ACP {
  /** System.Guid */
  guidType: Uint8Array | Deno.PointerValue | null;
  /** i32 */
  ichStart: number;
  /** i32 */
  cch: number;
  /** u32 */
  cb: number;
  /** u32 */
  dwPrivate: number;
  /** System.Guid */
  clsidTIP: Uint8Array | Deno.PointerValue | null;
}

export const sizeofTF_PERSISTENT_PROPERTY_HEADER_ACP = 32;

export function allocTF_PERSISTENT_PROPERTY_HEADER_ACP(data?: Partial<TF_PERSISTENT_PROPERTY_HEADER_ACP>): Uint8Array {
  const buf = new Uint8Array(sizeofTF_PERSISTENT_PROPERTY_HEADER_ACP);
  const view = new DataView(buf.buffer);
  // 0x00: pointer
  if (data?.guidType !== undefined) view.setBigUint64(0, data.guidType === null ? 0n : BigInt(util.toPointer(data.guidType)), true);
  // 0x08: i32
  if (data?.ichStart !== undefined) view.setInt32(8, Number(data.ichStart), true);
  // 0x0c: i32
  if (data?.cch !== undefined) view.setInt32(12, Number(data.cch), true);
  // 0x10: u32
  if (data?.cb !== undefined) view.setUint32(16, Number(data.cb), true);
  // 0x14: u32
  if (data?.dwPrivate !== undefined) view.setUint32(20, Number(data.dwPrivate), true);
  // 0x18: pointer
  if (data?.clsidTIP !== undefined) view.setBigUint64(24, data.clsidTIP === null ? 0n : BigInt(util.toPointer(data.clsidTIP)), true);
  return buf;
}

/**
 * Windows.Win32.UI.TextServices.TF_LANGUAGEPROFILE (size: 40)
 */
export interface TF_LANGUAGEPROFILE {
  /** System.Guid */
  clsid: Uint8Array | Deno.PointerValue | null;
  /** u16 */
  langid: number;
  /** System.Guid */
  catid: Uint8Array | Deno.PointerValue | null;
  /** Windows.Win32.Foundation.BOOL */
  fActive: boolean;
  /** System.Guid */
  guidProfile: Uint8Array | Deno.PointerValue | null;
}

export const sizeofTF_LANGUAGEPROFILE = 40;

export function allocTF_LANGUAGEPROFILE(data?: Partial<TF_LANGUAGEPROFILE>): Uint8Array {
  const buf = new Uint8Array(sizeofTF_LANGUAGEPROFILE);
  const view = new DataView(buf.buffer);
  // 0x00: pointer
  if (data?.clsid !== undefined) view.setBigUint64(0, data.clsid === null ? 0n : BigInt(util.toPointer(data.clsid)), true);
  // 0x08: u16
  if (data?.langid !== undefined) view.setUint16(8, Number(data.langid), true);
  // 0x0a: pad6
  // 0x10: pointer
  if (data?.catid !== undefined) view.setBigUint64(16, data.catid === null ? 0n : BigInt(util.toPointer(data.catid)), true);
  // 0x18: i32
  if (data?.fActive !== undefined) view.setInt32(24, Number(data.fActive), true);
  // 0x1c: pad4
  // 0x20: pointer
  if (data?.guidProfile !== undefined) view.setBigUint64(32, data.guidProfile === null ? 0n : BigInt(util.toPointer(data.guidProfile)), true);
  return buf;
}

/**
 * Windows.Win32.UI.TextServices.TF_SELECTIONSTYLE (size: 8)
 */
export interface TF_SELECTIONSTYLE {
  /** Windows.Win32.UI.TextServices.TfActiveSelEnd */
  ase: TfActiveSelEnd;
  /** Windows.Win32.Foundation.BOOL */
  fInterimChar: boolean;
}

export const sizeofTF_SELECTIONSTYLE = 8;

export function allocTF_SELECTIONSTYLE(data?: Partial<TF_SELECTIONSTYLE>): Uint8Array {
  const buf = new Uint8Array(sizeofTF_SELECTIONSTYLE);
  const view = new DataView(buf.buffer);
  // 0x00: i32
  if (data?.ase !== undefined) view.setInt32(0, Number(data.ase), true);
  // 0x04: i32
  if (data?.fInterimChar !== undefined) view.setInt32(4, Number(data.fInterimChar), true);
  return buf;
}

/**
 * Windows.Win32.UI.TextServices.TF_SELECTION (size: 16)
 */
export interface TF_SELECTION {
  /** Windows.Win32.UI.TextServices.ITfRange */
  range: Uint8Array | Deno.PointerValue | null;
  /** Windows.Win32.UI.TextServices.TF_SELECTIONSTYLE */
  style: Uint8Array | Deno.PointerValue | null;
}

export const sizeofTF_SELECTION = 16;

export function allocTF_SELECTION(data?: Partial<TF_SELECTION>): Uint8Array {
  const buf = new Uint8Array(sizeofTF_SELECTION);
  const view = new DataView(buf.buffer);
  // 0x00: pointer
  if (data?.range !== undefined) view.setBigUint64(0, data.range === null ? 0n : BigInt(util.toPointer(data.range)), true);
  // 0x08: pointer
  if (data?.style !== undefined) view.setBigUint64(8, data.style === null ? 0n : BigInt(util.toPointer(data.style)), true);
  return buf;
}

/**
 * Windows.Win32.UI.TextServices.TF_PROPERTYVAL (size: 16)
 */
export interface TF_PROPERTYVAL {
  /** System.Guid */
  guidId: Uint8Array | Deno.PointerValue | null;
  /** Windows.Win32.System.Com.VARIANT */
  varValue: Uint8Array | Deno.PointerValue | null;
}

export const sizeofTF_PROPERTYVAL = 16;

export function allocTF_PROPERTYVAL(data?: Partial<TF_PROPERTYVAL>): Uint8Array {
  const buf = new Uint8Array(sizeofTF_PROPERTYVAL);
  const view = new DataView(buf.buffer);
  // 0x00: pointer
  if (data?.guidId !== undefined) view.setBigUint64(0, data.guidId === null ? 0n : BigInt(util.toPointer(data.guidId)), true);
  // 0x08: pointer
  if (data?.varValue !== undefined) view.setBigUint64(8, data.varValue === null ? 0n : BigInt(util.toPointer(data.varValue)), true);
  return buf;
}

/**
 * Windows.Win32.UI.TextServices.TF_HALTCOND (size: 16)
 */
export interface TF_HALTCOND {
  /** Windows.Win32.UI.TextServices.ITfRange */
  pHaltRange: Uint8Array | Deno.PointerValue | null;
  /** Windows.Win32.UI.TextServices.TfAnchor */
  aHaltPos: TfAnchor;
  /** u32 */
  dwFlags: number;
}

export const sizeofTF_HALTCOND = 16;

export function allocTF_HALTCOND(data?: Partial<TF_HALTCOND>): Uint8Array {
  const buf = new Uint8Array(sizeofTF_HALTCOND);
  const view = new DataView(buf.buffer);
  // 0x00: pointer
  if (data?.pHaltRange !== undefined) view.setBigUint64(0, data.pHaltRange === null ? 0n : BigInt(util.toPointer(data.pHaltRange)), true);
  // 0x08: i32
  if (data?.aHaltPos !== undefined) view.setInt32(8, Number(data.aHaltPos), true);
  // 0x0c: u32
  if (data?.dwFlags !== undefined) view.setUint32(12, Number(data.dwFlags), true);
  return buf;
}

/**
 * Windows.Win32.UI.TextServices.TF_INPUTPROCESSORPROFILE (size: 64)
 */
export interface TF_INPUTPROCESSORPROFILE {
  /** u32 */
  dwProfileType: number;
  /** u16 */
  langid: number;
  /** System.Guid */
  clsid: Uint8Array | Deno.PointerValue | null;
  /** System.Guid */
  guidProfile: Uint8Array | Deno.PointerValue | null;
  /** System.Guid */
  catid: Uint8Array | Deno.PointerValue | null;
  /** Windows.Win32.UI.TextServices.HKL */
  hklSubstitute: Uint8Array | Deno.PointerValue | null;
  /** u32 */
  dwCaps: number;
  /** Windows.Win32.UI.TextServices.HKL */
  hkl: Uint8Array | Deno.PointerValue | null;
  /** u32 */
  dwFlags: number;
}

export const sizeofTF_INPUTPROCESSORPROFILE = 64;

export function allocTF_INPUTPROCESSORPROFILE(data?: Partial<TF_INPUTPROCESSORPROFILE>): Uint8Array {
  const buf = new Uint8Array(sizeofTF_INPUTPROCESSORPROFILE);
  const view = new DataView(buf.buffer);
  // 0x00: u32
  if (data?.dwProfileType !== undefined) view.setUint32(0, Number(data.dwProfileType), true);
  // 0x04: u16
  if (data?.langid !== undefined) view.setUint16(4, Number(data.langid), true);
  // 0x06: pad2
  // 0x08: pointer
  if (data?.clsid !== undefined) view.setBigUint64(8, data.clsid === null ? 0n : BigInt(util.toPointer(data.clsid)), true);
  // 0x10: pointer
  if (data?.guidProfile !== undefined) view.setBigUint64(16, data.guidProfile === null ? 0n : BigInt(util.toPointer(data.guidProfile)), true);
  // 0x18: pointer
  if (data?.catid !== undefined) view.setBigUint64(24, data.catid === null ? 0n : BigInt(util.toPointer(data.catid)), true);
  // 0x20: pointer
  if (data?.hklSubstitute !== undefined) view.setBigUint64(32, data.hklSubstitute === null ? 0n : BigInt(util.toPointer(data.hklSubstitute)), true);
  // 0x28: u32
  if (data?.dwCaps !== undefined) view.setUint32(40, Number(data.dwCaps), true);
  // 0x2c: pad4
  // 0x30: pointer
  if (data?.hkl !== undefined) view.setBigUint64(48, data.hkl === null ? 0n : BigInt(util.toPointer(data.hkl)), true);
  // 0x38: u32
  if (data?.dwFlags !== undefined) view.setUint32(56, Number(data.dwFlags), true);
  // 0x3c: pad4
  return buf;
}

/**
 * Windows.Win32.UI.TextServices.TF_PRESERVEDKEY (size: 8)
 */
export interface TF_PRESERVEDKEY {
  /** u32 */
  uVKey: number;
  /** u32 */
  uModifiers: number;
}

export const sizeofTF_PRESERVEDKEY = 8;

export function allocTF_PRESERVEDKEY(data?: Partial<TF_PRESERVEDKEY>): Uint8Array {
  const buf = new Uint8Array(sizeofTF_PRESERVEDKEY);
  const view = new DataView(buf.buffer);
  // 0x00: u32
  if (data?.uVKey !== undefined) view.setUint32(0, Number(data.uVKey), true);
  // 0x04: u32
  if (data?.uModifiers !== undefined) view.setUint32(4, Number(data.uModifiers), true);
  return buf;
}

/**
 * Windows.Win32.UI.TextServices.TF_DA_COLOR (size: 16)
 */
export interface TF_DA_COLOR {
  /** Windows.Win32.UI.TextServices.TF_DA_COLORTYPE */
  type: TF_DA_COLORTYPE;
  /** _Anonymous_e__Union */
  Anonymous: Uint8Array | Deno.PointerValue | null;
}

export const sizeofTF_DA_COLOR = 16;

export function allocTF_DA_COLOR(data?: Partial<TF_DA_COLOR>): Uint8Array {
  const buf = new Uint8Array(sizeofTF_DA_COLOR);
  const view = new DataView(buf.buffer);
  // 0x00: i32
  if (data?.type !== undefined) view.setInt32(0, Number(data.type), true);
  // 0x04: pad4
  // 0x08: pointer
  if (data?.Anonymous !== undefined) view.setBigUint64(8, data.Anonymous === null ? 0n : BigInt(util.toPointer(data.Anonymous)), true);
  return buf;
}

/**
 * Windows.Win32.UI.TextServices.TF_DISPLAYATTRIBUTE (size: 40)
 */
export interface TF_DISPLAYATTRIBUTE {
  /** Windows.Win32.UI.TextServices.TF_DA_COLOR */
  crText: Uint8Array | Deno.PointerValue | null;
  /** Windows.Win32.UI.TextServices.TF_DA_COLOR */
  crBk: Uint8Array | Deno.PointerValue | null;
  /** Windows.Win32.UI.TextServices.TF_DA_LINESTYLE */
  lsStyle: TF_DA_LINESTYLE;
  /** Windows.Win32.Foundation.BOOL */
  fBoldLine: boolean;
  /** Windows.Win32.UI.TextServices.TF_DA_COLOR */
  crLine: Uint8Array | Deno.PointerValue | null;
  /** Windows.Win32.UI.TextServices.TF_DA_ATTR_INFO */
  bAttr: TF_DA_ATTR_INFO;
}

export const sizeofTF_DISPLAYATTRIBUTE = 40;

export function allocTF_DISPLAYATTRIBUTE(data?: Partial<TF_DISPLAYATTRIBUTE>): Uint8Array {
  const buf = new Uint8Array(sizeofTF_DISPLAYATTRIBUTE);
  const view = new DataView(buf.buffer);
  // 0x00: pointer
  if (data?.crText !== undefined) view.setBigUint64(0, data.crText === null ? 0n : BigInt(util.toPointer(data.crText)), true);
  // 0x08: pointer
  if (data?.crBk !== undefined) view.setBigUint64(8, data.crBk === null ? 0n : BigInt(util.toPointer(data.crBk)), true);
  // 0x10: i32
  if (data?.lsStyle !== undefined) view.setInt32(16, Number(data.lsStyle), true);
  // 0x14: i32
  if (data?.fBoldLine !== undefined) view.setInt32(20, Number(data.fBoldLine), true);
  // 0x18: pointer
  if (data?.crLine !== undefined) view.setBigUint64(24, data.crLine === null ? 0n : BigInt(util.toPointer(data.crLine)), true);
  // 0x20: i32
  if (data?.bAttr !== undefined) view.setInt32(32, Number(data.bAttr), true);
  // 0x24: pad4
  return buf;
}

/**
 * Windows.Win32.UI.TextServices.TF_LMLATTELEMENT (size: 32)
 */
export interface TF_LMLATTELEMENT {
  /** u32 */
  dwFrameStart: number;
  /** u32 */
  dwFrameLen: number;
  /** u32 */
  dwFlags: number;
  /** _Anonymous_e__Union */
  Anonymous: Uint8Array | Deno.PointerValue | null;
  /** Windows.Win32.Foundation.BSTR */
  bstrText: Uint8Array | Deno.PointerValue | null;
}

export const sizeofTF_LMLATTELEMENT = 32;

export function allocTF_LMLATTELEMENT(data?: Partial<TF_LMLATTELEMENT>): Uint8Array {
  const buf = new Uint8Array(sizeofTF_LMLATTELEMENT);
  const view = new DataView(buf.buffer);
  // 0x00: u32
  if (data?.dwFrameStart !== undefined) view.setUint32(0, Number(data.dwFrameStart), true);
  // 0x04: u32
  if (data?.dwFrameLen !== undefined) view.setUint32(4, Number(data.dwFrameLen), true);
  // 0x08: u32
  if (data?.dwFlags !== undefined) view.setUint32(8, Number(data.dwFlags), true);
  // 0x0c: pad4
  // 0x10: pointer
  if (data?.Anonymous !== undefined) view.setBigUint64(16, data.Anonymous === null ? 0n : BigInt(util.toPointer(data.Anonymous)), true);
  // 0x18: pointer
  if (data?.bstrText !== undefined) view.setBigUint64(24, data.bstrText === null ? 0n : BigInt(util.toPointer(data.bstrText)), true);
  return buf;
}

export type HANDLE = Deno.PointerValue;

export type HRESULT = number;

// Native Libraries

try {
  var libMsCtfMonitor = Deno.dlopen("MsCtfMonitor", {
    DoMsCtfMonitor: {
      parameters: ["u32", "pointer"],
      result: "i32",
    },
    InitLocalMsCtfMonitor: {
      parameters: ["u32"],
      result: "pointer",
    },
    UninitLocalMsCtfMonitor: {
      parameters: [],
      result: "pointer",
    },
  }).symbols;
} catch(e) { /* ignore */ }

// Symbols

export function DoMsCtfMonitor(
  dwFlags: number /* u32 */,
  hEventForServiceStop: Uint8Array | Deno.PointerValue | null /* Windows.Win32.Foundation.HANDLE */,
): boolean /* Windows.Win32.Foundation.BOOL */ {
  return util.boolFromFfi(libMsCtfMonitor.DoMsCtfMonitor(dwFlags, util.toPointer(hEventForServiceStop)));
}

export function InitLocalMsCtfMonitor(
  dwFlags: number /* u32 */,
): Deno.PointerValue | null /* Windows.Win32.Foundation.HRESULT */ {
  return util.pointerFromFfi(libMsCtfMonitor.InitLocalMsCtfMonitor(dwFlags));
}

export function UninitLocalMsCtfMonitor(): Deno.PointerValue | null /* Windows.Win32.Foundation.HRESULT */ {
  return util.pointerFromFfi(libMsCtfMonitor.UninitLocalMsCtfMonitor());
}

